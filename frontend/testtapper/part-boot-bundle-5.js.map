{
  "version": 3,
  "sources": [
    "../transpiled/qx/util/Base64.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/testtapper/part-boot-bundle-5.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * Base64 encoder\n */\nqx.Class.define(\"qx.util.Base64\", {\n  statics : {\n    /** Characters allowed in a Base 64 encoded string */\n    __base64Chars : [ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/' ],\n\n\n    /**\n     * Encode a string using base64 encoding (http://en.wikipedia.org/wiki/Base64).\n     *\n     * @param input {String} the input string to encode\n     *\n     * @param is8bit {Boolean?} Whether the character set is 8-bit, not\n     *   multi-byte.  If this parameter is not provided, the character set is\n     *   determined from the 'document' object.\n     *\n     * @return {String} The base64 encoded input string.\n     */\n    encode : function(input, is8bit)\n    {\n      var isMultiByte;\n\n      if (typeof is8bit == \"undefined\")\n      {\n        var charSet = document.characterSet || document.charset;\n        isMultiByte = charSet.toLowerCase().indexOf('utf') != -1;\n\n        if (!isMultiByte && window.btoa instanceof Function) {\n          return btoa(input);\n        }\n      }\n      else\n      {\n        isMultiByte = ! is8bit;\n      }\n\n      var padding = '=';\n      var base64Chars = this.__base64Chars;\n      var length = input.length;\n      var output = [];\n      var result = [];\n      var i = 0;\n\n      var translateUTF8 = this.__translateUTF8;\n\n      while (i < length) {\n        translateUTF8(input.charCodeAt(i++), output, !isMultiByte);\n      }\n\n      for (var k=0, l=output.length; k<l; k+=3)\n      {\n        if (k + 1 === l)\n        {\n          result.push(base64Chars[output[k] >> 2]);\n          result.push(base64Chars[(output[k] & 3) << 4]);\n          result.push(padding + padding);\n          break;\n        }\n\n        if (k + 2 === l)\n        {\n          result.push(base64Chars[output[k] >> 2]);\n          result.push(base64Chars[(output[k] & 3) << 4 | output[k + 1] >> 4]);\n          result.push(base64Chars[(output[k + 1] & 15) << 2]);\n          result.push(padding);\n          break;\n        }\n\n        result.push(base64Chars[output[k] >> 2]);\n        result.push(base64Chars[(output[k] & 3) << 4 | output[k + 1] >> 4]);\n        result.push(base64Chars[(output[k + 1] & 15) << 2 | output[k + 2] >> 6]);\n        result.push(base64Chars[output[k + 2] & 63]);\n      }\n\n      return result.join('');\n    },\n\n\n    /**\n     * Adds to output array the UTF-8 bytes needed to represent the character (http://en.wikipedia.org/wiki/UTF8)\n     *\n     * @param characterCode {Integer} the code of the character\n     * @param output {Array} the array of bytes to be filled\n     * @param is8bit {Boolean} specifies whether we should not treat the array as a multi byte string\n     */\n    __translateUTF8 : function(characterCode, output, is8bit)\n    {\n      if (characterCode < 128)\n      {\n        output.push(characterCode);\n        return;\n      }\n\n      if (characterCode < 256 && is8bit)\n      {\n        output.push(characterCode);\n        return;\n      }\n\n      if (characterCode < 2048)\n      {\n        output.push(192 | characterCode >> 6);\n        output.push(128 | characterCode & 63);\n        return;\n      }\n\n      if (characterCode < 65536)\n      {\n        output.push(224 | characterCode >> 12);\n        output.push(128 | (characterCode >> 6) & 63);\n        output.push(128 | characterCode & 63);\n        return;\n      }\n      else\n      {\n        output.push(240 | characterCode >> 18);\n        output.push(128 | (characterCode >> 12) & 63);\n        output.push(128 | (characterCode >> 6) & 63);\n        output.push(128 | characterCode & 63);\n        return;\n      }\n    },\n\n\n    /**\n     * Returns a String from an array of bytes, with special treatment\n     * if the bytes are UTF-8 bytes (http://en.wikipedia.org/wiki/UTF8)\n     *\n     * @param bytes {Array} the byte array [8it integers]\n     * @param is8bit {Boolean} specifies whether we should not treat the array as a multi byte string\n     * @return {String} the string backed by the byte array\n     */\n    __getUTF8StringFromBytes : function(bytes, is8bit)\n    {\n      var charString = '';\n      var result = [];\n\n      if (is8bit)\n      {\n        result = bytes;\n      }\n      else\n      {\n        for (var i=0; i<bytes.length; i++)\n        {\n          var utfByte = bytes[i];\n\n          if (utfByte >> 7 === 0) {\n            result.push(utfByte);\n          }\n\n          if (utfByte >> 5 === 6)\n          {\n            var nextByte = bytes[++i];\n            result.push(((utfByte & 28) >> 2) << 8 | ((utfByte & 3) << 6) | nextByte & 63);\n          }\n\n          if (utfByte >> 4 === 14)\n          {\n            var nextBytes = [ bytes[++i], bytes[++i] ];\n            result.push((utfByte & 15) << 12 | ((nextBytes[0] & 60) >> 2) << 8 | (nextBytes[0] & 3) << 6 | (nextBytes[1] & 63));\n          }\n\n          if (utfByte >> 3 === 30)\n          {\n            var nextBytes = [ bytes[++i], bytes[++i], bytes[++i] ];\n            result.push((utfByte & 7) << 18 | (utfByte & 48) << 16 | (nextBytes[0] & 15) << 12 | ((nextBytes[1] & 60) >> 2) << 8 | (nextBytes[1] & 3) << 6 | (nextBytes[2] & 63));\n          }\n        }\n      }\n\n      for (var i=0, l=result.length; i<l; i++) {\n        charString += String.fromCharCode(result[i]);\n      }\n\n      return charString;\n    },\n\n\n    /**\n     * Decode a base64 string (http://en.wikipedia.org/wiki/Base64).\n     *\n     * @param input {String} the input string to decode\n     *\n     * @param is8bit {Boolean?} Whether the character set is 8-bit, not\n     *   multi-byte.  If this parameter is not provided, the character set is\n     *   determined from the 'document' object.\n     *\n     * @return {String} The decoded input string.\n     */\n    decode : function(input, is8bit)\n    {\n      var base64Chars = this.__base64Chars;\n      var isMultiByte;\n\n      if (typeof is8bit == \"undefined\")\n      {\n        var charSet = document.characterSet || document.charset;\n        isMultiByte = charSet.toLowerCase().indexOf('utf') != -1;\n\n        if (!isMultiByte && window.atob instanceof Function) {\n          return atob(input);\n        }\n      }\n      else\n      {\n        isMultiByte = ! is8bit;\n      }\n\n      var ilength = input.length;\n      var stringBytes = [], i = 0;\n\n      while (i < ilength)\n      {\n        var base64Byte1 = base64Chars.indexOf(input.charAt(i++));\n        var base64Byte2 = base64Chars.indexOf(input.charAt(i++));\n        var c1 = base64Byte1 << 2 | base64Byte2 >> 4;\n        stringBytes.push(c1);\n        var specialChar = input.charAt(i++);\n\n        if (specialChar !== '=')\n        {\n          var base64Byte3 = base64Chars.indexOf(specialChar);\n          var c2 = (base64Byte2 & 15) << 4 | (base64Byte3 & 60) >> 2;\n          stringBytes.push(c2);\n        }\n\n        specialChar = input.charAt(i++);\n\n        if (specialChar !== '=')\n        {\n          var base64Byte4 = base64Chars.indexOf(specialChar);\n          var c3 = (base64Byte3 & 3) << 6 | base64Byte4;\n          stringBytes.push(c3);\n        }\n      }\n\n      return this.__getUTF8StringFromBytes(stringBytes, !isMultiByte);\n    }\n  }\n});\n"
  ]
}