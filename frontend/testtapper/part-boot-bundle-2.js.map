{
  "version": 3,
  "sources": [
    "../transpiled/qx/dev/unit/TestCase.js",
    "../transpiled/qx/dev/unit/MRequirementsBasic.js",
    "../transpiled/qx/dev/unit/MRequirements.js",
    "../transpiled/qx/dev/unit/MMock.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/testtapper/part-boot-bundle-2.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\n/**\n * Base class for all unit tests.\n */\nqx.Class.define(\"qx.dev.unit.TestCase\",\n{\n  extend  : qx.core.Object,\n  include : [qx.core.MAssert],\n\n  events :\n  {\n    /**\n     * This event can be fired by assertion functions instead of throwing a\n     * {@link qx.core.AssertionError}, ensuring that any code defined after the\n     * assertion call will still run.\n     *\n     * Event data: The {@link qx.core.AssertionError}\n     */\n    assertionFailed : \"qx.event.type.Data\"\n  },\n\n  properties :\n  {\n    /** The TestResult instance that runs the test */\n    testResult :\n    {\n      init : null\n    },\n    /** The test currently running */\n    testFunc :\n    {\n      init : null\n    }\n  },\n\n  members :\n  {\n    __autoDispose : null,\n\n    /**\n     * Whether If debugging code is enabled. (i.e. the setting\n     * <code>qx.debug</code> has the value <code>on</code>.)\n     *\n     * @return {Boolean} Whether debugging is enabled\n     */\n    isDebugOn : function() {\n      return (qx.core.Environment.get(\"qx.debug\")) ? true : false;\n    },\n\n    /**\n     * Instruct the test to wait. Used for asynchronous tests.\n     *\n     * @param delay {Integer?5000} Amount of time in milliseconds to wait.\n     * @param deferredFunction {Function?false} Optional function to run after\n     * timeout has expired.\n     * @param context {Object?window} Optional execution context for\n     * deferredFunction\n     */\n    wait : function(delay, deferredFunction, context) {\n      throw new qx.dev.unit.AsyncWrapper(delay, deferredFunction, context);\n    },\n\n    /**\n     * Cancel a timeout started with <code>wait()</code> and run the given\n     * function. Used for asynchronous tests, e.g. in a listener's callback\n     * function.\n     *\n     * *Important*\n     *\n     * The used *deferredFunction* is the last function which is executed before\n     * the whole test case is disposed. But you are able to use a new\n     * <code>wait()</code> / <code>resume()</code> pair in the call sequence of the deferred function.\n     *\n     * @param deferredFunction {Function?} Function to run\n     * @param self {Object?} reference to the ‘this’ variable inside the\n     * callback. By default the test instance is used.\n     *\n     * @return {var} The return value of the deferred function\n     */\n    resume : function(deferredFunction, self)\n    {\n      return this.getTestResult().run(\n        this.getTestFunc(),\n        deferredFunction || (function() {}),\n        self || this,\n        true\n      );\n    },\n\n    /**\n     * Cancel a timeout started with <code>wait()</code> in setUp() and run the test\n     * function. Used for asynchronous setUp of tests.\n     *\n     * @return {var} The return value of the testRun\n     */\n    resumeSetUp : function() {\n      var func = this.getTestFunc();\n      var inst = this;\n      var method = func.getName();\n\n      return this.getTestResult().run(\n        func,\n        function()\n        {\n          try {\n            inst[method]();\n          } catch (ex) {\n            throw ex;\n          }\n        },\n        this,\n        true\n      );\n    },\n\n\n    /**\n     * Cancel a timeout started with <code>wait()</code> and return a function,\n     * which calls {@link #resume}. This function is useful\n     * to wrap an event handler or callback function within the resume call sequence.\n     * It provides the deferred function with all parameters from original caller.\n     *<pre>\n     * obj.addListener(\"appear\", this.resumeHandler(function(e){\n     *   // do some nice\n     * }));\n     *\n     * this.wait();\n     *</pre>\n     *\n     * @param deferredFunction {Function} Function to run as event handler or callback\n     * @param self {Object?} reference to the ‘this’ variable inside the\n     *        callback. By default the test instance is used.\n     * @return {Function} Wrapper function which runs resume with deferred function\n     */\n    resumeHandler : function(deferredFunction, self)\n    {\n      if(qx.core.Environment.get(\"qx.debug\")) {\n        this.assertFunction(deferredFunction, \"First parameter of resumeHandler() must be a function!\");\n      }\n\n      var func = deferredFunction;\n      var that = this;\n\n      return function(){\n        // bind arguments to deferŕedFunction\n        var args = qx.lang.Array.fromArguments(arguments);\n\n        return that.resume(func.bind.apply(func, [self || this].concat(args)), self);\n      };\n    },\n\n\n    /**\n     * Skip this test. Any code after a call to this method will not be executed.\n     *\n     * @param message {String|null} Optional message (reason why the test was skipped)\n     */\n    skip : function(message)\n    {\n      throw new qx.dev.unit.RequirementError(null, message || \"Called skip()\");\n    },\n\n\n    /**\n     * Add an object to the auto dispose list. This can be cleared manually or will\n     * be flushed when the test case is disposed.\n     *\n     * @param obj {qx.core.Object} Object to be automatically disposed.\n     */\n    addAutoDispose : function(obj)\n    {\n      if (!this.__autoDispose) {\n        this.__autoDispose = [];\n      }\n      this.__autoDispose.push(obj);\n    },\n\n    /**\n     * Dispose all objects that got registered for auto disposal.\n     */\n    doAutoDispose : function()\n    {\n      if (this.__autoDispose) {\n        this.__autoDispose.forEach(function(obj) {\n          if (!obj.isDisposed()) {\n            if (obj instanceof qx.ui.core.Widget) {\n              obj.destroy();\n            }\n            else if (obj instanceof qx.core.Object) {\n              obj.dispose();\n            }\n          }\n        });\n        this.__autoDispose = null;\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Adds support for verification of infrastructure requirements to unit test\n * classes.\n */\nqx.Mixin.define(\"qx.dev.unit.MRequirementsBasic\", {\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members :\n  {\n\n    /**\n     * Verifies a list of infrastructure requirements by checking for\n     * corresponding \"has\" methods. If no such method was found,\n     * {@link qx.core.Environment} will be checked for a key matching the given\n     * feature name. Note that asynchronous environment checks are not supported!\n     *\n     * See the manual for further details:\n     * <a href=\"http://manual.qooxdoo.org/current/pages/development/frame_apps_testrunner.html#defining-test-requirements\">Defining Test Requirements</a>\n     *\n     * @throws {qx.dev.unit.RequirementError} if any requirement check returned\n     *   <code>false</code>\n     * @throws {Error} if no valid check was found for a feature.\n     *\n     * @param featureList {String[]} List of infrastructure requirements\n     * @lint environmentNonLiteralKey(feature)\n     */\n    require : function(featureList) {\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertArray(featureList);\n      }\n\n      for (var i=0,l=featureList.length; i<l; i++) {\n        var feature = featureList[i];\n        var hasMethodName = \"has\" + qx.lang.String.capitalize(feature);\n\n        if (this[hasMethodName]) {\n          if (this[hasMethodName]() === true) {\n            continue;\n          }\n          else {\n            throw new qx.dev.unit.RequirementError(feature);\n          }\n        }\n\n        if (qx.core.Environment.getChecks()[feature]) {\n          var envValue = qx.core.Environment.get(feature);\n          if (envValue === true) {\n            continue;\n          }\n          if (envValue === false) {\n            throw new qx.dev.unit.RequirementError(feature);\n          }\n          else {\n            throw new Error(\"The Environment key \" + feature + \" cannot be used\"\n             + \" as a Test Requirement since its value is not boolean!\");\n          }\n        }\n\n        if (qx.core.Environment.getAsyncChecks()[feature]) {\n          throw new Error('Unable to verify requirement ' + feature + ': '\n          + 'Asynchronous environment checks are not supported!');\n        }\n\n        throw new Error('Unable to verify requirement: No method \"'\n          + hasMethodName + '\" or valid Environment key \"' + feature + '\" found');\n      }\n    }\n  }\n\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/* *********************************************************************\n************************************************************************ */\n\n/**\n * Common requirement checks for unit tests. Example:\n *\n * <pre class=\"javascript\">\n * testBackend : function()\n * {\n *   this.require([\"http\", \"php\"]); // test will be skipped unless all conditions are met\n *   // test code goes here\n * }\n * </pre>\n *\n * @use(feature-checks)\n * @ignore(qx.application.Standalone)\n * @ignore(qx.application.Inline)\n * @ignore(qx.application.Native)\n *\n * @asset(qx/test/xmlhttp/php_version.php)\n */\nqx.Mixin.define(\"qx.dev.unit.MRequirements\", {\n\n  include : [qx.dev.unit.MRequirementsBasic],\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n  statics :\n  {\n    /** @type {Boolean} Result of {@link #hasPhp}. Stored as class member to avoid\n     * repeating the check. */\n    __hasPhp : null\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members :\n  {\n\n    /**\n     * Checks if the application has been loaded over HTTP.\n     *\n     * @return {Boolean} <code>true</code> if HTTP is currently used\n     */\n    hasHttp : function()\n    {\n      return document.location.protocol.indexOf(\"http\") == 0;\n    },\n\n\n    /**\n     * Checks if the server supports PHP.\n     *\n     * @return {Boolean} <code>true</code> if PHP is supported by the backend\n     */\n    hasPhp : function()\n    {\n      if (qx.dev.unit.MRequirements.__hasPhp != null) {\n        return qx.dev.unit.MRequirements.__hasPhp;\n      }\n\n      var url = qx.util.ResourceManager.getInstance().toUri(\"qx/test/xmlhttp/php_version.php\");\n      var req = new qx.bom.request.Xhr();\n\n      req.onload = qx.lang.Function.bind(function() {\n        try {\n          qx.lang.Json.parse(req.responseText);\n          qx.dev.unit.MRequirements.__hasPhp = true;\n        } catch(ex) {\n          qx.dev.unit.MRequirements.__hasPhp = false;\n        }\n      }, this);\n\n      req.onerror = req.abort = qx.lang.Function.bind(function() {\n        qx.dev.unit.MRequirements.__hasPhp = false;\n      }, this);\n\n      req.open(\"POST\", url, false);\n      try {\n        req.send();\n      } catch(ex) {\n        qx.dev.unit.MRequirements.__hasPhp = false;\n      }\n\n      return qx.dev.unit.MRequirements.__hasPhp;\n    },\n\n\n    /**\n     * Checks if the application extends qx.application.Standalone\n     *\n     * @return {Boolean} <code>true</code> if the application is a standalone (GUI)\n     * application\n     */\n    hasGuiApp : function()\n    {\n      try {\n        return qx.core.Init.getApplication() instanceof qx.application.Standalone;\n      } catch(ex) {\n        return false;\n      }\n    },\n\n\n    /**\n     * Checks if the application extends qx.application.Inline\n     *\n     * @return {Boolean} <code>true</code> if the application is an inline application\n     */\n    hasInlineApp : function()\n    {\n      try {\n        return qx.core.Init.getApplication() instanceof qx.application.Inline;\n      } catch(ex) {\n        return false;\n      }\n    },\n\n\n    /**\n     * Checks if the application extends qx.application.Native\n     *\n     * @return {Boolean} <code>true</code> if the application is a native application\n     */\n    hasNativeApp : function()\n    {\n      try {\n        return qx.core.Init.getApplication() instanceof qx.application.Native;\n      } catch(ex) {\n        return false;\n      }\n    },\n\n\n    /**\n     * Checks if the application is running in Google Chrome\n     *\n     * @return {Boolean} <code>true</code> if the browser is Google Chrome\n     */\n    hasChrome : function()\n    {\n      return qx.core.Environment.get(\"browser.name\") === \"chrome\";\n    },\n\n\n    /**\n     * Checks if the application is running in Firefox\n     *\n     * @return {Boolean} <code>true</code> if the browser is Firefox\n     */\n    hasFirefox : function()\n    {\n      return qx.core.Environment.get(\"browser.name\") === \"firefox\";\n    },\n\n\n    /**\n     * Checks if the application is running in a browser using the Gecko engine\n     *\n     * @return {Boolean} <code>true</code> if the browser engine is Mozilla Gecko\n     */\n    hasGecko : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") == \"gecko\";\n    },\n\n\n    /**\n     * Checks if the application is running in Internet Explorer\n     *\n     * @return {Boolean} <code>true</code> if the browser is Internet Explorer\n     */\n    hasIe : function()\n    {\n      return qx.core.Environment.get(\"browser.name\") === \"ie\";\n    },\n\n\n    /**\n     * Checks if the application is running in a browser using the MSHTML engine\n     *\n     * @return {Boolean} <code>true</code> if the browser engine is MSHTML\n     */\n    hasMshtml : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") == \"mshtml\";\n    },\n\n\n    /**\n     * Checks if the application is running in a browser using the Opera engine\n     *\n     * @return {Boolean} <code>true</code> if the browser engine is Opera\n     */\n    hasOpera : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") == \"opera\";\n    },\n\n\n    /**\n     * Checks if the application is running in a browser using the Webkit engine\n     *\n     * @return {Boolean} <code>true</code> if the browser engine is Webkit\n     */\n    hasWebkit : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") == \"webkit\";\n    },\n\n\n    /**\n     * Checks if the application is NOT running on OS X\n     *\n     * @return {Boolean} <code>true</code> if the operating system is NOT OX X\n     */\n    hasNoOsx : function()\n    {\n      return (qx.core.Environment.get(\"os.name\") === \"osx\"?false:true);\n    },\n\n\n    /**\n     * Checks if the application is running on Windows 7\n     *\n     * @return {Boolean} <code>false</code> if operating system is Windows 7\n     */\n    hasNoWin7 : function()\n    {\n      var isWin7 = (qx.core.Environment.get(\"os.name\") === \"win\" && qx.core.Environment.get(\"os.version\") === \"7\");\n      return (isWin7 ? false : true);\n    },\n\n\n    /**\n     * Checks if the application is running on Windows 10\n     *\n     * @return {Boolean} <code>false</code> if operating system is Windows 10\n     */\n    hasNoWin10 : function()\n    {\n      var isWin10 = (qx.core.Environment.get(\"os.name\") === \"win\" && qx.core.Environment.get(\"os.version\") === \"10\");\n      return (isWin10 ? false : true);\n    },\n\n\n    /**\n     * Checks if the application is not running in a Google Chrome browser on Linux\n     *\n     * @return {Boolean} <code>true</code> if the browser is not Google Chrome on Linux\n     */\n    hasNoChromeOnLinux : function()\n    {\n      return (qx.core.Environment.get(\"browser.name\") === \"chrome\" && qx.core.Environment.get(\"os.name\") === \"linux\"?false:true);\n    },\n\n\n    /**\n    * Checks if the application is running on a client supporting async functions\n    *\n    * @return {Boolean} <code>true</code> if the client supports async functions\n    */\n    hasAsyncFunctions : function()\n    {\n      return qx.core.Environment.get(\"ecmascript.function.async\");\n    }\n  }\n\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n/**\n *\n * Provides test spies, stubs and mocks as well as custom assertions.\n *\n * Here is a simple example:\n *\n * <pre class=\"javascript\">\n *\n * // Test\n * qx&#046;Class.define(\"qx.test.Klass\",\n * {\n *   extend : qx.dev.unit.TestCase,\n *\n *   include : qx.dev.unit.MMock,\n *\n *   members :\n *   {\n *     \"test: doSpecial on condition xyz\": function() {\n *       // Set-Up\n *       var obj = new qx.Klass();\n *\n *       // Wraps obj.doSpecial in a spy function and\n *       // replaces the original method with this spy.\n *       this.spy(obj, \"doSpecial\");\n *\n *       // Run code that is expected to fulfill condition\n *       obj.onCondition(\"xyz\");\n *\n *       // Assert that spy was called\n *       this.assertCalled(obj.doSpecial);\n *     },\n *\n *     tearDown: function() {\n *       // Restore all stubs, spies and overridden host objects.\n *       //\n *       // It is a good idea to always run this in the <code>tearDown()</code>\n *       // method, especially when overwriting global or host objects.\n *       this.getSandbox().restore();\n *     }\n *   }\n * });\n *\n * // Implementation\n * qx&#046;Class.define(\"qx.Klass\",\n * {\n *   extend : qx.core.Object,\n *\n *   members :\n *   {\n *     onCondition: function(condition) {\n *\n *       // Complex code determining mustDoSpecial\n *       // by examining condition passed\n *\n *       if (mustDoSpecial) {\n *         this.doSpecial();\n *       }\n *     },\n *\n *     doSpecial: function() {\n *\n *     }\n *   }\n * });\n *\n * </pre>\n *\n * This mixin provides assertions such as assertCalled() that work\n * with spies and stubs. Besides offering a compact way to express expectations,\n * those assertions have the advantage that meaningful error messages can be\n * generated.\n *\n * For full list of assertions see http://sinonjs.org/docs/#assertions.\n * Note that sinon.assert.xyz() translates as assertXyz().\n *\n */\nqx.Mixin.define(\"qx.dev.unit.MMock\",\n{\n  construct: function()\n  {\n    var sinon = this.__getSinon();\n    this.__exposeAssertions();\n\n    this.__sandbox = sinon.sandbox;\n  },\n\n  members :\n  {\n\n    __sandbox: null,\n\n    __fakeXhr: null,\n\n    /**\n     * Expose Sinon.JS assertions. Provides methods such\n     * as assertCalled(), assertCalledWith().\n     * (http://sinonjs.org/docs/#assert-expose)\n     * Does not override existing assertion methods.\n     * @ignore(sinon.assert.expose)\n     */\n    __exposeAssertions : function() {\n      var temp = {};\n      sinon.assert.expose(temp, {includeFail: false});\n      for (var method in temp) {\n        if (!this[method]) {\n          this[method] = temp[method];\n        }\n      }\n    },\n\n    /**\n    * Get the Sinon.JS object.\n    *\n    * @return {Object}\n    * @internal\n    */\n    __getSinon: function() {\n      return qx.dev.unit.Sinon.getSinon();\n    },\n\n    /**\n    * Test spies allow introspection on how a function is used\n    * throughout the system under test.\n    *\n    * * spy()\n    *   Creates an anonymous function that records arguments,\n    *   this value, exceptions and return values for all calls.\n    *\n    * * spy(func)\n    *   Spies on the provided function\n    *\n    * * spy(object, \"method\")\n    *   Creates a spy for object.method and replaces the original method\n    *   with the spy. The spy acts exactly like the original method in all cases.\n    *   The original method can be restored by calling object.method.restore().\n    *   The returned spy is the function object which replaced the original method.\n    *   spy === object.method.\n    *\n    * * spy.withArgs(arg1[, arg2, ...])\n    *   Creates a spy that only records calls when the received arguments matches those\n    *   passed to <code>withArgs</code>.\n    *\n    * A spy has a rich interface to introspect how the wrapped function was used:\n    *\n    * * spy.withArgs(arg1[, arg2, ...]);\n    * * spy.callCount\n    * * spy.called\n    * * spy.calledOnce\n    * * spy.calledTwice\n    * * spy.calledThrice\n    * * spy.firstCall\n    * * spy.secondCall\n    * * spy.thirdCall\n    * * spy.lastCall\n    * * spy.calledBefore(anotherSpy)\n    * * spy.calledAfter(anotherSpy)\n    * * spy.calledOn(obj)\n    * * spy.alwaysCalledOn(obj)\n    * * spy.calledWith(arg1, arg2, ...)\n    * * spy.alwaysCalledWith(arg1, arg2, ...)\n    * * spy.calledWithExactly(arg1, arg2, ...)\n    * * spy.alwaysCalledWithExactly(arg1, arg2, ...)\n    * * spy.calledWithMatch(arg1, arg2, ...);\n    * * spy.alwaysCalledWithMatch(arg1, arg2, ...);\n    * * spy.calledWithNew();\n    * * spy.neverCalledWith(arg1, arg2, ...);\n    * * spy.neverCalledWithMatch(arg1, arg2, ...);\n    * * spy.threw()\n    * * spy.threw(\"TypeError\")\n    * * spy.threw(obj)\n    * * spy.alwaysThrew()\n    * * spy.alwaysThrew(\"TypeError\")\n    * * spy.alwaysThrew(obj)\n    * * spy.returned(obj)\n    * * spy.alwaysReturned(obj)\n    * * spy.getCall(n)\n    * * spy.thisValues\n    * * spy.args\n    * * spy.exceptions\n    * * spy.returnValues\n    * * spy.reset()\n    * * spy.printf(\"format string\", [arg1, arg2, ...])\n    *\n    * See http://sinonjs.org/docs/#spies.\n    *\n    * Note: Spies are transparently added to a sandbox. To restore\n    * the original function for all spies run <code>this.getSandbox().restore()</code>\n    * in your <code>tearDown()</code> method.\n    *\n    * @param function_or_object {Function|Object} Spies on the\n    *   provided function or object.\n    * @param method {String?null} The method to spy upon if an object was given.\n    * @return {Function} The wrapped function enhanced with properties and methods\n    *   that allow for introspection. See http://sinonjs.org/docs/#spies.\n    */\n    spy: function(function_or_object, method) {\n      return this.__sandbox.spy.apply(this.__sandbox, arguments);\n    },\n\n    /**\n    * Test stubs are functions (spies) with pre-programmed behavior.\n    *\n    * * stub()\n    *   Creates an anonymous stub function\n    *\n    * * stub(object, \"method\")\n    *   Replaces object.method with a stub function. The original function\n    *   can be restored by calling object.method.restore() (or stub.restore()).\n    *   An exception is thrown if the property is not already a function,\n    *   to help avoid typos when stubbing methods.\n    *\n    * * stub(obj)\n    *   Stubs all the object's methods.\n    *\n    * * stub.withArgs(arg1[, arg2, ...])\n    *   Stubs the method only for the provided arguments. Can be used to create\n    *   a stub that acts differently in response to different arguments.\n    *\n    * A stub has the interface of a spy in addition to methods that allow to define behaviour:\n    *\n    * * stub.returns(obj)\n    * * stub.throws()\n    * * stub.throws(\"TypeError\")\n    * * stub.throws(obj)\n    * * stub.callsArg(index)\n    * * stub.callsArg(0)\n    * * stub.callsArgWith(index, arg1, arg2, ...)\n    *\n    * See http://sinonjs.org/docs/#stubs.\n    *\n    * Note: Stubs are transparently added to a sandbox. To restore\n    * the original function for all stubs run <code>this.getSandbox().restore()</code>\n    * in your <code>tearDown()</code> method.\n    *\n    * @param object {Object?null} Object to stub. Creates an anonymous stub function\n    *   if not given.\n    * @param  method {String?null} Replaces object.method with a stub function.\n    *   An exception is thrown if the property is not already a function, to\n    *   help avoid typos when stubbing methods.\n    * @return {Function} A stub. Has the interface of a spy in addition to methods\n    *   that allow to define behaviour. See http://sinonjs.org/docs/#stubs.\n    *\n    */\n    stub: function(object, method) {\n      return this.__sandbox.stub.apply(this.__sandbox, arguments);\n    },\n\n    /**\n    * Mocks are slightly different from spies and stubs in that you mock an\n    * object, and then set an expectation on one or more of its objects.\n    *\n    * * var mock = mock(obj)\n    *   Creates a mock for the provided object. Does not change the object, but\n    *   returns a mock object to set expectations on the object's methods.\n    *\n    * * var expectation = mock.expects(\"method\")\n    *   Overrides obj.method with a mock function and returns an expectation\n    *   object. Expectations implement both the spy and stub interface plus\n    *   the methods described below.\n    *\n    * Set expectations with following methods. All methods return the expectation\n    * itself, meaning expectations can be chained.\n    *\n    * * expectation.atLeast(number);\n    * * expectation.atMost(number);\n    * * expectation.never();\n    * * expectation.once();\n    * * expectation.twice();\n    * * expectation.thrice();\n    * * expectation.exactly(number);\n    * * expectation.withArgs(arg1, arg2, ...);\n    * * expectation.withExactArgs(arg1, arg2, ...);\n    * * expectation.on(obj);\n    * * expectation.verify();\n    *\n    * See http://sinonjs.org/docs/#mocks.\n    *\n    * @param object {Object} The object to create a mock of.\n    * @return {Function} A mock to set expectations on. See http://sinonjs.org/docs/#mocks.\n    */\n    mock: function(object) {\n      var sinon = this.__getSinon();\n      return sinon.mock.apply(sinon, arguments);\n    },\n\n    /**\n    * Replace the native XMLHttpRequest object in browsers that support it with\n    * a custom implementation which does not send actual requests.\n    *\n    * Note: The fake XHR is transparently added to a sandbox. To restore\n    * the original host method run <code>this.getSandbox().restore()</code>\n    * in your <code>tearDown()</code> method.\n    *\n    * See http://sinonjs.org/docs/#useFakeXMLHttpRequest.\n    *\n    * @return {Object}\n    */\n    useFakeXMLHttpRequest: function() {\n      return this.__fakeXhr = this.__sandbox.useFakeXMLHttpRequest();\n    },\n\n    /**\n    * Get requests made with faked XHR or server.\n    *\n    * Each request can be queried for url, method, requestHeaders,\n    * status and more.\n    *\n    * See http://sinonjs.org/docs/#FakeXMLHttpRequest.\n    *\n    * @return {Array} Array of faked requests.\n    */\n    getRequests: function() {\n      return this.__fakeXhr.requests;\n    },\n\n    /**\n    * As {@link #useFakeXMLHttpRequest}, but additionally provides a high-level\n    * API to setup server responses. To setup responses, use the server\n    * returned by {@link #getServer}.\n    *\n    * See http://sinonjs.org/docs/#server.\n    *\n    * Note: The fake server is transparently added to a sandbox. To restore\n    * the original host method run <code>this.getSandbox().restore()</code>\n    * in your <code>tearDown()</code> method.\n    *\n    * @return {Object}\n    */\n    useFakeServer: function() {\n      return this.__fakeXhr = this.__sandbox.useFakeServer();\n    },\n\n    /**\n    * Get fake server created by {@link #useFakeServer}.\n    *\n    * @return {Object} Fake server.\n    */\n    getServer: function() {\n      return this.__sandbox.server;\n    },\n\n    /**\n    * Get sandbox.\n    *\n    * The sandbox holds all stubs and mocks. Run <code>this.getSandbox().restore()</code>\n    * to restore all mock objects.\n    *\n    * @return {Object}\n    *        Sandbox object.\n    */\n    getSandbox: function() {\n      return this.__sandbox;\n    },\n\n    /**\n     * EXPERIMENTAL - NOT READY FOR PRODUCTION\n     *\n     * Returns a deep copied, API-identical stubbed out clone of the given\n     * object.\n     *\n     * In contrast to the shallow {@link #stub}, also stubs out properties that\n     * belong to the prototype chain.\n     *\n     * @param object {Object} Object to stub deeply.\n     * @return {Object} A stub.\n     */\n    deepStub: function(object) {\n      this.__getOwnProperties(object).forEach(function(prop) {\n        this.__stubProperty(object, prop);\n      }, this);\n\n      return object;\n    },\n\n    /**\n     * EXPERIMENTAL - NOT READY FOR PRODUCTION\n     *\n     * Shallowly stub all methods (except excluded) that belong to classes found in inheritance\n     * chain up to (but including) the given class.\n     *\n     * @param object {Object} Object to stub shallowly.\n     * @param targetClazz {Object} Class which marks the end of the chain.\n     * @param propsToExclude {Array} Array with properties which shouldn't be stubbed.\n     * @return {Object} A stub.\n     */\n    shallowStub: function(object, targetClazz, propsToExclude) {\n      this.__getOwnProperties(object, targetClazz).forEach(function(prop) {\n        if (propsToExclude && propsToExclude.indexOf(prop) >= 0) {\n          // don't stub excluded prop\n          return;\n        }\n        this.__stubProperty(object, prop);\n      }, this);\n\n      return object;\n    },\n\n    /**\n     * EXPERIMENTAL - NOT READY FOR PRODUCTION\n     *\n     * Changes the given factory (e.g. a constructor) to return a stub. The\n     * method itself returns this stub.\n     *\n     * By default, the stub returned by the changed factory is the object built\n     * by the original factory, but deeply stubbed (see {@link #deepStub}).\n     * Alternatively, a custom stub may be given explicitly that is used instead.\n     *\n     * @param object {Object} Namespace to hold factory, e.g. qx.html.\n     * @param property {String} Property as string that functions as\n     *  constructor, e.g. \"Element\".\n     * @param customStub {Object?} Stub to inject.\n     * @return {Object} Injected stub.\n     */\n    injectStub: function(object, property, customStub) {\n      var stub = customStub || this.deepStub(new object[property]);\n\n      this.stub(object, property).returns(stub);\n      return stub;\n    },\n\n    /**\n     * Changes the given factory (e.g. a constructor) to make a mock of the\n     * object returned. The method itself returns this mock.\n     *\n     * By default, the object returned by the changed factory (that a mock is\n     * made of) is a deep copied, API-identical clone of the object built by the\n     * original factory. Alternatively, the object returned can be given\n     * explicitly.\n     *\n     * @param object {Object} Namespace to hold factory, e.g. qx.html.\n     * @param property {String} Property as string that functions as\n     *  constructor, e.g. \"Element\".\n     * @param customObject {Object?} Object to inject.\n     * @return {Object} Mock of the object built.\n     */\n    revealMock: function(object, property, customObject) {\n      var source = customObject ||\n        this.__deepClone(new object[property]);\n\n      this.stub(object, property).returns(source);\n      return this.mock(source);\n    },\n\n    /**\n     * Deep clone object by copying properties from prototype.\n     *\n     * @param obj {Object} Object to prepare (that is, clone).\n     * @return {Object} Prepared (deeply cloned) object.\n     */\n    __deepClone: function(obj) {\n      var clone = {};\n\n      // Copy from prototype\n      for (var prop in obj) {\n        clone[prop] = obj[prop];\n      }\n\n      return clone;\n    },\n\n    /**\n     * Get the object’s own properties.\n     *\n     * @param object {Object} Object to analyze.\n     * @param targetClazz {Object} Class which marks the end of the chain.\n     * @return {Array} Array of the object’s own properties.\n     */\n    __getOwnProperties: function(object, targetClazz) {\n      var clazz = object.constructor,\n          clazzes = [],\n          properties = [];\n\n      // Find classes in inheritance chain up to targetClazz\n      if (targetClazz) {\n        while(clazz.superclass) {\n          clazzes.push(clazz);\n          clazz = clazz.superclass;\n          if (clazz == targetClazz.superclass) {\n            break;\n          }\n        }\n      }\n\n      // Check if property is own in one of the classes in chain\n      for (var prop in object) {\n\n        if (clazzes.length) {\n          var found = clazzes.some(function(clazz) {\n            return clazz.prototype.hasOwnProperty(prop);\n          });\n          if (!found) {\n            continue;\n          }\n        }\n\n        properties.push(prop);\n      }\n\n      return properties;\n    },\n\n    /**\n     * Safely stub property.\n     *\n     * @param object {Object} Object to stub.\n     * @param prop {String} Property to stub.\n     */\n    __stubProperty: function(object, prop) {\n      // Leave constructor and properties intact\n      if(prop === \"constructor\" || typeof object[prop] !== \"function\") {\n        return;\n      }\n\n      this.stub(object, prop);\n    }\n  }\n});\n"
  ]
}