{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/form/Slider.js",
    "../transpiled/qx/ui/core/scroll/ScrollSlider.js",
    "../transpiled/qx/ui/virtual/layer/WidgetCell.js",
    "../transpiled/qx/ui/virtual/cell/IWidgetCell.js",
    "../transpiled/qx/ui/virtual/cell/AbstractWidget.js",
    "../transpiled/qx/ui/virtual/cell/WidgetCell.js",
    "../transpiled/qx/bom/Shortcut.js",
    "../transpiled/qx/bom/Input.js",
    "../transpiled/qx/event/AcceleratingTimer.js",
    "../transpiled/qx/util/StringEscape.js",
    "../transpiled/qx/ui/core/ISingleSelectionProvider.js",
    "../transpiled/qx/locale/Key.js"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,mBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;AAEC,IAAA,SAAS,EAAG,CACV,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KADD,EAEV,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,WAFD,EAGV,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAHD,CAFb;AAOC,IAAA,OAAO,EAAG,CAAC,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAZ,CAPX;;AAUC;;;;;;AAMA;;;;AAIA,IAAA,SAAS,EAAG,mBAAS,WAAT,EACZ;AACE,+CADF,CAGE;;AACA,WAAK,UAAL,CAAgB,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,MAAjB,EAAhB,EAJF,CAME;;;AACA,WAAK,WAAL,CAAiB,UAAjB,EAA6B,KAAK,WAAlC;AACA,WAAK,WAAL,CAAiB,MAAjB,EAAyB,KAAK,OAA9B;AACA,WAAK,WAAL,CAAiB,aAAjB,EAAgC,KAAK,cAArC;AACA,WAAK,WAAL,CAAiB,WAAjB,EAA8B,KAAK,YAAnC;AACA,WAAK,WAAL,CAAiB,aAAjB,EAAgC,KAAK,YAArC;AACA,WAAK,WAAL,CAAiB,QAAjB,EAA2B,KAAK,SAAhC,EAZF,CAcE;;AACA,WAAK,WAAL,CAAiB,aAAjB,EAAgC,KAAK,YAArC;AACA,WAAK,WAAL,CAAiB,KAAjB,EAAwB,KAAK,YAA7B;AACA,WAAK,WAAL,CAAiB,QAAjB,EAA2B,KAAK,YAAhC,EAjBF,CAmBE;;AACA,UAAI,WAAW,IAAI,IAAnB,EAAyB;AACvB,aAAK,cAAL,CAAoB,WAApB;AACD,OAFD,MAEO;AACL,aAAK,eAAL;AACD;AACF,KA9CF;;AAiDC;;;;;AAMA,IAAA,MAAM,EAAG;AACP;;;AAGA,MAAA,WAAW,EAAE,oBAJN;;AAMP;AACA,MAAA,iBAAiB,EAAE;AAPZ,KAvDV;;AAkEC;;;;;AAMA,IAAA,UAAU,EACV;AACE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAHF;AASE;AACA,MAAA,SAAS,EACT;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAXF;;AAiBE;AACA,MAAA,WAAW,EACX;AACE,QAAA,KAAK,EAAG,CAAE,YAAF,EAAgB,UAAhB,CADV;AAEE,QAAA,IAAI,EAAG,YAFT;AAGE,QAAA,KAAK,EAAG;AAHV,OAnBF;;AA0BE;;;;;;;AAOA,MAAA,KAAK,EACL;AACE,QAAA,KAAK,EAAG,6EADV;AAEE,QAAA,IAAI,EAAG,CAFT;AAGE,QAAA,KAAK,EAAG,aAHV;AAIE,QAAA,QAAQ,EAAE;AAJZ,OAlCF;;AA0CE;;;;AAIA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,CAFT;AAGE,QAAA,KAAK,EAAG,eAHV;AAIE,QAAA,KAAK,EAAE;AAJT,OA/CF;;AAuDE;;;;AAIA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,GAFT;AAGE,QAAA,KAAK,EAAG,eAHV;AAIE,QAAA,KAAK,EAAG;AAJV,OA5DF;;AAoEE;;;;AAIA,MAAA,UAAU,EACV;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT,OAzEF;;AA+EE;;;;AAIA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT,OApFF;;AA0FE;;;;AAIA,MAAA,UAAU,EACV;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,KAAK,EAAG,kBAFV;AAGE,QAAA,QAAQ,EAAG;AAHb;AA/FF,KAzED;;AAgLC;;;;;AAMA,IAAA,OAAO,EACP;AAEE,MAAA,gBAAgB,EAAG,IAFrB;AAGE,MAAA,cAAc,EAAG,IAHnB;AAIE,MAAA,UAAU,EAAG,IAJf;AAKE,MAAA,UAAU,EAAG,IALf;AAME,MAAA,YAAY,EAAG,IANjB;AAOE,MAAA,cAAc,EAAG,IAPnB;AAQE,MAAA,mBAAmB,EAAG,IARxB;AASE,MAAA,aAAa,EAAG,IATlB;AAUE,MAAA,OAAO,EAAG,IAVZ;AAYE;AACA,MAAA,WAAW,EAAE,IAbf;AAcE,MAAA,gBAAgB,EAAE,IAdpB;AAeE,MAAA,WAAW,EAAE,IAff;AAiBE,MAAA,sBAAsB,EAAG,IAjB3B;AAoBE;;AACA;;;AAGA,MAAA,cAAc,EAAG;AACf,QAAA,OAAO,EAAG;AADK,OAxBnB;AA6BE;AACA,MAAA,YAAY,EAAG,sBAAS,IAAT,EAAe,GAAf,EAAoB,KAApB,EAA2B,MAA3B,EAAmC;AAChD,iEAAqB,IAArB,EAA2B,GAA3B,EAAgC,KAAhC,EAAuC,MAAvC,EADgD,CAEhD;;AACA,aAAK,mBAAL;AACD,OAlCH;AAqCE;AACA,MAAA,uBAAuB,EAAG,iCAAS,EAAT,EAAa,IAAb,EAC1B;AACE,YAAI,OAAJ;;AAEA,gBAAO,EAAP;AAEE,eAAK,MAAL;AACE,YAAA,OAAO,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAAf,EAAV;AAEA,YAAA,OAAO,CAAC,WAAR,CAAoB,QAApB,EAA8B,KAAK,SAAnC,EAA8C,IAA9C;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,aAApB,EAAmC,KAAK,cAAxC;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,YAApB,EAAkC,KAAK,aAAvC;;AACA,iBAAK,IAAL,CAAU,OAAV;;AACA;AATJ;;AAYA,eAAO,OAAO,wEAAyB,EAAzB,CAAd;AACD,OAvDH;;AA0DE;;;;;;AAOA;;;;;;;AAOA,MAAA,cAAc,EAAG,wBAAS,CAAT,EAAY;AAC3B,aAAK,QAAL,CAAc,SAAd;AACD,OA1EH;;AA6EE;;;;;;;AAOA,MAAA,aAAa,EAAG,uBAAS,CAAT,EAAY;AAC1B,aAAK,WAAL,CAAiB,SAAjB;AACD,OAtFH;;AAyFE;;;;;AAKA,MAAA,OAAO,EAAG,iBAAS,CAAT,EACV;AACE;AACA,YAAI,CAAC,CAAC,cAAF,MAAsB,OAA1B,EAAmC;AACjC;AACD;;AAED,YAAI,IAAI,GAAG,KAAK,cAAL,OAA0B,YAA1B,GAAyC,GAAzC,GAA+C,GAA1D;AACA,YAAI,KAAK,GAAG,CAAC,CAAC,QAAF,GAAa,IAAb,CAAZ;AAEA,YAAI,SAAS,GAAI,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgB,KAAK,GAAG,CAAR,GAAY,CAAC,CAAb,GAAiB,CAAlD;AACA,aAAK,OAAL,CAAa,SAAS,GAAG,KAAK,aAAL,EAAzB;AAEA,QAAA,CAAC,CAAC,IAAF;AACD,OA5GH;;AA+GE;;;;;;;AAOA,MAAA,WAAW,EAAG,qBAAS,CAAT,EACd;AACE,YAAI,YAAY,GAAG,KAAK,cAAL,OAA0B,YAA7C;AACA,YAAI,QAAQ,GAAG,YAAY,GAAG,MAAH,GAAY,IAAvC;AACA,YAAI,OAAO,GAAG,YAAY,GAAG,OAAH,GAAa,MAAvC;;AAEA,gBAAO,CAAC,CAAC,gBAAF,EAAP;AAEE,eAAK,OAAL;AACE,iBAAK,YAAL;AACA;;AAEF,eAAK,QAAL;AACE,iBAAK,SAAL;AACA;;AAEF,eAAK,UAAL;AACE,iBAAK,gBAAL,CAAsB,GAAtB;AACA;;AAEF,eAAK,QAAL;AACE,iBAAK,aAAL,CAAmB,GAAnB;AACA;;AAEF,eAAK,MAAL;AACE,iBAAK,YAAL,CAAkB,GAAlB;AACA;;AAEF,eAAK,KAAL;AACE,iBAAK,UAAL,CAAgB,GAAhB;AACA;;AAEF;AACE;AA3BJ,SALF,CAmCE;;;AACA,QAAA,CAAC,CAAC,IAAF;AACD,OA5JH;;AA+JE;;;;;AAKA,MAAA,cAAc,EAAG,wBAAS,CAAT,EACjB;AACE;AACA;AACA,YAAI,KAAK,UAAT,EAAqB;AACnB;AACD;;AAED,YAAI,YAAY,GAAG,KAAK,cAAxB;AACA,YAAI,IAAI,GAAG,KAAK,eAAL,CAAqB,MAArB,CAAX;AAEA,YAAI,gBAAgB,GAAG,YAAY,GAAG,MAAH,GAAY,KAA/C;AAEA,YAAI,cAAc,GAAG,YAAY,GAAG,CAAC,CAAC,eAAF,EAAH,GAAyB,CAAC,CAAC,cAAF,EAA1D;AAEA,YAAI,SAAS,GAAG,KAAK,YAAL,EAAhB;AACA,QAAA,SAAS,GAAG,EAAE,CAAC,KAAH,CAAS,OAAT,CAAiB,UAAjB,CAA4B,WAA5B,GAA0C,OAA1C,CAAkD,SAAlD,CAAZ;;AACA,YAAI,YAAJ,EAAkB;AAChB,cAAI,gBAAgB,GAAG,SAAS,GAAG,SAAS,CAAC,SAAV,GAAsB,IAAzB,GAAgC,CAAhE;AACA,cAAI,OAAO,GAAG,CAAC,KAAK,cAAL,MAAyB,CAA1B,IAA+B,gBAA7C;AACD,SAHD,MAGO;AACL,cAAI,gBAAgB,GAAG,SAAS,GAAG,SAAS,CAAC,SAAV,GAAsB,GAAzB,GAA+B,CAA/D;AACA,cAAI,OAAO,GAAG,CAAC,KAAK,aAAL,MAAwB,CAAzB,IAA8B,gBAA5C;AACD;;AAED,YAAI,cAAc,GAAG,KAAK,gBAAL,GAAwB,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,QAAf,CAAwB,GAAxB,CAA4B,KAAK,iBAAL,GAAyB,aAAzB,EAA5B,EAAsE,gBAAtE,CAA7C;AACA,QAAA,cAAc,IAAI,OAAlB;AAEA,YAAI,YAAY,GAAG,KAAK,cAAL,GAAsB,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,QAAf,CAAwB,GAAxB,CAA4B,IAAI,CAAC,iBAAL,GAAyB,aAAzB,EAA5B,EAAsE,gBAAtE,CAAzC;;AAEA,YAAI,CAAC,CAAC,SAAF,OAAkB,IAAtB,EACA;AACE;AACA,eAAK,UAAL,GAAkB,IAAlB;;AACA,cAAI,CAAC,KAAK,WAAV,EAAsB;AACpB;AACA,iBAAK,WAAL,GAAmB,IAAI,EAAE,CAAC,KAAH,CAAS,KAAb,CAAmB,GAAnB,CAAnB;;AACA,iBAAK,WAAL,CAAiB,WAAjB,CAA6B,UAA7B,EAAyC,KAAK,UAA9C,EAA0D,IAA1D;AACD;;AACD,eAAK,WAAL,CAAiB,KAAjB,GARF,CASE;AACA;;;AACA,eAAK,YAAL,GAAoB,cAAc,GAAG,cAAjB,GAAkC,YAAtD,CAXF,CAaE;;AACA,UAAA,IAAI,CAAC,QAAL,CAAc,SAAd;AACD,SAhBD,MAkBA;AACE;AACA,eAAK,cAAL,GAAsB,IAAtB,CAFF,CAIE;;AACA,eAAK,mBAAL,GAA2B,cAAc,IAAI,YAAlB,GAAiC,CAAC,CAAlC,GAAsC,CAAjE,CALF,CAOE;;AACA,eAAK,oBAAL,CAA0B,CAA1B,EARF,CAUE;;;AACA,eAAK,WAAL,GAXF,CAaE;;;AACA,cAAI,CAAC,KAAK,OAAV,EACA;AACE,iBAAK,OAAL,GAAe,IAAI,EAAE,CAAC,KAAH,CAAS,KAAb,CAAmB,GAAnB,CAAf;;AACA,iBAAK,OAAL,CAAa,WAAb,CAAyB,UAAzB,EAAqC,KAAK,WAA1C,EAAuD,IAAvD;AACD,WAlBH,CAoBE;;;AACA,eAAK,OAAL,CAAa,KAAb;AACD,SArEH,CAuEE;;;AACA,aAAK,WAAL,CAAiB,aAAjB,EAAgC,KAAK,cAArC,EAxEF,CA0EE;;AACA,aAAK,OAAL,GA3EF,CA6EE;;AACA,QAAA,CAAC,CAAC,eAAF;AACD,OApPH;;AAuPE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,CAAT,EACf;AACE,YAAI,KAAK,UAAT,EACA;AACE;AACA,eAAK,cAAL,GAFF,CAIE;;AACA,iBAAO,KAAK,UAAZ,CALF,CAOE;AACA;;AACA,eAAK,WAAL,CAAiB,IAAjB;;AACA,eAAK,UAAL;;AAEA,iBAAO,KAAK,YAAZ,CAZF,CAcE;;AACA,eAAK,eAAL,CAAqB,MAArB,EAA6B,WAA7B,CAAyC,SAAzC,EAfF,CAiBE;AACA;;AACA,cAAI,CAAC,CAAC,OAAF,OAAgB,WAApB,EACA;AACE,gBAAI,WAAJ;AACA,gBAAI,aAAJ;AACA,gBAAI,cAAJ;;AAEA,gBAAI,KAAK,cAAT,EACA;AACE,cAAA,WAAW,GAAG,CAAC,CAAC,eAAF,MAAuB,KAAK,gBAAL,CAAsB,KAAK,QAAL,EAAtB,IAAyC,KAAK,gBAArE,CAAd;AAEA,cAAA,cAAc,GAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,QAAf,CAAwB,GAAxB,CAA4B,KAAK,iBAAL,GAAyB,aAAzB,EAA5B,EAAsE,KAAtE,CAAjB;AACA,cAAA,aAAa,GAAG,CAAC,CAAC,cAAF,MAAsB,cAAc,GAAG,KAAK,eAAL,CAAqB,MAArB,EAA6B,SAA7B,GAAyC,GAAhF,CAAhB;AACD,aAND,MAQA;AACE,cAAA,WAAW,GAAG,CAAC,CAAC,cAAF,MAAsB,KAAK,gBAAL,CAAsB,KAAK,QAAL,EAAtB,IAAyC,KAAK,gBAApE,CAAd;AAEA,cAAA,cAAc,GAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,QAAf,CAAwB,GAAxB,CAA4B,KAAK,iBAAL,GAAyB,aAAzB,EAA5B,EAAsE,MAAtE,CAAjB;AACA,cAAA,aAAa,GAAG,CAAC,CAAC,eAAF,MAAuB,cAAc,GAAG,KAAK,eAAL,CAAqB,MAArB,EAA6B,SAA7B,GAAyC,IAAjF,CAAhB;AACD;;AAED,gBAAI,aAAa,GAAG,CAAhB,IAAqB,aAAa,GAAG,KAAK,UAA1C,IACA,WAAW,GAAG,CADd,IACmB,WAAW,GAAG,KAAK,UAD1C,EACsD;AACpD,mBAAK,eAAL,CAAqB,MAArB,EAA6B,WAA7B,CAAyC,SAAzC;AACD;AACF;AAEF,SA/CD,MAgDK,IAAI,KAAK,cAAT,EACL;AACE;AACA,eAAK,OAAL,CAAa,IAAb,GAFF,CAIE;;;AACA,eAAK,cAAL,GALF,CAOE;;AACA,iBAAO,KAAK,cAAZ;AACA,iBAAO,KAAK,mBAAZ;AACA,iBAAO,KAAK,aAAZ;AACD,SA7DH,CA+DE;;;AACA,aAAK,cAAL,CAAoB,aAApB,EAAmC,KAAK,cAAxC,EAhEF,CAkEE;;AACA,YAAI,CAAC,CAAC,OAAF,OAAgB,WAApB,EAAiC;AAC/B,UAAA,CAAC,CAAC,eAAF;AACD;AACF,OApUH;;AAuUE;;;;;AAKA,MAAA,cAAc,EAAG,wBAAS,CAAT,EACjB;AACE,YAAI,KAAK,UAAT,EACA;AACE,cAAI,QAAQ,GAAG,KAAK,cAAL,GACb,CAAC,CAAC,eAAF,EADa,GACS,CAAC,CAAC,cAAF,EADxB;AAEA,cAAI,QAAQ,GAAG,QAAQ,GAAG,KAAK,YAA/B;AAEA,eAAK,OAAL,CAAa,KAAK,gBAAL,CAAsB,QAAtB,CAAb;AACD,SAPD,MAQK,IAAI,KAAK,cAAT,EACL;AACE;AACA,eAAK,oBAAL,CAA0B,CAA1B;AACD,SAbH,CAeE;;;AACA,QAAA,CAAC,CAAC,eAAF;AACD,OA9VH;;AAiWE;;;;;;AAMA,MAAA,WAAW,EAAG,qBAAS,CAAT,EACd;AACE;AACA,YAAI,KAAK,GAAG,KAAK,QAAL,KAAmB,KAAK,mBAAL,GAA2B,KAAK,WAAL,EAA1D,CAFF,CAIE;;AACA,YAAI,KAAK,GAAG,KAAK,UAAL,EAAZ,EAA+B;AAC7B,UAAA,KAAK,GAAG,KAAK,UAAL,EAAR;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,KAAK,UAAL,EAAZ,EAA+B;AACpC,UAAA,KAAK,GAAG,KAAK,UAAL,EAAR;AACD,SATH,CAWE;;;AACA,YAAI,SAAS,GAAG,KAAK,mBAAL,IAA4B,CAAC,CAA7C;;AACA,YAAK,SAAS,IAAI,KAAK,IAAI,KAAK,aAA5B,IAA+C,CAAC,SAAD,IAAc,KAAK,IAAI,KAAK,aAA/E,EAA+F;AAC7F,UAAA,KAAK,GAAG,KAAK,aAAb;AACD,SAfH,CAiBE;;;AACA,aAAK,OAAL,CAAa,KAAb;AACD,OA3XH;;AA8XE;;;;;AAKA,MAAA,SAAS,EAAG,mBAAS,CAAT,EACZ;AACE;AACA,YAAI,SAAS,GAAG,KAAK,YAAL,EAAhB;AACA,YAAI,QAAQ,GAAG,KAAK,eAAL,CAAqB,MAArB,EAA6B,SAA7B,EAAf;AACA,YAAI,YAAY,GAAG,KAAK,cAAL,GAAsB,OAAtB,GAAgC,QAAnD,CAJF,CAME;;AACA,aAAK,eAAL,GAPF,CASE;;;AACA,aAAK,cAAL,GAAsB,SAAS,CAAC,YAAD,CAAT,GAA0B,QAAQ,CAAC,YAAD,CAAxD;AACA,aAAK,UAAL,GAAkB,QAAQ,CAAC,YAAD,CAA1B,CAXF,CAaE;;AACA,aAAK,mBAAL;AACD,OAnZH;;AA0ZE;;;;;;AAMA;AACA,MAAA,cAAc,EAAG,KAjanB;;AAoaE;;;;AAIA,MAAA,cAAc,EAAG,CAxanB;;AA2aE;;;;;;AAMA,MAAA,oBAAoB,EAAG,8BAAS,CAAT,EACvB;AACE,YAAI,YAAY,GAAG,KAAK,cAAxB;AACA,YAAI,cAAc,GAAG,YAAY,GAAG,CAAC,CAAC,eAAF,EAAH,GAAyB,CAAC,CAAC,cAAF,EAA1D;AACA,YAAI,cAAc,GAAG,KAAK,gBAA1B;AACA,YAAI,YAAY,GAAG,KAAK,cAAxB;AACA,YAAI,QAAQ,GAAG,KAAK,UAApB,CALF,CAOE;;AACA,YAAI,QAAQ,GAAG,cAAc,GAAG,cAAhC;;AACA,YAAI,cAAc,IAAI,YAAtB,EAAoC;AAClC,UAAA,QAAQ,IAAI,QAAZ;AACD,SAXH,CAaE;;;AACA,YAAI,KAAK,GAAG,KAAK,gBAAL,CAAsB,QAAtB,CAAZ;;AAEA,YAAI,GAAG,GAAG,KAAK,UAAL,EAAV;AACA,YAAI,GAAG,GAAG,KAAK,UAAL,EAAV;;AAEA,YAAI,KAAK,GAAG,GAAZ,EAAiB;AACf,UAAA,KAAK,GAAG,GAAR;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,GAAZ,EAAiB;AACtB,UAAA,KAAK,GAAG,GAAR;AACD,SAFM,MAEA;AACL,cAAI,GAAG,GAAG,KAAK,QAAL,EAAV;AACA,cAAI,IAAI,GAAG,KAAK,WAAL,EAAX;AACA,cAAI,MAAM,GAAG,KAAK,mBAAL,GAA2B,CAA3B,GAA+B,OAA/B,GAAyC,MAAtD,CAHK,CAKL;;AACA,UAAA,KAAK,GAAG,GAAG,GAAI,IAAI,CAAC,MAAD,CAAJ,CAAa,CAAC,KAAK,GAAG,GAAT,IAAgB,IAA7B,IAAqC,IAApD;AACD,SA9BH,CAgCE;AACA;;;AACA,YAAI,KAAK,aAAL,IAAsB,IAAtB,IAA+B,KAAK,mBAAL,IAA4B,CAAC,CAA7B,IAAkC,KAAK,IAAI,KAAK,aAA/E,IAAkG,KAAK,mBAAL,IAA4B,CAA5B,IAAiC,KAAK,IAAI,KAAK,aAArJ,EAAqK;AACnK,eAAK,aAAL,GAAqB,KAArB;AACD;AACF,OAvdH;;AA0dE;;;;;;;;AAQA,MAAA,gBAAgB,EAAG,0BAAS,QAAT,EACnB;AACE;AACA,YAAI,KAAK,GAAG,KAAK,cAAjB,CAFF,CAIE;;AACA,YAAI,KAAK,IAAI,IAAT,IAAiB,KAAK,IAAI,CAA9B,EAAiC;AAC/B,iBAAO,CAAP;AACD,SAPH,CASE;;;AACA,YAAI,OAAO,GAAG,QAAQ,GAAG,KAAzB;;AACA,YAAI,OAAO,GAAG,CAAd,EAAiB;AACf,UAAA,OAAO,GAAG,CAAV;AACD,SAFD,MAEO,IAAI,OAAO,GAAG,CAAd,EAAiB;AACtB,UAAA,OAAO,GAAG,CAAV;AACD,SAfH,CAiBE;;;AACA,YAAI,KAAK,GAAG,KAAK,UAAL,KAAoB,KAAK,UAAL,EAAhC,CAlBF,CAoBE;;AACA,eAAO,KAAK,UAAL,KAAoB,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,OAAnB,CAA3B;AACD,OAzfH;;AA4fE;;;;;;;AAOA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EACnB;AACE;AACA,YAAI,KAAK,GAAG,KAAK,cAAjB;;AACA,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,iBAAO,CAAP;AACD,SALH,CAOE;;;AACA,YAAI,KAAK,GAAG,KAAK,UAAL,KAAoB,KAAK,UAAL,EAAhC,CARF,CAUE;;AACA,YAAI,KAAK,IAAI,CAAb,EAAgB;AACd,iBAAO,CAAP;AACD,SAbH,CAeE;;;AACA,YAAI,KAAK,GAAG,KAAK,GAAG,KAAK,UAAL,EAApB,CAhBF,CAkBE;;AACA,YAAI,OAAO,GAAG,KAAK,GAAG,KAAtB;;AACA,YAAI,OAAO,GAAG,CAAd,EAAiB;AACf,UAAA,OAAO,GAAG,CAAV;AACD,SAFD,MAEO,IAAI,OAAO,GAAG,CAAd,EAAiB;AACtB,UAAA,OAAO,GAAG,CAAV;AACD,SAxBH,CA0BE;;;AACA,eAAO,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,OAAnB,CAAP;AACD,OAhiBH;;AAmiBE;;;;;;AAMA,MAAA,mBAAmB,EAAG,+BAAW;AAC/B,aAAK,gBAAL,CAAsB,KAAK,gBAAL,CAAsB,KAAK,QAAL,EAAtB,CAAtB;AACD,OA3iBH;;AA8iBE;;;;;;AAMA,MAAA,gBAAgB,EAAG,0BAAS,QAAT,EACnB;AACE;AACA,YAAI,IAAI,GAAG,KAAK,eAAL,CAAqB,MAArB,CAAX;AACA,YAAI,GAAG,GAAG,KAAK,YAAL,EAAV;AACA,QAAA,GAAG,GAAG,EAAE,CAAC,KAAH,CAAS,OAAT,CAAiB,UAAjB,CAA4B,WAA5B,GAA0C,OAA1C,CAAkD,GAAlD,CAAN;AACA,YAAI,OAAO,GAAG,IAAI,CAAC,iBAAL,EAAd;;AACA,YAAI,KAAK,cAAT,EAAyB;AACvB,cAAI,GAAG,IAAI,GAAG,CAAC,UAAJ,EAAX,EAA6B;AAC3B,YAAA,QAAQ,IAAI,GAAG,CAAC,UAAJ,GAAiB,IAA7B;AACD;;AACD,UAAA,QAAQ,IAAI,KAAK,cAAL,MAAyB,CAArC;AACA,UAAA,OAAO,CAAC,QAAR,CAAiB,MAAjB,EAAyB,QAAQ,GAAC,IAAlC,EAAwC,IAAxC;AACD,SAND,MAMO;AACL,cAAI,GAAG,IAAI,GAAG,CAAC,UAAJ,EAAX,EAA6B;AAC3B,YAAA,QAAQ,IAAI,GAAG,CAAC,UAAJ,GAAiB,GAA7B;AACD;;AACD,UAAA,QAAQ,IAAI,KAAK,aAAL,MAAwB,CAApC;AACA,UAAA,OAAO,CAAC,QAAR,CAAiB,KAAjB,EAAwB,QAAQ,GAAC,IAAjC,EAAuC,IAAvC;AACD;AACF,OAxkBH;;AA2kBE;;;;;AAKA,MAAA,eAAe,EAAG,2BAClB;AACE;AACA,YAAI,UAAU,GAAG,KAAK,aAAL,EAAjB;;AACA,YAAI,UAAU,IAAI,IAAlB,EAAwB;AACtB;AACD,SALH,CAOE;;;AACA,YAAI,KAAK,GAAG,KAAK,YAAL,EAAZ;;AACA,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB;AACD,SAXH,CAaE;;;AACA,YAAI,KAAK,cAAT,EAAyB;AACvB,eAAK,eAAL,CAAqB,MAArB,EAA6B,QAA7B,CAAsC,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,KAAK,CAAC,KAA9B,CAAtC;AACD,SAFD,MAEO;AACL,eAAK,eAAL,CAAqB,MAArB,EAA6B,SAA7B,CAAuC,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,KAAK,CAAC,MAA9B,CAAvC;AACD;AACF,OApmBH;;AA0mBE;;;;;;AAMA;;;;AAIA,MAAA,YAAY,EAAG,sBAAS,QAAT,EAAmB;AAChC,aAAK,OAAL,CAAa,KAAK,UAAL,EAAb,EAAgC,QAAhC;AACD,OAtnBH;;AAynBE;;;;AAIA,MAAA,UAAU,EAAG,oBAAS,QAAT,EAAmB;AAC9B,aAAK,OAAL,CAAa,KAAK,UAAL,EAAb,EAAgC,QAAhC;AACD,OA/nBH;;AAkoBE;;;;AAIA,MAAA,YAAY,EAAG,wBAAW;AACxB,aAAK,OAAL,CAAa,KAAK,aAAL,EAAb;AACD,OAxoBH;;AA2oBE;;;;AAIA,MAAA,SAAS,EAAG,qBAAW;AACrB,aAAK,OAAL,CAAa,CAAC,KAAK,aAAL,EAAd;AACD,OAjpBH;;AAopBE;;;;AAIA,MAAA,gBAAgB,EAAG,0BAAS,QAAT,EAAmB;AACpC,aAAK,OAAL,CAAa,KAAK,WAAL,EAAb,EAAiC,QAAjC;AACD,OA1pBH;;AA6pBE;;;;AAIA,MAAA,aAAa,EAAG,uBAAS,QAAT,EAAmB;AACjC,aAAK,OAAL,CAAa,CAAC,KAAK,WAAL,EAAd,EAAkC,QAAlC;AACD,OAnqBH;;AAsqBE;;;;;;;;AAQA,MAAA,OAAO,EAAG,iBAAS,MAAT,EAAiB,QAAjB,EAA2B;AACnC,aAAK,OAAL,CAAa,KAAK,QAAL,KAAkB,MAA/B,EAAuC,QAAvC;AACD,OAhrBH;;AAmrBE;;;;;;;;;AASA,MAAA,OAAO,EAAG,iBAAS,KAAT,EAAgB,QAAhB,EACV;AACE,aAAK,kBAAL;;AAEA,YAAI,QAAJ,EAAc;AACZ,eAAK,WAAL,CAAiB,KAAjB,EAAwB,QAAxB;AACD,SAFD,MAEO;AACL,eAAK,cAAL,CAAoB,KAApB;AACD;AACF,OArsBH;;AAwsBE;;;;AAIA,MAAA,cAAc,EAAG,wBAAS,KAAT,EAAgB;AAC/B,aAAK,QAAL,CAAc,KAAK,gBAAL,CAAsB,KAAtB,CAAd;AACD,OA9sBH;;AAitBE;;;;AAIA,MAAA,kBAAkB,EAAG,8BAAW;AAC9B,YAAI,KAAK,sBAAT,EAAiC;AAC/B,eAAK,sBAAL,CAA4B,cAA5B;;AACA,eAAK,sBAAL,GAA8B,IAA9B;AACD;AACF,OA1tBH;;AA6tBE;;;;;;AAMA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EAAgB;AACjC;AACA,YAAI,KAAK,GAAG,KAAK,UAAL,EAAZ,EAA+B;AAC7B,UAAA,KAAK,GAAG,KAAK,UAAL,EAAR;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,KAAK,UAAL,EAAZ,EAA+B;AACpC,UAAA,KAAK,GAAG,KAAK,UAAL,EAAR;AACD,SAFM,MAEA;AACL,UAAA,KAAK,GAAG,KAAK,UAAL,KAAoB,IAAI,CAAC,KAAL,CAAW,CAAC,KAAK,GAAG,KAAK,UAAL,EAAT,IAA8B,KAAK,aAAL,EAAzC,IAAiE,KAAK,aAAL,EAA7F;AACD;;AACD,eAAO,KAAP;AACD,OA7uBH;;AAgvBE;;;;;AAKA,MAAA,WAAW,EAAG,qBAAS,EAAT,EAAa,QAAb,EAAuB;AACnC,QAAA,EAAE,GAAG,KAAK,gBAAL,CAAsB,EAAtB,CAAL;AACA,YAAI,IAAI,GAAG,KAAK,QAAL,EAAX;AAEA,aAAK,sBAAL,GAA8B,IAAI,EAAE,CAAC,GAAH,CAAO,cAAX,EAA9B;;AAEA,aAAK,sBAAL,CAA4B,EAA5B,CAA+B,OAA/B,EAAwC,UAAS,UAAT,EAAqB;AAC3D,eAAK,QAAL,CAAc,QAAQ,CAAC,UAAU,GAAC,QAAX,IAAuB,EAAE,GAAG,IAA5B,IAAoC,IAArC,CAAtB;AACD,SAFD,EAEG,IAFH;;AAIA,aAAK,sBAAL,CAA4B,EAA5B,CAA+B,KAA/B,EAAsC,YAAW;AAC/C,eAAK,QAAL,CAAc,EAAd;AACA,eAAK,sBAAL,GAA8B,IAA9B;AACA,eAAK,SAAL,CAAe,mBAAf;AACD,SAJD,EAIG,IAJH;;AAMA,aAAK,sBAAL,CAA4B,aAA5B,CAA0C,QAA1C;AACD,OAtwBH;;AAywBE;;;;;AAMA;AACA,MAAA,iBAAiB,EAAG,2BAAS,KAAT,EAAgB,GAAhB,EACpB;AACE,YAAI,IAAI,GAAG,KAAK,eAAL,CAAqB,MAArB,CAAX,CADF,CAGE;;AACA,aAAK,cAAL,GAAsB,KAAK,KAAK,YAAhC,CAJF,CAME;;AACA,YAAI,KAAK,cAAT,EACA;AACE,eAAK,WAAL,CAAiB,UAAjB;AACA,UAAA,IAAI,CAAC,WAAL,CAAiB,UAAjB;AAEA,eAAK,QAAL,CAAc,YAAd;AACA,UAAA,IAAI,CAAC,QAAL,CAAc,YAAd;AAEA,UAAA,IAAI,CAAC,mBAAL,CAAyB;AAAC,YAAA,GAAG,EAAC,CAAL;AAAQ,YAAA,KAAK,EAAC,IAAd;AAAoB,YAAA,MAAM,EAAC;AAA3B,WAAzB;AACD,SATD,MAWA;AACE,eAAK,WAAL,CAAiB,YAAjB;AACA,UAAA,IAAI,CAAC,WAAL,CAAiB,YAAjB;AAEA,eAAK,QAAL,CAAc,UAAd;AACA,UAAA,IAAI,CAAC,QAAL,CAAc,UAAd;AAEA,UAAA,IAAI,CAAC,mBAAL,CAAyB;AAAC,YAAA,KAAK,EAAC,CAAP;AAAU,YAAA,MAAM,EAAC,IAAjB;AAAuB,YAAA,IAAI,EAAC;AAA5B,WAAzB;AACD,SA1BH,CA4BE;;;AACA,aAAK,mBAAL;AACD,OA/yBH;AAkzBE;AACA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EAAgB,GAAhB,EACnB;AACE,YAAI,KAAK,IAAI,IAAb,EACA;AACE,eAAK,eAAL;AACD,SAHD,MAKA;AACE,cAAI,KAAK,cAAT,EAAyB;AACvB,iBAAK,eAAL,CAAqB,MAArB,EAA6B,UAA7B;AACD,WAFD,MAEO;AACL,iBAAK,eAAL,CAAqB,MAArB,EAA6B,WAA7B;AACD;AACF;AACF,OAj0BH;AAo0BE;AACA,MAAA,WAAW,EAAG,qBAAS,KAAT,EAAgB,GAAhB,EAAqB;AACjC,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,eAAK,mBAAL;;AACA,cAAI,KAAK,UAAT,EAAqB;AACnB,iBAAK,WAAL,GAAmB,CAAC,KAAD,EAAO,GAAP,CAAnB;AACD,WAFD,MAEO;AACL,iBAAK,SAAL,CAAe,aAAf,EAA8B,EAAE,CAAC,KAAH,CAAS,IAAT,CAAc,IAA5C,EAAkD,CAAC,KAAD,EAAO,GAAP,CAAlD;AACD;AACF,SAPD,MAOO;AACL,eAAK,UAAL;AACD;AACF,OAh1BH;;AAm1BE;;;AAGA,MAAA,UAAU,EAAE,sBAAU;AACpB,YAAI,CAAC,KAAK,WAAV,EAAsB;AACpB;AACD;;AACD,YAAI,GAAG,GAAG,KAAK,WAAf;AACA,aAAK,WAAL,GAAmB,IAAnB;AACA,aAAK,SAAL,CAAe,aAAf,EAA8B,EAAE,CAAC,KAAH,CAAS,IAAT,CAAc,IAA5C,EAAkD,GAAlD;AACD,OA71BH;AAg2BE;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB,GAAhB,EAChB;AACE,YAAI,KAAK,QAAL,KAAkB,KAAtB,EAA6B;AAC3B,eAAK,QAAL,CAAc,KAAd;AACD;;AAED,aAAK,mBAAL;AACD,OAx2BH;AA22BE;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB,GAAhB,EAChB;AACE,YAAI,KAAK,QAAL,KAAkB,KAAtB,EAA6B;AAC3B,eAAK,QAAL,CAAc,KAAd;AACD;;AAED,aAAK,mBAAL;AACD;AAn3BH;AAvLD,GADA;AAxDA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,MAAV,CAAiB,aAAjB,GAAiC,aAAjC;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAMA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,gCAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;AAGC;AACA,IAAA,SAAS,EAAG,mBAAS,WAAT,EACZ;AACE,+CAAqB,WAArB,EADF,CAGE;;AACA,WAAK,cAAL,CAAoB,UAApB,EAAgC,KAAK,WAArC;AACA,WAAK,cAAL,CAAoB,MAApB,EAA4B,KAAK,OAAjC;AACD,KAXF;AAcC,IAAA,OAAO,EAAG;AAER;AACA,MAAA,uBAAuB,EAAG,iCAAS,EAAT,EAAa,IAAb,EAC1B;AACE,YAAI,OAAJ;;AAEA,gBAAO,EAAP;AAEE,eAAK,MAAL;AACE,YAAA,OAAO,oFAAwB,EAAxB,CAAP;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,UAApB,EAAgC,UAAS,CAAT,EAAY;AAC1C,cAAA,CAAC,CAAC,eAAF;AACD,aAFD;AAJJ;;AASA,eAAO,OAAO,qFAAyB,EAAzB,CAAd;AACD,OAjBO;AAmBR;AACA,MAAA,WAAW,EAAG,qBAAS,OAAT,EAAkB;AAC9B;AACA,YAAI,IAAI,uEAAR,CAF8B,CAG9B;AACA;AACA;AACA;;AACA,YAAI,KAAK,cAAL,OAA0B,YAA9B,EAA4C;AAC1C,UAAA,IAAI,CAAC,KAAL,GAAa,CAAb;AACD,SAFD,MAEO;AACL,UAAA,IAAI,CAAC,MAAL,GAAc,CAAd;AACD;;AACD,eAAO,IAAP;AACD;AAjCO;AAdX,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,MAAV,CAAiB,YAAjB,CAA8B,aAA9B,GAA8C,aAA9C;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;AAMA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,gCAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,KAAd,CAAoB,QAD9B;AAGC,IAAA,OAAO,EAAG,CACR,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,iBADH,CAHX;;AAQC;;;;AAIA,IAAA,SAAS,EAAG,mBAAS,kBAAT,EACZ;AACE;AACA,WAAK,SAAL,CAAe,EAAf;AAEyC;AACvC,aAAK,eAAL,CACE,kBADF,EAEE,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,IAAd,CAAmB,mBAFrB;AAID;AAED,WAAK,aAAL,GAAqB,kBAArB;AACA,WAAK,YAAL,GAAoB,EAApB;AACD,KA1BF;;AA6BC;;;;;AAMC,IAAA,UAAU,EACV;AACE;AACA,MAAA,SAAS,EACT;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,IAAI,EAAE;AAFR;AAHF,KApCF;AA6CC,IAAA,MAAM,EACN;AACE;;;;AAIA,MAAA,OAAO,EAAG;AALZ,KA9CD;;AAuDC;;;;;AAMA,IAAA,OAAO,EACP;AACG,MAAA,YAAY,EAAG,IADlB;;AAGG;;;;;;;;;AASA,MAAA,qBAAqB,EAAG,+BAAS,GAAT,EAAc,MAAd,EACxB;AACG,YAAI,KAAK,YAAL,GAAoB,MAApB,KAA+B,CAAnC,EAAsC;AACpC,iBAAO,IAAP;AACD;;AAED,YAAI,WAAW,GAAG,KAAK,cAAL,GAAsB,MAAxC;AACA,YAAI,QAAQ,GAAG,KAAK,WAAL,GAAmB,MAAlC;AAEA,YAAI,QAAQ,GAAG,KAAK,WAAL,EAAf;AACA,YAAI,WAAW,GAAG,KAAK,cAAL,EAAlB;;AAEA,YACC,GAAG,GAAG,QAAN,IACA,GAAG,IAAI,QAAQ,GAAG,QADlB,IAEA,MAAM,GAAG,WAFT,IAGA,MAAM,IAAI,WAAW,GAAG,WAJzB,EAKE;AACD,iBAAO,IAAP;AACA;;AAED,YAAI,UAAU,GAAI,MAAM,GAAG,WAAV,GAAyB,CAAC,GAAG,GAAG,QAAP,IAAmB,WAA7D;;AACA,YAAI,MAAM,GAAG,KAAK,YAAL,GAAoB,UAApB,CAAb;;AAEA,YAAI,CAAC,MAAD,IAAW,MAAM,CAAC,WAAP,CAAmB,YAAnB,CAAf,EAAiD;AAChD,iBAAO,IAAP;AACA,SAFD,MAEO;AACN,iBAAO,MAAP;AACA;AACH,OAzCJ;;AA4CE;;;;;AAKA,MAAA,UAAU,EAAG,sBACb;AACE,YAAI,MAAM,GAAG,KAAK,YAAL,CAAkB,GAAlB,EAAb;;AACA,YAAI,CAAC,MAAL,EACA;AACE,UAAA,MAAM,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAAf,EAAT;AACA,UAAA,MAAM,CAAC,WAAP,CAAmB,YAAnB,EAAiC,CAAjC;AACD;;AACD,eAAO,MAAP;AACD,OA1DH;;AA6DE;;;;AAIA,MAAA,sBAAsB,EAAG,gCAAS,aAAT,EACzB;AACE;AACA,YAAI,MAAM,GAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,YAAX,CAAwB,WAAxB,GAAsC,eAAtC,EAAb,CAFF,CAGE;;AACA,YAAI,MAAM,IAAI,aAAV,IAA2B,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAAX,CAAkB,QAAlB,CAA2B,aAA3B,EAA0C,MAA1C,CAA/B,EAAkF;AAChF;AACA,cAAI,QAAQ,GAAG,KAAK,YAAL,EAAf;;AACA,eAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAT,GAAkB,CAA/B,EAAkC,CAAC,IAAI,CAAvC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,gBAAI,CAAC,QAAQ,CAAC,CAAD,CAAR,CAAY,WAAZ,CAAwB,YAAxB,CAAL,EAA4C;AAC1C,cAAA,QAAQ,CAAC,CAAD,CAAR,CAAY,QAAZ;AACA;AACD;AACF;;AAAA;AACF;AACF,OAhFH;AAmFE;AACA,MAAA,WAAW,EAAG,qBAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,WAA1C,EACd;AACE,YAAI,YAAY,GAAG,KAAK,aAAxB;;AAEA,YAAI,QAAQ,GAAG,KAAK,YAAL,GAAoB,MAApB,EAAf;;AACA,aAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,QAAQ,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EACA;AACE,cAAI,KAAK,GAAG,QAAQ,CAAC,CAAD,CAApB;;AACA,cAAI,KAAK,CAAC,WAAN,CAAkB,YAAlB,CAAJ,EAAqC;AACnC,iBAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAvB;AACD,WAFD,MAEO;AACL,iBAAK,sBAAL,CAA4B,KAA5B;;AACA,YAAA,YAAY,CAAC,cAAb,CAA4B,KAA5B;AACD;AACF;;AAGD,YAAI,GAAG,GAAG,CAAV;AACA,YAAI,IAAI,GAAG,CAAX;AAEA,YAAI,YAAY,GAAG,EAAnB;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,QAAQ,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EACA;AACE,eAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,MAA5B,EAAoC,CAAC,EAArC,EACA;AACE,gBAAI,GAAG,GAAG,QAAQ,GAAG,CAArB;AACA,gBAAI,MAAM,GAAG,WAAW,GAAG,CAA3B;;AAEA,gBAAI,IAAI,GAAG,YAAY,CAAC,aAAb,CAA2B,GAA3B,EAAgC,MAAhC,KAA2C,KAAK,UAAL,EAAtD;;AAEA,YAAA,YAAY,CAAC,IAAb,CAAkB,IAAlB;AAEA,YAAA,IAAI,CAAC,aAAL,CAAmB,IAAnB,EAAyB,GAAzB,EAA8B,WAAW,CAAC,CAAD,CAAzC,EAA8C,QAAQ,CAAC,CAAD,CAAtD;AACA,YAAA,IAAI,CAAC,WAAL,CAAiB,UAAjB,EAA6B,GAA7B;AACA,YAAA,IAAI,CAAC,WAAL,CAAiB,aAAjB,EAAgC,MAAhC;;AACA,iBAAK,IAAL,CAAU,IAAV;;AAEA,YAAA,IAAI,IAAI,WAAW,CAAC,CAAD,CAAnB;AACD;;AACD,UAAA,GAAG,IAAI,QAAQ,CAAC,CAAD,CAAf;AACA,UAAA,IAAI,GAAG,CAAP;AACD;;AACD,QAAA,QAAQ,CAAC,OAAT,CAAiB,UAAS,KAAT,EAAe;AAC9B,cAAI,YAAY,CAAC,OAAb,CAAqB,KAArB,MAAgC,CAAC,CAArC,EAAwC;AACtC,iBAAK,OAAL,CAAa,KAAb;AACD;AACF,SAJgB,CAIf,IAJe,CAIV,IAJU,CAAjB;AAMA,aAAK,SAAL,CAAe,SAAf;AACD,OAtIH;AAyIE,MAAA,kBAAkB,EAAG,4BACnB,QADmB,EACT,WADS,EAEnB,QAFmB,EAET,WAFS,EAIrB;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIF;AACE,eAAK,qBAAL,CAA2B,QAA3B;AACA,eAAK,qBAAL,CAA2B,WAA3B;AACA,eAAK,WAAL,CAAiB,QAAjB;AACA,eAAK,WAAL,CAAiB,WAAjB;AACD;AAGC,YAAI,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC,MAApB,GAA6B,CAA3C;AACA,YAAI,UAAU,GAAG,WAAW,GAAG,WAAW,CAAC,MAA1B,GAAmC,CAApD;AAEA,YAAI,OAAO,GAAG;AACZ,UAAA,QAAQ,EAAE,IAAI,CAAC,GAAL,CAAS,QAAT,EAAmB,KAAK,WAAL,EAAnB,CADE;AAEZ,UAAA,OAAO,EAAE,IAAI,CAAC,GAAL,CAAS,OAAT,EAAkB,KAAK,QAAvB,CAFG;AAGZ,UAAA,WAAW,EAAE,IAAI,CAAC,GAAL,CAAS,WAAT,EAAsB,KAAK,cAAL,EAAtB,CAHD;AAIZ,UAAA,UAAU,EAAE,IAAI,CAAC,GAAL,CAAS,UAAT,EAAqB,KAAK,WAA1B;AAJA,SAAd;AAOA,aAAK,WAAL,GAAmB,UAAnB;AACA,aAAK,QAAL,GAAgB,OAAhB;;AAEA,YACE,OAAO,CAAC,QAAR,GAAmB,OAAO,CAAC,OAA3B,IACA,OAAO,CAAC,WAAR,GAAsB,OAAO,CAAC,UAFhC,EAGE;AACA,iBAAO,KAAK,WAAL,CACL,QADK,EACK,WADL,EAEL,QAFK,EAEK,WAFL,CAAP;AAID,SAzCH,CA2CE;;;AACA,YAAI,QAAQ,GAAG,KAAK,YAAL,EAAf;;AACA,YAAI,UAAU,GAAG,KAAK,cAAL,GAAsB,MAAvC;AACA,YAAI,aAAa,GAAG,EAApB;AACA,YAAI,oBAAoB,GAAG,EAA3B;;AACA,aAAK,IAAI,GAAG,GAAC,QAAb,EAAuB,GAAG,IAAE,OAA5B,EAAqC,GAAG,EAAxC,EACA;AACE,UAAA,aAAa,CAAC,GAAD,CAAb,GAAqB,EAArB;;AACA,eAAK,IAAI,MAAM,GAAC,WAAhB,EAA6B,MAAM,IAAE,UAArC,EAAiD,MAAM,EAAvD,EACA;AACE,gBACE,GAAG,IAAI,OAAO,CAAC,QAAf,IACA,GAAG,IAAI,OAAO,CAAC,OADf,IAEA,MAAM,IAAI,OAAO,CAAC,WAFlB,IAGA,MAAM,IAAI,OAAO,CAAC,UAJpB,EAMA;AACE,kBAAI,CAAC,GAAG,MAAM,GAAG,KAAK,cAAL,EAAjB;AACA,kBAAI,CAAC,GAAG,GAAG,GAAG,KAAK,WAAL,EAAd;AACA,kBAAI,KAAK,GAAG,CAAC,GAAC,UAAF,GAAe,CAA3B;AACA,cAAA,aAAa,CAAC,GAAD,CAAb,CAAmB,MAAnB,IAA6B,QAAQ,CAAC,KAAD,CAArC;AACA,cAAA,oBAAoB,CAAC,KAAD,CAApB,GAA8B,IAA9B;AACD;AACF;AACF;;AAED,YAAI,YAAY,GAAG,KAAK,aAAxB,CArEF,CAuEE;;AACA,YAAI,QAAQ,GAAG,KAAK,YAAL,GAAoB,MAApB,EAAf;;AACA,aAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,QAAQ,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EACA;AACE,cAAI,CAAC,oBAAoB,CAAC,CAAD,CAAzB,EACA;AACE,gBAAI,KAAK,GAAG,QAAQ,CAAC,CAAD,CAApB;;AACA,gBAAI,KAAK,CAAC,WAAN,CAAkB,YAAlB,CAAJ,EAAqC;AACnC,mBAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAvB;AACD,aAFD,MAEO;AACL,mBAAK,sBAAL,CAA4B,KAA5B;;AACA,cAAA,YAAY,CAAC,cAAb,CAA4B,KAA5B;AACD;AACF;AACF;;AAGD,YAAI,GAAG,GAAG,CAAV;AACA,YAAI,IAAI,GAAG,CAAX;AACA,YAAI,YAAY,GAAG,EAAnB;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,QAAQ,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EACA;AACE,eAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,MAA5B,EAAoC,CAAC,EAArC,EACA;AACE,gBAAI,GAAG,GAAG,QAAQ,GAAG,CAArB;AACA,gBAAI,MAAM,GAAG,WAAW,GAAG,CAA3B;;AAEA,gBAAI,IAAI,GACN,aAAa,CAAC,GAAD,CAAb,CAAmB,MAAnB,KACA,YAAY,CAAC,aAAb,CAA2B,GAA3B,EAAgC,MAAhC,CADA,IAEA,KAAK,UAAL,EAHF;;AAKA,YAAA,YAAY,CAAC,IAAb,CAAkB,IAAlB;AAEA,YAAA,IAAI,CAAC,aAAL,CAAmB,IAAnB,EAAyB,GAAzB,EAA8B,WAAW,CAAC,CAAD,CAAzC,EAA8C,QAAQ,CAAC,CAAD,CAAtD;AACA,YAAA,IAAI,CAAC,WAAL,CAAiB,UAAjB,EAA6B,GAA7B;AACA,YAAA,IAAI,CAAC,WAAL,CAAiB,aAAjB,EAAgC,MAAhC;;AACA,iBAAK,IAAL,CAAU,IAAV;;AAEA,YAAA,IAAI,IAAI,WAAW,CAAC,CAAD,CAAnB;AACD;;AACD,UAAA,GAAG,IAAI,QAAQ,CAAC,CAAD,CAAf;AACA,UAAA,IAAI,GAAG,CAAP;AACD;;AACD,QAAA,QAAQ,CAAC,OAAT,CAAiB,UAAS,KAAT,EAAe;AAC9B,cAAI,YAAY,CAAC,OAAb,CAAqB,KAArB,MAAgC,CAAC,CAArC,EAAwC;AACtC,iBAAK,OAAL,CAAa,KAAb;AACD;AACF,SAJgB,CAIf,IAJe,CAIV,IAJU,CAAjB;AAMA,aAAK,SAAL,CAAe,SAAf;AACD;AAxQH,KA9DD;AAyUC,IAAA,QAAQ,EAAG,oBACX;AACE,UAAI,QAAQ,GAAG,KAAK,YAAL,EAAf;;AACA,WAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,QAAQ,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AACpC,QAAA,QAAQ,CAAC,CAAD,CAAR,CAAY,OAAZ;AACD;;AAED,WAAK,aAAL,GAAqB,KAAK,YAAL,GAAoB,IAAzC;AACD;AAjVF,GADA;AA1BA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,KAAb,CAAmB,UAAnB,CAA8B,aAA9B,GAA8C,aAA9C;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;AAIA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,gCAAnB,EACA;AACC,IAAA,OAAO,EACP;AACE;;;;;;;;;AASA,MAAA,aAAa,EAAG,uBAAS,IAAT,EAAe,MAAf,EAAuB,CAAE,CAV3C;;AAaE;;;;;;;AAOA,MAAA,IAAI,EAAG,cAAS,MAAT,EAAiB,CAAE,CApB5B;;AAuBE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,MAAT,EAAiB,MAAjB,EAAyB,CAAE,CA7B5C;;AAgCE;;;;;;AAMA,MAAA,UAAU,EAAG,oBAAS,MAAT,EAAiB,IAAjB,EAAuB,CAAE;AAtCxC;AAFD,GADA;AAvBA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,IAAb,CAAkB,WAAlB,CAA8B,aAA9B,GAA8C,aAA9C;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;AAGA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,mCAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MADlB;AAEC,IAAA,SAAS,EAAG,CAAC,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,IAAd,CAAmB,WAApB,CAFb;AAKC,IAAA,SAAS,EAAG,qBACZ;AACE;AAEA,WAAK,MAAL,GAAc,EAAd;AACD,KAVF;AAaC,IAAA,MAAM,EACN;AACE;AACA,iBAAY;AAFd,KAdD;AAoBC,IAAA,OAAO,EACP;AACE,MAAA,MAAM,EAAG,IADX;;AAIE;;;;;;AAMA,MAAA,aAAa,EAAG,yBAAW;AACzB,cAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACD,OAZH;AAeE;AACA,MAAA,UAAU,EAAG,oBAAS,MAAT,EAAiB,IAAjB,EAAuB;AAClC,cAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACD,OAlBH;AAqBE;AACA,MAAA,YAAY,EAAG,sBAAS,MAAT,EAAiB,MAAjB,EACf;AACE,YAAI,SAAS,GAAG,MAAM,CAAC,WAAP,CAAmB,aAAnB,CAAhB,CADF,CAGE;;AACA,YAAI,SAAJ,EACA;AACE,cAAI,SAAS,GAAG,MAAM,IAAI,EAA1B;;AACA,eAAK,IAAI,KAAT,IAAkB,SAAlB,EACA;AACE,gBAAI,CAAC,SAAS,CAAC,KAAD,CAAd,EAAuB;AACrB,cAAA,MAAM,CAAC,WAAP,CAAmB,KAAnB;AACD;AACF;AACF,SATD,MAWA;AACE,UAAA,SAAS,GAAG,EAAZ;AACD,SAjBH,CAmBE;;;AACA,YAAI,MAAJ,EACA;AACE,eAAK,IAAI,KAAT,IAAkB,MAAlB,EACA;AACE,gBAAI,CAAC,SAAS,CAAC,KAAf,EAAsB;AACpB,cAAA,MAAM,CAAC,QAAP,CAAgB,KAAhB;AACD;AACF;AACF;;AAED,QAAA,MAAM,CAAC,WAAP,CAAmB,aAAnB,EAAkC,MAAlC;AACD,OAtDH;AAyDE;AACA,MAAA,aAAa,EAAG,uBAAS,IAAT,EAAe,MAAf,EAChB;AACE,YAAI,MAAM,GAAG,KAAK,mBAAL,EAAb;;AACA,aAAK,YAAL,CAAkB,MAAlB,EAA0B,MAA1B;AACA,aAAK,UAAL,CAAgB,MAAhB,EAAwB,IAAxB;AACA,eAAO,MAAP;AACD,OAhEH;AAmEE;AACA,MAAA,IAAI,EAAG,cAAS,MAAT,EAAiB;AACtB,aAAK,MAAL,CAAY,IAAZ,CAAiB,MAAjB;AACD,OAtEH;;AAwEE;;;AAGA,MAAA,YAAY,EAAG,wBAAW;AACxB,YAAI,MAAM,GAAG,KAAK,MAAL,CAAY,GAAZ,EAAb;;AAEA,eAAM,MAAN,EACA;AACE,UAAA,MAAM,CAAC,OAAP;AACA,UAAA,MAAM,GAAG,KAAK,MAAL,CAAY,GAAZ,EAAT;AACD;AACF,OAnFH;;AAqFE;;;;;;AAMA,MAAA,mBAAmB,EAAG,+BACtB;AACE,YAAI,MAAM,GAAG,KAAK,MAAL,CAAY,KAAZ,EAAb;;AAEA,YAAI,MAAM,IAAI,IAAd,EACA;AACE,UAAA,MAAM,GAAG,KAAK,aAAL,EAAT;AACA,eAAK,aAAL,CAAmB,SAAnB,EAA8B,MAA9B;AACD;;AAED,eAAO,MAAP;AACD;AAtGH,KArBD;;AA8HC;;;;;AAMA,IAAA,QAAQ,EAAG,oBACX;AACE,WAAK,YAAL;;AACA,WAAK,MAAL,GAAc,IAAd;AACD;AAxIF,GADA;AAHA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,IAAb,CAAkB,cAAlB,CAAiC,aAAjC,GAAiD,aAAjD;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,+BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,IAAd,CAAmB,cAD7B;AAGC,IAAA,UAAU,EACV;AACE;;;;AAIA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAE,gBADT;AAEE,QAAA,IAAI,EAAE,IAFR;AAGE,QAAA,QAAQ,EAAE;AAHZ;AANF,KAJD;AAiBC,IAAA,OAAO,EACP;AACE;AACA,MAAA,cAAc,EAAG,wBAAS,KAAT,EAAgB,GAAhB,EAAqB;AACpC,aAAK,YAAL;AACD,OAJH;AAME;AACA,MAAA,aAAa,EAAG,yBAAW;AACzB,YAAI,QAAQ,GAAG,KAAK,WAAL,EAAf;;AAEA,YAAI,QAAQ,IAAI,IAAZ,IAAoB,QAAQ,CAAC,YAAT,IAAyB,IAAjD,EAAuD;AACrD,iBAAO,QAAQ,CAAC,YAAT,EAAP;AACD,SAFD,MAEO;AACL,iBAAO,IAAI,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAAf,EAAP;AACD;AACF,OAfH;AAiBE;AACA,MAAA,UAAU,EAAG,oBAAS,MAAT,EAAiB,IAAjB,EAAuB;AAClC,aAAK,IAAI,GAAT,IAAgB,IAAhB,EACA;AACE,cAAI,EAAE,CAAC,KAAH,CAAS,WAAT,CAAqB,MAAM,CAAC,WAA5B,EAAyC,GAAzC,CAAJ,EAAmD;AACjD,YAAA,EAAE,CAAC,IAAH,CAAQ,YAAR,CAAqB,YAArB,CAAkC,MAAlC,EAA0C,GAA1C,EAA+C,IAAI,CAAC,GAAD,CAAnD;AACD,WAFD,MAEO;AACL,kBAAM,IAAI,KAAJ,CAAU,iCAAiC,GAAjC,GAAuC,sBAAjD,CAAN;AACD;AACF;AACF;AA3BH;AAlBD,GADA;AAhDA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,IAAb,CAAkB,UAAlB,CAA6B,aAA7B,GAA6C,aAA7C;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;AAMA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,iBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MADlB;AAEC,IAAA,SAAS,EAAE,CAAE,EAAE,CAAC,IAAH,CAAQ,WAAV,CAFZ;;AAMC;;;;;;AAMA;;;;;;;;;AASA,IAAA,SAAS,EAAG,mBAAS,QAAT,EACZ;AACE;AAEA,WAAK,UAAL,GAAkB,EAAlB;AACA,WAAK,KAAL,GAAa,IAAb;;AAEA,UAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,aAAK,WAAL,CAAiB,QAAjB;AACD;;AAED,WAAK,WAAL;AACD,KAjCF;;AAoCC;;;;;AAMA,IAAA,MAAM,EACN;AACE;;;;AAIA,iBAAY;AALd,KA3CD;;AAqDC;;;;;AAMA,IAAA,UAAU,EACV;AACE;AACA,MAAA,OAAO,EACP;AACE,QAAA,IAAI,EAAG,IADT;AAEE,QAAA,KAAK,EAAG,SAFV;AAGE,QAAA,KAAK,EAAG,eAHV;AAIE,QAAA,KAAK,EAAG;AAJV,OAHF;;AAWE;AACA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,KAAK,EAAG,gBAFV;AAGE,QAAA,QAAQ,EAAG;AAHb,OAbF;;AAoBE;;;;AAIA,MAAA,UAAU,EACV;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT;AAzBF,KA5DD;;AA8FC;;;;;AAMA,IAAA,OAAO,EACP;AACE,MAAA,UAAU,EAAG,EADf;AAEE,MAAA,KAAK,EAAG,EAFV;;AAKE;;;;;;AAMA;;;;;AAKA,MAAA,OAAO,EAAG,iBAAS,MAAT,EAAiB;AACzB,aAAK,aAAL,CAAmB,SAAnB,EAA8B,MAA9B;AACD,OAlBH;;AAqBE;;;;;AAKA,MAAA,WAAW,EAAG,qBAAS,KAAT,EACd;AACE,YAAI,KAAK,UAAL,MAAqB,KAAK,iBAAL,CAAuB,KAAvB,CAAzB,EACA;AACE,cAAI,CAAC,KAAK,YAAL,EAAL,EAA0B;AACxB,iBAAK,OAAL,CAAa,KAAK,CAAC,SAAN,EAAb;AACD;;AACD,UAAA,KAAK,CAAC,IAAN;AACD;AACF,OAnCH;;AAsCE;;;;;AAKA,MAAA,YAAY,EAAG,sBAAS,KAAT,EACf;AACE,YAAI,KAAK,UAAL,MAAqB,KAAK,iBAAL,CAAuB,KAAvB,CAAzB,EACA;AACE,cAAI,KAAK,YAAL,EAAJ,EAAyB;AACvB,iBAAK,OAAL,CAAa,KAAK,CAAC,SAAN,EAAb;AACD;;AACD,UAAA,KAAK,CAAC,IAAN;AACD;AACF,OApDH;;AAwDE;;;;;AAOA;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB,GAAhB,EAChB;AACE,YAAI,KAAJ,EAAW;AACT,UAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,WAAtB,CAAkC,QAAQ,CAAC,eAA3C,EAA4D,SAA5D,EAAuE,KAAK,WAA5E,EAAyF,IAAzF;AACA,UAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,WAAtB,CAAkC,QAAQ,CAAC,eAA3C,EAA4D,UAA5D,EAAwE,KAAK,YAA7E,EAA2F,IAA3F;AACD,SAHD,MAGO;AACL,UAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,cAAtB,CAAqC,QAAQ,CAAC,eAA9C,EAA+D,SAA/D,EAA0E,KAAK,WAA/E,EAA4F,IAA5F;AACA,UAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,cAAtB,CAAqC,QAAQ,CAAC,eAA9C,EAA+D,UAA/D,EAA2E,KAAK,YAAhF,EAA8F,IAA9F;AACD;AACF,OAzEH;AA4EE;AACA,MAAA,cAAc,EAAG,wBAAS,KAAT,EAAgB,GAAhB,EACjB;AACE,YAAI,KAAJ,EACA;AACE;AACA,cAAI,KAAK,CAAC,MAAN,CAAa,OAAb,KAAyB,CAAC,CAA9B,EACA;AACE,gBAAI,GAAG,GAAG,8CAAV;AACA,iBAAK,KAAL,CAAW,GAAX;AACA,kBAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD;;AAED,eAAK,UAAL,GAAkB;AAAE,uBAAY,KAAd;AACE,qBAAY,KADd;AAEE,oBAAY,KAFd;AAGE,mBAAY;AAHd,WAAlB;AAIA,eAAK,KAAL,GAAa,IAAb,CAbF,CAeE;AACA;AACA;;AACA,cAAI,KAAJ;AACA,cAAI,CAAC,GAAG,EAAR;;AACA,iBAAO,KAAK,CAAC,MAAN,GAAe,CAAf,IAAoB,KAAK,IAAI,CAAC,CAArC,EACA;AACE;AACA,YAAA,KAAK,GAAG,KAAK,CAAC,MAAN,CAAa,OAAb,CAAR,CAFF,CAIE;AACA;;AACA,YAAA,CAAC,CAAC,IAAF,CAAQ,KAAK,CAAC,MAAN,IAAgB,CAAhB,IAAqB,KAAK,IAAI,CAAC,CAAhC,GAAqC,KAArC,GAA6C,KAAK,CAAC,SAAN,CAAgB,CAAhB,EAAmB,KAAnB,CAApD,EANF,CAQE;;AACA,YAAA,KAAK,GAAG,KAAK,CAAC,SAAN,CAAgB,KAAK,GAAG,CAAxB,CAAR;AACD;;AACD,cAAI,EAAE,GAAG,CAAC,CAAC,MAAX;;AAEA,eAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,EAAhB,EAAoB,CAAC,EAArB,EACA;AACE,gBAAI,UAAU,GAAG,KAAK,wBAAL,CAA8B,CAAC,CAAC,CAAD,CAA/B,CAAjB;;AAEA,oBAAO,UAAP;AAEE,mBAAK,SAAL;AACA,mBAAK,OAAL;AACA,mBAAK,MAAL;AACA,mBAAK,KAAL;AACE,qBAAK,UAAL,CAAgB,UAAhB,IAA8B,IAA9B;AACA;;AAEF,mBAAK,cAAL;AACE,oBAAI,GAAG,GAAG,0CAA0C,CAAC,CAAC,CAAD,CAArD;AACA,qBAAK,KAAL,CAAW,GAAX;AACA,sBAAM,GAAN;;AAEF;AACE,oBAAI,KAAK,KAAT,EACA;AACE,sBAAI,GAAG,GAAG,4CAAV;AACA,uBAAK,KAAL,CAAW,GAAX;AACA,wBAAM,GAAN;AACD;;AAED,qBAAK,KAAL,GAAa,UAAb;AAtBJ;AAwBD;AACF;;AAED,eAAO,IAAP;AACD,OAlJH;;AAuJE;;;;;;AAMA;;;;;;AAMA,MAAA,iBAAiB,EAAG,2BAAS,CAAT,EACpB;AACE,YAAI,GAAG,GAAG,KAAK,KAAf;;AAEA,YAAI,CAAC,GAAL,EACA;AACE;AACA,iBAAO,KAAP;AACD,SAPH,CASE;AACA;;;AACA,YACG,CAAC,KAAK,UAAL,CAAgB,KAAjB,IAA0B,CAAC,CAAC,cAAF,EAA3B,IACC,KAAK,UAAL,CAAgB,KAAhB,IAAyB,CAAC,CAAC,CAAC,cAAF,EAD3B,IAEC,CAAC,KAAK,UAAL,CAAgB,OAAjB,IAA4B,CAAC,CAAC,aAAF,EAF7B,IAGC,KAAK,UAAL,CAAgB,OAAhB,IAA2B,CAAC,CAAC,CAAC,aAAF,EAH7B,IAIC,CAAC,KAAK,UAAL,CAAgB,IAAjB,IAAyB,CAAC,CAAC,aAAF,EAJ1B,IAKC,KAAK,UAAL,CAAgB,IAAhB,IAAwB,CAAC,CAAC,CAAC,aAAF,EAL1B,IAMC,CAAC,KAAK,UAAL,CAAgB,GAAjB,IAAwB,CAAC,CAAC,YAAF,EANzB,IAOC,KAAK,UAAL,CAAgB,GAAhB,IAAuB,CAAC,CAAC,CAAC,YAAF,EAR3B,EASE;AACA,iBAAO,KAAP;AACD;;AAED,YAAI,GAAG,IAAI,CAAC,CAAC,gBAAF,EAAX,EAAiC;AAC/B,iBAAO,IAAP;AACD;;AAED,eAAO,KAAP;AACD,OAjMH;;AAoME;;;;;;AAMA;;;AAGA,MAAA,8BAA8B,EAC9B;AACE;AACA,QAAA,GAAG,EAAe,QAFpB;AAGE,QAAA,IAAI,EAAc,SAHpB;AAIE,QAAA,KAAK,EAAa,aAJpB;AAKE,QAAA,GAAG,EAAe,QALpB;AAME,QAAA,MAAM,EAAY,QANpB;AAOE,QAAA,QAAQ,EAAU,UAPpB;AAQE,QAAA,OAAO,EAAW,SARpB;AASE,QAAA,QAAQ,EAAU,GATpB;AAUE,QAAA,QAAQ,EAAU,GAVpB;AAWE,QAAA,QAAQ,EAAU,GAXpB;AAYE,QAAA,QAAQ,EAAU,GAZpB;AAaE,QAAA,QAAQ,EAAU,GAbpB;AAcE,QAAA,QAAQ,EAAU,GAdpB;AAeE,QAAA,QAAQ,EAAU,GAfpB;AAgBE,QAAA,QAAQ,EAAU,GAhBpB;AAiBE,QAAA,QAAQ,EAAU,GAjBpB;AAkBE,QAAA,QAAQ,EAAU,GAlBpB;AAmBE,QAAA,aAAa,EAAK,GAnBpB;AAoBE,QAAA,eAAe,EAAG,GApBpB;AAqBE,QAAA,YAAY,EAAM,GArBpB;AAsBE,QAAA,WAAW,EAAO;AAtBpB,OA9MF;;AAwOE;;;;;;AAMA,MAAA,wBAAwB,EAAG,kCAAS,OAAT,EAC3B;AACE,YAAI,MAAM,GAAG,EAAE,CAAC,KAAH,CAAS,IAAT,CAAc,QAA3B;AACA,YAAI,aAAa,GAAG,cAApB;;AAEA,YAAI,MAAM,CAAC,oBAAP,CAA4B,OAA5B,CAAJ,EAA0C;AACxC,iBAAO,OAAP;AACD;;AAED,YAAI,OAAO,CAAC,MAAR,IAAkB,CAAlB,IAAuB,OAAO,IAAI,GAAlC,IAAyC,OAAO,IAAI,GAAxD,EAA6D;AAC3D,iBAAO,OAAO,CAAC,WAAR,EAAP;AACD;;AAED,QAAA,OAAO,GAAG,OAAO,CAAC,WAAR,EAAV;AACA,YAAI,aAAa,GAAG,KAAK,8BAAL,CAAoC,OAApC,KAAgD,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,OAAf,CAAuB,OAAvB,CAApE;;AAEA,YAAI,MAAM,CAAC,oBAAP,CAA4B,aAA5B,CAAJ,EAAgD;AAC9C,iBAAO,aAAP;AACD,SAFD,MAEO;AACL,iBAAO,cAAP;AACD;AACF,OAnQH;;AAwQE;;;;;;AAMA;;;;;AAKA,MAAA,QAAQ,EAAG,oBACX;AACE,YAAI,GAAG,GAAG,KAAK,KAAf;AAEA,YAAI,GAAG,GAAG,EAAV;;AAEA,aAAK,IAAI,QAAT,IAAqB,KAAK,UAA1B,EAAsC;AACpC;AACA;AACA;AACA,cAAI,KAAK,UAAL,CAAgB,QAAhB,CAAJ,EACA;AACE,YAAA,GAAG,CAAC,IAAJ,CAAS,EAAE,CAAC,MAAH,CAAU,GAAV,CAAc,UAAd,CAAyB,OAAzB,EAAkC,QAAlC,CAAT;AACD;AACF;;AAED,YAAI,GAAJ,EAAS;AACP,UAAA,GAAG,CAAC,IAAJ,CAAS,EAAE,CAAC,MAAH,CAAU,GAAV,CAAc,UAAd,CAAyB,OAAzB,EAAkC,GAAlC,CAAT;AACD;;AAED,eAAO,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAP;AACD;AAxSH,KArGD;;AAmZC;;;;;AAMA,IAAA,QAAQ,EAAG,oBACX;AACE;AACA,WAAK,UAAL,CAAgB,KAAhB;AAEA,WAAK,UAAL,GAAkB,KAAK,KAAL,GAAa,IAA/B;AACD;AA/ZF,GADA;AA1BA,EAAA,EAAC,CAAC,GAAF,CAAM,QAAN,CAAe,aAAf,GAA+B,aAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;;AAGA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,cAAnB,EACA;AACC;;;;;AAMA,IAAA,OAAO,EACP;AACE;AACA,MAAA,OAAO,EACP;AACE,QAAA,IAAI,EAAG,CADT;AAEE,QAAA,QAAQ,EAAG,CAFb;AAGE,QAAA,MAAM,EAAG,CAHX;AAIE,QAAA,QAAQ,EAAG,CAJb;AAKE,QAAA,KAAK,EAAG,CALV;AAME,QAAA,QAAQ,EAAG,CANb;AAOE,QAAA,MAAM,EAAG,CAPX;AAQE,QAAA,MAAM,EAAG,CARX;AASE,QAAA,KAAK,EAAG,CATV;AAUE,QAAA,IAAI,EAAG,CAVT;AAWE,QAAA,MAAM,EAAG,CAXX;AAYE,QAAA,KAAK,EAAG,CAZV;AAaE,QAAA,MAAM,EAAG;AAbX,OAHF;;AAoBE;;;;;;;;;;;;;;;AAeA,MAAA,MAAM,EAAG,gBAAS,IAAT,EAAe,UAAf,EAA2B,GAA3B,EACT;AAC2C;AACvC,UAAA,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,cAAf,CAA8B,IAA9B,EAAoC,KAAK,OAAzC,EAAkD,yBAAlD;AACD,SAHH,CAKE;;AACA,YAAI,UAAU,GAAG,UAAU,GAAG,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,KAAf,CAAqB,UAArB,CAAH,GAAsC,EAAjE;AAEA,YAAI,GAAJ;;AAEA,YAAI,IAAI,KAAK,UAAT,IAAuB,IAAI,KAAK,QAApC,EACA;AACE,UAAA,GAAG,GAAG,IAAN;AACD,SAHD,MAKA;AACE,UAAA,GAAG,GAAG,OAAN;AACA,UAAA,UAAU,CAAC,IAAX,GAAkB,IAAlB;AACD;;AAED,eAAO,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,MAAf,CAAsB,GAAtB,EAA2B,UAA3B,EAAuC,GAAvC,CAAP;AACD,OAzDH;;AA4DE;;;;;;;;;;;;;;;;AAgBA,MAAA,QAAQ,EAAG,kBAAS,OAAT,EAAkB,KAAlB,EACX;AACE,YAAI,GAAG,GAAG,OAAO,CAAC,QAAR,CAAiB,WAAjB,EAAV;AACA,YAAI,IAAI,GAAG,OAAO,CAAC,IAAnB;AACA,YAAI,IAAI,GAAG,EAAE,CAAC,IAAH,CAAQ,IAAnB;;AAEA,YAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAA,KAAK,IAAI,EAAT;AACD;;AAED,YAAK,IAAI,KAAK,UAAT,IAAuB,IAAI,KAAK,OAArC,EACA;AACE,cAAI,IAAI,CAAC,OAAL,CAAa,KAAb,CAAJ,EAAyB;AACvB,YAAA,OAAO,CAAC,OAAR,GAAkB,KAAK,CAAC,QAAN,CAAe,OAAO,CAAC,KAAvB,CAAlB;AACD,WAFD,MAEO;AACL,YAAA,OAAO,CAAC,OAAR,GAAkB,OAAO,CAAC,KAAR,IAAiB,KAAnC;AACD;AACF,SAPD,MAQK,IAAI,GAAG,KAAK,QAAZ,EACL;AACE,cAAI,OAAO,GAAG,IAAI,CAAC,OAAL,CAAa,KAAb,CAAd;AACA,cAAI,OAAO,GAAG,OAAO,CAAC,OAAtB;AACA,cAAI,KAAJ,EAAW,MAAX;;AAEA,eAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,OAAO,CAAC,MAAxB,EAAgC,CAAC,GAAC,CAAlC,EAAqC,CAAC,EAAtC,EACA;AACE,YAAA,KAAK,GAAG,OAAO,CAAC,CAAD,CAAf;AACA,YAAA,MAAM,GAAG,KAAK,CAAC,YAAN,CAAmB,OAAnB,CAAT;;AACA,gBAAI,MAAM,IAAI,IAAd,EAAoB;AAClB,cAAA,MAAM,GAAG,KAAK,CAAC,IAAf;AACD;;AAED,YAAA,KAAK,CAAC,QAAN,GAAiB,OAAO,GACtB,KAAK,CAAC,QAAN,CAAe,MAAf,CADsB,GACG,KAAK,IAAI,MADpC;AAED;;AAED,cAAI,OAAO,IAAI,KAAK,CAAC,MAAN,IAAgB,CAA/B,EAAkC;AAChC,YAAA,OAAO,CAAC,aAAR,GAAwB,CAAC,CAAzB;AACD;AACF,SArBI,MAsBA,IAAI,CAAC,IAAI,KAAK,MAAT,IAAmB,IAAI,KAAK,UAA7B,KACN,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,aAAxB,KAA0C,QADxC,EAEL;AACE;AACA;AACA;AACA,UAAA,OAAO,CAAC,YAAR,GAAuB,IAAvB;AACA,UAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AACA,UAAA,OAAO,CAAC,YAAR,GAAuB,IAAvB;AACD,SATI,MASE;AACL,UAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AACD;AACF,OAhIH;;AAmIE;;;;;;;;;;;;AAYA,MAAA,QAAQ,EAAG,kBAAS,OAAT,EACX;AACE,YAAI,GAAG,GAAG,OAAO,CAAC,QAAR,CAAiB,WAAjB,EAAV;;AAEA,YAAI,GAAG,KAAK,QAAZ,EAAsB;AACpB,iBAAO,CAAC,OAAO,CAAC,UAAR,CAAmB,KAAnB,IAA4B,EAA7B,EAAiC,SAAjC,GAA6C,OAAO,CAAC,KAArD,GAA6D,OAAO,CAAC,IAA5E;AACD;;AAED,YAAI,GAAG,KAAK,QAAZ,EACA;AACE,cAAI,KAAK,GAAG,OAAO,CAAC,aAApB,CADF,CAGE;;AACA,cAAI,KAAK,GAAG,CAAZ,EAAe;AACb,mBAAO,IAAP;AACD;;AAED,cAAI,MAAM,GAAG,EAAb;AACA,cAAI,OAAO,GAAG,OAAO,CAAC,OAAtB;AACA,cAAI,GAAG,GAAG,OAAO,CAAC,IAAR,IAAgB,YAA1B;AACA,cAAI,KAAK,GAAG,EAAE,CAAC,GAAH,CAAO,KAAnB;AACA,cAAI,KAAJ,CAZF,CAcE;;AACA,eAAK,IAAI,CAAC,GAAC,GAAG,GAAG,KAAH,GAAW,CAApB,EAAuB,GAAG,GAAC,GAAG,GAAG,KAAK,GAAC,CAAT,GAAa,OAAO,CAAC,MAAxD,EAAgE,CAAC,GAAC,GAAlE,EAAuE,CAAC,EAAxE,EACA;AACE,gBAAI,MAAM,GAAG,OAAO,CAAC,CAAD,CAApB;;AAEA,gBAAI,MAAM,CAAC,QAAX,EACA;AACE;AACA,cAAA,KAAK,GAAG,KAAK,CAAC,QAAN,CAAe,MAAf,CAAR,CAFF,CAIE;;AACA,kBAAI,GAAJ,EAAS;AACP,uBAAO,KAAP;AACD,eAPH,CASE;;;AACA,cAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACD;AACF;;AAED,iBAAO,MAAP;AACD,SApCD,MAsCA;AACE,iBAAO,CAAC,OAAO,CAAC,KAAR,IAAiB,EAAlB,EAAsB,OAAtB,CAA8B,KAA9B,EAAqC,EAArC,CAAP;AACD;AACF,OAhMH;;AAmME;;;;;;;;;AASA,MAAA,OAAO,EAAG,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,MAApB,CAA2B,aAA3B,EACV;AACE,kBAAW,gBAAS,OAAT,EAAkB,IAAlB,EAAwB;AACjC,cAAI,SAAS,GAAG,IAAI,GAAG,MAAH,GAAY,KAAhC,CADiC,CAGjC;AACA;;AACA,cAAI,UAAU,GAAG,IAAI,GAAG,MAAH,GAAY,EAAjC;AAEA,UAAA,OAAO,CAAC,IAAR,GAAe,SAAf;AACA,UAAA,OAAO,CAAC,KAAR,CAAc,SAAd,GAA0B,UAA1B;AACD,SAVH;AAYE,iBAAU,eAAS,OAAT,EAAkB,IAAlB,EACV;AACE,cAAI,SAAS,GAAG,IAAI,GAAG,MAAH,GAAY,KAAhC;AACA,cAAI,UAAU,GAAG,IAAI,GAAG,EAAH,GAAQ,MAA7B;AAEA,UAAA,OAAO,CAAC,YAAR,CAAqB,MAArB,EAA6B,SAA7B;AACA,UAAA,OAAO,CAAC,KAAR,CAAc,QAAd,GAAyB,UAAzB;AACD,SAnBH;AAqBE,kBAAW,gBAAS,OAAT,EAAkB,IAAlB,EACX;AACE,cAAI,SAAS,GAAG,IAAI,GAAG,MAAH,GAAY,KAAhC;AACA,cAAI,UAAU,GAAG,IAAI,GAAG,EAAH,GAAQ,MAA7B;AAEA,UAAA,OAAO,CAAC,YAAR,CAAqB,MAArB,EAA6B,SAA7B;AACA,UAAA,OAAO,CAAC,KAAR,CAAc,QAAd,GAAyB,UAAzB;AACD,SA5BH;AA8BE,mBAAY,kBAAS,OAAT,EAAkB,IAAlB,EAAwB;AAClC,UAAA,OAAO,CAAC,KAAR,CAAc,UAAd,GAA2B,IAAI,GAAG,QAAH,GAAc,QAA7C;AACD;AAhCH,OADU;AA5MZ;AARD,GADA;AApCA,EAAA,EAAC,CAAC,GAAF,CAAM,KAAN,CAAY,aAAZ,GAA4B,aAA5B;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;AAcA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,4BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MADlB;AAEC,IAAA,SAAS,EAAG,CAAE,EAAE,CAAC,IAAH,CAAQ,WAAV,CAFb;AAIC,IAAA,SAAS,EAAG,qBACZ;AACE;AAEA,WAAK,OAAL,GAAe,IAAI,EAAE,CAAC,KAAH,CAAS,KAAb,CAAmB,KAAK,WAAL,EAAnB,CAAf;;AACA,WAAK,OAAL,CAAa,WAAb,CAAyB,UAAzB,EAAqC,KAAK,WAA1C,EAAuD,IAAvD;AACD,KAVF;AAaC,IAAA,MAAM,EACN;AACE;AACA,kBAAa;AAFf,KAdD;AAoBC,IAAA,UAAU,EACV;AACE;;;;AAIA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV,OANF;;AAWE;;;;;AAKA,MAAA,aAAa,EACb;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV,OAjBF;;AAsBE;AACA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV,OAxBF;;AA6BE;AACA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV;AA/BF,KArBD;AA2DC,IAAA,OAAO,EACP;AACE,MAAA,OAAO,EAAG,IADZ;AAEE,MAAA,iBAAiB,EAAG,IAFtB;;AAIE;;;AAGA,MAAA,KAAK,EAAG,iBACR;AACE,aAAK,OAAL,CAAa,WAAb,CAAyB,KAAK,gBAAL,EAAzB;;AACA,aAAK,OAAL,CAAa,KAAb;AACD,OAXH;;AAcE;;;AAGA,MAAA,IAAI,EAAG,gBACP;AACE,aAAK,OAAL,CAAa,IAAb;;AACA,aAAK,iBAAL,GAAyB,IAAzB;AACD,OArBH;;AAwBE;;;AAGA,MAAA,WAAW,EAAG,uBACd;AACE,aAAK,OAAL,CAAa,IAAb;;AAEA,YAAI,KAAK,iBAAL,IAA0B,IAA9B,EAAoC;AAClC,eAAK,iBAAL,GAAyB,KAAK,WAAL,EAAzB;AACD;;AAED,aAAK,iBAAL,GAAyB,IAAI,CAAC,GAAL,CACvB,KAAK,UAAL,EADuB,EAEvB,KAAK,iBAAL,GAAyB,KAAK,WAAL,EAFF,CAAzB;;AAKA,aAAK,OAAL,CAAa,WAAb,CAAyB,KAAK,iBAA9B;;AACA,aAAK,OAAL,CAAa,KAAb;;AAEA,aAAK,SAAL,CAAe,UAAf;AACD;AA5CH,KA5DD;AA4GC,IAAA,QAAQ,EAAG,oBAAW;AACpB,WAAK,eAAL,CAAqB,SAArB;AACD;AA9GF,GADA;AAhCA,EAAA,EAAC,CAAC,KAAF,CAAQ,iBAAR,CAA0B,aAA1B,GAA0C,aAA1C;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;AAMA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,sBAAnB,EACA;AACC,IAAA,OAAO,EACP;AACE;;;;;;;AAOA,MAAA,MAAM,EAAG,gBAAS,GAAT,EAAc,kBAAd,EACT;AACE,YAAI,MAAJ;AAAA,YAAY,MAAM,GAAG,EAArB;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,GAAG,CAAC,MAApB,EAA4B,CAAC,GAAC,CAA9B,EAAiC,CAAC,EAAlC,EACA;AACE,cAAI,GAAG,GAAG,GAAG,CAAC,MAAJ,CAAW,CAAX,CAAV;AACA,cAAI,IAAI,GAAG,GAAG,CAAC,UAAJ,CAAe,CAAf,CAAX;;AAEA,cAAI,kBAAkB,CAAC,IAAD,CAAtB,EAA8B;AAC5B,YAAA,MAAM,GAAG,MAAM,kBAAkB,CAAC,IAAD,CAAxB,GAAiC,GAA1C;AACD,WAFD,MAIA;AACE,gBAAI,IAAI,GAAG,IAAX,EAAiB;AACf,cAAA,MAAM,GAAG,OAAO,IAAP,GAAc,GAAvB;AACD,aAFD,MAEO;AACL,cAAA,MAAM,GAAG,GAAT;AACD;AACF;;AAED,UAAA,MAAM,IAAI,MAAV;AACD;;AAED,eAAO,MAAP;AACD,OAjCH;;AAoCE;;;;;;;AAOA,MAAA,QAAQ,EAAG,kBAAS,GAAT,EAAc,kBAAd,EACX;AACE,eAAO,GAAG,CAAC,OAAJ,CAAY,YAAZ,EAA0B,UAAS,MAAT,EACjC;AACE,cAAI,GAAG,GAAG,MAAV;AACA,cAAI,MAAM,GAAG,MAAM,CAAC,SAAP,CAAiB,CAAjB,EAAoB,MAAM,CAAC,MAAP,GAAgB,CAApC,CAAb;AACA,cAAI,IAAI,GAAG,kBAAkB,CAAC,MAAD,CAA7B;;AAEA,cAAI,IAAJ,EAAU;AACR,YAAA,GAAG,GAAG,MAAM,CAAC,YAAP,CAAoB,IAApB,CAAN;AACD,WAFD,MAIA;AACE,gBAAI,MAAM,CAAC,MAAP,CAAc,CAAd,KAAoB,GAAxB,EACA;AACE,kBAAI,MAAM,CAAC,MAAP,CAAc,CAAd,EAAiB,WAAjB,MAAkC,GAAtC,EACA;AACE,gBAAA,IAAI,GAAG,MAAM,CAAC,SAAP,CAAiB,CAAjB,CAAP,CADF,CAGE;;AACA,oBAAI,IAAI,CAAC,KAAL,CAAW,kBAAX,CAAJ,EAAoC;AAClC,kBAAA,GAAG,GAAG,MAAM,CAAC,YAAP,CAAoB,QAAQ,CAAC,IAAD,EAAO,EAAP,CAA5B,CAAN;AACD;AACF,eARD,MAUA;AACE,gBAAA,IAAI,GAAG,MAAM,CAAC,SAAP,CAAiB,CAAjB,CAAP,CADF,CAGE;;AACA,oBAAI,IAAI,CAAC,KAAL,CAAW,SAAX,CAAJ,EAA2B;AACzB,kBAAA,GAAG,GAAG,MAAM,CAAC,YAAP,CAAoB,QAAQ,CAAC,IAAD,EAAO,EAAP,CAA5B,CAAN;AACD;AACF;AACF;AACF;;AAED,iBAAO,GAAP;AACD,SAnCM,CAAP;AAoCD;AAjFH;AAFD,GADA;AAxBA,EAAA,EAAC,CAAC,IAAF,CAAO,YAAP,CAAoB,aAApB,GAAoC,aAApC;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAiBA;;;;;AAKA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,qCAAnB,EACA;AACC;;;;;AAMA,IAAA,OAAO,EACP;AACE;;;;;AAKA,MAAA,QAAQ,EAAE,oBAAW,CAAE,CANzB;;AAQE;;;;;;AAMA,MAAA,gBAAgB,EAAG,0BAAS,IAAT,EAAe,CAAE;AAdtC;AARD,GADA;AAtBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,wBAAV,CAAmC,aAAnC,GAAmD,aAAnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;;;AAIA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,eAAf,EACA;AACC;;;;;AAMA,IAAA,OAAO,EACP;AACE;;;;;;;;;;AAUA,MAAA,UAAU,EAAG,oBAAS,IAAT,EAAe,aAAf,EAA8B,MAA9B,EACb;AAC2C;AACvC,UAAA,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,aAAf,CAA6B,IAA7B,EAAmC,CAAC,OAAD,EAAU,MAAV,CAAnC;AACD;AAED,YAAI,GAAG,GAAG,SAAS,IAAT,GAAgB,GAAhB,GAAsB,aAAhC,CALF,CAME;;AACA,YAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,SAAxB,KAAsC,KAAtC,IAA+C,aAAa,IAAI,SAApE,EAA+E;AAC7E,UAAA,GAAG,IAAI,MAAP;AACD;;AACD,YAAI,YAAY,GAAG,EAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,WAAlB,GAAgC,SAAhC,CAA0C,GAA1C,EAA+C,EAA/C,EAAmD,MAAnD,CAAnB;;AAEA,YAAI,YAAY,IAAI,GAApB,EAAyB;AACvB,iBAAO,EAAE,CAAC,MAAH,CAAU,GAAV,CAAc,SAAd,CAAwB,GAAxB,KAAgC,aAAvC;AACD,SAFD,MAEO;AACL,iBAAO,YAAP;AACD;AACF;AA7BH,KARD;;AAyCC;;;;;AAMA,IAAA,KAAK,EAAG,eAAS,OAAT,EACR;AACE,UAAI,QAAQ,GAAG,EAAf;AACA,UAAI,OAAO,GAAG,EAAE,CAAC,MAAH,CAAU,OAAxB,CAFF,CAIE;;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,qBAAf,CAAD,CAAR,GAAkD,WAAlD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,eAAf,CAAD,CAAR,GAA4C,KAA5C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,OAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,OAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,OAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,mBAAf,CAAD,CAAR,GAAgD,MAAhD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,uBAAf,CAAD,CAAR,GAAoD,MAApD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,eAAf,CAAD,CAAR,GAA4C,KAA5C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,oBAAf,CAAD,CAAR,GAAiD,MAAjD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,MAA7C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,kBAAf,CAAD,CAAR,GAA+C,KAA/C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,MAA7C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,cAAf,CAAD,CAAR,GAA2C,IAA3C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,OAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,MAA7C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,kBAAf,CAAD,CAAR,GAA+C,MAA/C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,oBAAf,CAAD,CAAR,GAAiD,MAAjD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,eAAf,CAAD,CAAR,GAA4C,KAA5C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,MAA7C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,kBAAf,CAAD,CAAR,GAA+C,KAA/C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,kBAAf,CAAD,CAAR,GAA+C,KAA/C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,mBAAf,CAAD,CAAR,GAAgD,KAAhD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,uBAAf,CAAD,CAAR,GAAoD,OAApD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,kBAAf,CAAD,CAAR,GAA+C,QAA/C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,OAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,eAAf,CAAD,CAAR,GAA4C,KAA5C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,MAA7C,CA/BF,CAiCE;;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,oBAAf,CAAD,CAAR,GAAiD,WAAjD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,cAAf,CAAD,CAAR,GAA2C,WAA3C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,OAA7C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,OAA7C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,OAA7C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,kBAAf,CAAD,CAAR,GAA+C,SAA/C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,sBAAf,CAAD,CAAR,GAAmD,SAAnD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,cAAf,CAAD,CAAR,GAA2C,KAA3C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,mBAAf,CAAD,CAAR,GAAgD,UAAhD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,eAAf,CAAD,CAAR,GAA4C,MAA5C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,QAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,eAAf,CAAD,CAAR,GAA4C,MAA5C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,aAAf,CAAD,CAAR,GAA0C,IAA1C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,OAA7C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,eAAf,CAAD,CAAR,GAA4C,MAA5C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,QAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,mBAAf,CAAD,CAAR,GAAgD,UAAhD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,cAAf,CAAD,CAAR,GAA2C,KAA3C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,eAAf,CAAD,CAAR,GAA4C,MAA5C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,QAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,QAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,kBAAf,CAAD,CAAR,GAA+C,SAA/C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,sBAAf,CAAD,CAAR,GAAmD,aAAnD;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,iBAAf,CAAD,CAAR,GAA8C,QAA9C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAAD,CAAR,GAA6C,OAA7C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,cAAf,CAAD,CAAR,GAA2C,KAA3C;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,MAAR,CAAe,eAAf,CAAD,CAAR,GAA4C,MAA5C,CA5DF,CA8DE;;AACA,MAAA,OAAO,CAAC,SAAR,GAAoB,QAApB;AACD;AAhHF,GADA;AAxBA,EAAA,EAAC,CAAC,MAAF,CAAS,GAAT,CAAa,aAAb,GAA6B,aAA7B",
  "file": "build-output/testtapper/part-boot-bundle-28.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The Slider widget provides a vertical or horizontal slider.\n *\n * The Slider is the classic widget for controlling a bounded value.\n * It lets the user move a slider handle along a horizontal or vertical\n * groove and translates the handle's position into an integer value\n * within the defined range.\n *\n * The Slider has very few of its own functions.\n * The most useful functions are slideTo() to set the slider directly to some\n * value; setSingleStep(), setPageStep() to set the steps; and setMinimum()\n * and setMaximum() to define the range of the slider.\n *\n * A slider accepts focus on Tab and provides both a mouse wheel and\n * a keyboard interface. The keyboard interface is the following:\n *\n * * Left/Right move a horizontal slider by one single step.\n * * Up/Down move a vertical slider by one single step.\n * * PageUp moves up one page.\n * * PageDown moves down one page.\n * * Home moves to the start (minimum).\n * * End moves to the end (maximum).\n *\n * Here are the main properties of the class:\n *\n * # <code>value</code>: The bounded integer that {@link qx.ui.form.INumberForm}\n * maintains.\n * # <code>minimum</code>: The lowest possible value.\n * # <code>maximum</code>: The highest possible value.\n * # <code>singleStep</code>: The smaller of two natural steps that an abstract\n * sliders provides and typically corresponds to the user pressing an arrow key.\n * # <code>pageStep</code>: The larger of two natural steps that an abstract\n * slider provides and typically corresponds to the user pressing PageUp or\n * PageDown.\n *\n * @childControl knob {qx.ui.core.Widget} knob to set the value of the slider\n */\nqx.Class.define(\"qx.ui.form.Slider\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [\n    qx.ui.form.IForm,\n    qx.ui.form.INumberForm,\n    qx.ui.form.IRange\n  ],\n  include : [qx.ui.form.MForm],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param orientation {String?\"horizontal\"} Configure the\n   * {@link #orientation} property\n   */\n  construct : function(orientation)\n  {\n    this.base(arguments);\n\n    // Force canvas layout\n    this._setLayout(new qx.ui.layout.Canvas());\n\n    // Add listeners\n    this.addListener(\"keypress\", this._onKeyPress);\n    this.addListener(\"roll\", this._onRoll);\n    this.addListener(\"pointerdown\", this._onPointerDown);\n    this.addListener(\"pointerup\", this._onPointerUp);\n    this.addListener(\"losecapture\", this._onPointerUp);\n    this.addListener(\"resize\", this._onUpdate);\n\n    // Stop events\n    this.addListener(\"contextmenu\", this._onStopEvent);\n    this.addListener(\"tap\", this._onStopEvent);\n    this.addListener(\"dbltap\", this._onStopEvent);\n\n    // Initialize orientation\n    if (orientation != null) {\n      this.setOrientation(orientation);\n    } else {\n      this.initOrientation();\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events : {\n    /**\n     * Change event for the value.\n     */\n    changeValue: 'qx.event.type.Data',\n\n    /** Fired as soon as the slide animation ended. */\n    slideAnimationEnd: 'qx.event.type.Event'\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"slider\"\n    },\n\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    /** Whether the slider is horizontal or vertical. */\n    orientation :\n    {\n      check : [ \"horizontal\", \"vertical\" ],\n      init : \"horizontal\",\n      apply : \"_applyOrientation\"\n    },\n\n\n    /**\n     * The current slider value.\n     *\n     * Strictly validates according to {@link #minimum} and {@link #maximum}.\n     * Do not apply any value correction to the incoming value. If you depend\n     * on this, please use {@link #slideTo} instead.\n     */\n    value :\n    {\n      check : \"typeof value==='number'&&value>=this.getMinimum()&&value<=this.getMaximum()\",\n      init : 0,\n      apply : \"_applyValue\",\n      nullable: true\n    },\n\n\n    /**\n     * The minimum slider value (may be negative). This value must be smaller\n     * than {@link #maximum}.\n     */\n    minimum :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyMinimum\",\n      event: \"changeMinimum\"\n    },\n\n\n    /**\n     * The maximum slider value (may be negative). This value must be larger\n     * than {@link #minimum}.\n     */\n    maximum :\n    {\n      check : \"Integer\",\n      init : 100,\n      apply : \"_applyMaximum\",\n      event : \"changeMaximum\"\n    },\n\n\n    /**\n     * The amount to increment on each event. Typically corresponds\n     * to the user pressing an arrow key.\n     */\n    singleStep :\n    {\n      check : \"Integer\",\n      init : 1\n    },\n\n\n    /**\n     * The amount to increment on each event. Typically corresponds\n     * to the user pressing <code>PageUp</code> or <code>PageDown</code>.\n     */\n    pageStep :\n    {\n      check : \"Integer\",\n      init : 10\n    },\n\n\n    /**\n     * Factor to apply to the width/height of the knob in relation\n     * to the dimension of the underlying area.\n     */\n    knobFactor :\n    {\n      check : \"Number\",\n      apply : \"_applyKnobFactor\",\n      nullable : true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __sliderLocation : null,\n    __knobLocation : null,\n    __knobSize : null,\n    __dragMode : null,\n    __dragOffset : null,\n    __trackingMode : null,\n    __trackingDirection : null,\n    __trackingEnd : null,\n    __timer : null,\n\n    // event delay stuff during drag\n    __dragTimer: null,\n    __lastValueEvent: null,\n    __dragValue: null,\n\n    __scrollAnimationframe : null,\n\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      invalid : true\n    },\n\n\n    // overridden\n    renderLayout : function(left, top, width, height) {\n      this.base(arguments, left, top, width, height);\n      // make sure the layout engine does not override the knob position\n      this._updateKnobPosition();\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"knob\":\n          control = new qx.ui.core.Widget();\n\n          control.addListener(\"resize\", this._onUpdate, this);\n          control.addListener(\"pointerover\", this._onPointerOver);\n          control.addListener(\"pointerout\", this._onPointerOut);\n          this._add(control);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for pointerover events at the knob child control.\n     *\n     * Adds the 'hovered' state\n     *\n     * @param e {qx.event.type.Pointer} Incoming pointer event\n     */\n    _onPointerOver : function(e) {\n      this.addState(\"hovered\");\n    },\n\n\n    /**\n     * Event handler for pointerout events at the knob child control.\n     *\n     * Removes the 'hovered' state\n     *\n     * @param e {qx.event.type.Pointer} Incoming pointer event\n     */\n    _onPointerOut : function(e) {\n      this.removeState(\"hovered\");\n    },\n\n\n    /**\n     * Listener of roll event\n     *\n     * @param e {qx.event.type.Roll} Incoming event object\n     */\n    _onRoll : function(e)\n    {\n      // only wheel\n      if (e.getPointerType() != \"wheel\") {\n        return;\n      }\n\n      var axis = this.getOrientation() === \"horizontal\" ? \"x\" : \"y\";\n      var delta = e.getDelta()[axis];\n\n      var direction =  delta > 0 ? 1 : delta < 0 ? -1 : 0;\n      this.slideBy(direction * this.getSingleStep());\n\n      e.stop();\n    },\n\n\n    /**\n     * Event handler for keypress events.\n     *\n     * Adds support for arrow keys, page up, page down, home and end keys.\n     *\n     * @param e {qx.event.type.KeySequence} Incoming keypress event\n     */\n    _onKeyPress : function(e)\n    {\n      var isHorizontal = this.getOrientation() === \"horizontal\";\n      var backward = isHorizontal ? \"Left\" : \"Up\";\n      var forward = isHorizontal ? \"Right\" : \"Down\";\n\n      switch(e.getKeyIdentifier())\n      {\n        case forward:\n          this.slideForward();\n          break;\n\n        case backward:\n          this.slideBack();\n          break;\n\n        case \"PageDown\":\n          this.slidePageForward(100);\n          break;\n\n        case \"PageUp\":\n          this.slidePageBack(100);\n          break;\n\n        case \"Home\":\n          this.slideToBegin(200);\n          break;\n\n        case \"End\":\n          this.slideToEnd(200);\n          break;\n\n        default:\n          return;\n      }\n\n      // Stop processed events\n      e.stop();\n    },\n\n\n    /**\n     * Listener of pointerdown event. Initializes drag or tracking mode.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onPointerDown : function(e)\n    {\n      // this can happen if the user releases the button while dragging outside\n      // of the browser viewport\n      if (this.__dragMode) {\n        return;\n      }\n\n      var isHorizontal = this.__isHorizontal;\n      var knob = this.getChildControl(\"knob\");\n\n      var locationProperty = isHorizontal ? \"left\" : \"top\";\n\n      var cursorLocation = isHorizontal ? e.getDocumentLeft() : e.getDocumentTop();\n\n      var decorator = this.getDecorator();\n      decorator = qx.theme.manager.Decoration.getInstance().resolve(decorator);\n      if (isHorizontal) {\n        var decoratorPadding = decorator ? decorator.getInsets().left : 0;\n        var padding = (this.getPaddingLeft() || 0) + decoratorPadding;\n      } else {\n        var decoratorPadding = decorator ? decorator.getInsets().top : 0;\n        var padding = (this.getPaddingTop() || 0) + decoratorPadding;\n      }\n\n      var sliderLocation = this.__sliderLocation = qx.bom.element.Location.get(this.getContentElement().getDomElement())[locationProperty];\n      sliderLocation += padding;\n\n      var knobLocation = this.__knobLocation = qx.bom.element.Location.get(knob.getContentElement().getDomElement())[locationProperty];\n\n      if (e.getTarget() === knob)\n      {\n        // Switch into drag mode\n        this.__dragMode = true;\n        if (!this.__dragTimer){\n          // create a timer to fire delayed dragging events if dragging stops.\n          this.__dragTimer = new qx.event.Timer(100);\n          this.__dragTimer.addListener(\"interval\", this._fireValue, this);\n        }\n        this.__dragTimer.start();\n        // Compute dragOffset (includes both: inner position of the widget and\n        // cursor position on knob)\n        this.__dragOffset = cursorLocation + sliderLocation - knobLocation;\n\n        // add state\n        knob.addState(\"pressed\");\n      }\n      else\n      {\n        // Switch into tracking mode\n        this.__trackingMode = true;\n\n        // Detect tracking direction\n        this.__trackingDirection = cursorLocation <= knobLocation ? -1 : 1;\n\n        // Compute end value\n        this.__computeTrackingEnd(e);\n\n        // Directly call interval method once\n        this._onInterval();\n\n        // Initialize timer (when needed)\n        if (!this.__timer)\n        {\n          this.__timer = new qx.event.Timer(100);\n          this.__timer.addListener(\"interval\", this._onInterval, this);\n        }\n\n        // Start timer\n        this.__timer.start();\n      }\n\n      // Register move listener\n      this.addListener(\"pointermove\", this._onPointerMove);\n\n      // Activate capturing\n      this.capture();\n\n      // Stop event\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener of pointerup event. Used for cleanup of previously\n     * initialized modes.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onPointerUp : function(e)\n    {\n      if (this.__dragMode)\n      {\n        // Release capture mode\n        this.releaseCapture();\n\n        // Cleanup status flags\n        delete this.__dragMode;\n\n        // as we come out of drag mode, make\n        // sure content gets synced\n        this.__dragTimer.stop();\n        this._fireValue();\n\n        delete this.__dragOffset;\n\n        // remove state\n        this.getChildControl(\"knob\").removeState(\"pressed\");\n\n        // it's necessary to check whether the cursor is over the knob widget to be able to\n        // to decide whether to remove the 'hovered' state.\n        if (e.getType() === \"pointerup\")\n        {\n          var deltaSlider;\n          var deltaPosition;\n          var positionSlider;\n\n          if (this.__isHorizontal)\n          {\n            deltaSlider = e.getDocumentLeft() - (this._valueToPosition(this.getValue()) + this.__sliderLocation);\n\n            positionSlider = qx.bom.element.Location.get(this.getContentElement().getDomElement())[\"top\"];\n            deltaPosition = e.getDocumentTop() - (positionSlider + this.getChildControl(\"knob\").getBounds().top);\n          }\n          else\n          {\n            deltaSlider = e.getDocumentTop() - (this._valueToPosition(this.getValue()) + this.__sliderLocation);\n\n            positionSlider = qx.bom.element.Location.get(this.getContentElement().getDomElement())[\"left\"];\n            deltaPosition = e.getDocumentLeft() - (positionSlider + this.getChildControl(\"knob\").getBounds().left);\n          }\n\n          if (deltaPosition < 0 || deltaPosition > this.__knobSize ||\n              deltaSlider < 0 || deltaSlider > this.__knobSize) {\n            this.getChildControl(\"knob\").removeState(\"hovered\");\n          }\n        }\n\n      }\n      else if (this.__trackingMode)\n      {\n        // Stop timer interval\n        this.__timer.stop();\n\n        // Release capture mode\n        this.releaseCapture();\n\n        // Cleanup status flags\n        delete this.__trackingMode;\n        delete this.__trackingDirection;\n        delete this.__trackingEnd;\n      }\n\n      // Remove move listener again\n      this.removeListener(\"pointermove\", this._onPointerMove);\n\n      // Stop event\n      if (e.getType() === \"pointerup\") {\n        e.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Listener of pointermove event for the knob. Only used in drag mode.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onPointerMove : function(e)\n    {\n      if (this.__dragMode)\n      {\n        var dragStop = this.__isHorizontal ?\n          e.getDocumentLeft() : e.getDocumentTop();\n        var position = dragStop - this.__dragOffset;\n\n        this.slideTo(this._positionToValue(position));\n      }\n      else if (this.__trackingMode)\n      {\n        // Update tracking end on pointermove\n        this.__computeTrackingEnd(e);\n      }\n\n      // Stop event\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener of interval event by the internal timer. Only used\n     * in tracking sequences.\n     *\n     * @param e {qx.event.type.Event} Incoming event object\n     */\n    _onInterval : function(e)\n    {\n      // Compute new value\n      var value = this.getValue() + (this.__trackingDirection * this.getPageStep());\n\n      // Limit value\n      if (value < this.getMinimum()) {\n        value = this.getMinimum();\n      } else if (value > this.getMaximum()) {\n        value = this.getMaximum();\n      }\n\n      // Stop at tracking position (where the pointer is pressed down)\n      var slideBack = this.__trackingDirection == -1;\n      if ((slideBack && value <= this.__trackingEnd) || (!slideBack && value >= this.__trackingEnd)) {\n        value = this.__trackingEnd;\n      }\n\n      // Finally slide to the desired position\n      this.slideTo(value);\n    },\n\n\n    /**\n     * Listener of resize event for both the slider itself and the knob.\n     *\n     * @param e {qx.event.type.Data} Incoming event object\n     */\n    _onUpdate : function(e)\n    {\n      // Update sliding space\n      var availSize = this.getInnerSize();\n      var knobSize = this.getChildControl(\"knob\").getBounds();\n      var sizeProperty = this.__isHorizontal ? \"width\" : \"height\";\n\n      // Sync knob size\n      this._updateKnobSize();\n\n      // Store knob size\n      this.__slidingSpace = availSize[sizeProperty] - knobSize[sizeProperty];\n      this.__knobSize = knobSize[sizeProperty];\n\n      // Update knob position (sliding space must be updated first)\n      this._updateKnobPosition();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILS\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Boolean} Whether the slider is laid out horizontally */\n    __isHorizontal : false,\n\n\n    /**\n     * @type {Integer} Available space for knob to slide on, computed on resize of\n     * the widget\n     */\n    __slidingSpace : 0,\n\n\n    /**\n     * Computes the value where the tracking should end depending on\n     * the current pointer position.\n     *\n     * @param e {qx.event.type.Pointer} Incoming pointer event\n     */\n    __computeTrackingEnd : function(e)\n    {\n      var isHorizontal = this.__isHorizontal;\n      var cursorLocation = isHorizontal ? e.getDocumentLeft() : e.getDocumentTop();\n      var sliderLocation = this.__sliderLocation;\n      var knobLocation = this.__knobLocation;\n      var knobSize = this.__knobSize;\n\n      // Compute relative position\n      var position = cursorLocation - sliderLocation;\n      if (cursorLocation >= knobLocation) {\n        position -= knobSize;\n      }\n\n      // Compute stop value\n      var value = this._positionToValue(position);\n\n      var min = this.getMinimum();\n      var max = this.getMaximum();\n\n      if (value < min) {\n        value = min;\n      } else if (value > max) {\n        value = max;\n      } else {\n        var old = this.getValue();\n        var step = this.getPageStep();\n        var method = this.__trackingDirection < 0 ? \"floor\" : \"ceil\";\n\n        // Fix to page step\n        value = old + (Math[method]((value - old) / step) * step);\n      }\n\n      // Store value when undefined, otherwise only when it follows the\n      // current direction e.g. goes up or down\n      if (this.__trackingEnd == null || (this.__trackingDirection == -1 && value <= this.__trackingEnd) || (this.__trackingDirection == 1 && value >= this.__trackingEnd)) {\n        this.__trackingEnd = value;\n      }\n    },\n\n\n    /**\n     * Converts the given position to a value.\n     *\n     * Does not respect single or page step.\n     *\n     * @param position {Integer} Position to use\n     * @return {Integer} Resulting value (rounded)\n     */\n    _positionToValue : function(position)\n    {\n      // Reading available space\n      var avail = this.__slidingSpace;\n\n      // Protect undefined value (before initial resize) and division by zero\n      if (avail == null || avail == 0) {\n        return 0;\n      }\n\n      // Compute and limit percent\n      var percent = position / avail;\n      if (percent < 0) {\n        percent = 0;\n      } else if (percent > 1) {\n        percent = 1;\n      }\n\n      // Compute range\n      var range = this.getMaximum() - this.getMinimum();\n\n      // Compute value\n      return this.getMinimum() + Math.round(range * percent);\n    },\n\n\n    /**\n     * Converts the given value to a position to place\n     * the knob to.\n     *\n     * @param value {Integer} Value to use\n     * @return {Integer} Computed position (rounded)\n     */\n    _valueToPosition : function(value)\n    {\n      // Reading available space\n      var avail = this.__slidingSpace;\n      if (avail == null) {\n        return 0;\n      }\n\n      // Computing range\n      var range = this.getMaximum() - this.getMinimum();\n\n      // Protect division by zero\n      if (range == 0) {\n        return 0;\n      }\n\n      // Translating value to distance from minimum\n      var value = value - this.getMinimum();\n\n      // Compute and limit percent\n      var percent = value / range;\n      if (percent < 0) {\n        percent = 0;\n      } else if (percent > 1) {\n        percent = 1;\n      }\n\n      // Compute position from available space and percent\n      return Math.round(avail * percent);\n    },\n\n\n    /**\n     * Updates the knob position following the currently configured\n     * value. Useful on reflows where the dimensions of the slider\n     * itself have been modified.\n     *\n     */\n    _updateKnobPosition : function() {\n      this._setKnobPosition(this._valueToPosition(this.getValue()));\n    },\n\n\n    /**\n     * Moves the knob to the given position.\n     *\n     * @param position {Integer} Any valid position (needs to be\n     *   greater or equal than zero)\n     */\n    _setKnobPosition : function(position)\n    {\n      // Use the DOM Element to prevent unnecessary layout recalculations\n      var knob = this.getChildControl(\"knob\");\n      var dec = this.getDecorator();\n      dec = qx.theme.manager.Decoration.getInstance().resolve(dec);\n      var content = knob.getContentElement();\n      if (this.__isHorizontal) {\n        if (dec && dec.getPadding()) {\n          position += dec.getPadding().left;\n        }\n        position += this.getPaddingLeft() || 0;\n        content.setStyle(\"left\", position+\"px\", true);\n      } else {\n        if (dec && dec.getPadding()) {\n          position += dec.getPadding().top;\n        }\n        position += this.getPaddingTop() || 0;\n        content.setStyle(\"top\", position+\"px\", true);\n      }\n    },\n\n\n    /**\n     * Reconfigures the size of the knob depending on\n     * the optionally defined {@link #knobFactor}.\n     *\n     */\n    _updateKnobSize : function()\n    {\n      // Compute knob size\n      var knobFactor = this.getKnobFactor();\n      if (knobFactor == null) {\n        return;\n      }\n\n      // Ignore when not rendered yet\n      var avail = this.getInnerSize();\n      if (avail == null) {\n        return;\n      }\n\n      // Read size property\n      if (this.__isHorizontal) {\n        this.getChildControl(\"knob\").setWidth(Math.round(knobFactor * avail.width));\n      } else {\n        this.getChildControl(\"knob\").setHeight(Math.round(knobFactor * avail.height));\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SLIDE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Slides backward to the minimum value\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slideToBegin : function(duration) {\n      this.slideTo(this.getMinimum(), duration);\n    },\n\n\n    /**\n     * Slides forward to the maximum value\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slideToEnd : function(duration) {\n      this.slideTo(this.getMaximum(), duration);\n    },\n\n\n    /**\n     * Slides forward (right or bottom depending on orientation)\n     *\n     */\n    slideForward : function() {\n      this.slideBy(this.getSingleStep());\n    },\n\n\n    /**\n     * Slides backward (to left or top depending on orientation)\n     *\n     */\n    slideBack : function() {\n      this.slideBy(-this.getSingleStep());\n    },\n\n\n    /**\n     * Slides a page forward (to right or bottom depending on orientation)\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slidePageForward : function(duration) {\n      this.slideBy(this.getPageStep(), duration);\n    },\n\n\n    /**\n     * Slides a page backward (to left or top depending on orientation)\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slidePageBack : function(duration) {\n      this.slideBy(-this.getPageStep(), duration);\n    },\n\n\n    /**\n     * Slides by the given offset.\n     *\n     * This method works with the value, not with the coordinate.\n     *\n     * @param offset {Integer} Offset to scroll by\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slideBy : function(offset, duration) {\n      this.slideTo(this.getValue() + offset, duration);\n    },\n\n\n    /**\n     * Slides to the given value\n     *\n     * This method works with the value, not with the coordinate.\n     *\n     * @param value {Integer} Scroll to a value between the defined\n     *   minimum and maximum.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slideTo : function(value, duration)\n    {\n      this.stopSlideAnimation();\n\n      if (duration) {\n        this.__animateTo(value, duration);\n      } else {\n        this.updatePosition(value);\n      }\n    },\n\n\n    /**\n     * Updates the position property considering the minimum and maximum values.\n     * @param value {Number} The new position.\n     */\n    updatePosition : function(value) {\n      this.setValue(this.__normalizeValue(value));\n    },\n\n\n    /**\n     * In case a slide animation is currently running, it will be stopped.\n     * If not, the method does nothing.\n     */\n    stopSlideAnimation : function() {\n      if (this.__scrollAnimationframe) {\n        this.__scrollAnimationframe.cancelSequence();\n        this.__scrollAnimationframe = null;\n      }\n    },\n\n\n    /**\n     * Internal helper to normalize the given value concerning the minimum\n     * and maximum value.\n     * @param value {Number} The value to normalize.\n     * @return {Number} The normalized value.\n     */\n    __normalizeValue : function(value) {\n      // Bring into allowed range or fix to single step grid\n      if (value < this.getMinimum()) {\n        value = this.getMinimum();\n      } else if (value > this.getMaximum()) {\n        value = this.getMaximum();\n      } else {\n        value = this.getMinimum() + Math.round((value - this.getMinimum()) / this.getSingleStep()) * this.getSingleStep();\n      }\n      return value;\n    },\n\n\n    /**\n     * Animation helper which takes care of the animated slide.\n     * @param to {Number} The target value.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    __animateTo : function(to, duration) {\n      to = this.__normalizeValue(to);\n      var from = this.getValue();\n\n      this.__scrollAnimationframe = new qx.bom.AnimationFrame();\n\n      this.__scrollAnimationframe.on(\"frame\", function(timePassed) {\n        this.setValue(parseInt(timePassed/duration * (to - from) + from));\n      }, this);\n\n      this.__scrollAnimationframe.on(\"end\", function() {\n        this.setValue(to);\n        this.__scrollAnimationframe = null;\n        this.fireEvent(\"slideAnimationEnd\");\n      }, this);\n\n      this.__scrollAnimationframe.startSequence(duration);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyOrientation : function(value, old)\n    {\n      var knob = this.getChildControl(\"knob\");\n\n      // Update private flag for faster access\n      this.__isHorizontal = value === \"horizontal\";\n\n      // Toggle states and knob layout\n      if (this.__isHorizontal)\n      {\n        this.removeState(\"vertical\");\n        knob.removeState(\"vertical\");\n\n        this.addState(\"horizontal\");\n        knob.addState(\"horizontal\");\n\n        knob.setLayoutProperties({top:0, right:null, bottom:0});\n      }\n      else\n      {\n        this.removeState(\"horizontal\");\n        knob.removeState(\"horizontal\");\n\n        this.addState(\"vertical\");\n        knob.addState(\"vertical\");\n\n        knob.setLayoutProperties({right:0, bottom:null, left:0});\n      }\n\n      // Sync knob position\n      this._updateKnobPosition();\n    },\n\n\n    // property apply\n    _applyKnobFactor : function(value, old)\n    {\n      if (value != null)\n      {\n        this._updateKnobSize();\n      }\n      else\n      {\n        if (this.__isHorizontal) {\n          this.getChildControl(\"knob\").resetWidth();\n        } else {\n          this.getChildControl(\"knob\").resetHeight();\n        }\n      }\n    },\n\n\n    // property apply\n    _applyValue : function(value, old) {\n      if (value != null) {\n        this._updateKnobPosition();\n        if (this.__dragMode) {\n          this.__dragValue = [value,old];\n        } else {\n          this.fireEvent(\"changeValue\", qx.event.type.Data, [value,old]);\n        }\n      } else {\n        this.resetValue();\n      }\n    },\n\n\n    /**\n     * Helper for applyValue which fires the changeValue event.\n     */\n    _fireValue: function(){\n      if (!this.__dragValue){\n        return;\n      }\n      var tmp = this.__dragValue;\n      this.__dragValue = null;\n      this.fireEvent(\"changeValue\", qx.event.type.Data, tmp);\n    },\n\n\n    // property apply\n    _applyMinimum : function(value, old)\n    {\n      if (this.getValue() < value) {\n        this.setValue(value);\n      }\n\n      this._updateKnobPosition();\n    },\n\n\n    // property apply\n    _applyMaximum : function(value, old)\n    {\n      if (this.getValue() > value) {\n        this.setValue(value);\n      }\n\n      this._updateKnobPosition();\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Minimal modified version of the {@link qx.ui.form.Slider} to be\n * used by {@link qx.ui.core.scroll.ScrollBar}.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.core.scroll.ScrollSlider\",\n{\n  extend : qx.ui.form.Slider,\n\n  // overridden\n  construct : function(orientation)\n  {\n    this.base(arguments, orientation);\n\n    // Remove roll/keypress events\n    this.removeListener(\"keypress\", this._onKeyPress);\n    this.removeListener(\"roll\", this._onRoll);\n  },\n\n\n  members : {\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"knob\":\n          control = this.base(arguments, id);\n          control.addListener(\"dblclick\", function(e) {\n            e.stopPropagation();\n          });\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    // overridden\n    getSizeHint : function(compute) {\n      // get the original size hint\n      var hint = this.base(arguments);\n      // set the width or height to 0 depending on the orientation.\n      // this is necessary to prevent the ScrollSlider to change the size\n      // hint of its parent, which can cause errors on outer flex layouts\n      // [BUG #3279]\n      if (this.getOrientation() === \"horizontal\") {\n        hint.width = 0;\n      } else {\n        hint.height = 0;\n      }\n      return hint;\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * The WidgetCell layer renders each cell with a qooxdoo widget. The concrete\n * widget instance for each cell is provided by a cell provider.\n */\nqx.Class.define(\"qx.ui.virtual.layer.WidgetCell\",\n{\n  extend : qx.ui.virtual.layer.Abstract,\n\n  include : [\n    qx.ui.core.MChildrenHandling\n  ],\n\n\n  /**\n   * @param widgetCellProvider {qx.ui.virtual.core.IWidgetCellProvider} This\n   *    class manages the life cycle of the cell widgets.\n   */\n  construct : function(widgetCellProvider)\n  {\n    this.base(arguments);\n    this.setZIndex(12);\n\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertInterface(\n        widgetCellProvider,\n        qx.ui.virtual.core.IWidgetCellProvider\n      );\n    }\n\n    this._cellProvider = widgetCellProvider;\n    this.__spacerPool = [];\n  },\n\n\n  /*\n   *****************************************************************************\n      PROPERTIES\n   *****************************************************************************\n   */\n\n   properties :\n   {\n     // overridden\n     anonymous :\n     {\n       refine: true,\n       init: false\n     }\n   },\n\n  events :\n  {\n    /**\n     * Is fired when the {@link #_fullUpdate} or the\n     * {@link #_updateLayerWindow} is finished.\n     */\n    updated : \"qx.event.type.Event\"\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n     __spacerPool : null,\n\n     /**\n     * Returns the widget used to render the given cell. May return null if the\n     * cell isn’t rendered currently rendered.\n     *\n     * @param row {Integer} The cell's row index\n     * @param column {Integer} The cell's column index\n     * @return {qx.ui.core.LayoutItem|null} the widget used to render the given\n     *    cell or <code>null</code>\n     */\n     getRenderedCellWidget : function(row, column)\n     {\n        if (this._getChildren().length === 0) {\n          return null;\n        }\n\n        var columnCount = this.getColumnSizes().length;\n        var rowCount = this.getRowSizes().length;\n\n        var firstRow = this.getFirstRow();\n        var firstColumn = this.getFirstColumn();\n\n        if (\n         row < firstRow ||\n         row >= firstRow + rowCount ||\n         column < firstColumn ||\n         column >= firstColumn + columnCount\n        ) {\n         return null;\n        }\n\n        var childIndex = (column - firstColumn) + (row - firstRow) * columnCount;\n        var widget = this._getChildren()[childIndex];\n\n        if (!widget || widget.getUserData(\"cell.empty\")) {\n         return null;\n        } else {\n         return widget;\n        }\n     },\n\n\n    /**\n     * Get the spacer widget, for empty cells\n     *\n     * @return {qx.ui.core.Spacer} The spacer widget.\n     */\n    _getSpacer : function()\n    {\n      var spacer = this.__spacerPool.pop();\n      if (!spacer)\n      {\n        spacer = new qx.ui.core.Spacer();\n        spacer.setUserData(\"cell.empty\", 1);\n      }\n      return spacer;\n    },\n\n\n    /**\n     * Activates one of the still not empty items.\n     * @param elementToPool {qx.ui.core.Widget} The widget which gets pooled.\n     */\n    _activateNotEmptyChild : function(elementToPool)\n    {\n      // get the current active element\n      var active = qx.ui.core.FocusHandler.getInstance().getActiveWidget();\n      // if the element to pool is active or one of its children\n      if (active == elementToPool || qx.ui.core.Widget.contains(elementToPool, active)) {\n        // search for a new child to activate\n        var children = this._getChildren();\n        for (var i = children.length - 1; i >= 0; i--) {\n          if (!children[i].getUserData(\"cell.empty\")) {\n            children[i].activate();\n            break;\n          }\n        };\n      }\n    },\n\n\n    // overridden\n    _fullUpdate : function(firstRow, firstColumn, rowSizes, columnSizes)\n    {\n      var cellProvider = this._cellProvider;\n\n      var children = this._getChildren().concat();\n      for (var i=0; i<children.length; i++)\n      {\n        var child = children[i];\n        if (child.getUserData(\"cell.empty\")) {\n          this.__spacerPool.push(child);\n        } else {\n          this._activateNotEmptyChild(child);\n          cellProvider.poolCellWidget(child);\n        }\n      }\n\n\n      var top = 0;\n      var left = 0;\n\n      var visibleItems = [];\n\n      for (var y=0; y<rowSizes.length; y++)\n      {\n        for (var x=0; x<columnSizes.length; x++)\n        {\n          var row = firstRow + y;\n          var column = firstColumn + x;\n\n          var item = cellProvider.getCellWidget(row, column) || this._getSpacer();\n\n          visibleItems.push(item);\n\n          item.setUserBounds(left, top, columnSizes[x], rowSizes[y]);\n          item.setUserData(\"cell.row\", row);\n          item.setUserData(\"cell.column\", column);\n          this._add(item);\n\n          left += columnSizes[x];\n        }\n        top += rowSizes[y];\n        left = 0;\n      }\n      children.forEach(function(child){\n        if (visibleItems.indexOf(child) === -1) {\n          this._remove(child);\n        }\n      }.bind(this));\n\n      this.fireEvent(\"updated\");\n    },\n\n\n    _updateLayerWindow : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    )\n    {\n      // compute overlap of old and new window\n      //\n      //      +---+\n      //      |  ##--+\n      //      |  ##  |\n      //      +--##  |\n      //         +---+\n      //\n\n\n    if (qx.core.Environment.get(\"qx.debug\"))\n    {\n      this.assertPositiveInteger(firstRow);\n      this.assertPositiveInteger(firstColumn);\n      this.assertArray(rowSizes);\n      this.assertArray(columnSizes);\n    }\n\n\n      var lastRow = firstRow + rowSizes.length - 1;\n      var lastColumn = firstColumn + columnSizes.length - 1;\n\n      var overlap = {\n        firstRow: Math.max(firstRow, this.getFirstRow()),\n        lastRow: Math.min(lastRow, this._lastRow),\n        firstColumn: Math.max(firstColumn, this.getFirstColumn()),\n        lastColumn: Math.min(lastColumn, this._lastColumn)\n      };\n\n      this._lastColumn = lastColumn;\n      this._lastRow = lastRow;\n\n      if (\n        overlap.firstRow > overlap.lastRow ||\n        overlap.firstColumn > overlap.lastColumn\n      ) {\n        return this._fullUpdate(\n          firstRow, firstColumn,\n          rowSizes, columnSizes\n        );\n      }\n\n      // collect the widgets to move\n      var children = this._getChildren();\n      var lineLength = this.getColumnSizes().length;\n      var widgetsToMove = [];\n      var widgetsToMoveIndexes = {};\n      for (var row=firstRow; row<=lastRow; row++)\n      {\n        widgetsToMove[row] = [];\n        for (var column=firstColumn; column<=lastColumn; column++)\n        {\n          if (\n            row >= overlap.firstRow &&\n            row <= overlap.lastRow &&\n            column >= overlap.firstColumn &&\n            column <= overlap.lastColumn\n          )\n          {\n            var x = column - this.getFirstColumn();\n            var y = row - this.getFirstRow();\n            var index = y*lineLength + x;\n            widgetsToMove[row][column] = children[index];\n            widgetsToMoveIndexes[index] = true;\n          }\n        }\n      }\n\n      var cellProvider = this._cellProvider;\n\n      // pool widgets\n      var children = this._getChildren().concat();\n      for (var i=0; i<children.length; i++)\n      {\n        if (!widgetsToMoveIndexes[i])\n        {\n          var child = children[i];\n          if (child.getUserData(\"cell.empty\")) {\n            this.__spacerPool.push(child);\n          } else {\n            this._activateNotEmptyChild(child);\n            cellProvider.poolCellWidget(child);\n          }\n        }\n      }\n\n\n      var top = 0;\n      var left = 0;\n      var visibleItems = [];\n\n      for (var y=0; y<rowSizes.length; y++)\n      {\n        for (var x=0; x<columnSizes.length; x++)\n        {\n          var row = firstRow + y;\n          var column = firstColumn + x;\n\n          var item =\n            widgetsToMove[row][column] ||\n            cellProvider.getCellWidget(row, column) ||\n            this._getSpacer();\n\n          visibleItems.push(item);\n\n          item.setUserBounds(left, top, columnSizes[x], rowSizes[y]);\n          item.setUserData(\"cell.row\", row);\n          item.setUserData(\"cell.column\", column);\n          this._add(item);\n\n          left += columnSizes[x];\n        }\n        top += rowSizes[y];\n        left = 0;\n      }\n      children.forEach(function(child){\n        if (visibleItems.indexOf(child) === -1) {\n          this._remove(child);\n        }\n      }.bind(this));\n\n      this.fireEvent(\"updated\");\n    }\n  },\n\n  destruct : function()\n  {\n    var children = this._getChildren();\n    for (var i=0; i<children.length; i++) {\n      children[i].dispose();\n    }\n\n    this._cellProvider = this.__spacerPool = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A widget cell renderer manages a pool of widgets to render cells in a\n * {@link qx.ui.virtual.layer.WidgetCell} layer.\n */\nqx.Interface.define(\"qx.ui.virtual.cell.IWidgetCell\",\n{\n  members :\n  {\n    /**\n     * Get a widget instance to render the cell\n     *\n     * @param data {var} Data needed for the cell to render.\n     * @param states {Map} The states set on the cell (e.g. <i>selected</i>,\n     * <i>focused</i>, <i>editable</i>).\n     *\n     * @return {qx.ui.core.LayoutItem} The cell widget\n     */\n    getCellWidget : function(data, states) {},\n\n\n    /**\n     * Release the given widget instance.\n     *\n     * Either pool or dispose the widget.\n     *\n     * @param widget {qx.ui.core.LayoutItem} The cell widget to pool\n     */\n    pool : function(widget) {},\n\n\n    /**\n     * Update the states of the given widget.\n     *\n     * @param widget {qx.ui.core.LayoutItem} The cell widget to update\n     * @param states {Map} The cell widget's states\n     */\n    updateStates : function(widget, states) {},\n\n\n    /**\n     * Update the data the cell widget should display\n     *\n     * @param widget {qx.ui.core.LayoutItem} The cell widget to update\n     * @param data {var} The data to display\n     */\n    updateData : function(widget, data) {}\n  }\n});",
    "/**\n * Abstract base class for widget based cell renderer.\n */\nqx.Class.define(\"qx.ui.virtual.cell.AbstractWidget\",\n{\n  extend : qx.core.Object,\n  implement : [qx.ui.virtual.cell.IWidgetCell],\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__pool = [];\n  },\n\n\n  events :\n  {\n    /** Fired when a new <code>LayoutItem</code> is created. */\n    \"created\" : \"qx.event.type.Data\"\n  },\n\n\n  members :\n  {\n    __pool : null,\n\n\n    /**\n     * Creates the widget instance.\n     *\n     * @abstract\n     * @return {qx.ui.core.LayoutItem} The widget used to render a cell\n     */\n    _createWidget : function() {\n      throw new Error(\"abstract method call\");\n    },\n\n\n    // interface implementation\n    updateData : function(widget, data) {\n      throw new Error(\"abstract method call\");\n    },\n\n\n    // interface implementation\n    updateStates : function(widget, states)\n    {\n      var oldStates = widget.getUserData(\"cell.states\");\n\n      // remove old states\n      if (oldStates)\n      {\n        var newStates = states || {};\n        for (var state in oldStates)\n        {\n          if (!newStates[state]) {\n            widget.removeState(state);\n          }\n        }\n      }\n      else\n      {\n        oldStates = {};\n      }\n\n      // apply new states\n      if (states)\n      {\n        for (var state in states)\n        {\n          if (!oldStates.state) {\n            widget.addState(state);\n          }\n        }\n      }\n\n      widget.setUserData(\"cell.states\", states);\n    },\n\n\n    // interface implementation\n    getCellWidget : function(data, states)\n    {\n      var widget = this.__getWidgetFromPool();\n      this.updateStates(widget, states);\n      this.updateData(widget, data);\n      return widget;\n    },\n\n\n    // interface implementation\n    pool : function(widget) {\n      this.__pool.push(widget);\n    },\n\n    /**\n     * Cleanup all <code>LayoutItem</code> and destroy them.\n     */\n    _cleanupPool : function() {\n      var widget = this.__pool.pop();\n\n      while(widget)\n      {\n        widget.destroy();\n        widget = this.__pool.pop();\n      }\n    },\n\n    /**\n     * Returns a <code>LayoutItem</code> from the pool, when the pool is empty\n     * a new <code>LayoutItem</code> is created.\n     *\n     * @return {qx.ui.core.LayoutItem} The cell widget\n     */\n    __getWidgetFromPool : function()\n    {\n      var widget = this.__pool.shift();\n\n      if (widget == null)\n      {\n        widget = this._createWidget();\n        this.fireDataEvent(\"created\", widget);\n      }\n\n      return widget;\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct : function()\n  {\n    this._cleanupPool();\n    this.__pool = null;\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * Cell renderer can be used for Widget rendering. The Widget creation can be configured with the\n * {@link #delegate} property:\n *\n * <pre class=\"javascript\">\n * widgetCell.setDelegate(\n * {\n *   createWidget : function() {\n *     return new qx.ui.form.ListItem();\n *   }\n * });\n * </pre>\n *\n * When the {@link #delegate} property is not used {@link qx.ui.core.Widget} instances are created as\n * fallback.\n *\n * The {@link #updateData} method can be used to update any Widget property. Just use a <code>Map</code>\n * with property name as key:\n *\n * <pre class=\"javascript\">\n * // widget is a qx.ui.form.ListItem instance\n * widgetCell.updateData(widget,\n * {\n *   label: \"my label value\",\n *   icon: \"qx/icon/22/emotes/face-angel.png\"\n * });\n * </pre>\n */\nqx.Class.define(\"qx.ui.virtual.cell.WidgetCell\",\n{\n  extend : qx.ui.virtual.cell.AbstractWidget,\n\n  properties :\n  {\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.virtual.cell.IWidgetCellDelegate} interface.\n     */\n    delegate :\n    {\n      apply: \"_applyDelegate\",\n      init: null,\n      nullable: true\n    }\n  },\n\n  members :\n  {\n    // apply method\n    _applyDelegate : function(value, old) {\n      this._cleanupPool();\n    },\n\n    // overridden\n    _createWidget : function() {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.createWidget != null) {\n        return delegate.createWidget();\n      } else {\n        return new qx.ui.core.Widget();\n      }\n    },\n\n    // overridden\n    updateData : function(widget, data) {\n      for (var key in data)\n      {\n        if (qx.Class.hasProperty(widget.constructor, key)) {\n          qx.util.PropertyUtil.setUserValue(widget, key, data[key]);\n        } else {\n          throw new Error(\"Can't update data! The key '\" + key + \"' is not a Property!\");\n        }\n      }\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Shortcuts can be used to globally define keyboard shortcuts.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.bom.Shortcut\",\n{\n  extend : qx.core.Object,\n  implement: [ qx.core.IDisposable ],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance of Command\n   *\n   * @param shortcut {String} shortcuts can be composed of optional modifier\n   *    keys Control, Alt, Shift, Meta and a non modifier key.\n   *    If no non modifier key is specified, the second parameter is evaluated.\n   *    The key must be separated by a <code>+</code> or <code>-</code> character.\n   *    Examples: Alt+F1, Control+C, Control+Alt+Delete\n   */\n  construct : function(shortcut)\n  {\n    this.base(arguments);\n\n    this.__modifier = {};\n    this.__key = null;\n\n    if (shortcut != null) {\n      this.setShortcut(shortcut);\n    }\n\n    this.initEnabled();\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * Fired when the command is executed. Sets the \"data\" property of the event to\n     * the object that issued the command.\n     */\n    \"execute\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** whether the command should be respected/enabled */\n    enabled :\n    {\n      init : true,\n      check : \"Boolean\",\n      event : \"changeEnabled\",\n      apply : \"_applyEnabled\"\n    },\n\n\n    /** The command shortcut */\n    shortcut :\n    {\n      check : \"String\",\n      apply : \"_applyShortcut\",\n      nullable : true\n    },\n\n\n    /**\n     * Whether the execute event should be fired repeatedly if the user keep\n     * the keys pressed.\n     */\n    autoRepeat :\n    {\n      check : \"Boolean\",\n      init : false\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __modifier : \"\",\n    __key : \"\",\n\n\n    /*\n    ---------------------------------------------------------------------------\n      USER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fire the \"execute\" event on this shortcut.\n     *\n     * @param target {Object} Object which issued the execute event\n     */\n    execute : function(target) {\n      this.fireDataEvent(\"execute\", target);\n    },\n\n\n    /**\n     * Key down event handler.\n     *\n     * @param event {qx.event.type.KeySequence} The key event object\n     */\n    __onKeyDown : function(event)\n    {\n      if (this.getEnabled() && this.__matchesKeyEvent(event))\n      {\n        if (!this.isAutoRepeat()) {\n          this.execute(event.getTarget());\n        }\n        event.stop();\n      }\n    },\n\n\n    /**\n     * Key press event handler.\n     *\n     * @param event {qx.event.type.KeySequence} The key event object\n     */\n    __onKeyPress : function(event)\n    {\n      if (this.getEnabled() && this.__matchesKeyEvent(event))\n      {\n        if (this.isAutoRepeat()) {\n          this.execute(event.getTarget());\n        }\n        event.stop();\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applyEnabled : function(value, old)\n    {\n      if (value) {\n        qx.event.Registration.addListener(document.documentElement, \"keydown\", this.__onKeyDown, this);\n        qx.event.Registration.addListener(document.documentElement, \"keypress\", this.__onKeyPress, this);\n      } else {\n        qx.event.Registration.removeListener(document.documentElement, \"keydown\", this.__onKeyDown, this);\n        qx.event.Registration.removeListener(document.documentElement, \"keypress\", this.__onKeyPress, this);\n      }\n    },\n\n\n    // property apply\n    _applyShortcut : function(value, old)\n    {\n      if (value)\n      {\n        // do not allow whitespaces within shortcuts\n        if (value.search(/[\\s]+/) != -1)\n        {\n          var msg = \"Whitespaces are not allowed within shortcuts\";\n          this.error(msg);\n          throw new Error(msg);\n        }\n\n        this.__modifier = { \"Control\" : false,\n                            \"Shift\"   : false,\n                            \"Meta\"    : false,\n                            \"Alt\"     : false };\n        this.__key = null;\n\n        // To support shortcuts with \"+\" and \"-\" as keys it is necessary\n        // to split the given value in a different way to determine the\n        // several keyIdentifiers\n        var index;\n        var a = [];\n        while (value.length > 0 && index != -1)\n        {\n          // search for delimiters \"+\" and \"-\"\n          index = value.search(/[-+]+/);\n\n          // add identifiers - take value if no separator was found or\n          // only one char is left (second part of shortcut)\n          a.push((value.length == 1 || index == -1) ? value : value.substring(0, index));\n\n          // extract the already detected identifier\n          value = value.substring(index + 1);\n        }\n        var al = a.length;\n\n        for (var i=0; i<al; i++)\n        {\n          var identifier = this.__normalizeKeyIdentifier(a[i]);\n\n          switch(identifier)\n          {\n            case \"Control\":\n            case \"Shift\":\n            case \"Meta\":\n            case \"Alt\":\n              this.__modifier[identifier] = true;\n              break;\n\n            case \"Unidentified\":\n              var msg = \"Not a valid key name for a shortcut: \" + a[i];\n              this.error(msg);\n              throw msg;\n\n            default:\n              if (this.__key)\n              {\n                var msg = \"You can only specify one non modifier key!\";\n                this.error(msg);\n                throw msg;\n              }\n\n              this.__key = identifier;\n          }\n        }\n      }\n\n      return true;\n    },\n\n\n\n\n    /*\n    --------------------------------------------------------------------------\n      INTERNAL MATCHING LOGIC\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Checks whether the given key event matches the shortcut's shortcut\n     *\n     * @param e {qx.event.type.KeySequence} the key event object\n     * @return {Boolean} whether the shortcuts shortcut matches the key event\n     */\n    __matchesKeyEvent : function(e)\n    {\n      var key = this.__key;\n\n      if (!key)\n      {\n        // no shortcut defined.\n        return false;\n      }\n\n      // for check special keys\n      // and check if a shortcut is a single char and special keys are pressed\n      if (\n        (!this.__modifier.Shift && e.isShiftPressed()) ||\n        (this.__modifier.Shift && !e.isShiftPressed()) ||\n        (!this.__modifier.Control && e.isCtrlPressed()) ||\n        (this.__modifier.Control && !e.isCtrlPressed()) ||\n        (!this.__modifier.Meta && e.isMetaPressed()) ||\n        (this.__modifier.Meta && !e.isMetaPressed()) ||\n        (!this.__modifier.Alt && e.isAltPressed()) ||\n        (this.__modifier.Alt && !e.isAltPressed())\n      ) {\n        return false;\n      }\n\n      if (key == e.getKeyIdentifier()) {\n        return true;\n      }\n\n      return false;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      COMPATIBILITY TO COMMAND\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @lint ignoreReferenceField(__oldKeyNameToKeyIdentifierMap)\n     */\n    __oldKeyNameToKeyIdentifierMap :\n    {\n      // all other keys are converted by converting the first letter to uppercase\n      esc             : \"Escape\",\n      ctrl            : \"Control\",\n      print           : \"PrintScreen\",\n      del             : \"Delete\",\n      pageup          : \"PageUp\",\n      pagedown        : \"PageDown\",\n      numlock         : \"NumLock\",\n      numpad_0        : \"0\",\n      numpad_1        : \"1\",\n      numpad_2        : \"2\",\n      numpad_3        : \"3\",\n      numpad_4        : \"4\",\n      numpad_5        : \"5\",\n      numpad_6        : \"6\",\n      numpad_7        : \"7\",\n      numpad_8        : \"8\",\n      numpad_9        : \"9\",\n      numpad_divide   : \"/\",\n      numpad_multiply : \"*\",\n      numpad_minus    : \"-\",\n      numpad_plus     : \"+\"\n    },\n\n\n    /**\n     * Checks and normalizes the key identifier.\n     *\n     * @param keyName {String} name of the key.\n     * @return {String} normalized keyIdentifier or \"Unidentified\" if a conversion was not possible\n     */\n    __normalizeKeyIdentifier : function(keyName)\n    {\n      var kbUtil = qx.event.util.Keyboard;\n      var keyIdentifier = \"Unidentified\";\n\n      if (kbUtil.isValidKeyIdentifier(keyName)) {\n        return keyName;\n      }\n\n      if (keyName.length == 1 && keyName >= \"a\" && keyName <= \"z\") {\n        return keyName.toUpperCase();\n      }\n\n      keyName = keyName.toLowerCase();\n      var keyIdentifier = this.__oldKeyNameToKeyIdentifierMap[keyName] || qx.lang.String.firstUp(keyName);\n\n      if (kbUtil.isValidKeyIdentifier(keyIdentifier)) {\n        return keyIdentifier;\n      } else {\n        return \"Unidentified\";\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STRING CONVERSION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the shortcut as string using the currently selected locale.\n     *\n     * @return {String} shortcut\n     */\n    toString : function()\n    {\n      var key = this.__key;\n\n      var str = [];\n\n      for (var modifier in this.__modifier) {\n        // this.__modifier holds a map with shortcut combination keys\n        // like \"Control\", \"Alt\", \"Meta\" and \"Shift\" as keys with\n        // Boolean values\n        if (this.__modifier[modifier])\n        {\n          str.push(qx.locale.Key.getKeyName(\"short\", modifier));\n        }\n      }\n\n      if (key) {\n        str.push(qx.locale.Key.getKeyName(\"short\", key));\n      }\n\n      return str.join(\"+\");\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    // this will remove the event listener\n    this.setEnabled(false);\n\n    this.__modifier = this.__key = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * jQuery\n     http://jquery.com\n     Version 1.3.1\n\n     Copyright:\n       2009 John Resig\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n************************************************************************ */\n\n/**\n * Cross browser abstractions to work with input elements.\n */\nqx.Bootstrap.define(\"qx.bom.Input\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Map} Internal data structures with all supported input types */\n    __types :\n    {\n      text : 1,\n      textarea : 1,\n      select : 1,\n      checkbox : 1,\n      radio : 1,\n      password : 1,\n      hidden : 1,\n      submit : 1,\n      image : 1,\n      file : 1,\n      search : 1,\n      reset : 1,\n      button : 1\n    },\n\n\n    /**\n     * Creates an DOM input/textarea/select element.\n     *\n     * Attributes may be given directly with this call. This is critical\n     * for some attributes e.g. name, type, ... in many clients.\n     *\n     * Note: <code>select</code> and <code>textarea</code> elements are created\n     * using the identically named <code>type</code>.\n     *\n     * @param type {String} Any valid type for HTML, <code>select</code>\n     *   and <code>textarea</code>\n     * @param attributes {Map} Map of attributes to apply\n     * @param win {Window} Window to create the element for\n     * @return {Element} The created input node\n     */\n    create : function(type, attributes, win)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertKeyInMap(type, this.__types, \"Unsupported input type.\");\n      }\n\n      // Work on a copy to not modify given attributes map\n      var attributes = attributes ? qx.lang.Object.clone(attributes) : {};\n\n      var tag;\n\n      if (type === \"textarea\" || type === \"select\")\n      {\n        tag = type;\n      }\n      else\n      {\n        tag = \"input\";\n        attributes.type = type;\n      }\n\n      return qx.dom.Element.create(tag, attributes, win);\n    },\n\n\n    /**\n     * Applies the given value to the element.\n     *\n     * Normally the value is given as a string/number value and applied\n     * to the field content (textfield, textarea) or used to\n     * detect whether the field is checked (checkbox, radiobutton).\n     *\n     * Supports array values for selectboxes (multiple-selection)\n     * and checkboxes or radiobuttons (for convenience).\n     *\n     * Please note: To modify the value attribute of a checkbox or\n     * radiobutton use {@link qx.bom.element.Attribute#set} instead.\n     *\n     * @param element {Element} element to update\n     * @param value {String|Number|Array} the value to apply\n     */\n    setValue : function(element, value)\n    {\n      var tag = element.nodeName.toLowerCase();\n      var type = element.type;\n      var Type = qx.lang.Type;\n\n      if (typeof value === \"number\") {\n        value += \"\";\n      }\n\n      if ((type === \"checkbox\" || type === \"radio\"))\n      {\n        if (Type.isArray(value)) {\n          element.checked = value.includes(element.value);\n        } else {\n          element.checked = element.value == value;\n        }\n      }\n      else if (tag === \"select\")\n      {\n        var isArray = Type.isArray(value);\n        var options = element.options;\n        var subel, subval;\n\n        for (var i=0, l=options.length; i<l; i++)\n        {\n          subel = options[i];\n          subval = subel.getAttribute(\"value\");\n          if (subval == null) {\n            subval = subel.text;\n          }\n\n          subel.selected = isArray ?\n            value.includes(subval) : value == subval;\n        }\n\n        if (isArray && value.length == 0) {\n          element.selectedIndex = -1;\n        }\n      }\n      else if ((type === \"text\" || type === \"textarea\") &&\n        (qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n      {\n        // These flags are required to detect self-made property-change\n        // events during value modification. They are used by the Input\n        // event handler to filter events.\n        element.$$inValueSet = true;\n        element.value = value;\n        element.$$inValueSet = null;\n      } else {\n        element.value = value;\n      }\n    },\n\n\n    /**\n     * Returns the currently configured value.\n     *\n     * Works with simple input fields as well as with\n     * select boxes or option elements.\n     *\n     * Returns an array in cases of multi-selection in\n     * select boxes but in all other cases a string.\n     *\n     * @param element {Element} DOM element to query\n     * @return {String|Array} The value of the given element\n     */\n    getValue : function(element)\n    {\n      var tag = element.nodeName.toLowerCase();\n\n      if (tag === \"option\") {\n        return (element.attributes.value || {}).specified ? element.value : element.text;\n      }\n\n      if (tag === \"select\")\n      {\n        var index = element.selectedIndex;\n\n        // Nothing was selected\n        if (index < 0) {\n          return null;\n        }\n\n        var values = [];\n        var options = element.options;\n        var one = element.type == \"select-one\";\n        var clazz = qx.bom.Input;\n        var value;\n\n        // Loop through all the selected options\n        for (var i=one ? index : 0, max=one ? index+1 : options.length; i<max; i++)\n        {\n          var option = options[i];\n\n          if (option.selected)\n          {\n            // Get the specific value for the option\n            value = clazz.getValue(option);\n\n            // We don't need an array for one selects\n            if (one) {\n              return value;\n            }\n\n            // Multi-Selects return an array\n            values.push(value);\n          }\n        }\n\n        return values;\n      }\n      else\n      {\n        return (element.value || \"\").replace(/\\r/g, \"\");\n      }\n    },\n\n\n    /**\n     * Sets the text wrap behaviour of a text area element.\n     * This property uses the attribute \"wrap\" respectively\n     * the style property \"whiteSpace\"\n     *\n     * @signature function(element, wrap)\n     * @param element {Element} DOM element to modify\n     * @param wrap {Boolean} Whether to turn text wrap on or off.\n     */\n    setWrap : qx.core.Environment.select(\"engine.name\",\n    {\n      \"mshtml\" : function(element, wrap) {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n\n        // Explicitly set overflow-y CSS property to auto when wrapped,\n        // allowing the vertical scroll-bar to appear if necessary\n        var styleValue = wrap ? \"auto\" : \"\";\n\n        element.wrap = wrapValue;\n        element.style.overflowY = styleValue;\n      },\n\n      \"gecko\" : function(element, wrap)\n      {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n        var styleValue = wrap ? \"\" : \"auto\";\n\n        element.setAttribute(\"wrap\", wrapValue);\n        element.style.overflow = styleValue;\n      },\n\n      \"webkit\" : function(element, wrap)\n      {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n        var styleValue = wrap ? \"\" : \"auto\";\n\n        element.setAttribute(\"wrap\", wrapValue);\n        element.style.overflow = styleValue;\n      },\n\n      \"default\" : function(element, wrap) {\n        element.style.whiteSpace = wrap ? \"normal\" : \"nowrap\";\n      }\n    })\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Timer, which accelerates after each interval. The initial delay and the\n * interval time can be set using the properties {@link #firstInterval}\n * and {@link #interval}. The {@link #interval} events will be fired with\n * decreasing interval times while the timer is running, until the {@link #minimum}\n * is reached. The {@link #decrease} property sets the amount of milliseconds\n * which will decreased after every firing.\n *\n * This class is e.g. used in the {@link qx.ui.form.RepeatButton} and\n * {@link qx.ui.form.HoverButton} widgets.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.AcceleratingTimer\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.core.IDisposable ],\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__timer = new qx.event.Timer(this.getInterval());\n    this.__timer.addListener(\"interval\", this._onInterval, this);\n  },\n\n\n  events :\n  {\n    /** This event if fired each time the interval time has elapsed */\n    \"interval\" : \"qx.event.type.Event\"\n  },\n\n\n  properties :\n  {\n    /**\n     * Interval used after the first run of the timer. Usually a smaller value\n     * than the \"firstInterval\" property value to get a faster reaction.\n     */\n    interval :\n    {\n      check : \"Integer\",\n      init  : 100\n    },\n\n    /**\n     * Interval used for the first run of the timer. Usually a greater value\n     * than the \"interval\" property value to a little delayed reaction at the first\n     * time.\n     */\n    firstInterval :\n    {\n      check : \"Integer\",\n      init  : 500\n    },\n\n    /** This configures the minimum value for the timer interval. */\n    minimum :\n    {\n      check : \"Integer\",\n      init  : 20\n    },\n\n    /** Decrease of the timer on each interval (for the next interval) until minTimer reached. */\n    decrease :\n    {\n      check : \"Integer\",\n      init  : 2\n    }\n  },\n\n\n  members :\n  {\n    __timer : null,\n    __currentInterval : null,\n\n    /**\n     * Reset and start the timer.\n     */\n    start : function()\n    {\n      this.__timer.setInterval(this.getFirstInterval());\n      this.__timer.start();\n    },\n\n\n    /**\n     * Stop the timer\n     */\n    stop : function()\n    {\n      this.__timer.stop();\n      this.__currentInterval = null;\n    },\n\n\n    /**\n     * Interval event handler\n     */\n    _onInterval : function()\n    {\n      this.__timer.stop();\n\n      if (this.__currentInterval == null) {\n        this.__currentInterval = this.getInterval();\n      }\n\n      this.__currentInterval = Math.max(\n        this.getMinimum(),\n        this.__currentInterval - this.getDecrease()\n      );\n\n      this.__timer.setInterval(this.__currentInterval);\n      this.__timer.start();\n\n      this.fireEvent(\"interval\");\n    }\n  },\n\n\n  destruct : function() {\n    this._disposeObjects(\"__timer\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Generic escaping and unescaping of DOM strings.\n *\n * {@link qx.bom.String} for (un)escaping of HTML strings.\n * {@link qx.xml.String} for (un)escaping of XML strings.\n */\nqx.Bootstrap.define(\"qx.util.StringEscape\",\n{\n  statics :\n  {\n    /**\n     * generic escaping method\n     *\n     * @param str {String} string to escape\n     * @param charCodeToEntities {Map} entity to charcode map\n     * @return {String} escaped string\n     */\n    escape : function(str, charCodeToEntities)\n    {\n      var entity, result = \"\";\n\n      for (var i=0, l=str.length; i<l; i++)\n      {\n        var chr = str.charAt(i);\n        var code = chr.charCodeAt(0);\n\n        if (charCodeToEntities[code]) {\n          entity = \"&\" + charCodeToEntities[code] + \";\";\n        }\n        else\n        {\n          if (code > 0x7F) {\n            entity = \"&#\" + code + \";\";\n          } else {\n            entity = chr;\n          }\n        }\n\n        result += entity;\n      }\n\n      return result;\n    },\n\n\n    /**\n     * generic unescaping method\n     *\n     * @param str {String} string to unescape\n     * @param entitiesToCharCode {Map} charcode to entity map\n     * @return {String} unescaped string\n     */\n    unescape : function(str, entitiesToCharCode)\n    {\n      return str.replace(/&[#\\w]+;/gi, function(entity)\n      {\n        var chr = entity;\n        var entity = entity.substring(1, entity.length - 1);\n        var code = entitiesToCharCode[entity];\n\n        if (code) {\n          chr = String.fromCharCode(code);\n        }\n        else\n        {\n          if (entity.charAt(0) == '#')\n          {\n            if (entity.charAt(1).toUpperCase() == 'X')\n            {\n              code = entity.substring(2);\n\n              // match hex number\n              if (code.match(/^[0-9A-Fa-f]+$/gi)) {\n                chr = String.fromCharCode(parseInt(code, 16));\n              }\n            }\n            else\n            {\n              code = entity.substring(1);\n\n              // match integer\n              if (code.match(/^\\d+$/gi)) {\n                chr = String.fromCharCode(parseInt(code, 10));\n              }\n            }\n          }\n        }\n\n        return chr;\n      });\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n/**\n * Defines the callback for the single selection manager.\n *\n * @internal\n */\nqx.Interface.define(\"qx.ui.core.ISingleSelectionProvider\",\n{\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Returns the elements which are part of the selection.\n     *\n     * @return {qx.ui.core.Widget[]} The widgets for the selection.\n     */\n    getItems: function() {},\n\n    /**\n     * Returns whether the given item is selectable.\n     *\n     * @param item {qx.ui.core.Widget} The item to be checked\n     * @return {Boolean} Whether the given item is selectable\n     */\n    isItemSelectable : function(item) {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Static class, which contains functionality to localize the names of keyboard keys.\n */\n\nqx.Class.define(\"qx.locale.Key\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * Return localized name of a key identifier\n     * {@link qx.event.type.KeySequence}\n     *\n     * @param size {String} format of the key identifier.\n     *       Possible values: \"short\", \"full\"\n     * @param keyIdentifier {String} key identifier to translate {@link qx.event.type.KeySequence}\n     * @param locale {String} optional locale to be used\n     * @return {String} localized key name\n     */\n    getKeyName : function(size, keyIdentifier, locale)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertInArray(size, [\"short\", \"full\"]);\n      }\n\n      var key = \"key_\" + size + \"_\" + keyIdentifier;\n      // Control is always named control on a mac and not Strg in German e.g.\n      if (qx.core.Environment.get(\"os.name\") == \"osx\" && keyIdentifier == \"Control\") {\n        key += \"_Mac\";\n      }\n      var localizedKey = qx.locale.Manager.getInstance().translate(key, [], locale);\n\n      if (localizedKey == key) {\n        return qx.locale.Key._keyNames[key] || keyIdentifier;\n      } else {\n        return localizedKey;\n      }\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics)\n  {\n    var keyNames = {};\n    var Manager = qx.locale.Manager;\n\n    // TRANSLATION: short representation of key names\n    keyNames[Manager.marktr(\"key_short_Backspace\")] = \"Backspace\";\n    keyNames[Manager.marktr(\"key_short_Tab\")] = \"Tab\";\n    keyNames[Manager.marktr(\"key_short_Space\")] = \"Space\";\n    keyNames[Manager.marktr(\"key_short_Enter\")] = \"Enter\";\n    keyNames[Manager.marktr(\"key_short_Shift\")] = \"Shift\";\n    keyNames[Manager.marktr(\"key_short_Control\")] = \"Ctrl\";\n    keyNames[Manager.marktr(\"key_short_Control_Mac\")] = \"Ctrl\";\n    keyNames[Manager.marktr(\"key_short_Alt\")] = \"Alt\";\n    keyNames[Manager.marktr(\"key_short_CapsLock\")] = \"Caps\";\n    keyNames[Manager.marktr(\"key_short_Meta\")] = \"Meta\";\n    keyNames[Manager.marktr(\"key_short_Escape\")] = \"Esc\";\n    keyNames[Manager.marktr(\"key_short_Left\")] = \"Left\";\n    keyNames[Manager.marktr(\"key_short_Up\")] = \"Up\";\n    keyNames[Manager.marktr(\"key_short_Right\")] = \"Right\";\n    keyNames[Manager.marktr(\"key_short_Down\")] = \"Down\";\n    keyNames[Manager.marktr(\"key_short_PageUp\")] = \"PgUp\";\n    keyNames[Manager.marktr(\"key_short_PageDown\")] = \"PgDn\";\n    keyNames[Manager.marktr(\"key_short_End\")] = \"End\";\n    keyNames[Manager.marktr(\"key_short_Home\")] = \"Home\";\n    keyNames[Manager.marktr(\"key_short_Insert\")] = \"Ins\";\n    keyNames[Manager.marktr(\"key_short_Delete\")] = \"Del\";\n    keyNames[Manager.marktr(\"key_short_NumLock\")] = \"Num\";\n    keyNames[Manager.marktr(\"key_short_PrintScreen\")] = \"Print\";\n    keyNames[Manager.marktr(\"key_short_Scroll\")] = \"Scroll\";\n    keyNames[Manager.marktr(\"key_short_Pause\")] = \"Pause\";\n    keyNames[Manager.marktr(\"key_short_Win\")] = \"Win\";\n    keyNames[Manager.marktr(\"key_short_Apps\")] = \"Apps\";\n\n    // TRANSLATION: full/long representation of key names\n    keyNames[Manager.marktr(\"key_full_Backspace\")] = \"Backspace\";\n    keyNames[Manager.marktr(\"key_full_Tab\")] = \"Tabulator\";\n    keyNames[Manager.marktr(\"key_full_Space\")] = \"Space\";\n    keyNames[Manager.marktr(\"key_full_Enter\")] = \"Enter\";\n    keyNames[Manager.marktr(\"key_full_Shift\")] = \"Shift\";\n    keyNames[Manager.marktr(\"key_full_Control\")] = \"Control\";\n    keyNames[Manager.marktr(\"key_full_Control_Mac\")] = \"Control\";\n    keyNames[Manager.marktr(\"key_full_Alt\")] = \"Alt\";\n    keyNames[Manager.marktr(\"key_full_CapsLock\")] = \"CapsLock\";\n    keyNames[Manager.marktr(\"key_full_Meta\")] = \"Meta\";\n    keyNames[Manager.marktr(\"key_full_Escape\")] = \"Escape\";\n    keyNames[Manager.marktr(\"key_full_Left\")] = \"Left\";\n    keyNames[Manager.marktr(\"key_full_Up\")] = \"Up\";\n    keyNames[Manager.marktr(\"key_full_Right\")] = \"Right\";\n    keyNames[Manager.marktr(\"key_full_Down\")] = \"Down\";\n    keyNames[Manager.marktr(\"key_full_PageUp\")] = \"PageUp\";\n    keyNames[Manager.marktr(\"key_full_PageDown\")] = \"PageDown\";\n    keyNames[Manager.marktr(\"key_full_End\")] = \"End\";\n    keyNames[Manager.marktr(\"key_full_Home\")] = \"Home\";\n    keyNames[Manager.marktr(\"key_full_Insert\")] = \"Insert\";\n    keyNames[Manager.marktr(\"key_full_Delete\")] = \"Delete\";\n    keyNames[Manager.marktr(\"key_full_NumLock\")] = \"NumLock\";\n    keyNames[Manager.marktr(\"key_full_PrintScreen\")] = \"PrintScreen\";\n    keyNames[Manager.marktr(\"key_full_Scroll\")] = \"Scroll\";\n    keyNames[Manager.marktr(\"key_full_Pause\")] = \"Pause\";\n    keyNames[Manager.marktr(\"key_full_Win\")] = \"Win\";\n    keyNames[Manager.marktr(\"key_full_Apps\")] = \"Apps\";\n\n    // Save\n    statics._keyNames = keyNames;\n  }\n});\n"
  ]
}