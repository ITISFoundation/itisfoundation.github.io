{
  "version": 3,
  "sources": [
    "../transpiled/qx/html/Iframe.js",
    "../transpiled/qx/event/handler/Iframe.js",
    "../transpiled/qx/bom/Iframe.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/testtapper/part-boot-bundle-9.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A cross browser iframe instance.\n */\nqx.Class.define(\"qx.html.Iframe\",\n{\n  extend : qx.html.Element,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Wrapper for the HTML Iframe element.\n   * @param url {String} Location which should be loaded inside the Iframe.\n   * @param styles {Map?null} optional map of CSS styles, where the key is the name\n   *    of the style and the value is the value to use.\n   * @param attributes {Map?null} optional map of element attributes, where the\n   *    key is the name of the attribute and the value is the value to use.\n   */\n  construct : function(url, styles, attributes)\n  {\n    this.base(arguments, \"iframe\", styles, attributes);\n\n    this.setSource(url);\n    this.addListener(\"navigate\", this.__onNavigate, this);\n\n    // add yourself to the element queue to enforce the creation of DOM element\n    qx.html.Element._modified[this.$$hash] = this;\n    qx.html.Element._scheduleFlush(\"element\");\n  },\n\n\n\n\n  /*\n   *****************************************************************************\n      EVENTS\n   *****************************************************************************\n   */\n\n  events:\n  {\n    /**\n     * The \"load\" event is fired after the iframe content has successfully been loaded.\n     */\n    \"load\" : \"qx.event.type.Event\",\n\n    /**\n    * The \"navigate\" event is fired whenever the location of the iframe\n    * changes.\n    *\n    * Useful to track user navigation and internally used to keep the source\n    * property in sync. Only works when the destination source is of same\n    * origin than the page embedding the iframe.\n    */\n    \"navigate\" : \"qx.event.type.Data\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    /*\n    ---------------------------------------------------------------------------\n      ELEMENT API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _applyProperty : function(name, value)\n    {\n      this.base(arguments, name, value);\n\n      if (name == \"source\") {\n        var element = this.getDomElement();\n        var currentUrl = qx.bom.Iframe.queryCurrentUrl(element);\n\n        // Skip if frame is already on URL.\n        //\n        // When URL of Iframe and source property get out of sync, the source\n        // property needs to be updated [BUG #4481]. This is to make sure the\n        // same source is not set twice on the BOM level.\n        if (value === currentUrl) {\n          return;\n        }\n\n        qx.bom.Iframe.setSource(element, value);\n      }\n    },\n\n    // overridden\n    _createDomElement : function() {\n      return qx.bom.Iframe.create(this._content);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IFRAME API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the DOM window object of an iframe.\n     *\n     * @return {Window} The DOM window object of the iframe.\n     */\n    getWindow : function()\n    {\n      var element = this.getDomElement();\n\n      if (element)\n      {\n        return qx.bom.Iframe.getWindow(element);\n      } else {\n        return null;\n      }\n    },\n\n\n    /**\n     * Get the DOM document object of an iframe.\n     *\n     * @return {Document} The DOM document object of the iframe.\n     */\n    getDocument : function()\n    {\n      var element = this.getDomElement();\n\n      if (element) {\n        return qx.bom.Iframe.getDocument(element);\n      } else {\n        return null;\n      }\n    },\n\n\n    /**\n     * Get the HTML body element of the iframe.\n     *\n     * @return {Element} The DOM node of the <code>body</code> element of the iframe.\n     */\n    getBody : function()\n    {\n      var element = this.getDomElement();\n\n      if (element) {\n        return qx.bom.Iframe.getBody(element);\n      } else {\n        return null;\n      }\n    },\n\n\n    /**\n     * Sets iframe's source attribute to given value\n     *\n     * @param source {String} URL to be set.\n     * @return {qx.html.Iframe} The current instance for chaining\n     */\n    setSource : function(source)\n    {\n      // the source needs to be applied directly in case the iFrame is hidden\n      this._setProperty(\"source\", source, true);\n      return this;\n    },\n\n\n    /**\n     * Get the current source.\n     *\n     * @return {String} The iframe's source\n     */\n    getSource : function() {\n      return this._getProperty(\"source\");\n    },\n\n\n    /**\n     * Sets iframe's name attribute to given value\n     *\n     * @param name {String} Name to be set.\n     * @return {qx.html.Iframe} The current instance for chaining\n     */\n    setName : function(name)\n    {\n      this.setAttribute(\"name\", name);\n      return this;\n    },\n\n\n    /**\n     * Get the current name.\n     *\n     * @return {String} The iframe's name.\n     */\n    getName : function() {\n      return this.getAttribute(\"name\");\n    },\n\n\n    /**\n     * Reloads iframe\n     */\n    reload : function()\n    {\n      var element = this.getDomElement();\n\n      if (element)\n      {\n        var url = this.getSource();\n        this.setSource(null);\n        this.setSource(url);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n    * Handle user navigation. Sync actual URL of iframe with source property.\n    *\n    * @param e {qx.event.type.Data} navigate event\n    */\n    __onNavigate: function(e) {\n      var actualUrl = e.getData();\n      if (actualUrl) {\n        this.setSource(actualUrl);\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This handler provides a \"load\" event for iframes\n */\nqx.Class.define(\"qx.event.handler.Iframe\",\n{\n  extend : qx.core.Object,\n  implement : qx.event.IEventHandler,\n\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES : {\n      load: 1,\n      navigate: 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_DOMNODE,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : false,\n\n    /**\n     * Internal function called by iframes created using {@link qx.bom.Iframe}.\n     *\n     * @signature function(target)\n     * @internal\n     * @param target {Element} DOM element which is the target of this event\n     */\n    onevent : qx.event.GlobalError.observeMethod(function(target) {\n\n      // Fire navigate event when actual URL diverges from stored URL\n      var currentUrl = qx.bom.Iframe.queryCurrentUrl(target);\n\n      if (currentUrl !== target.$$url) {\n        qx.event.Registration.fireEvent(target, \"navigate\", qx.event.type.Data, [currentUrl]);\n        target.$$url = currentUrl;\n      }\n\n      // Always fire load event\n      qx.event.Registration.fireEvent(target, \"load\");\n    })\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type) {\n      return target.tagName.toLowerCase() === \"iframe\";\n    },\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    }\n\n\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Jonathan Wei√ü (jonathan_rass)\n     * Christian Hagendorn (Chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Cross browser abstractions to work with iframes.\n *\n * @require(qx.event.handler.Iframe)\n */\nqx.Class.define(\"qx.bom.Iframe\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * @type {Map} Default attributes for creation {@link #create}.\n     */\n    DEFAULT_ATTRIBUTES :\n    {\n      onload : \"qx.event.handler.Iframe.onevent(this)\",\n      frameBorder: 0,\n      frameSpacing: 0,\n      marginWidth: 0,\n      marginHeight: 0,\n      hspace: 0,\n      vspace: 0,\n      border: 0,\n      allowTransparency: true\n    },\n\n    /**\n     * Creates an DOM element.\n     *\n     * Attributes may be given directly with this call. This is critical\n     * for some attributes e.g. name, type, ... in many clients.\n     *\n     * @param attributes {Map?null} Map of attributes to apply\n     * @param win {Window?null} Window to create the element for\n     * @return {Element} The created iframe node\n     */\n    create : function(attributes, win)\n    {\n      // Work on a copy to not modify given attributes map\n      var attributes = attributes ? qx.lang.Object.clone(attributes) : {};\n      var initValues = qx.bom.Iframe.DEFAULT_ATTRIBUTES;\n\n      for (var key in initValues)\n      {\n        if (attributes[key] == null) {\n          attributes[key] = initValues[key];\n        }\n      }\n\n      return qx.dom.Element.create(\"iframe\", attributes, win);\n    },\n\n\n    /**\n     * Get the DOM window object of an iframe.\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @return {Window?null} The DOM window object of the iframe or null.\n     * @signature function(iframe)\n     */\n    getWindow : function(iframe)\n    {\n      try {\n        return iframe.contentWindow;\n      } catch(ex) {\n        return null;\n      }\n    },\n\n\n    /**\n     * Get the DOM document object of an iframe.\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @return {Document} The DOM document object of the iframe.\n     */\n    getDocument : function(iframe)\n    {\n      if (\"contentDocument\" in iframe) {\n        try {\n          return iframe.contentDocument;\n        } catch(ex) {\n          return null;\n        }\n      }\n\n      try {\n        var win = this.getWindow(iframe);\n        return win ? win.document : null;\n      } catch(ex) {\n        return null;\n      }\n    },\n\n\n    /**\n     * Get the HTML body element of the iframe.\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @return {Element} The DOM node of the <code>body</code> element of the iframe.\n     */\n    getBody : function(iframe)\n    {\n      try\n      {\n        var doc = this.getDocument(iframe);\n        return doc ? doc.getElementsByTagName(\"body\")[0] : null;\n      }\n      catch(ex)\n      {\n        return null;\n      }\n    },\n\n\n    /**\n     * Sets iframe's source attribute to given value\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @param source {String} URL to be set.\n     * @signature function(iframe, source)\n     */\n    setSource : function(iframe, source)\n    {\n      try\n      {\n        // the guru says ...\n        // it is better to use 'replace' than 'src'-attribute, since 'replace'\n        // does not interfere with the history (which is taken care of by the\n        // history manager), but there has to be a loaded document\n        if (this.getWindow(iframe) && qx.dom.Hierarchy.isRendered(iframe))\n        {\n          /*\n            Some gecko users might have an exception here:\n            Exception... \"Component returned failure code: 0x805e000a\n            [nsIDOMLocation.replace]\"  nsresult: \"0x805e000a (<unknown>)\"\n          */\n          try\n          {\n            // Webkit on Mac can't set the source when the iframe is still\n            // loading its current page\n            if ((qx.core.Environment.get(\"engine.name\") == \"webkit\") &&\n                qx.core.Environment.get(\"os.name\") == \"osx\")\n            {\n              var contentWindow = this.getWindow(iframe);\n              if (contentWindow) {\n                contentWindow.stop();\n              }\n            }\n            this.getWindow(iframe).location.replace(source);\n          }\n          catch(ex)\n          {\n            iframe.src = source;\n          }\n        }\n        else\n        {\n          iframe.src = source;\n        }\n\n      // This is a programmer provided source. Remember URL for this source\n      // for later comparison with current URL. The current URL can diverge\n      // if the end-user navigates in the Iframe.\n      this.__rememberUrl(iframe);\n\n      }\n      catch(ex) {\n        qx.log.Logger.warn(\"Iframe source could not be set!\");\n      }\n    },\n\n\n    /**\n     * Returns the current (served) URL inside the iframe\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @return {String} Returns the location href or null (if a query is not possible/allowed)\n     */\n    queryCurrentUrl : function(iframe)\n    {\n      var doc = this.getDocument(iframe);\n\n      try\n      {\n        if (doc && doc.location) {\n          return doc.location.href;\n        }\n      }\n      catch(ex) {};\n\n      return \"\";\n    },\n\n\n    /**\n    * Remember actual URL of iframe.\n    *\n    * @param iframe {Element} DOM element of the iframe.\n    */\n    __rememberUrl: function(iframe)\n    {\n\n      // URL can only be detected after load. Retrieve and store URL once.\n      var callback = function() {\n        qx.bom.Event.removeNativeListener(iframe, \"load\", callback);\n        iframe.$$url = qx.bom.Iframe.queryCurrentUrl(iframe);\n      };\n\n      qx.bom.Event.addNativeListener(iframe, \"load\", callback);\n    }\n\n  }\n});\n"
  ]
}