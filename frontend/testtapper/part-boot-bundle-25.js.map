{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/core/scroll/IScrollBar.js",
    "../transpiled/qx/ui/core/scroll/ScrollBar.js",
    "../transpiled/qx/ui/core/scroll/ScrollPane.js",
    "../transpiled/qx/ui/core/selection/Abstract.js",
    "../transpiled/qx/ui/virtual/selection/Abstract.js",
    "../transpiled/qx/ui/virtual/selection/Row.js",
    "../transpiled/qx/ui/tree/core/OpenCloseController.js",
    "../transpiled/qx/ui/virtual/core/IWidgetCellProvider.js",
    "../transpiled/qx/ui/tree/provider/IVirtualTreeProvider.js",
    "../transpiled/qx/ui/tree/core/MWidgetController.js",
    "../transpiled/qx/ui/tree/provider/WidgetProvider.js",
    "../transpiled/qx/ui/tree/core/Util.js",
    "../transpiled/qx/util/Delegate.js",
    "../transpiled/qx/ui/virtual/core/Axis.js",
    "../transpiled/qx/ui/virtual/core/ILayer.js",
    "../transpiled/qx/ui/virtual/core/CellEvent.js"
  ],
  "names": [],
  "mappings": ";;;;;;;;;AAAC,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AAGA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,8BAAnB,EACA;AACC,IAAA,MAAM,EACN;AACE;AACA,gBAAW,oBAFb;;AAGE;AACA,4BAAsB;AAJxB,KAFD;AAUC,IAAA,UAAU,EACV;AACE;;;AAGA,MAAA,WAAW,EAAG,EAJhB;;AAOE;;;;AAIA,MAAA,OAAO,EAAG,EAXZ;;AAcE;;;;;;;;AAQA,MAAA,QAAQ,EAAG,EAtBb;;AAyBE;;;;AAIA,MAAA,UAAU,EAAG;AA7Bf,KAXD;AA4CC,IAAA,OAAO,EACP;AACE;;;;;;;;;AASA,MAAA,QAAQ,EAAG,kBAAS,QAAT,EAAmB,QAAnB,EAA6B;AACtC,aAAK,YAAL,CAAkB,QAAlB;AACD,OAZH;;AAeE;;;;;;;;;AASA,MAAA,QAAQ,EAAG,kBAAS,MAAT,EAAiB,QAAjB,EAA2B;AACpC,aAAK,YAAL,CAAkB,MAAlB;AACD,OA1BH;;AA6BE;;;;;;;;;AASA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB,QAAhB,EAA0B;AACxC,aAAK,YAAL,CAAkB,KAAlB;AACD;AAxCH;AA7CD,GADA;AArBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,MAAV,CAAiB,UAAjB,CAA4B,aAA5B,GAA4C,aAA5C;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,6BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;AAEC,IAAA,SAAS,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAAX,CAAkB,UAF/B;;AAMC;;;;;;AAMA;;;AAGA,IAAA,SAAS,EAAG,mBAAS,WAAT,EACZ;AACE,+CADF,CAGE;;AACA,WAAK,mBAAL,CAAyB,cAAzB;;AACA,WAAK,mBAAL,CAAyB,QAAzB,EAAmC,WAAnC,CAA+C,QAA/C,EAAyD,KAAK,eAA9D,EAA+E,IAA/E;;AACA,WAAK,mBAAL,CAAyB,YAAzB,EANF,CAQE;;;AACA,UAAI,WAAW,IAAI,IAAnB,EAAyB;AACvB,aAAK,cAAL,CAAoB,WAApB;AACD,OAFD,MAEO;AACL,aAAK,eAAL;AACD,OAbH,CAeE;;;AACA,WAAK,WAAL,CAAiB,OAAjB,EAA0B,UAAS,CAAT,EAAY;AACpC,QAAA,CAAC,CAAC,eAAF;AACD,OAFD,EAEG,IAFH;AAGD,KAnCF;AAsCC,IAAA,MAAM,EAAG;AACP;AACA,4BAAsB;AAFf,KAtCV;;AA8CC;;;;;AAMA,IAAA,UAAU,EACV;AACE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAHF;;AASE;;;AAGA,MAAA,WAAW,EACX;AACE,QAAA,KAAK,EAAG,CAAE,YAAF,EAAgB,UAAhB,CADV;AAEE,QAAA,IAAI,EAAG,YAFT;AAGE,QAAA,KAAK,EAAG;AAHV,OAbF;;AAoBE;;;;AAIA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,iBADV;AAEE,QAAA,KAAK,EAAG,eAFV;AAGE,QAAA,IAAI,EAAG;AAHT,OAzBF;;AAgCE;;;;;;;;AAQA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,kEADV;AAEE,QAAA,IAAI,EAAG,CAFT;AAGE,QAAA,KAAK,EAAG,gBAHV;AAIE,QAAA,KAAK,EAAG;AAJV,OAzCF;;AAiDE;;;AAGA,MAAA,UAAU,EACV;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT,OArDF;;AA2DE;;;;AAIA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,EAFT;AAGE,QAAA,KAAK,EAAG;AAHV,OAhEF;;AAuEE;;;;AAIA,MAAA,UAAU,EACV;AACE,QAAA,KAAK,EAAG,gBADV;AAEE,QAAA,KAAK,EAAG,kBAFV;AAGE,QAAA,QAAQ,EAAG;AAHb;AA5EF,KArDD;;AA4IC;;;;;AAMA,IAAA,OAAO,EACP;AACE,MAAA,QAAQ,EAAG,CADb;AAEE,MAAA,iBAAiB,EAAG,CAFtB;AAKE;AACA,MAAA,gBAAgB,EAAG,4BAAW;AAC5B,YAAI,IAAI,yEAAR;;AACA,YAAI,KAAK,cAAL,OAA0B,YAA9B,EAA4C;AAC1C,eAAK,iBAAL,GAAyB,IAAI,CAAC,QAA9B;AACA,UAAA,IAAI,CAAC,QAAL,GAAgB,CAAhB;AACD,SAHD,MAGO;AACL,eAAK,iBAAL,GAAyB,IAAI,CAAC,SAA9B;AACA,UAAA,IAAI,CAAC,SAAL,GAAiB,CAAjB;AACD;;AACD,eAAO,IAAP;AACD,OAhBH;AAmBE;AACA,MAAA,YAAY,EAAG,sBAAS,IAAT,EAAe,GAAf,EAAoB,KAApB,EAA2B,MAA3B,EAAmC;AAChD,YAAI,OAAO,sEAAwB,IAAxB,EAA8B,GAA9B,EAAmC,KAAnC,EAA0C,MAA1C,CAAX;AACA,YAAI,UAAU,GAAG,KAAK,cAAL,OAA0B,YAA3C;;AACA,YAAI,KAAK,iBAAL,KAA2B,UAAU,GAAG,KAAH,GAAW,MAAhD,CAAJ,EAA6D;AAC3D,eAAK,eAAL,CAAqB,cAArB,EAAqC,aAArC,CAAmD,QAAnD;AACA,eAAK,eAAL,CAAqB,YAArB,EAAmC,aAAnC,CAAiD,QAAjD;AACD,SAHD,MAGO;AACL,eAAK,eAAL,CAAqB,cAArB,EAAqC,aAArC,CAAmD,SAAnD;AACA,eAAK,eAAL,CAAqB,YAArB,EAAmC,aAAnC,CAAiD,SAAjD;AACD;;AAED,eAAO,OAAP;AACD,OAhCH;AAkCE;AACA,MAAA,uBAAuB,EAAG,iCAAS,EAAT,EAAa,IAAb,EAC1B;AACE,YAAI,OAAJ;;AAEA,gBAAO,EAAP;AAEE,eAAK,QAAL;AACE,YAAA,OAAO,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAAX,CAAkB,YAAtB,EAAV;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,GAApB;AACA,YAAA,OAAO,CAAC,YAAR,CAAqB,KAArB;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,aAApB,EAAmC,KAAK,oBAAxC,EAA8D,IAA9D;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,mBAApB,EAAyC,KAAK,oBAA9C,EAAoE,IAApE;;AACA,iBAAK,IAAL,CAAU,OAAV,EAAmB;AAAC,cAAA,IAAI,EAAE;AAAP,aAAnB;;AACA;;AAEF,eAAK,cAAL;AACE;AACA,YAAA,OAAO,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,YAAf,EAAV;AACA,YAAA,OAAO,CAAC,YAAR,CAAqB,KAArB;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,SAApB,EAA+B,KAAK,eAApC,EAAqD,IAArD;;AACA,iBAAK,IAAL,CAAU,OAAV;;AACA;;AAEF,eAAK,YAAL;AACE;AACA,YAAA,OAAO,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,YAAf,EAAV;AACA,YAAA,OAAO,CAAC,YAAR,CAAqB,KAArB;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,SAApB,EAA+B,KAAK,aAApC,EAAmD,IAAnD;;AACA,iBAAK,IAAL,CAAU,OAAV;;AACA;AAzBJ;;AA4BA,eAAO,OAAO,kFAAyB,EAAzB,CAAd;AACD,OApEH;;AAyEE;;;;;AAMA;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB;AAC9B,aAAK,eAAL,CAAqB,QAArB,EAA+B,UAA/B,CAA0C,KAA1C;AACD,OAlFH;AAqFE;AACA,MAAA,cAAc,EAAG,wBAAS,KAAT,EAAgB;AAC/B,aAAK,eAAL,CAAqB,QAArB,EAA+B,QAA/B,CAAwC,KAAxC;AACD,OAxFH;AA2FE;AACA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EAAgB;AACjC,aAAK,eAAL,CAAqB,QAArB,EAA+B,aAA/B,CAA6C,KAA7C;AACD,OA9FH;AAiGE;AACA,MAAA,cAAc,EAAG,wBAAS,KAAT,EAAgB;AAC/B,aAAK,eAAL,CAAqB,QAArB,EAA+B,WAA/B,CAA2C,KAA3C;AACD,OApGH;AAuGE;AACA,MAAA,iBAAiB,EAAG,2BAAS,KAAT,EAAgB,GAAhB,EACpB;AACE;AACA,YAAI,SAAS,GAAG,KAAK,UAAL,EAAhB;;AACA,YAAI,SAAJ,EAAe;AACb,UAAA,SAAS,CAAC,OAAV;AACD,SALH,CAOE;;;AACA,YAAI,KAAK,KAAK,YAAd,EACA;AACE,eAAK,UAAL,CAAgB,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAjB,EAAhB;;AAEA,eAAK,gBAAL,CAAsB,IAAtB;AACA,eAAK,gBAAL,CAAsB,KAAtB;AAEA,eAAK,YAAL,CAAkB,UAAlB,EAA8B,YAA9B;AAEA,eAAK,eAAL,CAAqB,cAArB,EAAqC,YAArC,CAAkD,IAAlD,EAAwD,MAAxD;AACA,eAAK,eAAL,CAAqB,YAArB,EAAmC,YAAnC,CAAgD,MAAhD,EAAwD,OAAxD;AACD,SAXD,MAaA;AACE,eAAK,UAAL,CAAgB,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAjB,EAAhB;;AAEA,eAAK,gBAAL,CAAsB,KAAtB;AACA,eAAK,gBAAL,CAAsB,IAAtB;AAEA,eAAK,YAAL,CAAkB,YAAlB,EAAgC,UAAhC;AAEA,eAAK,eAAL,CAAqB,cAArB,EAAqC,YAArC,CAAkD,MAAlD,EAA0D,IAA1D;AACA,eAAK,eAAL,CAAqB,YAArB,EAAmC,YAAnC,CAAgD,OAAhD,EAAyD,MAAzD;AACD,SA/BH,CAiCE;;;AACA,aAAK,eAAL,CAAqB,QAArB,EAA+B,cAA/B,CAA8C,KAA9C;AACD,OA5IH;;AAkJE;;;;;;AAMA;;;;;;;;;AASA,MAAA,QAAQ,EAAG,kBAAS,QAAT,EAAmB,QAAnB,EAA6B;AACtC,aAAK,eAAL,CAAqB,QAArB,EAA+B,OAA/B,CAAuC,QAAvC,EAAiD,QAAjD;AACD,OAnKH;;AAsKE;;;;;;;;;AASA,MAAA,QAAQ,EAAG,kBAAS,MAAT,EAAiB,QAAjB,EAA2B;AACpC,aAAK,eAAL,CAAqB,QAArB,EAA+B,OAA/B,CAAuC,MAAvC,EAA+C,QAA/C;AACD,OAjLH;;AAoLE;;;;;;;;;AASA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB,QAAhB,EAA0B;AACxC,YAAI,IAAI,GAAG,KAAK,aAAL,EAAX;AACA,aAAK,eAAL,CAAqB,QAArB,EAA+B,OAA/B,CAAuC,KAAK,GAAG,IAA/C,EAAqD,QAArD;AACD,OAhMH;;AAmME;;;;AAIA,MAAA,cAAc,EAAG,wBAAS,QAAT,EAAmB;AAClC,aAAK,eAAL,CAAqB,QAArB,EAA+B,cAA/B,CAA8C,QAA9C;AACD,OAzMH;;AA4ME;;;AAGA,MAAA,mBAAmB,EAAG,+BAAW;AAC/B,aAAK,eAAL,CAAqB,QAArB,EAA+B,kBAA/B;AACD,OAjNH;;AAoNE;;;;;;AAMA;;;;;AAKA,MAAA,eAAe,EAAG,yBAAS,CAAT,EAAY;AAC5B,aAAK,QAAL,CAAc,CAAC,KAAK,aAAL,EAAf,EAAqC,EAArC;AACD,OAjOH;;AAoOE;;;;;AAKA,MAAA,aAAa,EAAG,uBAAS,CAAT,EAAY;AAC1B,aAAK,QAAL,CAAc,KAAK,aAAL,EAAd,EAAoC,EAApC;AACD,OA3OH;;AA8OE;;;AAGA,MAAA,oBAAoB,EAAG,gCAAW;AAChC,aAAK,SAAL,CAAe,oBAAf;AACD,OAnPH;;AAsPE;;;;;AAKA,MAAA,oBAAoB,EAAG,8BAAS,CAAT,EAAY;AACjC,aAAK,WAAL,CAAiB,CAAC,CAAC,OAAF,EAAjB;AACD,OA7PH;;AA+PE;;;;;;AAMA,MAAA,eAAe,EAAG,yBAAS,CAAT,EAClB;AACE,YAAI,IAAI,GAAG,KAAK,eAAL,CAAqB,QAArB,EAA+B,eAA/B,CAA+C,MAA/C,CAAX;AACA,YAAI,QAAQ,GAAG,IAAI,CAAC,WAAL,EAAf;AACA,YAAI,QAAQ,GAAG,KAAf;AACA,YAAI,UAAU,GAAG,KAAK,eAAL,CAAqB,QAArB,EAA+B,YAA/B,EAAjB;;AAEA,YAAI,KAAK,cAAL,MAAyB,UAA7B,EACA;AACE,cAAI,UAAU,CAAC,MAAX,GAAqB,QAAQ,CAAC,SAAT,GAAqB,KAAK,QAAnD,EAA6D;AAC3D,YAAA,QAAQ,GAAG,IAAX;AACD;AACF,SALD,MAOA;AACE,cAAI,UAAU,CAAC,KAAX,GAAoB,QAAQ,CAAC,QAAT,GAAoB,KAAK,QAAjD,EAA2D;AACzD,YAAA,QAAQ,GAAG,IAAX;AACD;AACF;;AAED,YAAI,QAAJ,EAAc;AACZ,UAAA,IAAI,CAAC,OAAL;AACD,SAFD,MAEO;AACL,UAAA,IAAI,CAAC,IAAL;AACD;AACF;AA9RH;AAnJD,GADA;AAjDA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,MAAV,CAAiB,SAAjB,CAA2B,aAA3B,GAA2C,aAA3C;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAMA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,8BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;;AAIC;;;;;AAMA,IAAA,SAAS,EAAG,qBACZ;AACE;AAEA,WAAK,GAAL,CAAS;AACP,QAAA,QAAQ,EAAE,CADH;AAEP,QAAA,SAAS,EAAE;AAFJ,OAAT,EAHF,CAQE;;AACA,WAAK,UAAL,CAAgB,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAjB,EAAhB,EATF,CAWE;;;AACA,WAAK,WAAL,CAAiB,QAAjB,EAA2B,KAAK,SAAhC;AAEA,UAAI,SAAS,GAAG,KAAK,iBAAL,EAAhB,CAdF,CAgBE;;AACA,MAAA,SAAS,CAAC,WAAV,CAAsB,QAAtB,EAAgC,KAAK,SAArC,EAAgD,IAAhD,EAjBF,CAmBE;AACA;;AACA,MAAA,SAAS,CAAC,WAAV,CAAsB,QAAtB,EAAgC,KAAK,SAArC,EAAgD,IAAhD;AACD,KAjCF;;AAsCC;;;;;AAMA,IAAA,MAAM,EACN;AACE;AACA,MAAA,MAAM,EAAG,qBAFX;;AAIE;AACA,MAAA,kBAAkB,EAAG;AALvB,KA7CD;;AAwDC;;;;;AAMA,IAAA,UAAU,EACV;AACE;AACA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,qEADV;AAEE,QAAA,KAAK,EAAG,eAFV;AAGE,QAAA,SAAS,EAAE,mBAHb;AAIE,QAAA,KAAK,EAAG,SAJV;AAKE,QAAA,IAAI,EAAI;AALV,OAHF;;AAWE;AACA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,qEADV;AAEE,QAAA,KAAK,EAAG,eAFV;AAGE,QAAA,SAAS,EAAE,mBAHb;AAIE,QAAA,KAAK,EAAG,SAJV;AAKE,QAAA,IAAI,EAAI;AALV;AAbF,KA/DD;;AAyFC;;;;;AAMA,IAAA,OAAO,EACP;AACE,MAAA,OAAO,EAAG,IADZ;;AAIE;;;;;;AAMA;;;;;;AAMA,MAAA,GAAG,EAAG,aAAS,MAAT,EACN;AACE,YAAI,GAAG,GAAG,KAAK,YAAL,GAAoB,CAApB,CAAV;;AACA,YAAI,GAAJ,EACA;AACE,eAAK,OAAL,CAAa,GAAb;;AACA,UAAA,GAAG,CAAC,cAAJ,CAAmB,QAAnB,EAA6B,KAAK,SAAlC,EAA6C,IAA7C;AACD;;AAED,YAAI,MAAJ,EACA;AACE,eAAK,IAAL,CAAU,MAAV;;AACA,UAAA,MAAM,CAAC,WAAP,CAAmB,QAAnB,EAA6B,KAAK,SAAlC,EAA6C,IAA7C;AACD;AACF,OA9BH;;AAiCE;;;;;;AAMA,MAAA,MAAM,EAAG,gBAAS,MAAT,EACT;AACE,YAAI,MAAJ,EACA;AACE,eAAK,OAAL,CAAa,MAAb;;AACA,UAAA,MAAM,CAAC,cAAP,CAAsB,QAAtB,EAAgC,KAAK,SAArC,EAAgD,IAAhD;AACD;AACF,OA9CH;;AAiDE;;;;;AAKA,MAAA,WAAW,EAAG,uBAAW;AACvB,eAAO,KAAK,YAAL,EAAP;AACD,OAxDH;;AA4DE;;;;;;AAMA;;;;;AAKA,MAAA,SAAS,EAAG,mBAAS,CAAT,EAAY;AACtB,aAAK,SAAL,CAAe,QAAf;AACD,OAzEH;;AA4EE;;;;;AAKA,MAAA,SAAS,EAAG,mBAAS,CAAT,EACZ;AACE,YAAI,SAAS,GAAG,KAAK,iBAAL,EAAhB;AAEA,aAAK,UAAL,CAAgB,SAAS,CAAC,UAAV,EAAhB;AACA,aAAK,UAAL,CAAgB,SAAS,CAAC,UAAV,EAAhB;AACD,OAvFH;;AA0FE;;;;;AAKA,MAAA,SAAS,EAAG,mBAAS,CAAT,EACZ;AACE,YAAI,SAAS,GAAG,KAAK,iBAAL,EAAhB;AAEA,YAAI,SAAS,GAAG,KAAK,UAAL,EAAhB;AACA,YAAI,IAAI,GAAG,SAAS,CAAC,UAAV,EAAX;;AAEA,YAAI,SAAS,IAAI,IAAjB,EAAuB;AACrB,UAAA,SAAS,CAAC,SAAV,CAAoB,SAApB;AACD;;AAED,YAAI,SAAS,GAAG,KAAK,UAAL,EAAhB;AACA,YAAI,IAAI,GAAG,SAAS,CAAC,UAAV,EAAX;;AAEA,YAAI,SAAS,IAAI,IAAjB,EAAuB;AACrB,UAAA,SAAS,CAAC,SAAV,CAAoB,SAApB;AACD;AACF,OAhHH;;AAsHE;;;;;;AAMA;;;;;;;AAOA,MAAA,UAAU,EAAG,oBAAS,IAAT,EACb;AACE,YAAI,GAAG,GAAG,CAAV;;AAEA,WACA;AACE,UAAA,GAAG,IAAI,IAAI,CAAC,SAAL,GAAiB,GAAxB;AACA,UAAA,IAAI,GAAG,IAAI,CAAC,eAAL,EAAP;AACD,SAJD,QAKO,IAAI,IAAI,IAAI,KAAK,IALxB;;AAOA,eAAO,GAAP;AACD,OA/IH;;AAkJE;;;;;;;AAOA,MAAA,aAAa,EAAG,uBAAS,IAAT,EAAe;AAC7B,eAAO,KAAK,UAAL,CAAgB,IAAhB,IAAwB,IAAI,CAAC,SAAL,GAAiB,MAAhD;AACD,OA3JH;;AA8JE;;;;;;;AAOA,MAAA,WAAW,EAAG,qBAAS,IAAT,EACd;AACE,YAAI,IAAI,GAAG,CAAX;AACA,YAAI,MAAJ;;AAEA,WACA;AACE,UAAA,IAAI,IAAI,IAAI,CAAC,SAAL,GAAiB,IAAzB;AACA,UAAA,MAAM,GAAG,IAAI,CAAC,eAAL,EAAT;;AACA,cAAI,MAAJ,EAAY;AACV,YAAA,IAAI,IAAI,MAAM,CAAC,SAAP,GAAmB,IAA3B;AACD;;AACD,UAAA,IAAI,GAAG,MAAP;AACD,SARD,QASO,IAAI,IAAI,IAAI,KAAK,IATxB;;AAWA,eAAO,IAAP;AACD,OAtLH;;AAyLE;;;;;;;AAOA,MAAA,YAAY,EAAG,sBAAS,IAAT,EAAe;AAC5B,eAAO,KAAK,WAAL,CAAiB,IAAjB,IAAyB,IAAI,CAAC,SAAL,GAAiB,KAAjD;AACD,OAlMH;;AAwME;;;;;;AAMA;;;;;AAKA,MAAA,aAAa,EAAG,yBAAW;AACzB,eAAO,KAAK,WAAL,GAAmB,CAAnB,EAAsB,SAAtB,EAAP;AACD,OArNH;;AA4NE;;;;;;AAMA;;;;;AAKA,MAAA,aAAa,EAAG,yBAChB;AACE,YAAI,QAAQ,GAAG,KAAK,YAAL,EAAf;AACA,YAAI,UAAU,GAAG,KAAK,aAAL,EAAjB;;AAEA,YAAI,QAAQ,IAAI,UAAhB,EAA4B;AAC1B,iBAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,UAAU,CAAC,KAAX,GAAmB,QAAQ,CAAC,KAAxC,CAAP;AACD;;AAED,eAAO,CAAP;AACD,OAjPH;;AAoPE;;;;;AAKA,MAAA,aAAa,EAAG,yBAChB;AACE,YAAI,QAAQ,GAAG,KAAK,YAAL,EAAf;AACA,YAAI,UAAU,GAAG,KAAK,aAAL,EAAjB;;AAEA,YAAI,QAAQ,IAAI,UAAhB,EAA4B;AAC1B,iBAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,UAAU,CAAC,MAAX,GAAoB,QAAQ,CAAC,MAAzC,CAAP;AACD;;AAED,eAAO,CAAP;AACD,OAnQH;;AAsQE;;;;;;AAMA,MAAA,SAAS,EAAG,mBAAS,KAAT,EAAgB,QAAhB,EACZ;AACE,YAAI,GAAG,GAAG,KAAK,aAAL,EAAV;;AAEA,YAAI,KAAK,GAAG,CAAZ,EAAe;AACb,UAAA,KAAK,GAAG,CAAR;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,GAAZ,EAAiB;AACtB,UAAA,KAAK,GAAG,GAAR;AACD;;AAED,aAAK,mBAAL;;AAEA,YAAI,QAAJ,EAAc;AACZ,cAAI,IAAI,GAAG,KAAK,UAAL,EAAX;AACA,eAAK,OAAL,GAAe,IAAI,EAAE,CAAC,GAAH,CAAO,cAAX,EAAf;;AACA,eAAK,OAAL,CAAa,EAAb,CAAgB,KAAhB,EAAuB,YAAW;AAChC,iBAAK,UAAL,CAAgB,KAAhB;AACA,iBAAK,OAAL,GAAe,IAAf;AACA,iBAAK,SAAL,CAAe,oBAAf;AACD,WAJD,EAIG,IAJH;;AAKA,eAAK,OAAL,CAAa,EAAb,CAAgB,OAAhB,EAAyB,UAAS,UAAT,EAAqB;AAC5C,gBAAI,IAAI,GAAG,QAAQ,CAAC,UAAU,GAAC,QAAX,IAAuB,KAAK,GAAG,IAA/B,IAAuC,IAAxC,CAAnB;AACA,iBAAK,UAAL,CAAgB,IAAhB;AACD,WAHD,EAGG,IAHH;;AAIA,eAAK,OAAL,CAAa,aAAb,CAA2B,QAA3B;AAED,SAdD,MAcO;AACL,eAAK,UAAL,CAAgB,KAAhB;AACD;AACF,OAzSH;;AA4SE;;;;;;AAMA,MAAA,SAAS,EAAG,mBAAS,KAAT,EAAgB,QAAhB,EACZ;AACE,YAAI,GAAG,GAAG,KAAK,aAAL,EAAV;;AAEA,YAAI,KAAK,GAAG,CAAZ,EAAe;AACb,UAAA,KAAK,GAAG,CAAR;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,GAAZ,EAAiB;AACtB,UAAA,KAAK,GAAG,GAAR;AACD;;AAED,aAAK,mBAAL;;AAEA,YAAI,QAAJ,EAAc;AACZ,cAAI,IAAI,GAAG,KAAK,UAAL,EAAX;AACA,eAAK,OAAL,GAAe,IAAI,EAAE,CAAC,GAAH,CAAO,cAAX,EAAf;;AACA,eAAK,OAAL,CAAa,EAAb,CAAgB,KAAhB,EAAuB,YAAW;AAChC,iBAAK,UAAL,CAAgB,KAAhB;AACA,iBAAK,OAAL,GAAe,IAAf;AACA,iBAAK,SAAL,CAAe,oBAAf;AACD,WAJD,EAIG,IAJH;;AAKA,eAAK,OAAL,CAAa,EAAb,CAAgB,OAAhB,EAAyB,UAAS,UAAT,EAAqB;AAC5C,gBAAI,IAAI,GAAG,QAAQ,CAAC,UAAU,GAAC,QAAX,IAAuB,KAAK,GAAG,IAA/B,IAAuC,IAAxC,CAAnB;AACA,iBAAK,UAAL,CAAgB,IAAhB;AACD,WAHD,EAGG,IAHH;;AAIA,eAAK,OAAL,CAAa,aAAb,CAA2B,QAA3B;AAED,SAdD,MAcO;AACL,eAAK,UAAL,CAAgB,KAAhB;AACD;AACF,OA/UH;;AAkVE;;;;;;AAMA,MAAA,SAAS,EAAG,mBAAS,CAAT,EAAY,QAAZ,EAAsB;AAChC,aAAK,SAAL,CAAe,KAAK,UAAL,KAAoB,CAAnC,EAAsC,QAAtC;AACD,OA1VH;;AA6VE;;;;;;AAMA,MAAA,SAAS,EAAG,mBAAS,CAAT,EAAY,QAAZ,EAAsB;AAChC,aAAK,SAAL,CAAe,KAAK,UAAL,KAAoB,CAAnC,EAAsC,QAAtC;AACD,OArWH;;AAwWE;;;AAGA,MAAA,mBAAmB,EAAG,+BAAW;AAC/B,YAAI,KAAK,OAAT,EAAkB;AAChB,eAAK,OAAL,CAAa,cAAb;;AACA,eAAK,OAAL,GAAe,IAAf;AACD;AACF,OAhXH;;AAkXE;;;;;AAMA;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB;AAC9B,aAAK,iBAAL,GAAyB,SAAzB,CAAmC,KAAnC;AACD,OA3XH;;AA6XE;;;;;;AAMA,MAAA,iBAAiB,EAAE,2BAAS,KAAT,EAAgB;AACjC,eAAO,IAAI,CAAC,KAAL,CAAW,KAAX,CAAP;AACD,OArYH;AAwYE;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB;AAC9B,aAAK,iBAAL,GAAyB,SAAzB,CAAmC,KAAnC;AACD,OA3YH;;AA6YE;;;;;;AAMA,MAAA,iBAAiB,EAAE,2BAAS,KAAT,EAAgB;AACjC,eAAO,IAAI,CAAC,KAAL,CAAW,KAAX,CAAP;AACD;AArZH;AAhGD,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,MAAV,CAAiB,UAAjB,CAA4B,aAA5B,GAA4C,aAA5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;AAOA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,+BAAf,EACA;AACC,IAAA,IAAI,EAAG,UADR;AAEC,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MAFlB;;AAMC;;;;;AAMA,IAAA,SAAS,EAAG,qBACZ;AACE,4CADF,CAGE;;AACA,WAAK,WAAL,GAAmB,EAAnB;AACD,KAlBF;;AAuBC;;;;;AAMA,IAAA,MAAM,EACN;AACE;AACA,yBAAoB;AAFtB,KA9BD;;AAuCC;;;;;AAMA,IAAA,UAAU,EACV;AACE;;;;;;;;AAQA,MAAA,IAAI,EACJ;AACE,QAAA,KAAK,EAAG,CAAE,QAAF,EAAY,OAAZ,EAAqB,UAArB,EAAiC,KAAjC,CADV;AAEE,QAAA,IAAI,EAAG,QAFT;AAGE,QAAA,KAAK,EAAG;AAHV,OAVF;;AAiBE;;;;;;AAMA,MAAA,IAAI,EACJ;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT,OAxBF;;AA8BE;;;;;AAKA,MAAA,KAAK,EACL;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT;AApCF,KA9CD;;AA4FC;;;;;AAMA,IAAA,OAAO,EACP;AACE,MAAA,aAAa,EAAG,CADlB;AAEE,MAAA,aAAa,EAAG,CAFlB;AAGE,MAAA,aAAa,EAAG,IAHlB;AAIE,MAAA,aAAa,EAAG,IAJlB;AAKE,MAAA,UAAU,EAAG,IALf;AAME,MAAA,UAAU,EAAG,IANf;AAOE,MAAA,eAAe,EAAG,IAPpB;AAQE,MAAA,YAAY,EAAG,IARjB;AASE,MAAA,YAAY,EAAG,IATjB;AAUE,MAAA,WAAW,EAAG,IAVhB;AAWE,MAAA,UAAU,EAAG,IAXf;AAYE,MAAA,UAAU,EAAG,IAZf;AAaE,MAAA,gBAAgB,EAAG,IAbrB;AAcE,MAAA,gBAAgB,EAAG,IAdrB;AAeE,MAAA,mBAAmB,EAAG,IAfxB;AAgBE,MAAA,kBAAkB,EAAG,IAhBvB;AAiBE,MAAA,UAAU,EAAG,IAjBf;AAkBE,MAAA,WAAW,EAAG,IAlBhB;AAmBE,MAAA,YAAY,EAAG,IAnBjB;AAoBE,MAAA,uBAAuB,EAAG,IApB5B;AAsBE;AACA;AACA,MAAA,gBAAgB,EAAG,KAxBrB;AA0BE,MAAA,cAAc,EAAG,IA1BnB;;AA4BE;;;;;;AAMA;;;;;;;;AAQA,MAAA,mBAAmB,EAAG,+BAAW;AAC/B,eAAO,KAAK,kBAAZ;AACD,OA5CH;;AA+CE;;;;AAIA,MAAA,SAAS,EAAG,qBACZ;AACE,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,IAAI,QAAR,IAAoB,IAAI,IAAI,KAAhC,EAAuC;AACrC,gBAAM,IAAI,KAAJ,CAAU,iDAAiD,IAA3D,CAAN;AACD;;AAED,aAAK,eAAL;;AACA,aAAK,WAAL;AACD,OA5DH;;AA+DE;;;;;;;;;AASA,MAAA,UAAU,EAAG,oBAAS,IAAT,EACb;AACE,aAAK,gBAAL,CAAsB,IAAtB;;AAEA,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,KAAK,QAAT,IAAqB,IAAI,KAAK,KAAlC,EACA;AACE,eAAK,YAAL,CAAkB,IAAlB;;AACA,eAAK,cAAL,CAAoB,IAApB;AACD;;AAED,aAAK,mBAAL,CAAyB,IAAzB;;AACA,aAAK,WAAL;AACD,OArFH;;AAwFE;;;;;;;;AAQA,MAAA,OAAO,EAAG,iBAAS,IAAT,EACV;AACE,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,KAAK,QAAT,IAAqB,IAAI,KAAK,KAAlC,EAAyC;AACvC,eAAK,gBAAL,CAAsB,IAAtB;AACD,SAFD,MAIA;AACE,cAAI,KAAK,cAAL,MAAyB,IAA7B,EAAmC;AACjC,iBAAK,cAAL,CAAoB,IAApB;AACD;;AAED,eAAK,YAAL,CAAkB,IAAlB;;AACA,eAAK,eAAL,CAAqB,IAArB;AACD;;AAED,aAAK,mBAAL,CAAyB,IAAzB;;AACA,aAAK,WAAL;AACD,OAlHH;;AAqHE;;;;;;;;AAQA,MAAA,UAAU,EAAG,oBAAS,IAAT,EACb;AACE,aAAK,oBAAL,CAA0B,IAA1B;;AAEA,YAAI,KAAK,OAAL,OAAmB,KAAnB,IAA4B,KAAK,gBAAL,EAAhC,EACA;AACE,cAAI,QAAQ,GAAG,KAAK,sBAAL,EAAf,CADF,CAGE;;;AACA,cAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB;AACD;AACF;;AAED,YAAI,KAAK,WAAL,MAAsB,IAA1B,EAAgC;AAC9B,eAAK,YAAL,CAAkB,IAAlB;AACD;;AAED,YAAI,KAAK,cAAL,MAAyB,IAA7B,EAAmC;AACjC,eAAK,cAAL,CAAoB,IAApB;AACD;;AAED,aAAK,WAAL;AACD,OApJH;;AAuJE;;;;;;AAMA,MAAA,eAAe,EAAG,yBAAS,KAAT,EAAgB,GAAhB,EAClB;AACE,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,IAAI,QAAR,IAAoB,IAAI,IAAI,KAAhC,EAAuC;AACrC,gBAAM,IAAI,KAAJ,CAAU,sDAAsD,IAAhE,CAAN;AACD;;AAED,aAAK,gBAAL,CAAsB,KAAtB,EAA6B,GAA7B;;AAEA,aAAK,cAAL,CAAoB,KAApB;;AAEA,aAAK,YAAL,CAAkB,GAAlB;;AACA,aAAK,mBAAL,CAAyB,GAAzB;;AAEA,aAAK,WAAL;AACD,OA5KH;;AA+KE;;;;;;AAMA,MAAA,cAAc,EAAG,0BACjB;AACE,YAAI,KAAK,OAAL,MAAkB,KAAtB,EACA;AACE,cAAI,QAAQ,GAAG,KAAK,sBAAL,CAA4B,IAA5B,CAAf;;AACA,cAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB;AACD;AACF;;AAED,aAAK,eAAL;;AACA,aAAK,YAAL,CAAkB,IAAlB;;AACA,aAAK,cAAL,CAAoB,IAApB;;AAEA,aAAK,WAAL;AACD,OApMH;;AAuME;;;;;;;;AAQA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EACnB;AACE,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,IAAI,KAAR,IAAiB,IAAI,KAAK,QAA9B,EACA;AACE,cAAI,KAAK,CAAC,MAAN,GAAe,CAAnB,EAAwB;AACtB,kBAAM,IAAI,KAAJ,CAAU,mDAAmD,IAAnD,GAA0D,GAApE,CAAN;AACD;;AAED,cAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAuB;AACrB,iBAAK,UAAL,CAAgB,KAAK,CAAC,CAAD,CAArB;AACD,WAFD,MAEO;AACL,iBAAK,cAAL;AACD;;AACD;AACD,SAZD,MAcA;AACE,eAAK,sBAAL,CAA4B,KAA5B;AACD;AACF,OAnOH;;AAsOE;;;;;;AAMA,MAAA,eAAe,EAAG,2BAClB;AACE,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,KAAK,QAAT,IAAqB,IAAI,KAAK,KAAlC,EACA;AACE,cAAI,MAAM,GAAG,KAAK,gBAAL,EAAb;;AACA,iBAAO,MAAM,IAAI,SAAV,GAAsB,MAAtB,GAA+B,IAAtC;AACD;;AAED,cAAM,IAAI,KAAJ,CAAU,sFAAV,CAAN;AACD,OAtPH;;AAyPE;;;;;;;;AAQA,MAAA,YAAY,EAAG,wBAAW;AACxB,eAAO,MAAM,CAAC,MAAP,CAAc,KAAK,WAAnB,CAAP;AACD,OAnQH;;AAsQE;;;;;;AAMA,MAAA,kBAAkB,EAAG,8BACrB;AACE,YAAI,QAAQ,GAAG,KAAK,cAAL,EAAf;AACA,YAAI,GAAG,GAAG,MAAM,CAAC,MAAP,CAAc,KAAK,WAAnB,CAAV;AAEA,QAAA,GAAG,CAAC,IAAJ,CAAS,UAAS,CAAT,EAAY,CAAZ,EAAe;AACtB,iBAAO,QAAQ,CAAC,OAAT,CAAiB,CAAjB,IAAsB,QAAQ,CAAC,OAAT,CAAiB,CAAjB,CAA7B;AACD,SAFD;AAIA,eAAO,GAAP;AACD,OAtRH;;AAyRE;;;;;;AAMA,MAAA,cAAc,EAAG,wBAAS,IAAT,EACjB;AACE,YAAI,IAAI,GAAG,KAAK,qBAAL,CAA2B,IAA3B,CAAX;;AACA,eAAO,KAAK,WAAL,CAAiB,IAAjB,MAA2B,SAAlC;AACD,OAnSH;;AAsSE;;;;;AAKA,MAAA,gBAAgB,EAAG,4BAAW;AAC5B,eAAO,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,OAAf,CAAuB,KAAK,WAA5B,CAAP;AACD,OA7SH;;AAgTE;;;AAGA,MAAA,eAAe,EAAE,2BAAW;AAC1B,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,KAAK,QAAT,IAAqB,IAAI,KAAK,KAAlC,EAAyC;AACvC,gBAAM,IAAI,KAAJ,CAAU,0FAAV,CAAN;AACD;;AAED,YAAI,WAAW,GAAG,KAAK,cAAL,EAAlB;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EACA;AACE,eAAK,kBAAL,CAAwB,WAAW,CAAC,CAAD,CAAnC;AACD;;AAED,aAAK,WAAL;AACD,OAhUH;;AAoUE;;;;;;AAMA;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,KAAT,EACf;AACE,YAAI,GAAG,GAAG,KAAK,UAAf;;AAEA,YAAI,GAAG,KAAK,IAAZ,EAAkB;AAChB,eAAK,gBAAL,CAAsB,GAAtB,EAA2B,MAA3B,EAAmC,KAAnC;AACD;;AAED,YAAI,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAK,gBAAL,CAAsB,KAAtB,EAA6B,MAA7B,EAAqC,IAArC;AACD;;AAED,aAAK,UAAL,GAAkB,KAAlB;AACD,OA7VH;;AAgWE;;;;;;AAMA,MAAA,WAAW,EAAG,uBAAW;AACvB,eAAO,KAAK,UAAZ;AACD,OAxWH;;AA2WE;;;;;;;AAOA,MAAA,cAAc,EAAG,wBAAS,KAAT,EACjB;AACE,YAAI,GAAG,GAAG,KAAK,YAAf;;AAEA,YAAI,GAAG,IAAI,IAAX,EAAiB;AACf,eAAK,gBAAL,CAAsB,GAAtB,EAA2B,QAA3B,EAAqC,KAArC;AACD;;AAED,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,eAAK,gBAAL,CAAsB,KAAtB,EAA6B,QAA7B,EAAuC,IAAvC;AACD;;AAED,aAAK,YAAL,GAAoB,KAApB;AACD,OA/XH;;AAkYE;;;;;;;AAOA,MAAA,cAAc,EAAG,0BAAW;AAC1B,eAAO,KAAK,YAAL,KAAsB,IAAtB,GAA6B,KAAK,YAAlC,GAAiD,IAAxD;AACD,OA3YH;;AAiZE;;;;;;AAMA;;;;;;AAMA,MAAA,aAAa,EAAG,uBAAS,IAAT,EAAe;AAC7B,cAAM,IAAI,KAAJ,CAAU,uCAAV,CAAN;AACD,OA/ZH;;AAkaE;;;;;;AAMA,MAAA,8BAA8B,EAAG,wCAAS,KAAT,EACjC;AACE,YAAI,MAAM,GAAG,KAAK,CAAC,SAAN,EAAb,CADF,CAEE;;AACA,YAAI,MAAM,IAAI,KAAK,aAAL,CAAmB,MAAnB,CAAd,EAA0C;AACxC,iBAAO,MAAP;AACD;;AACD,eAAO,IAAP;AACD,OAhbH;;AAmbE;;;;;;AAMA,MAAA,qBAAqB,EAAG,+BAAS,IAAT,EAAe;AACrC,cAAM,IAAI,KAAJ,CAAU,+CAAV,CAAN;AACD,OA3bH;;AA8bE;;;;;;;AAOA,MAAA,gBAAgB,EAAG,0BAAS,IAAT,EAAe,IAAf,EAAqB,OAArB,EAA8B;AAC/C,cAAM,IAAI,KAAJ,CAAU,0CAAV,CAAN;AACD,OAvcH;;AA0cE;;;;AAIA,MAAA,QAAQ,EAAG,oBAAW;AACpB,cAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD,OAhdH;;AAmdE;;;;AAIA,MAAA,eAAe,EAAG,2BAAW;AAC3B,cAAM,IAAI,KAAJ,CAAU,yCAAV,CAAN;AACD,OAzdH;;AAgeE;;;;;;AAMA;;;;;;AAMA,MAAA,YAAY,EAAG,wBAAW;AACxB,cAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACD,OA9eH;;AAifE;;;;;AAKA,MAAA,aAAa,EAAG,yBAAW;AACzB,cAAM,IAAI,KAAJ,CAAU,uCAAV,CAAN;AACD,OAxfH;;AA2fE;;;;;;AAMA,MAAA,uBAAuB,EAAG,iCAAS,IAAT,EAAe;AACvC,cAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;AACD,OAngBH;;AAsgBE;;;;;;AAMA,MAAA,uBAAuB,EAAG,iCAAS,IAAT,EAAe;AACvC,cAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;AACD,OA9gBH;;AAqhBE;;;;;;AAMA;;;;;AAKA,MAAA,UAAU,EAAG,sBAAW;AACtB,cAAM,IAAI,KAAJ,CAAU,oCAAV,CAAN;AACD,OAliBH;;AAqiBE;;;;;;AAMA,MAAA,SAAS,EAAG,mBAAS,IAAT,EAAe,IAAf,EAAqB;AAC/B,cAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACD,OA7iBH;;AAgjBE;;;;;AAKA,MAAA,mBAAmB,EAAG,6BAAS,IAAT,EAAe;AACnC,cAAM,IAAI,KAAJ,CAAU,6CAAV,CAAN;AACD,OAvjBH;;AA8jBE;;;;;;AAMA;;;;;;;AAOA,MAAA,cAAc,EAAG,wBAAS,GAAT,EAAc;AAC7B,cAAM,IAAI,KAAJ,CAAU,wCAAV,CAAN;AACD,OA7kBH;;AAglBE;;;;;;;;;AASA,MAAA,mBAAmB,EAAG,6BAAS,KAAT,EAAgB,KAAhB,EAAuB;AAC3C,cAAM,IAAI,KAAJ,CAAU,6CAAV,CAAN;AACD,OA3lBH;;AA8lBE;;;;;AAKA,MAAA,mBAAmB,EAAG,+BAAW;AAC/B,cAAM,IAAI,KAAJ,CAAU,6CAAV,CAAN;AACD,OArmBH;;AAwmBE;;;;;AAKA,MAAA,kBAAkB,EAAG,8BAAW;AAC9B,cAAM,IAAI,KAAJ,CAAU,4CAAV,CAAN;AACD,OA/mBH;;AAknBE;;;;;;;;;AASA,MAAA,qBAAqB,EAAG,+BAAS,IAAT,EAAe,QAAf,EAAyB;AAC/C,cAAM,IAAI,KAAJ,CAAU,+CAAV,CAAN;AACD,OA7nBH;;AAgoBE;;;;;;;;;AASA,MAAA,QAAQ,EAAG,kBAAS,IAAT,EAAe,EAAf,EAAmB;AAC5B,cAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD,OA3oBH;;AAgpBE;;;;;AAMA;AACA,MAAA,UAAU,EAAG,oBAAS,KAAT,EAAgB,GAAhB,EACb;AACE,aAAK,YAAL,CAAkB,IAAlB;;AACA,aAAK,cAAL,CAAoB,IAApB;;AAEA,aAAK,eAAL,GAJF,CAME;;;AACA,YAAI,KAAK,KAAK,KAAd,EAAqB;AACnB,eAAK,sBAAL,CAA4B,IAA5B;AACD;;AAED,aAAK,WAAL;AACD,OApqBH;;AA2qBE;;;;;;AAMA;;;;;;AAMA,MAAA,iBAAiB,EAAG,2BAAS,KAAT,EACpB;AACE;AACA;AACA;AACA,YAAG,KAAK,cAAL,IAAuB,IAAvB,IACA,KAAK,cAAL,IAAuB,KAAK,UAAL,GAAkB,GAD5C,EAEA;AACE,eAAK,cAAL,GAAsB,IAAtB;AACA;AACD,SATH,CAWE;;;AACA,YAAI,KAAK,CAAC,cAAN,MAA0B,OAA9B,EAAuC;AACrC;AACD,SAdH,CAgBE;AACA;;;AACA,aAAK,gBAAL,GAAwB,IAAxB;;AAEA,YAAI,CAAC,KAAK,QAAL,EAAL,EAAsB;AACpB,eAAK,gBAAL,GAAwB,KAAxB;AACA;AACD;;AAED,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,KAAK,KAAT,IAAkB,IAAI,KAAK,QAA/B,EAAyC;AACvC,eAAK,gBAAL,GAAwB,KAAxB;AACA;AACD;;AAED,YAAI,IAAI,GAAG,KAAK,8BAAL,CAAoC,KAApC,CAAX;;AACA,YAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,eAAK,gBAAL,GAAwB,KAAxB;AACA;AACD;;AAED,aAAK,gBAAL,CAAsB,IAAtB,EArCF,CAuCE;AACA;AACA;AAEA;;;AACA,aAAK,WAAL,CAAiB,OAAjB;;AAEA,aAAK,gBAAL,GAAwB,KAAxB;AACD,OAvuBH;;AA0uBE;;;;;;AAMA,MAAA,iBAAiB,EAAG,2BAAS,KAAT,EACpB;AACE;AACA;AACA,aAAK,gBAAL,GAAwB,IAAxB;;AAEA,YAAI,IAAI,GAAG,KAAK,8BAAL,CAAoC,KAApC,CAAX;;AACA,YAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,eAAK,gBAAL,GAAwB,KAAxB;AACA;AACD,SATH,CAWE;;;AACA,YAAI,aAAa,GAAG,KAAK,CAAC,aAAN,MACjB,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,SAAxB,KAAsC,KAAtC,IAA+C,KAAK,CAAC,aAAN,EADlD;AAEA,YAAI,cAAc,GAAG,KAAK,CAAC,cAAN,EAArB,CAdF,CAgBE;;AACA,YAAI,KAAK,cAAL,CAAoB,IAApB,KAA6B,CAAC,cAA9B,IAAgD,CAAC,aAAjD,IAAkE,CAAC,KAAK,OAAL,EAAvE,EACA;AACE,eAAK,uBAAL,GAA+B,IAA/B;AACA,eAAK,gBAAL,GAAwB,KAAxB;AACA;AACD,SALD,MAOA;AACE,eAAK,uBAAL,GAA+B,IAA/B;AACD,SA1BH,CA4BE;;;AACA,aAAK,mBAAL,CAAyB,IAAzB,EA7BF,CA+BE;;;AACA,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YACE,KAAK,OAAL,MACA,IAAI,KAAK,QADT,IAEA,IAAI,KAAK,KAFT,IAGA,CAAC,cAHD,IAIA,CAAC,aAJD,IAKA,KAAK,CAAC,cAAN,MAA0B,OAN5B,EAQA;AACE,eAAK,cAAL,CAAoB,IAApB;;AACA,eAAK,YAAL,CAAkB,IAAlB,EAFF,CAIE;;;AACA,eAAK,eAAL,GAAuB,KAAK,YAAL,EAAvB;AACA,eAAK,aAAL,GAAqB,KAAK,UAAL,EAArB,CANF,CAQE;;AACA,eAAK,YAAL,GAAoB,KAAK,CAAC,eAAN,KAA0B,KAAK,aAAL,CAAmB,IAAjE;AACA,eAAK,YAAL,GAAoB,KAAK,CAAC,cAAN,KAAyB,KAAK,aAAL,CAAmB,GAAhE,CAVF,CAYE;;AACA,eAAK,WAAL,GAAmB,IAAnB;;AACA,eAAK,QAAL;AACD,SAxDH,CA2DE;;;AACA,aAAK,WAAL,CAAiB,KAAjB;;AAEA,aAAK,gBAAL,GAAwB,KAAxB;AACD,OAhzBH;;AAmzBE;;;;;;AAMA,MAAA,SAAS,EAAG,mBAAS,KAAT,EACZ;AACE;AACA;AACA,aAAK,gBAAL,GAAwB,IAAxB,CAHF,CAKE;;AACA,YAAI,aAAa,GAAG,KAAK,CAAC,aAAN,MACjB,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,SAAxB,KAAsC,KAAtC,IAA+C,KAAK,CAAC,aAAN,EADlD;AAEA,YAAI,cAAc,GAAG,KAAK,CAAC,cAAN,EAArB;;AAEA,YAAI,CAAC,aAAD,IAAkB,CAAC,cAAnB,IAAqC,KAAK,uBAAL,IAAgC,IAAzE,EACA;AACE,eAAK,gBAAL,GAAwB,KAAxB;;AACA,cAAI,IAAI,GAAG,KAAK,8BAAL,CAAoC,KAApC,CAAX;;AACA,cAAI,IAAI,KAAK,IAAT,IAAiB,CAAC,KAAK,cAAL,CAAoB,IAApB,CAAtB,EAAiD;AAC/C;AACD;AACF;;AAED,YAAI,IAAI,GAAG,KAAK,8BAAL,CAAoC,KAApC,CAAX;;AACA,YAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,eAAK,gBAAL,GAAwB,KAAxB;AACA;AACD,SAvBH,CAyBE;;;AACA,gBAAO,KAAK,OAAL,EAAP;AAEE,eAAK,QAAL;AACA,eAAK,KAAL;AACE,iBAAK,gBAAL,CAAsB,IAAtB;;AACA;;AAEF,eAAK,UAAL;AACE,iBAAK,YAAL,CAAkB,IAAlB;;AACA,iBAAK,cAAL,CAAoB,IAApB;;AACA,iBAAK,kBAAL,CAAwB,IAAxB;;AACA;;AAEF,eAAK,OAAL;AACE;AACA,iBAAK,YAAL,CAAkB,IAAlB,EAFF,CAIE;;;AACA,gBAAI,cAAJ,EACA;AACE,kBAAI,MAAM,GAAG,KAAK,cAAL,EAAb;;AACA,kBAAI,MAAM,KAAK,IAAf,EACA;AACE,gBAAA,MAAM,GAAG,KAAK,mBAAL,EAAT;;AACA,qBAAK,cAAL,CAAoB,MAApB;AACD;;AAED,mBAAK,gBAAL,CAAsB,MAAtB,EAA8B,IAA9B,EAAoC,aAApC;AACD,aAVD,CAYA;AAZA,iBAaK,IAAI,aAAJ,EACL;AACE,qBAAK,cAAL,CAAoB,IAApB;;AACA,qBAAK,kBAAL,CAAwB,IAAxB;AACD,eAJI,CAML;AANK,mBAQL;AACE,uBAAK,cAAL,CAAoB,IAApB;;AACA,uBAAK,gBAAL,CAAsB,IAAtB;AACD;;AAED;AA5CJ,SA1BF,CAyEE;;;AACA,aAAK,QAAL;AACD,OAr4BH;;AAw4BE;;;;;;AAMA,MAAA,iBAAiB,EAAG,2BAAS,KAAT,EAAgB;AAClC,aAAK,QAAL;AACD,OAh5BH;;AAm5BE;;;;;;AAMA,MAAA,iBAAiB,EAAG,2BAAS,KAAT,EACpB;AACE;AACA,YAAI,CAAC,KAAK,WAAV,EAAuB;AACrB;AACD,SAJH,CAOE;;;AACA,aAAK,UAAL,GAAkB,KAAK,CAAC,eAAN,EAAlB;AACA,aAAK,UAAL,GAAkB,KAAK,CAAC,cAAN,EAAlB,CATF,CAWE;AACA;;AACA,aAAK,gBAAL,GAAwB,IAAxB,CAbF,CAeE;;AACA,YAAI,KAAK,GAAG,KAAK,UAAL,GAAkB,KAAK,aAAL,CAAmB,IAAjD;;AACA,YAAI,KAAK,GAAG,KAAK,YAAjB,EAA+B;AAC7B,eAAK,gBAAL,GAAwB,CAAxB;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,KAAK,YAAjB,EAA+B;AACpC,eAAK,gBAAL,GAAwB,CAAC,CAAzB;AACD,SAFM,MAEA;AACL,eAAK,gBAAL,GAAwB,CAAxB;AACD;;AAED,YAAI,KAAK,GAAG,KAAK,UAAL,GAAkB,KAAK,aAAL,CAAmB,GAAjD;;AACA,YAAI,KAAK,GAAG,KAAK,YAAjB,EAA+B;AAC7B,eAAK,gBAAL,GAAwB,CAAxB;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,KAAK,YAAjB,EAA+B;AACpC,eAAK,gBAAL,GAAwB,CAAC,CAAzB;AACD,SAFM,MAEA;AACL,eAAK,gBAAL,GAAwB,CAAxB;AACD,SAhCH,CAmCE;;;AACA,YAAI,QAAQ,GAAG,KAAK,eAApB;;AAEA,YAAI,KAAK,UAAL,GAAkB,QAAQ,CAAC,IAA/B,EAAqC;AACnC,eAAK,aAAL,GAAqB,KAAK,UAAL,GAAkB,QAAQ,CAAC,IAAhD;AACD,SAFD,MAEO,IAAI,KAAK,UAAL,GAAkB,QAAQ,CAAC,KAA/B,EAAsC;AAC3C,eAAK,aAAL,GAAqB,KAAK,UAAL,GAAkB,QAAQ,CAAC,KAAhD;AACD,SAFM,MAEA;AACL,eAAK,aAAL,GAAqB,CAArB;AACD;;AAED,YAAI,KAAK,UAAL,GAAkB,QAAQ,CAAC,GAA/B,EAAoC;AAClC,eAAK,aAAL,GAAqB,KAAK,UAAL,GAAkB,QAAQ,CAAC,GAAhD;AACD,SAFD,MAEO,IAAI,KAAK,UAAL,GAAkB,QAAQ,CAAC,MAA/B,EAAuC;AAC5C,eAAK,aAAL,GAAqB,KAAK,UAAL,GAAkB,QAAQ,CAAC,MAAhD;AACD,SAFM,MAEA;AACL,eAAK,aAAL,GAAqB,CAArB;AACD,SApDH,CAuDE;;;AACA,YAAI,CAAC,KAAK,aAAV,EACA;AACE,eAAK,aAAL,GAAqB,IAAI,EAAE,CAAC,KAAH,CAAS,KAAb,CAAmB,GAAnB,CAArB;;AACA,eAAK,aAAL,CAAmB,WAAnB,CAA+B,UAA/B,EAA2C,KAAK,WAAhD,EAA6D,IAA7D;AACD,SA5DH,CA+DE;;;AACA,aAAK,aAAL,CAAmB,KAAnB,GAhEF,CAmEE;;;AACA,aAAK,WAAL;;AAEA,QAAA,KAAK,CAAC,eAAN;AACA,aAAK,gBAAL,GAAwB,KAAxB;AACD,OAl+BH;;AAq+BE;;;;;;AAMA,MAAA,aAAa,EAAG,uBAAS,CAAT,EAChB;AACE,YAAI,IAAI,GAAG,CAAC,CAAC,OAAF,EAAX;;AACA,YAAI,KAAK,OAAL,OAAmB,KAAnB,IAA4B,KAAK,gBAAL,EAAhC,EAAyD;AACvD,eAAK,OAAL,CAAa,IAAb;AACD;AACF,OAj/BH;;AAo/BE;;;;;;AAMA,MAAA,gBAAgB,EAAG,0BAAS,CAAT,EAAY;AAC7B,aAAK,UAAL,CAAgB,CAAC,CAAC,OAAF,EAAhB;AACD,OA5/BH;;AAigCE;;;;;;AAMA;;;AAGA,MAAA,QAAQ,EAAG,oBACX;AACE,YAAI,CAAC,KAAK,OAAL,EAAD,IAAmB,KAAK,WAA5B,EAAyC;AACvC;AACD,SAHH,CAKE;;;AACA,YAAI,KAAK,mBAAT,EAA8B;AAC5B,eAAK,WAAL,CAAiB,KAAjB;AACD,SARH,CAUE;;;AACA,eAAO,KAAK,WAAZ;AACA,eAAO,KAAK,UAAZ;AACA,eAAO,KAAK,UAAZ,CAbF,CAeE;;AACA,aAAK,eAAL,GAhBF,CAkBE;;;AACA,YAAI,KAAK,aAAT,EAAwB;AACtB,eAAK,aAAL,CAAmB,IAAnB;AACD;AACF,OAjiCH;;AAoiCE;;;;;AAKA,MAAA,WAAW,EAAG,qBAAS,CAAT,EACd;AACE;AACA,aAAK,SAAL,CAAe,KAAK,aAApB,EAAmC,KAAK,aAAxC,EAFF,CAIE;;;AACA,aAAK,aAAL,GAAqB,KAAK,UAAL,EAArB,CALF,CAOE;;AACA,aAAK,WAAL;AACD,OAnjCH;;AAsjCE;;;AAGA,MAAA,WAAW,EAAG,uBACd;AACE,YAAI,KAAK,GAAG,KAAK,aAAL,EAAZ,CADF,CAGE;;;AACA,YAAI,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,CAAC,GAAL,CAAS,KAAK,UAAL,GAAkB,KAAK,eAAL,CAAqB,IAAhD,EAAsD,KAAK,CAAC,KAA5D,CAAZ,IAAkF,KAAK,aAAL,CAAmB,IAAhH;;AACA,YAAI,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,CAAC,GAAL,CAAS,KAAK,UAAL,GAAkB,KAAK,eAAL,CAAqB,GAAhD,EAAqD,KAAK,CAAC,MAA3D,CAAZ,IAAkF,KAAK,aAAL,CAAmB,GAAhH,CALF,CAOE;;;AACA,YAAI,KAAK,UAAL,KAAoB,IAApB,IAA4B,KAAK,UAAL,KAAoB,IAApD,EAA0D;AACxD;AACD;;AACD,aAAK,UAAL,GAAkB,IAAlB;AACA,aAAK,UAAL,GAAkB,IAAlB,CAZF,CAcE;;AACA,YAAI,MAAM,GAAG,KAAK,cAAL,EAAb;;AACA,YAAI,IAAI,GAAG,MAAX,CAhBF,CAmBE;;AACA,YAAI,KAAK,GAAG,KAAK,gBAAjB;AACA,YAAI,KAAJ,EAAW,SAAX;;AAEA,eAAO,KAAK,KAAK,CAAjB,EACA;AACE;AACA,UAAA,KAAK,GAAG,KAAK,GAAG,CAAR,GACN,KAAK,qBAAL,CAA2B,IAA3B,EAAiC,OAAjC,CADM,GAEN,KAAK,qBAAL,CAA2B,IAA3B,EAAiC,MAAjC,CAFF,CAFF,CAME;;AACA,cAAI,KAAK,KAAK,IAAd,EACA;AACE,YAAA,SAAS,GAAG,KAAK,uBAAL,CAA6B,KAA7B,CAAZ,CADF,CAGE;;AACA,gBACG,KAAK,GAAG,CAAR,IAAa,SAAS,CAAC,IAAV,IAAkB,IAAhC,IACC,KAAK,GAAG,CAAR,IAAa,SAAS,CAAC,KAAV,IAAmB,IAFnC,EAIA;AACE,cAAA,IAAI,GAAG,KAAP;AACA;AACD;AACF,WApBH,CAsBE;;;AACA;AACD,SAhDH,CAmDE;;;AACA,YAAI,KAAK,GAAG,KAAK,gBAAjB;AACA,YAAI,KAAJ,EAAW,SAAX;;AAEA,eAAO,KAAK,KAAK,CAAjB,EACA;AACE;AACA,UAAA,KAAK,GAAG,KAAK,GAAG,CAAR,GACN,KAAK,qBAAL,CAA2B,IAA3B,EAAiC,OAAjC,CADM,GAEN,KAAK,qBAAL,CAA2B,IAA3B,EAAiC,OAAjC,CAFF,CAFF,CAME;;AACA,cAAI,KAAK,KAAK,IAAd,EACA;AACE,YAAA,SAAS,GAAG,KAAK,uBAAL,CAA6B,KAA7B,CAAZ,CADF,CAGE;;AACA,gBACG,KAAK,GAAG,CAAR,IAAa,SAAS,CAAC,GAAV,IAAiB,IAA/B,IACC,KAAK,GAAG,CAAR,IAAa,SAAS,CAAC,MAAV,IAAoB,IAFpC,EAIA;AACE,cAAA,IAAI,GAAG,KAAP;AACA;AACD;AACF,WApBH,CAsBE;;;AACA;AACD,SAhFH,CAmFE;;;AACA,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,KAAK,OAAb,EACA;AACE;AACA,eAAK,gBAAL,CAAsB,MAAtB,EAA8B,IAA9B;AACD,SAJD,MAKK,IAAI,IAAI,KAAK,UAAb,EACL;AACE;AACA;AACA,cAAI,KAAK,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC/B,iBAAK,gBAAL,CAAsB,MAAtB,EAA8B,IAA9B,EAAoC,IAApC;AACD,WAFD,MAEO;AACL,iBAAK,kBAAL,CAAwB,MAAxB,EAAgC,IAAhC;AACD,WAPH,CASE;AACA;AACA;;;AACA,eAAK,cAAL,CAAoB,IAApB;AACD,SAxGH,CA2GE;;;AACA,aAAK,WAAL,CAAiB,MAAjB;AACD,OAvqCH;;AA8qCE;;;;;;AAMA;;;;;AAKA,MAAA,gBAAgB,EAChB;AACE,QAAA,IAAI,EAAG,CADT;AAEE,QAAA,IAAI,EAAG,CAFT;AAGE,QAAA,KAAK,EAAG,CAHV;AAIE,QAAA,QAAQ,EAAG,CAJb;AAKE,QAAA,GAAG,EAAG,CALR;AAME,QAAA,EAAE,EAAG,CANP;AAOE,QAAA,IAAI,EAAG,CAPT;AAQE,QAAA,MAAM,EAAG;AARX,OA1rCF;;AAssCE;;;;;;AAMA,MAAA,cAAc,EAAG,wBAAS,KAAT,EACjB;AACE;AACA;AACA,aAAK,gBAAL,GAAwB,IAAxB;AAEA,YAAI,OAAJ,EAAa,IAAb;AACA,YAAI,GAAG,GAAG,KAAK,CAAC,gBAAN,EAAV;AACA,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX,CAPF,CASE;;AACA,YAAI,aAAa,GAAG,KAAK,CAAC,aAAN,MACjB,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,SAAxB,KAAsC,KAAtC,IAA+C,KAAK,CAAC,aAAN,EADlD;AAEA,YAAI,cAAc,GAAG,KAAK,CAAC,cAAN,EAArB;AAEA,YAAI,QAAQ,GAAG,KAAf;;AAEA,YAAI,GAAG,KAAK,GAAR,IAAe,aAAnB,EACA;AACE,cAAI,IAAI,KAAK,QAAT,IAAqB,IAAI,KAAK,KAAlC,EACA;AACE,iBAAK,eAAL;;AACA,YAAA,QAAQ,GAAG,IAAX;AACD;AACF,SAPD,MAQK,IAAI,GAAG,KAAK,QAAZ,EACL;AACE,cAAI,IAAI,KAAK,QAAT,IAAqB,IAAI,KAAK,KAAlC,EACA;AACE,iBAAK,eAAL;;AACA,YAAA,QAAQ,GAAG,IAAX;AACD;AACF,SAPI,MAQA,IAAI,GAAG,KAAK,OAAZ,EACL;AACE,cAAI,IAAI,GAAG,KAAK,WAAL,EAAX;;AACA,cAAI,IAAI,IAAI,IAAR,IAAgB,CAAC,cAArB,EACA;AACE,gBAAI,aAAa,IAAI,IAAI,KAAK,UAA9B,EAA0C;AACxC,mBAAK,kBAAL,CAAwB,IAAxB;AACD,aAFD,MAEO;AACL,mBAAK,gBAAL,CAAsB,IAAtB;AACD;;AACD,YAAA,QAAQ,GAAG,IAAX;AACD;AACF,SAZI,MAaA,IAAI,KAAK,gBAAL,CAAsB,GAAtB,CAAJ,EACL;AACE,UAAA,QAAQ,GAAG,IAAX;;AACA,cAAI,IAAI,KAAK,QAAT,IAAqB,IAAI,IAAI,KAAjC,EAAwC;AACtC,YAAA,OAAO,GAAG,KAAK,gBAAL,EAAV;AACD,WAFD,MAEO;AACL,YAAA,OAAO,GAAG,KAAK,WAAL,EAAV;AACD;;AAED,cAAI,OAAO,KAAK,IAAhB,EACA;AACE,oBAAO,GAAP;AAEE,mBAAK,MAAL;AACE,gBAAA,IAAI,GAAG,KAAK,mBAAL,EAAP;AACA;;AAEF,mBAAK,KAAL;AACE,gBAAA,IAAI,GAAG,KAAK,kBAAL,EAAP;AACA;;AAEF,mBAAK,IAAL;AACE,gBAAA,IAAI,GAAG,KAAK,qBAAL,CAA2B,OAA3B,EAAoC,OAApC,CAAP;AACA;;AAEF,mBAAK,MAAL;AACE,gBAAA,IAAI,GAAG,KAAK,qBAAL,CAA2B,OAA3B,EAAoC,OAApC,CAAP;AACA;;AAEF,mBAAK,MAAL;AACE,gBAAA,IAAI,GAAG,KAAK,qBAAL,CAA2B,OAA3B,EAAoC,MAApC,CAAP;AACA;;AAEF,mBAAK,OAAL;AACE,gBAAA,IAAI,GAAG,KAAK,qBAAL,CAA2B,OAA3B,EAAoC,OAApC,CAAP;AACA;;AAEF,mBAAK,QAAL;AACE,gBAAA,IAAI,GAAG,KAAK,QAAL,CAAc,OAAd,EAAuB,IAAvB,CAAP;AACA;;AAEF,mBAAK,UAAL;AACE,gBAAA,IAAI,GAAG,KAAK,QAAL,CAAc,OAAd,EAAuB,KAAvB,CAAP;AACA;AAhCJ;AAkCD,WApCD,MAsCA;AACE,oBAAO,GAAP;AAEE,mBAAK,MAAL;AACA,mBAAK,MAAL;AACA,mBAAK,OAAL;AACA,mBAAK,UAAL;AACE,gBAAA,IAAI,GAAG,KAAK,mBAAL,EAAP;AACA;;AAEF,mBAAK,KAAL;AACA,mBAAK,IAAL;AACA,mBAAK,MAAL;AACA,mBAAK,QAAL;AACE,gBAAA,IAAI,GAAG,KAAK,kBAAL,EAAP;AACA;AAdJ;AAgBD,WA/DH,CAiEE;;;AACA,cAAI,IAAI,KAAK,IAAb,EACA;AACE,oBAAO,IAAP;AAEE,mBAAK,QAAL;AACA,mBAAK,KAAL;AACE,qBAAK,gBAAL,CAAsB,IAAtB;;AACA;;AAEF,mBAAK,UAAL;AACE,qBAAK,YAAL,CAAkB,IAAlB;;AACA;;AAEF,mBAAK,OAAL;AACE,oBAAI,cAAJ,EACA;AACE,sBAAI,MAAM,GAAG,KAAK,cAAL,EAAb;;AACA,sBAAI,MAAM,KAAK,IAAf,EAAqB;AACnB,yBAAK,cAAL,CAAoB,MAAM,GAAG,KAAK,mBAAL,EAA7B;AACD;;AAED,uBAAK,YAAL,CAAkB,IAAlB;;AACA,uBAAK,gBAAL,CAAsB,MAAtB,EAA8B,IAA9B,EAAoC,aAApC;AACD,iBATD,MAWA;AACE,uBAAK,cAAL,CAAoB,IAApB;;AACA,uBAAK,YAAL,CAAkB,IAAlB;;AAEA,sBAAI,CAAC,aAAL,EAAoB;AAClB,yBAAK,gBAAL,CAAsB,IAAtB;AACD;AACF;;AAED;AAhCJ;;AAmCA,iBAAK,cAAL,GAAsB,KAAK,UAAL,GAAkB,GAAxC;;AACA,iBAAK,mBAAL,CAAyB,IAAzB;AACD;AACF;;AAGD,YAAI,QAAJ,EACA;AACE;AACA,UAAA,KAAK,CAAC,IAAN,GAFF,CAIE;;AACA,eAAK,WAAL,CAAiB,KAAjB;AACD;;AACD,aAAK,gBAAL,GAAwB,KAAxB;AACD,OAj3CH;;AAw3CE;;;;;;AAMA;;;AAGA,MAAA,eAAe,EAAG,2BAClB;AACE,YAAI,KAAK,GAAG,KAAK,cAAL,EAAZ;;AACA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,KAAK,CAAC,MAAtB,EAA8B,CAAC,GAAC,CAAhC,EAAmC,CAAC,EAApC,EAAwC;AACtC,eAAK,eAAL,CAAqB,KAAK,CAAC,CAAD,CAA1B;AACD;AACF,OAv4CH;;AA04CE;;;AAGA,MAAA,eAAe,EAAG,2BAClB;AACE,YAAI,SAAS,GAAG,KAAK,WAArB;;AACA,aAAK,IAAI,IAAT,IAAiB,SAAjB,EAA4B;AAC1B,eAAK,oBAAL,CAA0B,SAAS,CAAC,IAAD,CAAnC;AACD;;AACD,aAAK,WAAL,GAAmB,EAAnB;AACD,OAp5CH;;AAu5CE;;;;;;;;AAQA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EAAgB,KAAhB,EAAuB,MAAvB,EACnB;AACE,YAAI,KAAK,GAAG,KAAK,mBAAL,CAAyB,KAAzB,EAAgC,KAAhC,CAAZ,CADF,CAGE;;;AACA,YAAI,CAAC,MAAL,EACA;AACE,cAAI,QAAQ,GAAG,KAAK,WAApB;;AACA,cAAI,MAAM,GAAG,KAAK,YAAL,CAAkB,KAAlB,CAAb;;AAEA,eAAK,IAAI,IAAT,IAAiB,QAAjB,EACA;AACE,gBAAI,CAAC,MAAM,CAAC,IAAD,CAAX,EAAmB;AACjB,mBAAK,oBAAL,CAA0B,QAAQ,CAAC,IAAD,CAAlC;AACD;AACF;AACF,SAfH,CAiBE;;;AACA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,KAAK,CAAC,MAAtB,EAA8B,CAAC,GAAC,CAAhC,EAAmC,CAAC,EAApC,EAAwC;AACtC,eAAK,eAAL,CAAqB,KAAK,CAAC,CAAD,CAA1B;AACD;AACF,OAr7CH;;AAw7CE;;;;;;AAMA,MAAA,kBAAkB,EAAG,4BAAS,KAAT,EAAgB,KAAhB,EACrB;AACE,YAAI,KAAK,GAAG,KAAK,mBAAL,CAAyB,KAAzB,EAAgC,KAAhC,CAAZ;;AACA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,KAAK,CAAC,MAAtB,EAA8B,CAAC,GAAC,CAAhC,EAAmC,CAAC,EAApC,EAAwC;AACtC,eAAK,oBAAL,CAA0B,KAAK,CAAC,CAAD,CAA/B;AACD;AACF,OAp8CH;;AAu8CE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,KAAT,EACf;AACE,YAAI,MAAM,GAAG,EAAb;AACA,YAAI,IAAJ;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,KAAK,CAAC,MAAtB,EAA8B,CAAC,GAAC,CAAhC,EAAmC,CAAC,EAApC,EACA;AACE,UAAA,IAAI,GAAG,KAAK,CAAC,CAAD,CAAZ;AACA,UAAA,MAAM,CAAC,KAAK,qBAAL,CAA2B,IAA3B,CAAD,CAAN,GAA2C,IAA3C;AACD;;AAED,eAAO,MAAP;AACD,OAz9CH;;AAg+CE;;;;;;AAMA;;;;;;AAMA,MAAA,gBAAgB,EAAG,4BACnB;AACE,aAAK,IAAI,IAAT,IAAiB,KAAK,WAAtB,EAAmC;AACjC,iBAAO,KAAK,WAAL,CAAiB,IAAjB,CAAP;AACD;;AAED,eAAO,IAAP;AACD,OAn/CH;;AAs/CE;;;;;AAKA,MAAA,gBAAgB,EAAG,0BAAS,IAAT,EACnB;AACE,YAAI,KAAK,aAAL,CAAmB,IAAnB,CAAJ,EACA;AACE;AACA,cAAI,OAAO,GAAG,KAAK,WAAnB;;AACA,cAAI,IAAI,GAAG,KAAK,qBAAL,CAA2B,IAA3B,CAAX;;AAEA,cAAI,CAAC,OAAO,CAAC,IAAD,CAAR,IAAmB,OAAO,CAAC,MAAR,IAAkB,CAAzC,EACA;AACE,iBAAK,eAAL;;AACA,iBAAK,eAAL,CAAqB,IAArB;AACD;AACF;AACF,OAzgDH;;AAihDE;;;;;;AAMA;;;;;AAKA,MAAA,eAAe,EAAG,yBAAS,IAAT,EAClB;AACE,YAAI,IAAI,GAAG,KAAK,qBAAL,CAA2B,IAA3B,CAAX;;AAEA,YAAI,KAAK,WAAL,CAAiB,IAAjB,KAA0B,IAA1B,IAAkC,KAAK,aAAL,CAAmB,IAAnB,CAAtC,EACA;AACE,eAAK,WAAL,CAAiB,IAAjB,IAAyB,IAAzB;;AACA,eAAK,gBAAL,CAAsB,IAAtB,EAA4B,UAA5B,EAAwC,IAAxC;;AAEA,eAAK,mBAAL,GAA2B,IAA3B;AACD;AACF,OAviDH;;AA0iDE;;;;;;AAMA,MAAA,kBAAkB,EAAG,4BAAS,IAAT,EACrB;AACE,YAAI,IAAI,GAAG,KAAK,qBAAL,CAA2B,IAA3B,CAAX;;AAEA,YAAI,KAAK,WAAL,CAAiB,IAAjB,KAA0B,IAA9B,EACA;AACE,eAAK,WAAL,CAAiB,IAAjB,IAAyB,IAAzB;;AACA,eAAK,gBAAL,CAAsB,IAAtB,EAA4B,UAA5B,EAAwC,IAAxC;AACD,SAJD,MAMA;AACE,iBAAO,KAAK,WAAL,CAAiB,IAAjB,CAAP;;AACA,eAAK,gBAAL,CAAsB,IAAtB,EAA4B,UAA5B,EAAwC,KAAxC;AACD;;AAED,aAAK,mBAAL,GAA2B,IAA3B;AACD,OAhkDH;;AAmkDE;;;;;AAKA,MAAA,oBAAoB,EAAG,8BAAS,IAAT,EACvB;AACE,YAAI,IAAI,GAAG,KAAK,qBAAL,CAA2B,IAA3B,CAAX;;AAEA,YAAI,KAAK,WAAL,CAAiB,IAAjB,KAA0B,IAA9B,EACA;AACE,iBAAO,KAAK,WAAL,CAAiB,IAAjB,CAAP;;AACA,eAAK,gBAAL,CAAsB,IAAtB,EAA4B,UAA5B,EAAwC,KAAxC;;AAEA,eAAK,mBAAL,GAA2B,IAA3B;AACD;AACF,OAnlDH;;AAslDE;;;;;AAKA,MAAA,sBAAsB,EAAG,gCAAS,KAAT,EACzB;AACE,YAAI,KAAK,CAAC,MAAN,KAAiB,CAArB,EAAwB;AACtB,eAAK,cAAL;AACA;AACD;;AAED,YAAI,QAAQ,GAAG,KAAf,CANF,CAQE;;AACA,YAAI,UAAJ,EAAgB,IAAhB;AACA,YAAI,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,KAAK,CAAC,MAAtB,EAA8B,CAAC,GAAC,CAAhC,EAAmC,CAAC,EAApC,EACA;AACE,UAAA,UAAU,GAAG,KAAK,CAAC,CAAD,CAAlB;;AACA,cAAI,KAAK,aAAL,CAAmB,UAAnB,CAAJ,EACA;AACE,YAAA,IAAI,GAAG,KAAK,qBAAL,CAA2B,UAA3B,CAAP;AACA,YAAA,QAAQ,CAAC,IAAD,CAAR,GAAiB,UAAjB;AACD;AACF,SAnBH,CAqBE;;;AACA,YAAI,KAAK,GAAG,KAAK,CAAC,CAAD,CAAjB;AACA,YAAI,IAAI,GAAG,UAAX,CAvBF,CAyBE;;AACA,YAAI,OAAO,GAAG,KAAK,WAAnB;;AACA,aAAK,IAAI,IAAT,IAAiB,OAAjB,EACA;AACE,cAAI,QAAQ,CAAC,IAAD,CAAZ,EACA;AACE;AACA,mBAAO,QAAQ,CAAC,IAAD,CAAf;AACD,WAJD,MAMA;AACE;AACA,YAAA,UAAU,GAAG,OAAO,CAAC,IAAD,CAApB;AACA,mBAAO,OAAO,CAAC,IAAD,CAAd,CAHF,CAKE;;AACA,iBAAK,gBAAL,CAAsB,UAAtB,EAAkC,UAAlC,EAA8C,KAA9C,EANF,CAQE;;;AACA,YAAA,QAAQ,GAAG,IAAX;AACD;AACF,SA9CH,CAgDE;;;AACA,aAAK,IAAI,IAAT,IAAiB,QAAjB,EACA;AACE;AACA,UAAA,UAAU,GAAG,OAAO,CAAC,IAAD,CAAP,GAAgB,QAAQ,CAAC,IAAD,CAArC,CAFF,CAIE;;AACA,eAAK,gBAAL,CAAsB,UAAtB,EAAkC,UAAlC,EAA8C,IAA9C,EALF,CAOE;;;AACA,UAAA,QAAQ,GAAG,IAAX;AACD,SA3DH,CA6DE;;;AACA,YAAI,CAAC,QAAL,EAAe;AACb,iBAAO,KAAP;AACD,SAhEH,CAkEE;;;AACA,aAAK,mBAAL,CAAyB,IAAzB,EAnEF,CAqEE;;;AACA,aAAK,YAAL,CAAkB,KAAlB;;AACA,aAAK,cAAL,CAAoB,KAApB,EAvEF,CAyEE;;;AACA,aAAK,mBAAL,GAA2B,IAA3B;;AACA,aAAK,WAAL;AACD,OAxqDH;;AA2qDE;;;;;;;AAOA,MAAA,WAAW,EAAG,qBAAS,OAAT,EACd;AACE,YAAI,KAAK,mBAAT,EACA;AACE;AACA,eAAK,kBAAL,GAA0B,OAAO,IAAI,IAArC,CAFF,CAIE;;AACA,eAAK,aAAL,CAAmB,iBAAnB,EAAsC,KAAK,YAAL,EAAtC;AACA,iBAAO,KAAK,mBAAZ;AACD;AACF,OA7rDH;;AAgsDE;;;;;;;AAOA,MAAA,sBAAsB,EAAG,gCAAS,KAAT,EACzB;AACE,YAAI,KAAK,KAAK,IAAV,IAAkB,KAAK,OAAL,OAAmB,KAAnB,IAA4B,KAAK,gBAAL,EAAlD,EACA;AACE,cAAI,KAAK,GAAG,KAAK,mBAAL,EAAZ;;AACA,cAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,iBAAK,UAAL,CAAgB,KAAhB;AACD;;AACD,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD;AAltDH,KAnGD;;AAyzDC;;;;;AAMA,IAAA,QAAQ,EAAG,oBACX;AACE,WAAK,eAAL,CAAqB,eAArB;;AACA,WAAK,WAAL,GAAmB,KAAK,uBAAL,GAA+B,KAAK,YAAL,GAAoB,IAAtE;AACA,WAAK,UAAL,GAAkB,IAAlB;AACD;AAp0DF,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,SAAV,CAAoB,QAApB,CAA6B,aAA7B,GAA6C,aAA7C;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;AAMA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,kCAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,SAAX,CAAqB,QAD/B;;AAIC;;;;;;AAMA;;;;;;;AAOA,IAAA,SAAS,EAAG,mBAAS,IAAT,EAAe,iBAAf,EACZ;AACE;AAEyC;AACvC,aAAK,cAAL,CAAoB,IAApB,EAA0B,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,IAAd,CAAmB,IAA7C;AACD;AAED,WAAK,KAAL,GAAa,IAAb;AACA,WAAK,SAAL,GAAiB,iBAAiB,IAAI,EAAtC;AACD,KA3BF;;AA8BC;;;;;AAMA,IAAA,OAAO,EACP;AACE;AACA,MAAA,mBAAmB,EAAG,IAFxB;;AAKE;;;;;AAMA;AACA,MAAA,aAAa,EAAG,uBAAS,IAAT,EAAe;AAC7B,eAAO,KAAK,SAAL,CAAe,gBAAf,GACL,KAAK,SAAL,CAAe,gBAAf,CAAgC,IAAhC,CADK,GAEL,IAFF;AAGD,OAhBH;AAmBE;AACA,MAAA,gBAAgB,EAAG,0BAAS,IAAT,EAAe,IAAf,EAAqB,OAArB,EACnB;AACE,YAAI,KAAK,SAAL,CAAe,eAAnB,EAAoC;AAClC,eAAK,SAAL,CAAe,eAAf,CAA+B,IAA/B,EAAqC,IAArC,EAA2C,OAA3C;AACD;AACF,OAzBH;;AA4BE;;;;;;AAMA;;;AAGA,MAAA,mBAAmB,EAAG,+BACtB;AACE,YAAI,WAAW,GAAG,KAAK,KAAL,CAAW,iBAAX,EAAlB;;AACA,QAAA,WAAW,CAAC,WAAZ,CAAwB,aAAxB,EAAuC,KAAK,iBAA5C,EAA+D,IAA/D;AACA,QAAA,WAAW,CAAC,WAAZ,CAAwB,KAAxB,EAA+B,KAAK,SAApC,EAA+C,IAA/C;AACA,QAAA,WAAW,CAAC,WAAZ,CAAwB,aAAxB,EAAuC,KAAK,iBAA5C,EAA+D,IAA/D;AACA,QAAA,WAAW,CAAC,WAAZ,CAAwB,aAAxB,EAAuC,KAAK,iBAA5C,EAA+D,IAA/D;AACA,QAAA,WAAW,CAAC,WAAZ,CAAwB,aAAxB,EAAuC,KAAK,iBAA5C,EAA+D,IAA/D;AACD,OA7CH;;AAgDE;;;AAGA,MAAA,oBAAoB,EAAG,gCACvB;AACE,YAAI,WAAW,GAAG,KAAK,KAAL,CAAW,iBAAX,EAAlB;;AACA,QAAA,WAAW,CAAC,cAAZ,CAA2B,aAA3B,EAA0C,KAAK,iBAA/C,EAAkE,IAAlE;AACA,QAAA,WAAW,CAAC,cAAZ,CAA2B,KAA3B,EAAkC,KAAK,SAAvC,EAAkD,IAAlD;AACA,QAAA,WAAW,CAAC,cAAZ,CAA2B,aAA3B,EAA0C,KAAK,iBAA/C,EAAkE,IAAlE;AACA,QAAA,WAAW,CAAC,cAAZ,CAA2B,aAA3B,EAA0C,KAAK,iBAA/C,EAAkE,IAAlE;AACA,QAAA,WAAW,CAAC,cAAZ,CAA2B,aAA3B,EAA0C,KAAK,iBAA/C,EAAkE,IAAlE;AACD,OA3DH;;AA8DE;;;;;;;;;AASA,MAAA,eAAe,EAAG,yBAAS,MAAT,EAAiB;AACjC,QAAA,MAAM,CAAC,WAAP,CAAmB,UAAnB,EAA+B,KAAK,cAApC,EAAoD,IAApD;AACD,OAzEH;;AA4EE;;;;;AAKA,MAAA,eAAe,EAAG,yBAAS,MAAT,EAAiB;AACjC,QAAA,MAAM,CAAC,cAAP,CAAsB,UAAtB,EAAkC,KAAK,cAAvC,EAAuD,IAAvD;AACD,OAnFH;;AAsFE;;;;;;;;;AASA,MAAA,gBAAgB,EAAG,0BAAS,IAAT,EACnB;AACE,QAAA,IAAI,CAAC,WAAL,CAAiB,SAAjB,EAA4B,KAAK,aAAjC,EAAgD,IAAhD;AACA,QAAA,IAAI,CAAC,WAAL,CAAiB,YAAjB,EAA+B,KAAK,gBAApC,EAAsD,IAAtD;AACD,OAnGH;;AAsGE;;;;;;AAMA,MAAA,gBAAgB,EAAG,0BAAS,IAAT,EACnB;AACE,QAAA,IAAI,CAAC,cAAL,CAAoB,SAApB,EAA+B,KAAK,aAApC,EAAmD,IAAnD;AACA,QAAA,IAAI,CAAC,cAAL,CAAoB,YAApB,EAAkC,KAAK,gBAAvC,EAAyD,IAAzD;AACD,OAhHH;;AAmHE;;;;;AAMA;AACA,MAAA,QAAQ,EAAG,oBAAW;AACpB,aAAK,KAAL,CAAW,OAAX;AACD,OA5HH;AA+HE;AACA,MAAA,eAAe,EAAG,2BAAW;AAC3B,aAAK,KAAL,CAAW,cAAX;AACD,OAlIH;AAqIE;AACA,MAAA,UAAU,EAAG,sBACb;AACE,eAAO;AACL,UAAA,IAAI,EAAG,KAAK,KAAL,CAAW,UAAX,EADF;AAEL,UAAA,GAAG,EAAE,KAAK,KAAL,CAAW,UAAX;AAFA,SAAP;AAID,OA5IH;AA+IE;AACA,MAAA,SAAS,EAAG,mBAAS,IAAT,EAAe,IAAf,EACZ;AACE,aAAK,KAAL,CAAW,UAAX,CAAsB,KAAK,KAAL,CAAW,UAAX,KAA0B,IAAhD;;AACA,aAAK,KAAL,CAAW,UAAX,CAAsB,KAAK,KAAL,CAAW,UAAX,KAA0B,IAAhD;AACD,OApJH;AAuJE;AACA,MAAA,YAAY,EAAG,wBACf;AACE,YAAI,IAAI,GAAG,KAAK,KAAL,CAAW,iBAAX,GAA+B,aAA/B,EAAX;;AACA,eAAO,IAAI,GAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,QAAf,CAAwB,GAAxB,CAA4B,IAA5B,CAAH,GAAuC,IAAlD;AACD,OA5JH;AA+JE;AACA,MAAA,aAAa,EAAG,yBAAW;AACzB,eAAO,KAAK,KAAL,CAAW,YAAX,EAAP;AACD;AAlKH,KArCD;;AA0MC;;;;;AAMA,IAAA,QAAQ,EAAG,oBAAW;AACpB,WAAK,KAAL,GAAa,KAAK,SAAL,GAAiB,IAA9B;AACD;AAlNF,GADA;AA1BA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,SAAb,CAAuB,QAAvB,CAAgC,aAAhC,GAAgD,aAAhD;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAoBA;;;;;AAKA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,6BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,SAAd,CAAwB,QADlC;;AAIC;;;;;AAMA,IAAA,OAAO,EACP;AACE;;;;;;AAMA,MAAA,aAAa,EAAG,yBAAW;AACzB,eAAO,KAAK,KAAL,CAAW,YAAX,GAA0B,YAA1B,EAAP;AACD,OATH;;AAYE;;;;;AAMA;AACA,MAAA,8BAA8B,EAAG,wCAAS,KAAT,EACjC;AACE,YAAI,IAAI,GAAG,KAAK,KAAL,CAAW,iBAAX,CACT,KAAK,CAAC,eAAN,EADS,EAET,KAAK,CAAC,cAAN,EAFS,CAAX;;AAKA,YAAI,CAAC,IAAL,EAAW;AACT,iBAAO,IAAP;AACD;;AAED,eAAO,KAAK,aAAL,CAAmB,IAAI,CAAC,GAAxB,IAA+B,IAAI,CAAC,GAApC,GAA0C,IAAjD;AACD,OA/BH;AAkCE;AACA,MAAA,cAAc,EAAG,wBAAS,GAAT,EACjB;AACE,YAAI,WAAW,GAAG,EAAlB;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,KAAK,aAAL,EAAhB,EAAsC,CAAC,GAAC,CAAxC,EAA2C,CAAC,EAA5C,EACA;AACE,cAAI,KAAK,aAAL,CAAmB,CAAnB,CAAJ,EAA2B;AACzB,YAAA,WAAW,CAAC,IAAZ,CAAiB,CAAjB;AACD;AACF;;AAED,eAAO,WAAP;AACD,OA/CH;AAkDE;AACA,MAAA,mBAAmB,EAAG,6BAAS,KAAT,EAAgB,KAAhB,EACtB;AACE,YAAI,WAAW,GAAG,EAAlB;AACA,YAAI,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,KAAhB,CAAV;AACA,YAAI,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,KAAhB,CAAV;;AAEA,aAAK,IAAI,CAAC,GAAC,GAAX,EAAgB,CAAC,IAAE,GAAnB,EAAwB,CAAC,EAAzB,EACA;AACE,cAAI,KAAK,aAAL,CAAmB,CAAnB,CAAJ,EAA2B;AACzB,YAAA,WAAW,CAAC,IAAZ,CAAiB,CAAjB;AACD;AACF;;AAED,eAAO,WAAP;AACD,OAjEH;AAoEE;AACA,MAAA,mBAAmB,EAAG,+BACtB;AACE,YAAI,KAAK,GAAG,KAAK,aAAL,EAAZ;;AACA,aAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,KAAhB,EAAuB,CAAC,EAAxB,EACA;AACE,cAAI,KAAK,aAAL,CAAmB,CAAnB,CAAJ,EAA2B;AACzB,mBAAO,CAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD,OA/EH;AAkFE;AACA,MAAA,kBAAkB,EAAG,8BACrB;AACE,YAAI,KAAK,GAAG,KAAK,aAAL,EAAZ;;AACA,aAAK,IAAI,CAAC,GAAC,KAAK,GAAC,CAAjB,EAAoB,CAAC,IAAE,CAAvB,EAA0B,CAAC,EAA3B,EACA;AACE,cAAI,KAAK,aAAL,CAAmB,CAAnB,CAAJ,EAA2B;AACzB,mBAAO,CAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD,OA7FH;AAgGE;AACA,MAAA,qBAAqB,EAAG,+BAAS,IAAT,EAAe,QAAf,EACxB;AACE,YAAI,QAAQ,IAAI,OAAhB,EACA;AACE,cAAI,UAAU,GAAG,IAAI,GAAC,CAAtB;AACA,cAAI,QAAQ,GAAG,CAAf;AACA,cAAI,SAAS,GAAG,CAAC,CAAjB;AACD,SALD,MAMK,IAAI,QAAQ,IAAI,OAAhB,EACL;AACE,cAAI,UAAU,GAAG,IAAI,GAAC,CAAtB;AACA,cAAI,QAAQ,GAAG,KAAK,aAAL,KAAqB,CAApC;AACA,cAAI,SAAS,GAAG,CAAhB;AACD,SALI,MAOL;AACE,iBAAO,IAAP;AACD;;AAED,aAAK,IAAI,CAAC,GAAC,UAAX,EAAuB,CAAC,KAAK,QAAQ,GAAC,SAAtC,EAAiD,CAAC,IAAI,SAAtD,EACA;AACE,cAAI,KAAK,aAAL,CAAmB,CAAnB,CAAJ,EAA2B;AACzB,mBAAO,CAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD,OA3HH;AA8HE;AACA,MAAA,QAAQ,EAAG,kBAAS,IAAT,EAAe,EAAf,EACX;AACE,YAAI,EAAJ,EAAQ;AACN,iBAAO,KAAK,mBAAL,EAAP;AACD,SAFD,MAEO;AACL,iBAAO,KAAK,kBAAL,EAAP;AACD;AACF,OAtIH;AAyIE;AACA,MAAA,qBAAqB,EAAG,+BAAS,IAAT,EAAe;AACrC,eAAO,IAAP;AACD,OA5IH;AA+IE;AACA,MAAA,mBAAmB,EAAG,6BAAS,IAAT,EAAe;AACnC,YAAI,KAAK,mBAAT,EAA8B;AAC5B,eAAK,KAAL,CAAW,iBAAX,CAA6B,IAA7B;AACD;AACF,OApJH;AAuJE;AACA,MAAA,uBAAuB,EAAG,iCAAS,IAAT,EAC1B;AACE,eAAO;AACL,UAAA,IAAI,EAAE,CADD;AAEL,UAAA,KAAK,EAAE,KAAK,KAAL,CAAW,eAAX,GAA6B,YAA7B,KAA8C;AAFhD,SAAP;AAID,OA9JH;AAiKE;AACA,MAAA,uBAAuB,EAAG,iCAAS,IAAT,EAC1B;AACE,YAAI,SAAS,GAAG,KAAK,KAAL,CAAW,YAAX,EAAhB;;AAEA,YAAI,OAAO,GAAG,SAAS,CAAC,eAAV,CAA0B,IAA1B,CAAd;AACA,YAAI,UAAU,GAAG,OAAO,GAAG,SAAS,CAAC,WAAV,CAAsB,IAAtB,CAAV,GAAwC,CAAzD;AAEA,eAAO;AACL,UAAA,GAAG,EAAE,OADA;AAEL,UAAA,MAAM,EAAE;AAFH,SAAP;AAID;AA7KH;AAXD,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,SAAb,CAAuB,GAAvB,CAA2B,aAA3B,GAA2C,aAA3C;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;AAUA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,qCAAf,EACA;AACC,IAAA,MAAM,EAAE,EAAE,CAAC,IAAH,CAAQ,MADjB;;AAGC;;;;;;;;;AASA,IAAA,SAAS,EAAE,mBAAS,IAAT,EAAe,SAAf,EACX;AACE,UAAgB,YAAY,GAAG,IAAI,CAAC,eAAL,EAA/B;AAEA,4CAHF,CAKE;;AACA,WAAK,KAAL,GAAa,IAAb;AACA,WAAK,KAAL,GAAa,EAAb,CAPF,CASE;;AACA,UAAI,IAAI,GAAG,UAAS,IAAT,EAAe;AACxB,YAAI,EAAE,CAAC,KAAH,CAAS,WAAT,CAAqB,IAAI,CAAC,WAA1B,EAAuC,UAAvC,CAAJ,EAAwD;AACtD,UAAA,IAAI,CAAC,WAAL,GAAmB,OAAnB,CAA2B,IAA3B;AACD;;AAED,YAAI,EAAE,CAAC,KAAH,CAAS,WAAT,CAAqB,IAAI,CAAC,WAA1B,EAAuC,YAAvC,CAAJ,EAA0D;AACxD,cAAI,IAAI,CAAC,GAAL,CAAS,YAAT,CAAJ,EAA4B;AAC1B,YAAA,IAAI,CAAC,QAAL,CAAc,IAAd;AACD,WAFD,MAGK;AACH,YAAA,IAAI,CAAC,SAAL,CAAe,IAAf;AACD;AACF;AACF,OAbU,CAaT,IAbS,CAaJ,IAbI,CAAX;;AAcA,MAAA,IAAI,CAAC,SAAD,CAAJ,CAxBF,CA0BE;;AACA,UAAI,GAAG,GAAG,IAAI,CAAC,WAAL,CAAiB,MAAjB,EAAyB,KAAK,OAA9B,EAAuC,IAAvC,CAAV;;AACA,WAAK,KAAL,CAAW,IAAX,CAAgB,CAAC,IAAD,EAAO,GAAP,CAAhB;;AACA,MAAA,GAAG,GAAG,IAAI,CAAC,WAAL,CAAiB,OAAjB,EAA0B,KAAK,QAA/B,EAAyC,IAAzC,CAAN;;AACA,WAAK,KAAL,CAAW,IAAX,CAAgB,CAAC,IAAD,EAAO,GAAP,CAAhB;;AACA,MAAA,GAAG,GAAG,SAAS,CAAC,WAAV,CAAsB,cAAtB,EAAsC,KAAK,eAA3C,EAA4D,IAA5D,CAAN;;AACA,WAAK,KAAL,CAAW,IAAX,CAAgB,CAAC,SAAD,EAAY,GAAZ,CAAhB;AACD,KA9CF;AAgDC,IAAA,OAAO,EACP;AACE;AACA,MAAA,KAAK,EAAE,IAFT;;AAIE;AACA,MAAA,KAAK,EAAE,IALT;AAOE;AACA,MAAA,OAAO,EAAE,iBAAS,EAAT,EACT;AACE,QAAA,EAAE,CAAC,OAAH,GAAa,GAAb,CAAiB,KAAK,KAAL,CAAW,eAAX,EAAjB,EAA+C,IAA/C;AACD,OAXH;AAaE;AACA,MAAA,QAAQ,EAAE,kBAAS,EAAT,EACV;AACE,QAAA,EAAE,CAAC,OAAH,GAAa,GAAb,CAAiB,KAAK,KAAL,CAAW,eAAX,EAAjB,EAA+C,KAA/C;AACD,OAjBH;AAmBE;AACA,MAAA,eAAe,EAAE,yBAAS,EAAT,EACjB;AACE,YAAI,KAAJ;AACA,YAAI,IAAJ;AACA,YAAI,MAAJ;AACA,YAAI,MAAM,GAAG,EAAE,CAAC,OAAH,EAAb,CAJF,CAME;;AACA,QAAA,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAoB,iBAApB,EAAuC,IAAvC,CAAR,CAPF,CASE;;AACA,QAAA,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,GAAsB,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAoB,KAApB,CAAtB,GAAmD,MAAM,CAAC,IAAjE,CAVF,CAYE;;AACA,YAAI,IAAI,IAAI,EAAE,CAAC,KAAH,CAAS,WAAT,CAAqB,IAAI,CAAC,WAA1B,EAAuC,KAAK,KAAL,CAAW,eAAX,EAAvC,CAAZ,EAAkF;AAChF;AACA,UAAA,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,eAAX,EAAT,CAAT,CAFgF,CAIhF;;AACA,cAAI,MAAM,IAAI,CAAC,KAAK,KAAL,CAAW,UAAX,CAAsB,IAAtB,CAAf,EAA4C;AAC1C,iBAAK,KAAL,CAAW,QAAX,CAAoB,IAApB;AACD,WAFD,MAGK,IAAI,CAAE,MAAF,IAAY,KAAK,KAAL,CAAW,UAAX,CAAsB,IAAtB,CAAhB,EAA6C;AAChD,iBAAK,KAAL,CAAW,SAAX,CAAqB,IAArB;AACD;AACF,SAxBH,CA0BE;;;AACA,aAAK,KAAL,CAAW,OAAX;AACD;AAjDH,KAjDD;AAqGC,IAAA,QAAQ,EAAE,oBACV;AACE,WAAK,KAAL,GAAa,IAAb;;AACA,WAAK,KAAL,CAAW,OAAX,CAAmB,UAAS,IAAT,EAAe;AAChC,QAAA,IAAI,CAAC,CAAD,CAAJ,CAAQ,kBAAR,CAA2B,IAAI,CAAC,CAAD,CAA/B;AACD,OAFD;AAGD;AA3GF,GADA;AA7BA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,IAAV,CAAe,mBAAf,CAAmC,aAAnC,GAAmD,aAAnD;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;AAOA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,wCAAnB,EACA;AACC,IAAA,OAAO,EACP;AACE;;;;;;;;AAQA,MAAA,aAAa,EAAG,uBAAS,GAAT,EAAc,MAAd,EAAsB,CAAE,CAT1C;;AAWE;;;;;AAKA,MAAA,cAAc,EAAG,wBAAS,MAAT,EAAiB,CAAE;AAhBtC;AAFD,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,IAAb,CAAkB,mBAAlB,CAAsC,aAAtC,GAAsD,aAAtD;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;AAMA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,0CAAnB,EACA;AACC,IAAA,OAAO,EACP;AACE;;;;;AAKA,MAAA,WAAW,EAAG,uBAAW,CAAE,CAN7B;;AASE;;;;;AAKA,MAAA,cAAc,EAAG,0BAAW,CAAE,CAdhC;;AAiBE;;;;;AAKA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EACnB;AACE,aAAK,oBAAL,CAA0B,SAA1B,EAAqC,CAArC,EAAwC,CAAxC;AACA,aAAK,YAAL,CAAkB,KAAlB;AACD,OA1BH;;AA6BE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,KAAT,EACf;AACE,aAAK,oBAAL,CAA0B,SAA1B,EAAqC,CAArC,EAAwC,CAAxC;AACA,aAAK,YAAL,CAAkB,KAAlB;AACD,OAvCH;;AA0CE;;;;;AAKA,MAAA,gBAAgB,EAAG,0BAAS,GAAT,EACnB;AACE,aAAK,oBAAL,CAA0B,SAA1B,EAAqC,CAArC,EAAwC,CAAxC;AACA,aAAK,aAAL,CAAmB,GAAnB;AACD,OAnDH;;AAsDE;;;;;AAKA,MAAA,kBAAkB,EAAG,4BAAS,GAAT,EACrB;AACE,aAAK,oBAAL,CAA0B,SAA1B,EAAqC,CAArC,EAAwC,CAAxC;AACA,aAAK,aAAL,CAAmB,GAAnB;AACD,OA/DH;;AAkEE;;;;;;;AAOA,MAAA,YAAY,EAAG,sBAAS,GAAT,EACf;AACE,aAAK,oBAAL,CAA0B,SAA1B,EAAqC,CAArC,EAAwC,CAAxC;AACA,aAAK,aAAL,CAAmB,GAAnB;AACD;AA7EH;AAFD,GADA;AAxBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,QAAV,CAAmB,oBAAnB,CAAwC,aAAxC,GAAwD,aAAxD;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;AAKA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,mCAAf,EACA;AACC,IAAA,SAAS,EAAG,qBAAW;AACrB,WAAK,YAAL,GAAoB,EAApB;AACD,KAHF;AAMC,IAAA,UAAU,EACV;AACE;;;;AAIA,MAAA,SAAS,EACT;AACE,QAAA,KAAK,EAAE,QADT;AAEE,QAAA,QAAQ,EAAE;AAFZ,OANF;;AAYE;;;;AAIA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAE,QADT;AAEE,QAAA,QAAQ,EAAE;AAFZ,OAjBF;;AAuBE;;;;AAIA,MAAA,YAAY,EACZ;AACE,QAAA,QAAQ,EAAE;AADZ,OA5BF;;AAiCE;;;;AAIA,MAAA,WAAW,EACX;AACE,QAAA,QAAQ,EAAE;AADZ,OAtCF;;AA2CE;;;;;AAKA,MAAA,aAAa,EACb;AACE,QAAA,KAAK,EAAE,QADT;AAEE,QAAA,QAAQ,EAAE;AAFZ,OAjDF;;AAuDE;;;;AAIA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAE,gBADT;AAEE,QAAA,IAAI,EAAE,IAFR;AAGE,QAAA,QAAQ,EAAE;AAHZ;AA5DF,KAPD;AA2EC,IAAA,OAAO,EACP;AACE;AACA,MAAA,YAAY,EAAG,IAFjB;;AAKE;;;;;;;;;;;AAWA,MAAA,qBAAqB,EAAG,+BAAS,IAAT,EAAe,KAAf,EACxB;AACE;AACA,aAAK,YAAL,CAAkB,EAAlB,EAAsB,OAAtB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,KAA3C;AAEA,aAAK,YAAL,CACE,KAAK,YAAL,EADF,EACuB,OADvB,EACgC,KAAK,eAAL,EADhC,EACwD,IADxD,EAC8D,KAD9D;;AAIA,YAAI,QAAQ,GAAG,KAAK,aAAL,CAAmB,KAAnB,CAAf;;AACA,YAAI,UAAU,GAAG,KAAK,KAAL,CAAW,cAAX,EAAjB;;AACA,QAAA,UAAU,GAAG,EAAE,CAAC,IAAH,CAAQ,kBAAR,CAA2B,oBAA3B,CAAgD,UAAhD,EAA4D,QAA5D,CAAb;;AAEA,YAAI,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,WAAf,CAA2B,UAAU,CAAC,WAAtC,EAAmD,KAAK,gBAAL,EAAnD,CAAJ,EAAiF;AAC/E,eAAK,YAAL,CACE,KAAK,gBAAL,KAA0B,SAD5B,EACuC,YADvC,EAEE;AACE,YAAA,SAAS,EAAG,qBAAW;AACrB,qBAAO,qBAAP;AACD;AAHH,WAFF,EAMK,IANL,EAMW,KANX;AAQD,SATD,MASO;AACL,UAAA,IAAI,CAAC,aAAL,CAAmB,mBAAnB;AACD;;AAED,YAAI,KAAK,WAAL,MAAsB,IAA1B,EACA;AACE,eAAK,YAAL,CACE,KAAK,WAAL,EADF,EACsB,MADtB,EAC8B,KAAK,cAAL,EAD9B,EACqD,IADrD,EAC2D,KAD3D;AAGD;AACF,OAhDH;;AAmDE;;;;;;;;;;;;;;AAcA,MAAA,YAAY,EAAG,sBAAS,UAAT,EAAqB,cAArB,EAAqC,OAArC,EAA8C,YAA9C,EAA4D,KAA5D,EACf;AACE,YAAI,QAAQ,GAAG,KAAK,aAAL,CAAmB,KAAnB,EAA0B,UAA1B,CAAf;;AACA,YAAI,UAAU,GAAG,KAAK,KAAL,CAAW,cAAX,EAAjB;;AAEA,YAAI,EAAE,GAAG,UAAU,CAAC,IAAX,CAAgB,QAAhB,EAA0B,YAA1B,EAAwC,cAAxC,EAAwD,OAAxD,CAAT;;AACA,aAAK,YAAL,CAAkB,YAAlB,EAAgC,EAAhC;AACD,OAxEH;;AA2EE;;;;;;;;;;;;;AAaA,MAAA,mBAAmB,EAAG,6BAAS,UAAT,EAAqB,cAArB,EAAqC,OAArC,EAA8C,YAA9C,EAA4D,KAA5D,EACtB;AACE,YAAI,QAAQ,GAAG,KAAK,aAAL,CAAmB,KAAnB,EAA0B,UAA1B,CAAf;;AACA,YAAI,UAAU,GAAG,KAAK,KAAL,CAAW,cAAX,EAAjB;;AAEA,YAAI,EAAE,GAAG,YAAY,CAAC,IAAb,CAAkB,cAAlB,EAAkC,UAAlC,EAA8C,QAA9C,EAAwD,OAAxD,CAAT;;AACA,aAAK,YAAL,CAAkB,YAAlB,EAAgC,EAAhC;AACD,OA/FH;;AAkGE;;;AAGA,MAAA,cAAc,EAAG,0BACjB;AACE,eAAM,KAAK,YAAL,CAAkB,MAAlB,GAA2B,CAAjC,EAAoC;AAClC,cAAI,IAAI,GAAG,KAAK,YAAL,CAAkB,GAAlB,EAAX;;AACA,eAAK,mBAAL,CAAyB,IAAzB;AACD;AACF,OA3GH;;AA8GE;;;;;;AAMA,MAAA,SAAS,EAAG,mBAAS,IAAT,EAAe,KAAf,EACZ;AACE,YAAI,QAAQ,GAAG,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,SAAjB,CAA2B,KAAK,WAAL,EAA3B,EAA+C,UAA/C,CAAf;;AAEA,YAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,UAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAAR;AACD,SAFD,MAEO;AACL,eAAK,qBAAL,CAA2B,IAA3B,EAAiC,KAAjC;AACD;AACF,OA7HH;;AAgIE;;;;;;AAMA,MAAA,mBAAmB,EAAG,6BAAS,IAAT,EACtB;AACE,YAAI,QAAQ,GAAG,KAAK,aAAL,CAAmB,IAAnB,CAAf;;AAEA,eAAO,QAAQ,CAAC,MAAT,GAAkB,CAAzB,EACA;AACE,cAAI,EAAE,GAAG,QAAQ,CAAC,GAAT,EAAT;;AAEA,cAAI;AACF,iBAAK,KAAL,CAAW,cAAX,GAA4B,aAA5B,CAA0C,EAA1C;AACD,WAFD,CAEE,OAAM,CAAN,EAAS;AACT,YAAA,IAAI,CAAC,aAAL,CAAmB,EAAnB;AACD;AACF;;AAED,YAAI,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3B,CAAJ,EAAsC;AACpC,UAAA,EAAE,CAAC,IAAH,CAAQ,KAAR,CAAc,MAAd,CAAqB,KAAK,YAA1B,EAAwC,IAAxC;AACD;AACF,OAxJH;;AA2JE;;;;;;;AAOA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB,IAAhB,EAChB;AACE,YAAI,QAAQ,GAAG,MAAM,KAAN,GAAc,GAA7B;;AACA,YAAI,IAAI,IAAI,IAAR,IAAgB,IAAI,IAAI,EAA5B,EAAgC;AAC9B,UAAA,QAAQ,IAAI,MAAM,IAAlB;AACD;;AACD,eAAO,QAAP;AACD,OAzKH;;AA4KE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,MAAT,EAAiB,EAAjB,EACf;AACE,YAAI,QAAQ,GAAG,KAAK,aAAL,CAAmB,MAAnB,CAAf;;AAEA,YAAI,CAAC,QAAQ,CAAC,QAAT,CAAkB,EAAlB,CAAL,EAA4B;AAC1B,UAAA,QAAQ,CAAC,IAAT,CAAc,EAAd;AACD;;AAED,YAAI,CAAC,KAAK,YAAL,CAAkB,QAAlB,CAA2B,MAA3B,CAAL,EAAyC;AACvC,eAAK,YAAL,CAAkB,IAAlB,CAAuB,MAAvB;AACD;AACF,OA7LH;;AAgME;;;;;;AAMA,MAAA,aAAa,EAAG,uBAAS,MAAT,EAChB;AACE,YAAI,QAAQ,GAAG,MAAM,CAAC,WAAP,CAAmB,YAAnB,CAAf;;AAEA,YAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,UAAA,QAAQ,GAAG,EAAX;AACA,UAAA,MAAM,CAAC,WAAP,CAAmB,YAAnB,EAAiC,QAAjC;AACD;;AAED,eAAO,QAAP;AACD;AAhNH,KA5ED;AAgSC,IAAA,QAAQ,EAAG,oBAAW;AACpB,WAAK,YAAL,GAAoB,IAApB;AACD;AAlSF,GADA;AAxBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,IAAV,CAAe,iBAAf,CAAiC,aAAjC,GAAiD,aAAjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;AAOA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,oCAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MADlB;AAGC,IAAA,SAAS,EAAG,CACX,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,IAAd,CAAmB,mBADR,EAEX,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,QAAX,CAAoB,oBAFT,CAHb;AAQC,IAAA,OAAO,EAAG,CAAC,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,IAAX,CAAgB,iBAAjB,CARX;;AAWC;;;AAGA,IAAA,SAAS,EAAG,mBAAS,IAAT,EACZ;AACE;AAEA,WAAK,KAAL,GAAa,IAAb;AAEA,WAAK,WAAL,CAAiB,gBAAjB,EAAmC,KAAK,iBAAxC,EAA2D,IAA3D;;AACA,WAAK,iBAAL;AACD,KAtBF;AAyBC,IAAA,OAAO,EACP;AACE;AACA,MAAA,KAAK,EAAG,IAFV;;AAKE;AACA,MAAA,SAAS,EAAG,IANd;;AASE;;;;;AAOA;AACA,MAAA,aAAa,EAAG,uBAAS,GAAT,EAAc,MAAd,EAChB;AACE,YAAI,IAAI,GAAG,KAAK,KAAL,CAAW,cAAX,GAA4B,OAA5B,CAAoC,GAApC,CAAX;;AAEA,YAAI,WAAW,GAAG,KAAlB;;AACA,YAAI,KAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,CAAJ,EAA6B;AAC3B,UAAA,WAAW,GAAG,KAAK,KAAL,CAAW,WAAX,CAAuB,IAAvB,CAAd;AACD;;AAED,YAAI,MAAM,GAAG,KAAK,SAAL,CAAe,aAAf,EAAb;;AACA,QAAA,MAAM,CAAC,OAAP,CAAe,WAAW,IAAI,KAAK,KAAL,CAAW,UAAX,CAAsB,IAAtB,CAA9B;AACA,QAAA,MAAM,CAAC,WAAP,CAAmB,YAAnB,EAAiC,KAAK,eAAtC,EAAuD,IAAvD;AACA,QAAA,MAAM,CAAC,WAAP,CAAmB,oBAAnB,EAAyC,KAAK,gBAAL,EAAzC;AACA,QAAA,MAAM,CAAC,WAAP,CAAmB,gBAAnB,EAAqC,KAAK,KAAL,CAAW,WAAX,EAArC;;AAEA,YAAG,KAAK,KAAL,CAAW,YAAX,GAA0B,QAA1B,CAAmC,IAAnC,CAAH,EAA6C;AAC3C,eAAK,iBAAL,CAAuB,MAAvB;AACD,SAFD,MAEO;AACL,eAAK,mBAAL,CAAyB,MAAzB;AACD;;AAED,YAAI,KAAK,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,GAApB,CAAZ;;AACA,YAAI,CAAC,KAAK,KAAL,CAAW,4BAAX,EAAL,EAAgD;AAC9C,UAAA,KAAK,IAAI,CAAT;AACD;;AACD,QAAA,MAAM,CAAC,WAAP,CAAmB,YAAnB,EAAiC,KAAjC;;AAEA,YAAI,CAAC,KAAK,KAAL,CAAW,4BAAX,EAAD,IAA8C,KAAK,IAAI,CAAC,CAA5D,EAA+D;AAC7D,UAAA,MAAM,CAAC,iBAAP,CAAyB,OAAzB;AACD,SAFD,MAEO;AACL,UAAA,MAAM,CAAC,iBAAP,CAAyB,MAAzB;AACD;;AAED,YAAI,KAAK,KAAL,CAAW,eAAX,EAAJ,EAAkC;AAChC,UAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB;AACD;;AAED,aAAK,SAAL,CAAe,MAAf,EAAuB,GAAvB;;AACA,QAAA,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAX,CAAiB,MAAjB,CAAwB,GAAxB,CAA4B,MAA5B;AAEA,eAAO,MAAP;AACD,OA1DH;AA6DE;AACA,MAAA,cAAc,EAAG,wBAAS,MAAT,EACjB;AACE,QAAA,MAAM,CAAC,cAAP,CAAsB,YAAtB,EAAoC,KAAK,eAAzC,EAA0D,IAA1D;;AACA,aAAK,mBAAL,CAAyB,MAAzB;;AACA,aAAK,SAAL,CAAe,IAAf,CAAoB,MAApB;;AACA,aAAK,OAAL,CAAa,MAAb;AACD,OApEH;AAuEE;AACA,MAAA,WAAW,EAAG,uBAAW;AACvB,eAAO,IAAI,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,KAAd,CAAoB,UAAxB,CAAmC,IAAnC,CAAP;AACD,OA1EH;AA6EE;AACA,MAAA,cAAc,EAAG,0BACjB;AACE,YAAI,UAAU,GAAG,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,SAAjB,CAA2B,KAAK,WAAL,EAA3B,EAA+C,YAA/C,CAAjB;;AAEA,YAAI,UAAU,IAAI,IAAlB,EAAwB;AACtB,UAAA,UAAU,GAAG,sBAAW;AACtB,mBAAO,IAAI,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,eAAf,EAAP;AACD,WAFD;AAGD;;AAED,YAAI,QAAQ,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,IAAd,CAAmB,UAAvB,EAAf;AACA,QAAA,QAAQ,CAAC,WAAT,CAAqB;AACnB,UAAA,YAAY,EAAG;AADI,SAArB;AAIA,eAAO,QAAP;AACD,OA9FH;AAiGE;AACA,MAAA,gBAAgB,EAAG,0BAAS,GAAT,EACnB;AACE,YAAI,MAAM,GAAG,KAAK,KAAL,CAAW,MAAX,CAAkB,qBAAlB,CAAwC,GAAxC,EAA6C,CAA7C,CAAb;;AACA,aAAK,iBAAL,CAAuB,MAAvB;AACD,OAtGH;AAyGE;AACA,MAAA,kBAAkB,EAAG,4BAAS,GAAT,EACrB;AACE,YAAI,MAAM,GAAG,KAAK,KAAL,CAAW,MAAX,CAAkB,qBAAlB,CAAwC,GAAxC,EAA6C,CAA7C,CAAb;;AACA,aAAK,mBAAL,CAAyB,MAAzB;AACD,OA9GH;AAiHE;AACA,MAAA,YAAY,EAAG,sBAAS,GAAT,EACf;AACE,YAAI,MAAM,GAAG,KAAK,KAAL,CAAW,MAAX,CAAkB,qBAAlB,CAAwC,GAAxC,EAA6C,CAA7C,CAAb;;AACA,YAAI,MAAM,IAAI,IAAd,EAAoB;AAClB,iBAAO,MAAM,CAAC,SAAP,EAAP;AACD,SAFD,MAEO;AACL,iBAAO,IAAP;AACD;AACF,OA1HH;;AA6HE;;;;;;AAOA;;;;;AAKA,MAAA,iBAAiB,EAAG,2BAAS,MAAT,EAAiB;AACnC,YAAG,MAAM,IAAI,IAAb,EAAmB;AACjB;AACD;;AAED,aAAK,SAAL,CAAe,YAAf,CAA4B,MAA5B,EAAoC;AAAC,UAAA,QAAQ,EAAE;AAAX,SAApC;AACD,OA/IH;;AAkJE;;;;;AAKA,MAAA,mBAAmB,EAAG,6BAAS,MAAT,EAAiB;AACrC,YAAG,MAAM,IAAI,IAAb,EAAmB;AACjB;AACD;;AAED,aAAK,SAAL,CAAe,YAAf,CAA4B,MAA5B,EAAoC,EAApC;AACD,OA7JH;;AAgKE;;;;;;AAMA,MAAA,OAAO,EAAG,iBAAS,IAAT,EACV;AACE,YAAI,MAAM,GAAG,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,SAAjB,CAA2B,KAAK,WAAL,EAA3B,EAA+C,QAA/C,CAAb;;AAEA,YAAI,MAAM,IAAI,IAAd,EAAoB;AAClB,UAAA,MAAM,CAAC,IAAD,CAAN;AACD;AACF,OA7KH;;AAgLE;;;;;;AAOA;;;;;AAKA,MAAA,cAAc,EAAG,wBAAS,KAAT,EACjB;AACE,YAAI,aAAa,GAAG,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,SAAjB,CAA2B,KAAK,WAAL,EAA3B,EAA+C,eAA/C,CAApB;;AAEA,YAAI,aAAa,IAAI,IAArB,EAA2B;AACzB,cAAI,IAAI,GAAG,KAAK,CAAC,OAAN,EAAX;AACA,UAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,OApMH;;AAuME;;;;;AAKA,MAAA,iBAAiB,EAAG,2BAAS,KAAT,EACpB;AACE,YAAI,KAAK,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,eAAK,SAAL,CAAe,OAAf;;AACA,eAAK,cAAL;AACD;;AAED,aAAK,SAAL,GAAiB,KAAK,cAAL,EAAjB;;AACA,aAAK,SAAL,CAAe,WAAf,CAA2B,SAA3B,EAAsC,KAAK,cAA3C,EAA2D,IAA3D;AACD,OArNH;;AAwNE;;;;;AAKA,MAAA,eAAe,EAAG,yBAAS,KAAT,EAClB;AACE,YAAI,MAAM,GAAG,KAAK,CAAC,SAAN,EAAb;AAEA,YAAI,GAAG,GAAG,MAAM,CAAC,WAAP,CAAmB,UAAnB,CAAV;;AACA,YAAI,IAAI,GAAG,KAAK,KAAL,CAAW,cAAX,GAA4B,OAA5B,CAAoC,GAApC,CAAX;;AAEA,YAAI,KAAK,CAAC,OAAN,EAAJ,EAAqB;AACnB,eAAK,KAAL,CAAW,wBAAX,CAAoC,IAApC;AACD,SAFD,MAEO;AACL,eAAK,KAAL,CAAW,yBAAX,CAAqC,IAArC;AACD;AACF;AAzOH,KA1BD;AAuQC,IAAA,QAAQ,EAAG,oBACX;AACE,WAAK,cAAL;;AACA,WAAK,SAAL,CAAe,OAAf;;AACA,WAAK,KAAL,GAAa,KAAK,SAAL,GAAiB,IAA9B;AACD;AA5QF,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,QAAV,CAAmB,cAAnB,CAAkC,aAAlC,GAAkD,aAAlD;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AAGA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,sBAAf,EACA;AACC,IAAA,OAAO,EACP;AACE;;;;;;;;AAQA,MAAA,MAAM,EAAG,gBAAS,IAAT,EAAe,aAAf,EACT;AACE,YAAI,IAAI,IAAI,IAAR,IAAgB,aAAa,IAAI,IAArC,EAA2C;AACzC,iBAAO,KAAP;AACD;;AACD,eAAO,EAAE,CAAC,KAAH,CAAS,WAAT,CAAqB,IAAI,CAAC,WAA1B,EAAuC,aAAvC,CAAP;AACD,OAfH;;AAkBE;;;;;;;;;;AAUA,MAAA,WAAW,EAAG,qBAAS,IAAT,EAAe,aAAf,EAA8B,WAA9B,EACd;AACE,YAAI,IAAI,IAAI,IAAR,IAAgB,aAAa,IAAI,IAAjC,IAAyC,CAAC,KAAK,MAAL,CAAY,IAAZ,EAAkB,aAAlB,CAA9C,EAAgF;AAC9E,iBAAO,KAAP;AACD;;AAED,YAAI,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,aAAT,CAAf;;AACA,YAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,iBAAO,KAAP;AACD;;AAED,YAAI,CAAC,WAAL,EAAkB;AAChB,iBAAO,QAAQ,CAAC,MAAT,GAAkB,CAAzB;AACD,SAFD,MAIA;AACE,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,SAAT,EAApB,EAA0C,CAAC,EAA3C,EACA;AACE,gBAAI,KAAK,GAAG,QAAQ,CAAC,OAAT,CAAiB,CAAjB,CAAZ;;AACA,gBAAI,KAAK,MAAL,CAAY,KAAZ,EAAmB,aAAnB,CAAJ,EAAuC;AACrC,qBAAO,IAAP;AACD;AACF;AACF;;AACD,eAAO,KAAP;AACD;AArDH;AAFD,GADA;AArBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAAoB,aAApB,GAAoC,aAApC;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;AAGA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,kBAAf,EACA;AACC,IAAA,OAAO,EACP;AACE;;;;;;;AAOA,MAAA,SAAS,EAAG,mBAAS,QAAT,EAAmB,cAAnB,EACZ;AACE,YAAI,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,cAAjB,CAAgC,QAAhC,EAA0C,cAA1C,CAAJ,EAA+D;AAC7D,iBAAO,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,IAAjB,CAAsB,QAAQ,CAAC,cAAD,CAA9B,EAAgD,QAAhD,CAAP;AACD;;AAED,eAAO,IAAP;AACD,OAfH;;AAmBE;;;;;;;AAOA,MAAA,cAAc,EAAG,wBAAU,QAAV,EAAoB,cAApB,EACjB;AACE,YAAI,IAAI,GAAG,EAAE,CAAC,IAAH,CAAQ,IAAnB;;AAEA,YAAI,IAAI,CAAC,QAAL,CAAc,QAAd,CAAJ,EAA6B;AAC3B,iBAAO,IAAI,CAAC,UAAL,CAAgB,QAAQ,CAAC,cAAD,CAAxB,CAAP;AACD;;AAED,eAAO,KAAP;AACD;AAnCH;AAFD,GADA;AAtBA,EAAA,EAAC,CAAC,IAAF,CAAO,QAAP,CAAgB,aAAhB,GAAgC,aAAhC;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;AAOA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,yBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MADlB;;AAGC;;;;AAIA,IAAA,SAAS,EAAG,mBAAS,eAAT,EAA0B,SAA1B,EACZ;AACE;AAEA,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,eAAL,GAAuB,eAAvB,CAJF,CAME;;AACA,WAAK,WAAL,GAAmB,EAAnB;AACD,KAhBF;AAmBC,IAAA,MAAM,EACN;AACE;AACA,gBAAW;AAFb,KApBD;AA0BC,IAAA,OAAO,EACP;AACE,MAAA,QAAQ,EAAG,IADb;;AAIE;;;;;AAKA,MAAA,kBAAkB,EAAG,8BAAW;AAC9B,eAAO,KAAK,eAAZ;AACD,OAXH;;AAcE;;;;;AAKA,MAAA,kBAAkB,EAAG,4BAAS,eAAT,EACrB;AACE,YAAI,KAAK,eAAL,KAAyB,eAA7B,EACA;AACE,eAAK,eAAL,GAAuB,eAAvB;AACA,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,oBAAL,CAA0B,QAA1B;AACD;AACF,OA3BH;;AA8BE;;;;;AAKA,MAAA,YAAY,EAAG,wBAAW;AACxB,eAAO,KAAK,SAAZ;AACD,OArCH;;AAwCE;;;;;AAKA,MAAA,YAAY,EAAG,sBAAS,SAAT,EACf;AACE,YAAI,KAAK,SAAL,KAAmB,SAAvB,EACA;AACE,eAAK,SAAL,GAAiB,SAAjB;AACA,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,oBAAL,CAA0B,QAA1B;AACD;AACF,OArDH;;AAwDE;;;;;;;AAOA,MAAA,WAAW,EAAG,qBAAS,KAAT,EAAgB,IAAhB,EACd;AAEE;AACE,eAAK,oBAAL,CAA0B,SAA1B,EAAqC,CAArC,EAAwC,CAAxC;AACA,eAAK,MAAL,CACE,IAAI,IAAI,CAAR,IAAa,IAAI,KAAK,IADxB,EAEE,oDAFF;AAID;;AACD,YAAI,KAAK,WAAL,CAAiB,KAAjB,KAA2B,IAA/B,EAAqC;AACnC;AACD;;AAED,YAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,iBAAO,KAAK,WAAL,CAAiB,KAAjB,CAAP;AACD,SAFD,MAEO;AACL,eAAK,WAAL,CAAiB,KAAjB,IAA0B,IAA1B;AACD;;AACD,aAAK,QAAL,GAAgB,IAAhB;AACA,aAAK,oBAAL,CAA0B,QAA1B;AACD,OApFH;;AAuFE;;;;;;AAMA,MAAA,WAAW,EAAG,qBAAS,KAAT,EACd;AACE;AACA,eAAO,KAAK,WAAL,CAAiB,KAAjB,KAA2B,KAAK,eAAvC;AACD,OAjGH;;AAoGE;;;AAGA,MAAA,cAAc,EAAG,0BACjB;AACE,aAAK,WAAL,GAAmB,EAAnB;AACA,aAAK,QAAL,GAAgB,IAAhB;AACA,aAAK,oBAAL,CAA0B,QAA1B;AACD,OA5GH;;AA+GE;;;;;;;;;AASA,MAAA,WAAW,EAAG,uBACd;AACE,YAAI,KAAK,QAAT,EAAmB;AACjB,iBAAO,KAAK,QAAZ;AACD;;AAED,YAAI,WAAW,GAAG,KAAK,eAAvB;AACA,YAAI,SAAS,GAAG,KAAK,SAArB;AAEA,YAAI,OAAO,GAAG,EAAd;;AACA,aAAK,IAAI,GAAT,IAAgB,KAAK,WAArB,EACA;AACE,cAAI,KAAK,GAAG,QAAQ,CAAC,GAAD,EAAM,EAAN,CAApB;;AACA,cAAI,KAAK,GAAG,SAAZ,EAAuB;AACrB,YAAA,OAAO,CAAC,IAAR,CAAa,KAAb;AACD;AACF;;AACD,YAAI,OAAO,CAAC,MAAR,IAAkB,CAAtB,EACA;AACE,cAAI,MAAM,GAAG,CAAC;AACZ,YAAA,UAAU,EAAE,CADA;AAEZ,YAAA,QAAQ,EAAE,SAAS,GAAG,CAFV;AAGZ,YAAA,aAAa,EAAE,WAHH;AAIZ,YAAA,UAAU,EAAE,CAJA;AAKZ,YAAA,QAAQ,EAAE,SAAS,GAAG,WAAZ,GAA0B;AALxB,WAAD,CAAb;AAOA,eAAK,QAAL,GAAgB,MAAhB;AACA,iBAAO,MAAP;AACD;;AAED,QAAA,OAAO,CAAC,IAAR,CAAa,UAAS,CAAT,EAAW,CAAX,EAAc;AAAE,iBAAO,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAApB;AAAuB,SAApD;AAEA,YAAI,MAAM,GAAG,EAAb;AACA,YAAI,aAAa,GAAG,CAApB;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,OAAO,CAAC,MAAxB,EAAgC,CAAC,EAAjC,EACA;AACE,cAAI,KAAK,GAAG,OAAO,CAAC,CAAD,CAAnB;;AACA,cAAI,KAAK,IAAI,SAAb,EAAwB;AACtB;AACD;;AAED,cAAI,QAAQ,GAAG,KAAK,WAAL,CAAiB,KAAjB,CAAf;AACA,cAAI,UAAU,GAAG,KAAK,GAAG,WAAR,GAAsB,aAAvC;AAEA,UAAA,aAAa,IAAI,QAAQ,GAAG,WAA5B;AAEA,UAAA,MAAM,CAAC,CAAD,CAAN,GAAY;AACV,YAAA,UAAU,EAAE,KADF;AAEV,YAAA,aAAa,EAAE,QAFL;AAGV,YAAA,UAAU,EAAE;AAHF,WAAZ;;AAKA,cAAI,CAAC,GAAG,CAAR,EAAW;AACT,YAAA,MAAM,CAAC,CAAC,GAAC,CAAH,CAAN,CAAY,QAAZ,GAAuB,UAAU,GAAC,CAAlC;AACA,YAAA,MAAM,CAAC,CAAC,GAAC,CAAH,CAAN,CAAY,QAAZ,GAAuB,KAAK,GAAC,CAA7B;AACD;AACF,SAvDH,CAyDE;;;AACA,YAAI,MAAM,CAAC,CAAD,CAAN,CAAU,UAAV,GAAuB,CAA3B,EACA;AACE,UAAA,MAAM,CAAC,OAAP,CAAe;AACb,YAAA,UAAU,EAAE,CADC;AAEb,YAAA,QAAQ,EAAE,MAAM,CAAC,CAAD,CAAN,CAAU,UAAV,GAAqB,CAFlB;AAGb,YAAA,aAAa,EAAE,WAHF;AAIb,YAAA,UAAU,EAAE,CAJC;AAKb,YAAA,QAAQ,EAAE,MAAM,CAAC,CAAD,CAAN,CAAU,UAAV,GAAqB;AALlB,WAAf;AAOD,SAnEH,CAqEE;;;AACA,YAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAP,GAAc,CAAf,CAAtB;AACA,YAAI,kBAAkB,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,UAAtB,GAAmC,CAApC,IAAyC,WAAlE;AACA,QAAA,SAAS,CAAC,QAAV,GAAqB,SAAS,CAAC,UAAV,GAAuB,SAAS,CAAC,aAAjC,GAAiD,kBAAjD,GAAsE,CAA3F;AACA,QAAA,SAAS,CAAC,QAAV,GAAqB,SAAS,GAAG,CAAjC;AAEA,aAAK,QAAL,GAAgB,MAAhB;AACA,eAAO,MAAP;AACD,OAtMH;;AAyME;;;;;;;;AAQA,MAAA,qBAAqB,EAAG,+BAAS,QAAT,EACxB;AACE,YAAI,MAAM,GAAG,KAAK,QAAL,IAAiB,KAAK,WAAL,EAA9B;;AAEA,YAAI,KAAK,GAAG,CAAZ;AACA,YAAI,GAAG,GAAG,MAAM,CAAC,MAAP,GAAc,CAAxB,CAJF,CAME;;AACA,eAAO,IAAP,EACA;AACE,cAAI,KAAK,GAAG,KAAK,IAAK,GAAG,GAAG,KAAP,IAAiB,CAArB,CAAjB;AACA,cAAI,KAAK,GAAG,MAAM,CAAC,KAAD,CAAlB;;AAEA,cAAI,KAAK,CAAC,QAAN,GAAiB,QAArB,EAA+B;AAC7B,YAAA,KAAK,GAAG,KAAK,GAAG,CAAhB;AACD,WAFD,MAEO,IAAI,KAAK,CAAC,UAAN,GAAmB,QAAvB,EAAiC;AACtC,YAAA,GAAG,GAAG,KAAK,GAAG,CAAd;AACD,WAFM,MAEA;AACL,mBAAO,KAAP;AACD;AACF;AACF,OAtOH;;AAyOE;;;;;;;;;AASA,MAAA,iBAAiB,EAAG,2BAAS,QAAT,EACpB;AACE,YAAI,QAAQ,GAAG,CAAX,IAAgB,QAAQ,IAAI,KAAK,YAAL,EAAhC,EAAqD;AACnD,iBAAO,IAAP;AACD;;AAED,YAAI,KAAK,GAAG,KAAK,qBAAL,CAA2B,QAA3B,CAAZ;;AAEA,YAAI,QAAQ,GAAG,KAAK,CAAC,UAArB;AACA,YAAI,KAAK,GAAG,KAAK,CAAC,UAAlB;AACA,YAAI,aAAa,GAAG,KAAK,CAAC,aAA1B;;AAEA,YAAI,QAAQ,GAAG,aAAX,GAA2B,QAA/B,EACA;AACE,iBAAO;AACL,YAAA,KAAK,EAAE,KADF;AAEL,YAAA,MAAM,EAAE,QAAQ,GAAG;AAFd,WAAP;AAID,SAND,MAQA;AACE,cAAI,WAAW,GAAG,KAAK,eAAvB;AACA,iBAAO;AACL,YAAA,KAAK,EAAE,KAAK,GAAG,CAAR,GAAY,IAAI,CAAC,KAAL,CAAW,CAAC,QAAQ,GAAG,QAAX,GAAsB,aAAvB,IAAwC,WAAnD,CADd;AAEL,YAAA,MAAM,EAAE,CAAC,QAAQ,GAAG,QAAX,GAAsB,aAAvB,IAAwC;AAF3C,WAAP;AAID;AACF,OA7QH;;AAgRE;;;;;;;;AAQA,MAAA,kBAAkB,EAAG,4BAAS,KAAT,EACrB;AACE,YAAI,MAAM,GAAG,KAAK,QAAL,IAAiB,KAAK,WAAL,EAA9B;;AAEA,YAAI,KAAK,GAAG,CAAZ;AACA,YAAI,GAAG,GAAG,MAAM,CAAC,MAAP,GAAc,CAAxB,CAJF,CAME;;AACA,eAAO,IAAP,EACA;AACE,cAAI,KAAK,GAAG,KAAK,IAAK,GAAG,GAAG,KAAP,IAAiB,CAArB,CAAjB;AACA,cAAI,KAAK,GAAG,MAAM,CAAC,KAAD,CAAlB;;AAEA,cAAI,KAAK,CAAC,QAAN,GAAiB,KAArB,EAA4B;AAC1B,YAAA,KAAK,GAAG,KAAK,GAAG,CAAhB;AACD,WAFD,MAEO,IAAI,KAAK,CAAC,UAAN,GAAmB,KAAvB,EAA8B;AACnC,YAAA,GAAG,GAAG,KAAK,GAAG,CAAd;AACD,WAFM,MAEA;AACL,mBAAO,KAAP;AACD;AACF;AACF,OA7SH;;AAgTE;;;;;;;AAOA,MAAA,eAAe,EAAG,yBAAS,KAAT,EAClB;AACE,YAAI,KAAK,GAAG,CAAR,IAAa,KAAK,IAAI,KAAK,SAA/B,EAA0C;AACxC,iBAAO,IAAP;AACD;;AAED,YAAI,KAAK,GAAG,KAAK,kBAAL,CAAwB,KAAxB,CAAZ;;AACA,YAAI,KAAK,CAAC,UAAN,IAAoB,KAAxB,EAA+B;AAC7B,iBAAO,KAAK,CAAC,UAAb;AACD,SAFD,MAEO;AACL,iBAAO,KAAK,CAAC,UAAN,GAAmB,KAAK,CAAC,aAAzB,GAAyC,CAAC,KAAK,GAAC,KAAK,CAAC,UAAZ,GAAuB,CAAxB,IAA6B,KAAK,eAAlF;AACD;AACF,OAnUH;;AAsUE;;;;;AAKA,MAAA,YAAY,EAAG,wBACf;AACE,YAAI,MAAM,GAAG,KAAK,QAAL,IAAiB,KAAK,WAAL,EAA9B;;AACA,eAAO,MAAM,CAAC,MAAM,CAAC,MAAP,GAAc,CAAf,CAAN,CAAwB,QAAxB,GAAmC,CAA1C;AACD,OA/UH;;AAkVE;;;;;;;;;;AAUA,MAAA,YAAY,EAAG,sBAAS,UAAT,EAAqB,UAArB,EACf;AACE,YAAI,WAAW,GAAG,KAAK,WAAvB;AACA,YAAI,WAAW,GAAG,KAAK,eAAvB;AAEA,YAAI,GAAG,GAAG,CAAV;AACA,YAAI,KAAK,GAAG,EAAZ;AACA,YAAI,CAAC,GAAC,CAAN;;AACA,eAAO,GAAG,GAAG,UAAb,EACA;AACE,cAAI,QAAQ,GAAG,WAAW,CAAC,UAAD,CAAX,IAA2B,IAA3B,GAAkC,WAAW,CAAC,UAAD,CAA7C,GAA4D,WAA3E;AACA,UAAA,UAAU;AAEV,UAAA,GAAG,IAAI,QAAP;AACA,UAAA,KAAK,CAAC,CAAC,EAAF,CAAL,GAAa,QAAb;;AACA,cAAI,UAAU,IAAI,KAAK,SAAvB,EAAkC;AAChC;AACD;AACF;;AACD,eAAO,KAAP;AACD;AAhXH,KA3BD;AA+YC,IAAA,QAAQ,EAAG,oBAAW;AACpB,WAAK,WAAL,GAAmB,KAAK,QAAL,GAAgB,IAAnC;AACD;AAjZF,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,CAAuB,aAAvB,GAAuC,aAAvC;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;AAMA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,2BAAnB,EACA;AACC,IAAA,OAAO,EACP;AACE;;;;;;;;;;;;;AAaA,MAAA,UAAU,EAAG,oBACX,QADW,EACD,WADC,EAEX,QAFW,EAED,WAFC,EAGX;AACA,aAAK,oBAAL,CAA0B,SAA1B,EAAqC,CAArC,EAAwC,CAAxC;AACA,aAAK,qBAAL,CAA2B,QAA3B;AACA,aAAK,qBAAL,CAA2B,WAA3B;AACA,aAAK,WAAL,CAAiB,QAAjB;AACA,aAAK,WAAL,CAAiB,WAAjB;AACD,OAvBH;;AA0BE;;;;;;;;;;;;;;;AAeA,MAAA,iBAAiB,EAAG,2BAClB,QADkB,EACR,WADQ,EAElB,QAFkB,EAER,WAFQ,EAGlB;AACA,aAAK,oBAAL,CAA0B,SAA1B,EAAqC,CAArC,EAAwC,CAAxC;AACA,aAAK,qBAAL,CAA2B,QAA3B;AACA,aAAK,qBAAL,CAA2B,WAA3B;AACA,aAAK,WAAL,CAAiB,QAAjB;AACA,aAAK,WAAL,CAAiB,WAAjB;AACD,OAlDH;;AAqDE;;;AAGA,MAAA,eAAe,EAAG,2BAAW,CAAE;AAxDjC;AAFD,GADA;AAxBA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB,CAAyB,aAAzB,GAAyC,aAAzC;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAMA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,8BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,KAAH,CAAS,IAAT,CAAc,OADxB;AAIC,IAAA,UAAU,EACV;AACE;AACA,MAAA,GAAG,EACH;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,QAAQ,EAAE;AAFZ,OAHF;;AAQE;AACA,MAAA,MAAM,EACN;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,QAAQ,EAAE;AAFZ;AAVF,KALD;AAsBC,IAAA,OAAO,EACP;AACG;;;;;;;;AAQA,MAAA,IAAI,EAAG,cAAS,QAAT,EAAmB,EAAnB,EAAuB,GAAvB,EAA4B,MAA5B,EACP;AACE,QAAA,EAAE,CAAC,KAAH,CAAS,IAAT;AACA,aAAK,UAAL,CAAgB,KAAhB;AAEA,aAAK,MAAL,CAAY,GAAZ;AACA,aAAK,SAAL,CAAe,MAAf;AACD;AAhBJ;AAvBD,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,IAAb,CAAkB,SAAlB,CAA4B,aAA5B,GAA4C,aAA5C",
  "file": "build-output/testtapper/part-boot-bundle-25.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * All widget used as scrollbars must implement this interface.\n */\nqx.Interface.define(\"qx.ui.core.scroll.IScrollBar\",\n{\n  events :\n  {\n    /** Fired if the user scroll */\n    \"scroll\" : \"qx.event.type.Data\",\n    /** Fired as soon as the scroll animation ended. */\n    \"scrollAnimationEnd\": 'qx.event.type.Event'\n  },\n\n\n  properties :\n  {\n    /**\n     * The scroll bar orientation\n     */\n    orientation : {},\n\n\n    /**\n     * The maximum value (difference between available size and\n     * content size).\n     */\n    maximum : {},\n\n\n    /**\n     * Position of the scrollbar (which means the scroll left/top of the\n     * attached area's pane)\n     *\n     * Strictly validates according to {@link #maximum}.\n     * Does not apply any correction to the incoming value. If you depend\n     * on this, please use {@link #scrollTo} instead.\n     */\n    position : {},\n\n\n    /**\n     * Factor to apply to the width/height of the knob in relation\n     * to the dimension of the underlying area.\n     */\n    knobFactor : {}\n  },\n\n\n  members :\n  {\n    /**\n     * Scrolls to the given position.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param position {Integer} Scroll to this position. Must be greater zero.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollTo : function(position, duration) {\n      this.assertNumber(position);\n    },\n\n\n    /**\n     * Scrolls by the given offset.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param offset {Integer} Scroll by this offset\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBy : function(offset, duration) {\n      this.assertNumber(offset);\n    },\n\n\n    /**\n     * Scrolls by the given number of steps.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param steps {Integer} Number of steps\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBySteps : function(steps, duration) {\n      this.assertNumber(steps);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The scroll bar widget, is a special slider, which is used in qooxdoo instead\n * of the native browser scroll bars.\n *\n * Scroll bars are used by the {@link qx.ui.container.Scroll} container. Usually\n * a scroll bar is not used directly.\n *\n * @childControl slider {qx.ui.core.scroll.ScrollSlider} scroll slider component\n * @childControl button-begin {qx.ui.form.RepeatButton} button to scroll to top\n * @childControl button-end {qx.ui.form.RepeatButton} button to scroll to bottom\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var scrollBar = new qx.ui.core.scroll.ScrollBar(\"horizontal\");\n *   scrollBar.set({\n *     maximum: 500\n *   })\n *   this.getRoot().add(scrollBar);\n * </pre>\n *\n * This example creates a horizontal scroll bar with a maximum value of 500.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/scrollbar.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.core.scroll.ScrollBar\",\n{\n  extend : qx.ui.core.Widget,\n  implement : qx.ui.core.scroll.IScrollBar,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param orientation {String?\"horizontal\"} The initial scroll bar orientation\n   */\n  construct : function(orientation)\n  {\n    this.base(arguments);\n\n    // Create child controls\n    this._createChildControl(\"button-begin\");\n    this._createChildControl(\"slider\").addListener(\"resize\", this._onResizeSlider, this);\n    this._createChildControl(\"button-end\");\n\n    // Configure orientation\n    if (orientation != null) {\n      this.setOrientation(orientation);\n    } else {\n      this.initOrientation();\n    }\n\n    // prevent drag & drop on scrolling\n    this.addListener(\"track\", function(e) {\n      e.stopPropagation();\n    }, this);\n  },\n\n\n  events : {\n    /** Change event for the value. */\n    \"scrollAnimationEnd\": \"qx.event.type.Event\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"scrollbar\"\n    },\n\n\n    /**\n     * The scroll bar orientation\n     */\n    orientation :\n    {\n      check : [ \"horizontal\", \"vertical\" ],\n      init : \"horizontal\",\n      apply : \"_applyOrientation\"\n    },\n\n\n    /**\n     * The maximum value (difference between available size and\n     * content size).\n     */\n    maximum :\n    {\n      check : \"PositiveInteger\",\n      apply : \"_applyMaximum\",\n      init : 100\n    },\n\n\n    /**\n     * Position of the scrollbar (which means the scroll left/top of the\n     * attached area's pane)\n     *\n     * Strictly validates according to {@link #maximum}.\n     * Does not apply any correction to the incoming value. If you depend\n     * on this, please use {@link #scrollTo} instead.\n     */\n    position :\n    {\n      check : \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getMaximum()\",\n      init : 0,\n      apply : \"_applyPosition\",\n      event : \"scroll\"\n    },\n\n\n    /**\n     * Step size for each tap on the up/down or left/right buttons.\n     */\n    singleStep :\n    {\n      check : \"Integer\",\n      init : 20\n    },\n\n\n    /**\n     * The amount to increment on each event. Typically corresponds\n     * to the user pressing <code>PageUp</code> or <code>PageDown</code>.\n     */\n    pageStep :\n    {\n      check : \"Integer\",\n      init : 10,\n      apply : \"_applyPageStep\"\n    },\n\n\n    /**\n     * Factor to apply to the width/height of the knob in relation\n     * to the dimension of the underlying area.\n     */\n    knobFactor :\n    {\n      check : \"PositiveNumber\",\n      apply : \"_applyKnobFactor\",\n      nullable : true\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __offset : 2,\n    __originalMinSize : 0,\n\n\n    // overridden\n    _computeSizeHint : function() {\n      var hint = this.base(arguments);\n      if (this.getOrientation() === \"horizontal\") {\n        this.__originalMinSize = hint.minWidth;\n        hint.minWidth = 0;\n      } else {\n        this.__originalMinSize = hint.minHeight;\n        hint.minHeight = 0;\n      }\n      return hint;\n    },\n\n\n    // overridden\n    renderLayout : function(left, top, width, height) {\n      var changes = this.base(arguments, left, top, width, height);\n      var horizontal = this.getOrientation() === \"horizontal\";\n      if (this.__originalMinSize >= (horizontal ? width : height)) {\n        this.getChildControl(\"button-begin\").setVisibility(\"hidden\");\n        this.getChildControl(\"button-end\").setVisibility(\"hidden\");\n      } else {\n        this.getChildControl(\"button-begin\").setVisibility(\"visible\");\n        this.getChildControl(\"button-end\").setVisibility(\"visible\");\n      }\n\n      return changes;\n    },\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"slider\":\n          control = new qx.ui.core.scroll.ScrollSlider();\n          control.setPageStep(100);\n          control.setFocusable(false);\n          control.addListener(\"changeValue\", this._onChangeSliderValue, this);\n          control.addListener(\"slideAnimationEnd\", this._onSlideAnimationEnd, this);\n          this._add(control, {flex: 1});\n          break;\n\n        case \"button-begin\":\n          // Top/Left Button\n          control = new qx.ui.form.RepeatButton();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onExecuteBegin, this);\n          this._add(control);\n          break;\n\n        case \"button-end\":\n          // Bottom/Right Button\n          control = new qx.ui.form.RepeatButton();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onExecuteEnd, this);\n          this._add(control);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyMaximum : function(value) {\n      this.getChildControl(\"slider\").setMaximum(value);\n    },\n\n\n    // property apply\n    _applyPosition : function(value) {\n      this.getChildControl(\"slider\").setValue(value);\n    },\n\n\n    // property apply\n    _applyKnobFactor : function(value) {\n      this.getChildControl(\"slider\").setKnobFactor(value);\n    },\n\n\n    // property apply\n    _applyPageStep : function(value) {\n      this.getChildControl(\"slider\").setPageStep(value);\n    },\n\n\n    // property apply\n    _applyOrientation : function(value, old)\n    {\n      // Dispose old layout\n      var oldLayout = this._getLayout();\n      if (oldLayout) {\n        oldLayout.dispose();\n      }\n\n      // Reconfigure\n      if (value === \"horizontal\")\n      {\n        this._setLayout(new qx.ui.layout.HBox());\n\n        this.setAllowStretchX(true);\n        this.setAllowStretchY(false);\n\n        this.replaceState(\"vertical\", \"horizontal\");\n\n        this.getChildControl(\"button-begin\").replaceState(\"up\", \"left\");\n        this.getChildControl(\"button-end\").replaceState(\"down\", \"right\");\n      }\n      else\n      {\n        this._setLayout(new qx.ui.layout.VBox());\n\n        this.setAllowStretchX(false);\n        this.setAllowStretchY(true);\n\n        this.replaceState(\"horizontal\", \"vertical\");\n\n        this.getChildControl(\"button-begin\").replaceState(\"left\", \"up\");\n        this.getChildControl(\"button-end\").replaceState(\"right\", \"down\");\n      }\n\n      // Sync slider orientation\n      this.getChildControl(\"slider\").setOrientation(value);\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      METHOD REDIRECTION TO SLIDER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls to the given position.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param position {Integer} Scroll to this position. Must be greater zero.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollTo : function(position, duration) {\n      this.getChildControl(\"slider\").slideTo(position, duration);\n    },\n\n\n    /**\n     * Scrolls by the given offset.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param offset {Integer} Scroll by this offset\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBy : function(offset, duration) {\n      this.getChildControl(\"slider\").slideBy(offset, duration);\n    },\n\n\n    /**\n     * Scrolls by the given number of steps.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param steps {Integer} Number of steps\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBySteps : function(steps, duration) {\n      var size = this.getSingleStep();\n      this.getChildControl(\"slider\").slideBy(steps * size, duration);\n    },\n\n\n    /**\n     * Updates the position property considering the minimum and maximum values.\n     * @param position {Number} The new position.\n     */\n    updatePosition : function(position) {\n      this.getChildControl(\"slider\").updatePosition(position);\n    },\n\n\n    /**\n     * If a scroll animation is running, it will be stopped.\n     */\n    stopScrollAnimation : function() {\n      this.getChildControl(\"slider\").stopSlideAnimation();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Executed when the up/left button is executed (pressed)\n     *\n     * @param e {qx.event.type.Event} Execute event of the button\n     */\n    _onExecuteBegin : function(e) {\n      this.scrollBy(-this.getSingleStep(), 50);\n    },\n\n\n    /**\n     * Executed when the down/right button is executed (pressed)\n     *\n     * @param e {qx.event.type.Event} Execute event of the button\n     */\n    _onExecuteEnd : function(e) {\n      this.scrollBy(this.getSingleStep(), 50);\n    },\n\n\n    /**\n     * Change listener for slider animation end.\n     */\n    _onSlideAnimationEnd : function() {\n      this.fireEvent(\"scrollAnimationEnd\");\n    },\n\n\n    /**\n     * Change listener for slider value changes.\n     *\n     * @param e {qx.event.type.Data} The change event object\n     */\n    _onChangeSliderValue : function(e) {\n      this.setPosition(e.getData());\n    },\n\n    /**\n     * Hide the knob of the slider if the slidebar is too small or show it\n     * otherwise.\n     *\n     * @param e {qx.event.type.Data} event object\n     */\n    _onResizeSlider : function(e)\n    {\n      var knob = this.getChildControl(\"slider\").getChildControl(\"knob\");\n      var knobHint = knob.getSizeHint();\n      var hideKnob = false;\n      var sliderSize = this.getChildControl(\"slider\").getInnerSize();\n\n      if (this.getOrientation() == \"vertical\")\n      {\n        if (sliderSize.height  < knobHint.minHeight + this.__offset) {\n          hideKnob = true;\n        }\n      }\n      else\n      {\n        if (sliderSize.width  < knobHint.minWidth + this.__offset) {\n          hideKnob = true;\n        }\n      }\n\n      if (hideKnob) {\n        knob.exclude();\n      } else {\n        knob.show();\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This class represents a scroll able pane. This means that this widget\n * may contain content which is bigger than the available (inner)\n * dimensions of this widget. The widget also offer methods to control\n * the scrolling position. It can only have exactly one child.\n */\nqx.Class.define(\"qx.ui.core.scroll.ScrollPane\",\n{\n  extend : qx.ui.core.Widget,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.set({\n      minWidth: 0,\n      minHeight: 0\n    });\n\n    // Automatically configure a \"fixed\" grow layout.\n    this._setLayout(new qx.ui.layout.Grow());\n\n    // Add resize listener to \"translate\" event\n    this.addListener(\"resize\", this._onUpdate);\n\n    var contentEl = this.getContentElement();\n\n    // Synchronizes the DOM scroll position with the properties\n    contentEl.addListener(\"scroll\", this._onScroll, this);\n\n    // Fixed some browser quirks e.g. correcting scroll position\n    // to the previous value on re-display of a pane\n    contentEl.addListener(\"appear\", this._onAppear, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired on resize of both the container or the content. */\n    update : \"qx.event.type.Event\",\n\n    /** Fired on scroll animation end invoked by 'scroll*' methods. */\n    scrollAnimationEnd : \"qx.event.type.Event\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The horizontal scroll position */\n    scrollX :\n    {\n      check : \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxX()\",\n      apply : \"_applyScrollX\",\n      transform: \"_transformScrollX\",\n      event : \"scrollX\",\n      init  : 0\n    },\n\n    /** The vertical scroll position */\n    scrollY :\n    {\n      check : \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxY()\",\n      apply : \"_applyScrollY\",\n      transform: \"_transformScrollY\",\n      event : \"scrollY\",\n      init  : 0\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __frame : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTENT MANAGEMENT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Configures the content of the scroll pane. Replaces any existing child\n     * with the newly given one.\n     *\n     * @param widget {qx.ui.core.Widget?null} The content widget of the pane\n     */\n    add : function(widget)\n    {\n      var old = this._getChildren()[0];\n      if (old)\n      {\n        this._remove(old);\n        old.removeListener(\"resize\", this._onUpdate, this);\n      }\n\n      if (widget)\n      {\n        this._add(widget);\n        widget.addListener(\"resize\", this._onUpdate, this);\n      }\n    },\n\n\n    /**\n     * Removes the given widget from the content. The pane is empty\n     * afterwards as only one child is supported by the pane.\n     *\n     * @param widget {qx.ui.core.Widget?null} The content widget of the pane\n     */\n    remove : function(widget)\n    {\n      if (widget)\n      {\n        this._remove(widget);\n        widget.removeListener(\"resize\", this._onUpdate, this);\n      }\n    },\n\n\n    /**\n     * Returns an array containing the current content.\n     *\n     * @return {Object[]} The content array\n     */\n    getChildren : function() {\n      return this._getChildren();\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for resize event of content and container\n     *\n     * @param e {Event} Resize event object\n     */\n    _onUpdate : function(e) {\n      this.fireEvent(\"update\");\n    },\n\n\n    /**\n     * Event listener for scroll event of content\n     *\n     * @param e {qx.event.type.Event} Scroll event object\n     */\n    _onScroll : function(e)\n    {\n      var contentEl = this.getContentElement();\n\n      this.setScrollX(contentEl.getScrollX());\n      this.setScrollY(contentEl.getScrollY());\n    },\n\n\n    /**\n     * Event listener for appear event of content\n     *\n     * @param e {qx.event.type.Event} Appear event object\n     */\n    _onAppear : function(e)\n    {\n      var contentEl = this.getContentElement();\n\n      var internalX = this.getScrollX();\n      var domX = contentEl.getScrollX();\n\n      if (internalX != domX) {\n        contentEl.scrollToX(internalX);\n      }\n\n      var internalY = this.getScrollY();\n      var domY = contentEl.getScrollY();\n\n      if (internalY != domY) {\n        contentEl.scrollToY(internalY);\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ITEM LOCATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the top offset of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemTop : function(item)\n    {\n      var top = 0;\n\n      do\n      {\n        top += item.getBounds().top;\n        item = item.getLayoutParent();\n      }\n      while (item && item !== this);\n\n      return top;\n    },\n\n\n    /**\n     * Returns the top offset of the end of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemBottom : function(item) {\n      return this.getItemTop(item) + item.getBounds().height;\n    },\n\n\n    /**\n     * Returns the left offset of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemLeft : function(item)\n    {\n      var left = 0;\n      var parent;\n\n      do\n      {\n        left += item.getBounds().left;\n        parent = item.getLayoutParent();\n        if (parent) {\n          left += parent.getInsets().left;\n        }\n        item = parent;\n      }\n      while (item && item !== this);\n\n      return left;\n    },\n\n\n    /**\n     * Returns the left offset of the end of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Right offset\n     */\n    getItemRight : function(item) {\n      return this.getItemLeft(item) + item.getBounds().width;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DIMENSIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The size (identical with the preferred size) of the content.\n     *\n     * @return {Map} Size of the content (keys: <code>width</code> and <code>height</code>)\n     */\n    getScrollSize : function() {\n      return this.getChildren()[0].getBounds();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The maximum horizontal scroll position.\n     *\n     * @return {Integer} Maximum horizontal scroll position.\n     */\n    getScrollMaxX : function()\n    {\n      var paneSize = this.getInnerSize();\n      var scrollSize = this.getScrollSize();\n\n      if (paneSize && scrollSize) {\n        return Math.max(0, scrollSize.width - paneSize.width);\n      }\n\n      return 0;\n    },\n\n\n    /**\n     * The maximum vertical scroll position.\n     *\n     * @return {Integer} Maximum vertical scroll position.\n     */\n    getScrollMaxY : function()\n    {\n      var paneSize = this.getInnerSize();\n      var scrollSize = this.getScrollSize();\n\n      if (paneSize && scrollSize) {\n        return Math.max(0, scrollSize.height - paneSize.height);\n      }\n\n      return 0;\n    },\n\n\n    /**\n     * Scrolls the element's content to the given left coordinate\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToX : function(value, duration)\n    {\n      var max = this.getScrollMaxX();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      this.stopScrollAnimation();\n\n      if (duration) {\n        var from = this.getScrollX();\n        this.__frame = new qx.bom.AnimationFrame();\n        this.__frame.on(\"end\", function() {\n          this.setScrollX(value);\n          this.__frame = null;\n          this.fireEvent(\"scrollAnimationEnd\");\n        }, this);\n        this.__frame.on(\"frame\", function(timePassed) {\n          var newX = parseInt(timePassed/duration * (value - from) + from);\n          this.setScrollX(newX);\n        }, this);\n        this.__frame.startSequence(duration);\n\n      } else {\n        this.setScrollX(value);\n      }\n    },\n\n\n    /**\n     * Scrolls the element's content to the given top coordinate\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToY : function(value, duration)\n    {\n      var max = this.getScrollMaxY();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      this.stopScrollAnimation();\n\n      if (duration) {\n        var from = this.getScrollY();\n        this.__frame = new qx.bom.AnimationFrame();\n        this.__frame.on(\"end\", function() {\n          this.setScrollY(value);\n          this.__frame = null;\n          this.fireEvent(\"scrollAnimationEnd\");\n        }, this);\n        this.__frame.on(\"frame\", function(timePassed) {\n          var newY = parseInt(timePassed/duration * (value - from) + from);\n          this.setScrollY(newY);\n        }, this);\n        this.__frame.startSequence(duration);\n\n      } else {\n        this.setScrollY(value);\n      }\n    },\n\n\n    /**\n     * Scrolls the element's content horizontally by the given amount.\n     *\n     * @param x {Integer?0} Amount to scroll\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByX : function(x, duration) {\n      this.scrollToX(this.getScrollX() + x, duration);\n    },\n\n\n    /**\n     * Scrolls the element's content vertically by the given amount.\n     *\n     * @param y {Integer?0} Amount to scroll\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByY : function(y, duration) {\n      this.scrollToY(this.getScrollY() + y, duration);\n    },\n\n\n    /**\n     * If an scroll animation is running, it will be stopped with that method.\n     */\n    stopScrollAnimation : function() {\n      if (this.__frame) {\n        this.__frame.cancelSequence();\n        this.__frame = null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyScrollX : function(value) {\n      this.getContentElement().scrollToX(value);\n    },\n\n    /**\n     * Transform property\n     *\n     * @param value {Number} Value to transform\n     * @return {Number} Rounded value\n     */\n    _transformScrollX: function(value) {\n      return Math.round(value);\n    },\n    \n\n    // property apply\n    _applyScrollY : function(value) {\n      this.getContentElement().scrollToY(value);\n    },\n\n    /**\n     * Transform property\n     *\n     * @param value {Number} Value to transform\n     * @return {Number} Rounded value\n     */\n    _transformScrollY: function(value) {\n      return Math.round(value);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * Generic selection manager to bring rich desktop like selection behavior\n * to widgets and low-level interactive controls.\n *\n * The selection handling supports both Shift and Ctrl/Meta modifies like\n * known from native applications.\n */\nqx.Class.define(\"qx.ui.core.selection.Abstract\",\n{\n  type : \"abstract\",\n  extend : qx.core.Object,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // {Map} Internal selection storage\n    this.__selection = {};\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fires after the selection was modified. Contains the selection under the data property. */\n    \"changeSelection\" : \"qx.event.type.Data\"\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Selects the selection mode to use.\n     *\n     * * single: One or no element is selected\n     * * multi: Multi items could be selected. Also allows empty selections.\n     * * additive: Easy Web-2.0 selection mode. Allows multiple selections without modifier keys.\n     * * one: If possible always exactly one item is selected\n     */\n    mode :\n    {\n      check : [ \"single\", \"multi\", \"additive\", \"one\" ],\n      init : \"single\",\n      apply : \"_applyMode\"\n    },\n\n\n    /**\n     * Enable drag selection (multi selection of items through\n     * dragging the pointer in pressed states).\n     *\n     * Only possible for the modes <code>multi</code> and <code>additive</code>\n     */\n    drag :\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n\n    /**\n     * Enable quick selection mode, where no tap is needed to change the selection.\n     *\n     * Only possible for the modes <code>single</code> and <code>one</code>.\n     */\n    quick :\n    {\n      check : \"Boolean\",\n      init : false\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __scrollStepX : 0,\n    __scrollStepY : 0,\n    __scrollTimer : null,\n    __frameScroll : null,\n    __lastRelX : null,\n    __lastRelY : null,\n    __frameLocation : null,\n    __dragStartX : null,\n    __dragStartY : null,\n    __inCapture : null,\n    __pointerX : null,\n    __pointerY : null,\n    __moveDirectionX : null,\n    __moveDirectionY : null,\n    __selectionModified : null,\n    __selectionContext : null,\n    __leadItem : null,\n    __selection : null,\n    __anchorItem : null,\n    __pointerDownOnSelected : null,\n\n    // A flag that signals an user interaction, which means the selection change\n    // was triggered by pointer or keyboard [BUG #3344]\n    _userInteraction : false,\n\n    __oldScrollTop : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      USER APIS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the selection context. One of <code>tap</code>,\n     * <code>quick</code>, <code>drag</code> or <code>key</code> or\n     * <code>null</code>.\n     *\n     * @return {String} One of <code>tap</code>, <code>quick</code>,\n     *    <code>drag</code> or <code>key</code> or <code>null</code>\n     */\n    getSelectionContext : function() {\n      return this.__selectionContext;\n    },\n\n\n    /**\n     * Selects all items of the managed object.\n     *\n     */\n    selectAll : function()\n    {\n      var mode = this.getMode();\n      if (mode == \"single\" || mode == \"one\") {\n        throw new Error(\"Can not select all items in selection mode: \" + mode);\n      }\n\n      this._selectAllItems();\n      this._fireChange();\n    },\n\n\n    /**\n     * Selects the given item. Replaces current selection\n     * completely with the new item.\n     *\n     * Use {@link #addItem} instead if you want to add new\n     * items to an existing selection.\n     *\n     * @param item {Object} Any valid item\n     */\n    selectItem : function(item)\n    {\n      this._setSelectedItem(item);\n\n      var mode = this.getMode();\n      if (mode !== \"single\" && mode !== \"one\")\n      {\n        this._setLeadItem(item);\n        this._setAnchorItem(item);\n      }\n\n      this._scrollItemIntoView(item);\n      this._fireChange();\n    },\n\n\n    /**\n     * Adds the given item to the existing selection.\n     *\n     * Use {@link #selectItem} instead if you want to replace\n     * the current selection.\n     *\n     * @param item {Object} Any valid item\n     */\n    addItem : function(item)\n    {\n      var mode = this.getMode();\n      if (mode === \"single\" || mode === \"one\") {\n        this._setSelectedItem(item);\n      }\n      else\n      {\n        if (this._getAnchorItem() == null) {\n          this._setAnchorItem(item);\n        }\n\n        this._setLeadItem(item);\n        this._addToSelection(item);\n      }\n\n      this._scrollItemIntoView(item);\n      this._fireChange();\n    },\n\n\n    /**\n     * Removes the given item from the selection.\n     *\n     * Use {@link #clearSelection} when you want to clear\n     * the whole selection at once.\n     *\n     * @param item {Object} Any valid item\n     */\n    removeItem : function(item)\n    {\n      this._removeFromSelection(item);\n\n      if (this.getMode() === \"one\" && this.isSelectionEmpty())\n      {\n        var selected = this._applyDefaultSelection();\n\n        // Do not fire any event in this case.\n        if (selected == item) {\n          return;\n        }\n      }\n\n      if (this.getLeadItem() == item) {\n        this._setLeadItem(null);\n      }\n\n      if (this._getAnchorItem() == item) {\n        this._setAnchorItem(null);\n      }\n\n      this._fireChange();\n    },\n\n\n    /**\n     * Selects an item range between two given items.\n     *\n     * @param begin {Object} Item to start with\n     * @param end {Object} Item to end at\n     */\n    selectItemRange : function(begin, end)\n    {\n      var mode = this.getMode();\n      if (mode == \"single\" || mode == \"one\") {\n        throw new Error(\"Can not select multiple items in selection mode: \" + mode);\n      }\n\n      this._selectItemRange(begin, end);\n\n      this._setAnchorItem(begin);\n\n      this._setLeadItem(end);\n      this._scrollItemIntoView(end);\n\n      this._fireChange();\n    },\n\n\n    /**\n     * Clears the whole selection at once. Also\n     * resets the lead and anchor items and their\n     * styles.\n     *\n     */\n    clearSelection : function()\n    {\n      if (this.getMode() == \"one\")\n      {\n        var selected = this._applyDefaultSelection(true);\n        if (selected != null) {\n          return;\n        }\n      }\n\n      this._clearSelection();\n      this._setLeadItem(null);\n      this._setAnchorItem(null);\n\n      this._fireChange();\n    },\n\n\n    /**\n     * Replaces current selection with given array of items.\n     *\n     * Please note that in single selection scenarios it is more\n     * efficient to directly use {@link #selectItem}.\n     *\n     * @param items {Array} Items to select\n     */\n    replaceSelection : function(items)\n    {\n      var mode = this.getMode();\n      if (mode == \"one\" || mode === \"single\")\n      {\n        if (items.length > 1)   {\n          throw new Error(\"Could not select more than one items in mode: \" + mode + \"!\");\n        }\n\n        if (items.length == 1) {\n          this.selectItem(items[0]);\n        } else {\n          this.clearSelection();\n        }\n        return;\n      }\n      else\n      {\n        this._replaceMultiSelection(items);\n      }\n    },\n\n\n    /**\n     * Get the selected item. This method does only work in <code>single</code>\n     * selection mode.\n     *\n     * @return {Object} The selected item.\n     */\n    getSelectedItem : function()\n    {\n      var mode = this.getMode();\n      if (mode === \"single\" || mode === \"one\")\n      {\n        var result = this._getSelectedItem();\n        return result != undefined ? result : null;\n      }\n\n      throw new Error(\"The method getSelectedItem() is only supported in 'single' and 'one' selection mode!\");\n    },\n\n\n    /**\n     * Returns an array of currently selected items.\n     *\n     * Note: The result is only a set of selected items, so the order can\n     * differ from the sequence in which the items were added.\n     *\n     * @return {Object[]} List of items.\n     */\n    getSelection : function() {\n      return Object.values(this.__selection);\n    },\n\n\n    /**\n     * Returns the selection sorted by the index in the\n     * container of the selection (the assigned widget)\n     *\n     * @return {Object[]} Sorted list of items\n     */\n    getSortedSelection : function()\n    {\n      var children = this.getSelectables();\n      var sel = Object.values(this.__selection);\n\n      sel.sort(function(a, b) {\n        return children.indexOf(a) - children.indexOf(b);\n      });\n\n      return sel;\n    },\n\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {var} Any valid selectable item\n     * @return {Boolean} Whether the item is selected\n     */\n    isItemSelected : function(item)\n    {\n      var hash = this._selectableToHashCode(item);\n      return this.__selection[hash] !== undefined;\n    },\n\n\n    /**\n     * Whether the selection is empty\n     *\n     * @return {Boolean} Whether the selection is empty\n     */\n    isSelectionEmpty : function() {\n      return qx.lang.Object.isEmpty(this.__selection);\n    },\n\n\n    /**\n     * Invert the selection. Select the non selected and deselect the selected.\n     */\n    invertSelection: function() {\n      var mode = this.getMode();\n      if (mode === \"single\" || mode === \"one\") {\n        throw new Error(\"The method invertSelection() is only supported in 'multi' and 'additive' selection mode!\");\n      }\n\n      var selectables = this.getSelectables();\n      for (var i = 0; i < selectables.length; i++)\n      {\n        this._toggleInSelection(selectables[i]);\n      }\n\n      this._fireChange();\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LEAD/ANCHOR SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the lead item. Generally the item which was last modified\n     * by the user (tapped on etc.)\n     *\n     * @param value {Object} Any valid item or <code>null</code>\n     */\n    _setLeadItem : function(value)\n    {\n      var old = this.__leadItem;\n\n      if (old !== null) {\n        this._styleSelectable(old, \"lead\", false);\n      }\n\n      if (value !== null) {\n        this._styleSelectable(value, \"lead\", true);\n      }\n\n      this.__leadItem = value;\n    },\n\n\n    /**\n     * Returns the current lead item. Generally the item which was last modified\n     * by the user (tapped on etc.)\n     *\n     * @return {Object} The lead item or <code>null</code>\n     */\n    getLeadItem : function() {\n      return this.__leadItem;\n    },\n\n\n    /**\n     * Sets the anchor item. This is the item which is the starting\n     * point for all range selections. Normally this is the item which was\n     * tapped on the last time without any modifier keys pressed.\n     *\n     * @param value {Object} Any valid item or <code>null</code>\n     */\n    _setAnchorItem : function(value)\n    {\n      var old = this.__anchorItem;\n\n      if (old != null) {\n        this._styleSelectable(old, \"anchor\", false);\n      }\n\n      if (value != null) {\n        this._styleSelectable(value, \"anchor\", true);\n      }\n\n      this.__anchorItem = value;\n    },\n\n\n    /**\n     * Returns the current anchor item. This is the item which is the starting\n     * point for all range selections. Normally this is the item which was\n     * tapped on the last time without any modifier keys pressed.\n     *\n     * @return {Object} The anchor item or <code>null</code>\n     */\n    _getAnchorItem : function() {\n      return this.__anchorItem !== null ? this.__anchorItem : null;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      BASIC SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Whether the given item is selectable.\n     *\n     * @param item {var} Any item\n     * @return {Boolean} <code>true</code> when the item is selectable\n     */\n    _isSelectable : function(item) {\n      throw new Error(\"Abstract method call: _isSelectable()\");\n    },\n\n\n    /**\n     * Finds the selectable instance from a pointer event\n     *\n     * @param event {qx.event.type.Pointer} The pointer event\n     * @return {Object|null} The resulting selectable\n     */\n    _getSelectableFromPointerEvent : function(event)\n    {\n      var target = event.getTarget();\n      // check for target (may be null when leaving the viewport) [BUG #4378]\n      if (target && this._isSelectable(target)) {\n        return target;\n      }\n      return null;\n    },\n\n\n    /**\n     * Returns an unique hashcode for the given item.\n     *\n     * @param item {var} Any item\n     * @return {String} A valid hashcode\n     */\n    _selectableToHashCode : function(item) {\n      throw new Error(\"Abstract method call: _selectableToHashCode()\");\n    },\n\n\n    /**\n     * Updates the style (appearance) of the given item.\n     *\n     * @param item {var} Item to modify\n     * @param type {String} Any of <code>selected</code>, <code>anchor</code> or <code>lead</code>\n     * @param enabled {Boolean} Whether the given style should be added or removed.\n     */\n    _styleSelectable : function(item, type, enabled) {\n      throw new Error(\"Abstract method call: _styleSelectable()\");\n    },\n\n\n    /**\n     * Enables capturing of the container.\n     *\n     */\n    _capture : function() {\n      throw new Error(\"Abstract method call: _capture()\");\n    },\n\n\n    /**\n     * Releases capturing of the container\n     *\n     */\n    _releaseCapture : function() {\n      throw new Error(\"Abstract method call: _releaseCapture()\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DIMENSION AND LOCATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the location of the container\n     *\n     * @return {Map} Map with the keys <code>top</code>, <code>right</code>,\n     *    <code>bottom</code> and <code>left</code>.\n     */\n    _getLocation : function() {\n      throw new Error(\"Abstract method call: _getLocation()\");\n    },\n\n\n    /**\n     * Returns the dimension of the container (available scrolling space).\n     *\n     * @return {Map} Map with the keys <code>width</code> and <code>height</code>.\n     */\n    _getDimension : function() {\n      throw new Error(\"Abstract method call: _getDimension()\");\n    },\n\n\n    /**\n     * Returns the relative (to the container) horizontal location of the given item.\n     *\n     * @param item {var} Any item\n     * @return {Map} A map with the keys <code>left</code> and <code>right</code>.\n     */\n    _getSelectableLocationX : function(item) {\n      throw new Error(\"Abstract method call: _getSelectableLocationX()\");\n    },\n\n\n    /**\n     * Returns the relative (to the container) horizontal location of the given item.\n     *\n     * @param item {var} Any item\n     * @return {Map} A map with the keys <code>top</code> and <code>bottom</code>.\n     */\n    _getSelectableLocationY : function(item) {\n      throw new Error(\"Abstract method call: _getSelectableLocationY()\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the scroll position of the container.\n     *\n     * @return {Map} Map with the keys <code>left</code> and <code>top</code>.\n     */\n    _getScroll : function() {\n      throw new Error(\"Abstract method call: _getScroll()\");\n    },\n\n\n    /**\n     * Scrolls by the given offset\n     *\n     * @param xoff {Integer} Horizontal offset to scroll by\n     * @param yoff {Integer} Vertical offset to scroll by\n     */\n    _scrollBy : function(xoff, yoff) {\n      throw new Error(\"Abstract method call: _scrollBy()\");\n    },\n\n\n    /**\n     * Scrolls the given item into the view (make it visible)\n     *\n     * @param item {var} Any item\n     */\n    _scrollItemIntoView : function(item) {\n      throw new Error(\"Abstract method call: _scrollItemIntoView()\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      QUERY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns all selectable items of the container.\n     *\n     * @param all {Boolean} true for all selectables, false for the\n      *   selectables the user can interactively select\n     * @return {Array} A list of items\n     */\n    getSelectables : function(all) {\n      throw new Error(\"Abstract method call: getSelectables()\");\n    },\n\n\n    /**\n     * Returns all selectable items between the two given items.\n     *\n     * The items could be given in any order.\n     *\n     * @param item1 {var} First item\n     * @param item2 {var} Second item\n     * @return {Array} List of items\n     */\n    _getSelectableRange : function(item1, item2) {\n      throw new Error(\"Abstract method call: _getSelectableRange()\");\n    },\n\n\n    /**\n     * Returns the first selectable item.\n     *\n     * @return {var} The first selectable item\n     */\n    _getFirstSelectable : function() {\n      throw new Error(\"Abstract method call: _getFirstSelectable()\");\n    },\n\n\n    /**\n     * Returns the last selectable item.\n     *\n     * @return {var} The last selectable item\n     */\n    _getLastSelectable : function() {\n      throw new Error(\"Abstract method call: _getLastSelectable()\");\n    },\n\n\n    /**\n     * Returns a selectable item which is related to the given\n     * <code>item</code> through the value of <code>relation</code>.\n     *\n     * @param item {var} Any item\n     * @param relation {String} A valid relation: <code>above</code>,\n     *    <code>right</code>, <code>under</code> or <code>left</code>\n     * @return {var} The related item\n     */\n    _getRelatedSelectable : function(item, relation) {\n      throw new Error(\"Abstract method call: _getRelatedSelectable()\");\n    },\n\n\n    /**\n     * Returns the item which should be selected on pageUp/pageDown.\n     *\n     * May also scroll to the needed position.\n     *\n     * @param lead {var} The current lead item\n     * @param up {Boolean?false} Which page key was pressed:\n     *   <code>up</code> or <code>down</code>.\n     */\n    _getPage : function(lead, up) {\n      throw new Error(\"Abstract method call: _getPage()\");\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyMode : function(value, old)\n    {\n      this._setLeadItem(null);\n      this._setAnchorItem(null);\n\n      this._clearSelection();\n\n      // Mode \"one\" requires one selected item\n      if (value === \"one\") {\n        this._applyDefaultSelection(true);\n      }\n\n      this._fireChange();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method should be connected to the <code>pointerover</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Pointer} A valid pointer event\n     */\n    handlePointerOver : function(event)\n    {\n      // All browsers (except Opera) fire a native \"mouseover\" event when a scroll appears\n      // by keyboard interaction. We have to ignore the event to avoid a selection for\n      // \"pointerover\" (quick selection). For more details see [BUG #4225]\n      if(this.__oldScrollTop != null &&\n         this.__oldScrollTop != this._getScroll().top)\n      {\n        this.__oldScrollTop = null;\n        return;\n      }\n\n      // quick select should only work on mouse events\n      if (event.getPointerType() != \"mouse\") {\n        return;\n      }\n\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      if (!this.getQuick()) {\n        this._userInteraction = false;\n        return;\n      }\n\n      var mode = this.getMode();\n      if (mode !== \"one\" && mode !== \"single\") {\n        this._userInteraction = false;\n        return;\n      }\n\n      var item = this._getSelectableFromPointerEvent(event);\n      if (item === null) {\n        this._userInteraction = false;\n        return;\n      }\n\n      this._setSelectedItem(item);\n\n      // Be sure that item is in view\n      // This does not feel good when pointerover is used\n      // this._scrollItemIntoView(item);\n\n      // Fire change event as needed\n      this._fireChange(\"quick\");\n\n      this._userInteraction = false;\n    },\n\n\n    /**\n     * This method should be connected to the <code>pointerdown</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Pointer} A valid pointer event\n     */\n    handlePointerDown : function(event)\n    {\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      var item = this._getSelectableFromPointerEvent(event);\n      if (item === null) {\n        this._userInteraction = false;\n        return;\n      }\n\n      // Read in keyboard modifiers\n      var isCtrlPressed = event.isCtrlPressed() ||\n        (qx.core.Environment.get(\"os.name\") == \"osx\" && event.isMetaPressed());\n      var isShiftPressed = event.isShiftPressed();\n\n      // tapping on selected items deselect on pointerup, not on pointerdown\n      if (this.isItemSelected(item) && !isShiftPressed && !isCtrlPressed && !this.getDrag())\n      {\n        this.__pointerDownOnSelected = item;\n        this._userInteraction = false;\n        return;\n      }\n      else\n      {\n        this.__pointerDownOnSelected = null;\n      }\n\n      // Be sure that item is in view\n      this._scrollItemIntoView(item);\n\n      // Drag selection\n      var mode = this.getMode();\n      if (\n        this.getDrag() &&\n        mode !== \"single\" &&\n        mode !== \"one\" &&\n        !isShiftPressed &&\n        !isCtrlPressed &&\n        event.getPointerType() == \"mouse\"\n      )\n      {\n        this._setAnchorItem(item);\n        this._setLeadItem(item);\n\n        // Cache location/scroll data\n        this.__frameLocation = this._getLocation();\n        this.__frameScroll = this._getScroll();\n\n        // Store position at start\n        this.__dragStartX = event.getDocumentLeft() + this.__frameScroll.left;\n        this.__dragStartY = event.getDocumentTop() + this.__frameScroll.top;\n\n        // Switch to capture mode\n        this.__inCapture = true;\n        this._capture();\n      }\n\n\n      // Fire change event as needed\n      this._fireChange(\"tap\");\n\n      this._userInteraction = false;\n    },\n\n\n    /**\n     * This method should be connected to the <code>tap</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Tap} A valid pointer event\n     */\n    handleTap : function(event)\n    {\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      // Read in keyboard modifiers\n      var isCtrlPressed = event.isCtrlPressed() ||\n        (qx.core.Environment.get(\"os.name\") == \"osx\" && event.isMetaPressed());\n      var isShiftPressed = event.isShiftPressed();\n\n      if (!isCtrlPressed && !isShiftPressed && this.__pointerDownOnSelected != null)\n      {\n        this._userInteraction = false;\n        var item = this._getSelectableFromPointerEvent(event);\n        if (item === null || !this.isItemSelected(item)) {\n          return;\n        }\n      }\n\n      var item = this._getSelectableFromPointerEvent(event);\n      if (item === null) {\n        this._userInteraction = false;\n        return;\n      }\n\n      // Action depends on selected mode\n      switch(this.getMode())\n      {\n        case \"single\":\n        case \"one\":\n          this._setSelectedItem(item);\n          break;\n\n        case \"additive\":\n          this._setLeadItem(item);\n          this._setAnchorItem(item);\n          this._toggleInSelection(item);\n          break;\n\n        case \"multi\":\n          // Update lead item\n          this._setLeadItem(item);\n\n          // Create/Update range selection\n          if (isShiftPressed)\n          {\n            var anchor = this._getAnchorItem();\n            if (anchor === null)\n            {\n              anchor = this._getFirstSelectable();\n              this._setAnchorItem(anchor);\n            }\n\n            this._selectItemRange(anchor, item, isCtrlPressed);\n          }\n\n          // Toggle in selection\n          else if (isCtrlPressed)\n          {\n            this._setAnchorItem(item);\n            this._toggleInSelection(item);\n          }\n\n          // Replace current selection\n          else\n          {\n            this._setAnchorItem(item);\n            this._setSelectedItem(item);\n          }\n\n          break;\n      }\n\n      // Cleanup operation\n      this._cleanup();\n    },\n\n\n    /**\n     * This method should be connected to the <code>losecapture</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Pointer} A valid pointer event\n     */\n    handleLoseCapture : function(event) {\n      this._cleanup();\n    },\n\n\n    /**\n     * This method should be connected to the <code>pointermove</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Pointer} A valid pointer event\n     */\n    handlePointerMove : function(event)\n    {\n      // Only relevant when capturing is enabled\n      if (!this.__inCapture) {\n        return;\n      }\n\n\n      // Update pointer position cache\n      this.__pointerX = event.getDocumentLeft();\n      this.__pointerY = event.getDocumentTop();\n\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      // Detect move directions\n      var dragX = this.__pointerX + this.__frameScroll.left;\n      if (dragX > this.__dragStartX) {\n        this.__moveDirectionX = 1;\n      } else if (dragX < this.__dragStartX) {\n        this.__moveDirectionX = -1;\n      } else {\n        this.__moveDirectionX = 0;\n      }\n\n      var dragY = this.__pointerY + this.__frameScroll.top;\n      if (dragY > this.__dragStartY) {\n        this.__moveDirectionY = 1;\n      } else if (dragY < this.__dragStartY) {\n        this.__moveDirectionY = -1;\n      } else {\n        this.__moveDirectionY = 0;\n      }\n\n\n      // Update scroll steps\n      var location = this.__frameLocation;\n\n      if (this.__pointerX < location.left) {\n        this.__scrollStepX = this.__pointerX - location.left;\n      } else if (this.__pointerX > location.right) {\n        this.__scrollStepX = this.__pointerX - location.right;\n      } else {\n        this.__scrollStepX = 0;\n      }\n\n      if (this.__pointerY < location.top) {\n        this.__scrollStepY = this.__pointerY - location.top;\n      } else if (this.__pointerY > location.bottom) {\n        this.__scrollStepY = this.__pointerY - location.bottom;\n      } else {\n        this.__scrollStepY = 0;\n      }\n\n\n      // Dynamically create required timer instance\n      if (!this.__scrollTimer)\n      {\n        this.__scrollTimer = new qx.event.Timer(100);\n        this.__scrollTimer.addListener(\"interval\", this._onInterval, this);\n      }\n\n\n      // Start interval\n      this.__scrollTimer.start();\n\n\n      // Auto select based on new cursor position\n      this._autoSelect();\n\n      event.stopPropagation();\n      this._userInteraction = false;\n    },\n\n\n    /**\n     * This method should be connected to the <code>addItem</code> event\n     * of the managed object.\n     *\n     * @param e {qx.event.type.Data} The event object\n     */\n    handleAddItem : function(e)\n    {\n      var item = e.getData();\n      if (this.getMode() === \"one\" && this.isSelectionEmpty()) {\n        this.addItem(item);\n      }\n    },\n\n\n    /**\n     * This method should be connected to the <code>removeItem</code> event\n     * of the managed object.\n     *\n     * @param e {qx.event.type.Data} The event object\n     */\n    handleRemoveItem : function(e) {\n      this.removeItem(e.getData());\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER SUPPORT INTERNALS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Stops all timers, release capture etc. to cleanup drag selection\n     */\n    _cleanup : function()\n    {\n      if (!this.getDrag() && this.__inCapture) {\n        return;\n      }\n\n      // Fire change event if needed\n      if (this.__selectionModified) {\n        this._fireChange(\"tap\");\n      }\n\n      // Remove flags\n      delete this.__inCapture;\n      delete this.__lastRelX;\n      delete this.__lastRelY;\n\n      // Stop capturing\n      this._releaseCapture();\n\n      // Stop timer\n      if (this.__scrollTimer) {\n        this.__scrollTimer.stop();\n      }\n    },\n\n\n    /**\n     * Event listener for timer used by drag selection\n     *\n     * @param e {qx.event.type.Event} Timer event\n     */\n    _onInterval : function(e)\n    {\n      // Scroll by defined block size\n      this._scrollBy(this.__scrollStepX, this.__scrollStepY);\n\n      // Update scroll cache\n      this.__frameScroll = this._getScroll();\n\n      // Auto select based on new scroll position and cursor\n      this._autoSelect();\n    },\n\n\n    /**\n     * Automatically selects items based on the pointer movement during a drag selection\n     */\n    _autoSelect : function()\n    {\n      var inner = this._getDimension();\n\n      // Get current relative Y position and compare it with previous one\n      var relX = Math.max(0, Math.min(this.__pointerX - this.__frameLocation.left, inner.width)) + this.__frameScroll.left;\n      var relY = Math.max(0, Math.min(this.__pointerY - this.__frameLocation.top, inner.height)) + this.__frameScroll.top;\n\n      // Compare old and new relative coordinates (for performance reasons)\n      if (this.__lastRelX === relX && this.__lastRelY === relY) {\n        return;\n      }\n      this.__lastRelX = relX;\n      this.__lastRelY = relY;\n\n      // Cache anchor\n      var anchor = this._getAnchorItem();\n      var lead = anchor;\n\n\n      // Process X-coordinate\n      var moveX = this.__moveDirectionX;\n      var nextX, locationX;\n\n      while (moveX !== 0)\n      {\n        // Find next item to process depending on current scroll direction\n        nextX = moveX > 0 ?\n          this._getRelatedSelectable(lead, \"right\") :\n          this._getRelatedSelectable(lead, \"left\");\n\n        // May be null (e.g. first/last item)\n        if (nextX !== null)\n        {\n          locationX = this._getSelectableLocationX(nextX);\n\n          // Continue when the item is in the visible area\n          if (\n            (moveX > 0 && locationX.left <= relX) ||\n            (moveX < 0 && locationX.right >= relX)\n          )\n          {\n            lead = nextX;\n            continue;\n          }\n        }\n\n        // Otherwise break\n        break;\n      }\n\n\n      // Process Y-coordinate\n      var moveY = this.__moveDirectionY;\n      var nextY, locationY;\n\n      while (moveY !== 0)\n      {\n        // Find next item to process depending on current scroll direction\n        nextY = moveY > 0 ?\n          this._getRelatedSelectable(lead, \"under\") :\n          this._getRelatedSelectable(lead, \"above\");\n\n        // May be null (e.g. first/last item)\n        if (nextY !== null)\n        {\n          locationY = this._getSelectableLocationY(nextY);\n\n          // Continue when the item is in the visible area\n          if (\n            (moveY > 0 && locationY.top <= relY) ||\n            (moveY < 0 && locationY.bottom >= relY)\n          )\n          {\n            lead = nextY;\n            continue;\n          }\n        }\n\n        // Otherwise break\n        break;\n      }\n\n\n      // Differenciate between the two supported modes\n      var mode = this.getMode();\n      if (mode === \"multi\")\n      {\n        // Replace current selection with new range\n        this._selectItemRange(anchor, lead);\n      }\n      else if (mode === \"additive\")\n      {\n        // Behavior depends on the fact whether the\n        // anchor item is selected or not\n        if (this.isItemSelected(anchor)) {\n          this._selectItemRange(anchor, lead, true);\n        } else {\n          this._deselectItemRange(anchor, lead);\n        }\n\n        // Improve performance. This mode does not rely\n        // on full ranges as it always extend the old\n        // selection/deselection.\n        this._setAnchorItem(lead);\n      }\n\n\n      // Fire change event as needed\n      this._fireChange(\"drag\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      KEYBOARD SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} All supported navigation keys\n     *\n     * @lint ignoreReferenceField(__navigationKeys)\n     */\n    __navigationKeys :\n    {\n      Home : 1,\n      Down : 1 ,\n      Right : 1,\n      PageDown : 1,\n      End : 1,\n      Up : 1,\n      Left : 1,\n      PageUp : 1\n    },\n\n\n    /**\n     * This method should be connected to the <code>keypress</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.KeySequence} A valid key sequence event\n     */\n    handleKeyPress : function(event)\n    {\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      var current, next;\n      var key = event.getKeyIdentifier();\n      var mode = this.getMode();\n\n      // Support both control keys on Mac\n      var isCtrlPressed = event.isCtrlPressed() ||\n        (qx.core.Environment.get(\"os.name\") == \"osx\" && event.isMetaPressed());\n      var isShiftPressed = event.isShiftPressed();\n\n      var consumed = false;\n\n      if (key === \"A\" && isCtrlPressed)\n      {\n        if (mode !== \"single\" && mode !== \"one\")\n        {\n          this._selectAllItems();\n          consumed = true;\n        }\n      }\n      else if (key === \"Escape\")\n      {\n        if (mode !== \"single\" && mode !== \"one\")\n        {\n          this._clearSelection();\n          consumed = true;\n        }\n      }\n      else if (key === \"Space\")\n      {\n        var lead = this.getLeadItem();\n        if (lead != null && !isShiftPressed)\n        {\n          if (isCtrlPressed || mode === \"additive\") {\n            this._toggleInSelection(lead);\n          } else {\n            this._setSelectedItem(lead);\n          }\n          consumed = true;\n        }\n      }\n      else if (this.__navigationKeys[key])\n      {\n        consumed = true;\n        if (mode === \"single\" || mode == \"one\") {\n          current = this._getSelectedItem();\n        } else {\n          current = this.getLeadItem();\n        }\n\n        if (current !== null)\n        {\n          switch(key)\n          {\n            case \"Home\":\n              next = this._getFirstSelectable();\n              break;\n\n            case \"End\":\n              next = this._getLastSelectable();\n              break;\n\n            case \"Up\":\n              next = this._getRelatedSelectable(current, \"above\");\n              break;\n\n            case \"Down\":\n              next = this._getRelatedSelectable(current, \"under\");\n              break;\n\n            case \"Left\":\n              next = this._getRelatedSelectable(current, \"left\");\n              break;\n\n            case \"Right\":\n              next = this._getRelatedSelectable(current, \"right\");\n              break;\n\n            case \"PageUp\":\n              next = this._getPage(current, true);\n              break;\n\n            case \"PageDown\":\n              next = this._getPage(current, false);\n              break;\n          }\n        }\n        else\n        {\n          switch(key)\n          {\n            case \"Home\":\n            case \"Down\":\n            case \"Right\":\n            case \"PageDown\":\n              next = this._getFirstSelectable();\n              break;\n\n            case \"End\":\n            case \"Up\":\n            case \"Left\":\n            case \"PageUp\":\n              next = this._getLastSelectable();\n              break;\n          }\n        }\n\n        // Process result\n        if (next !== null)\n        {\n          switch(mode)\n          {\n            case \"single\":\n            case \"one\":\n              this._setSelectedItem(next);\n              break;\n\n            case \"additive\":\n              this._setLeadItem(next);\n              break;\n\n            case \"multi\":\n              if (isShiftPressed)\n              {\n                var anchor = this._getAnchorItem();\n                if (anchor === null) {\n                  this._setAnchorItem(anchor = this._getFirstSelectable());\n                }\n\n                this._setLeadItem(next);\n                this._selectItemRange(anchor, next, isCtrlPressed);\n              }\n              else\n              {\n                this._setAnchorItem(next);\n                this._setLeadItem(next);\n\n                if (!isCtrlPressed) {\n                  this._setSelectedItem(next);\n                }\n              }\n\n              break;\n          }\n\n          this.__oldScrollTop = this._getScroll().top;\n          this._scrollItemIntoView(next);\n        }\n      }\n\n\n      if (consumed)\n      {\n        // Stop processed events\n        event.stop();\n\n        // Fire change event as needed\n        this._fireChange(\"key\");\n      }\n      this._userInteraction = false;\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SUPPORT FOR ITEM RANGES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds all items to the selection\n     */\n    _selectAllItems : function()\n    {\n      var range = this.getSelectables();\n      for (var i=0, l=range.length; i<l; i++) {\n        this._addToSelection(range[i]);\n      }\n    },\n\n\n    /**\n     * Clears current selection\n     */\n    _clearSelection : function()\n    {\n      var selection = this.__selection;\n      for (var hash in selection) {\n        this._removeFromSelection(selection[hash]);\n      }\n      this.__selection = {};\n    },\n\n\n    /**\n     * Select a range from <code>item1</code> to <code>item2</code>.\n     *\n     * @param item1 {Object} Start with this item\n     * @param item2 {Object} End with this item\n     * @param extend {Boolean?false} Whether the current\n     *    selection should be replaced or extended.\n     */\n    _selectItemRange : function(item1, item2, extend)\n    {\n      var range = this._getSelectableRange(item1, item2);\n\n      // Remove items which are not in the detected range\n      if (!extend)\n      {\n        var selected = this.__selection;\n        var mapped = this.__rangeToMap(range);\n\n        for (var hash in selected)\n        {\n          if (!mapped[hash]) {\n            this._removeFromSelection(selected[hash]);\n          }\n        }\n      }\n\n      // Add new items to the selection\n      for (var i=0, l=range.length; i<l; i++) {\n        this._addToSelection(range[i]);\n      }\n    },\n\n\n    /**\n     * Deselect all items between <code>item1</code> and <code>item2</code>.\n     *\n     * @param item1 {Object} Start with this item\n     * @param item2 {Object} End with this item\n     */\n    _deselectItemRange : function(item1, item2)\n    {\n      var range = this._getSelectableRange(item1, item2);\n      for (var i=0, l=range.length; i<l; i++) {\n        this._removeFromSelection(range[i]);\n      }\n    },\n\n\n    /**\n     * Internal method to convert a range to a map of hash\n     * codes for faster lookup during selection compare routines.\n     *\n     * @param range {Array} List of selectable items\n     */\n    __rangeToMap : function(range)\n    {\n      var mapped = {};\n      var item;\n\n      for (var i=0, l=range.length; i<l; i++)\n      {\n        item = range[i];\n        mapped[this._selectableToHashCode(item)] = item;\n      }\n\n      return mapped;\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SINGLE ITEM QUERY AND MODIFICATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the first selected item. Only makes sense\n     * when using manager in single selection mode.\n     *\n     * @return {var} The selected item (or <code>null</code>)\n     */\n    _getSelectedItem : function()\n    {\n      for (var hash in this.__selection) {\n        return this.__selection[hash];\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Replace current selection with given item.\n     *\n     * @param item {var} Any valid selectable item\n     */\n    _setSelectedItem : function(item)\n    {\n      if (this._isSelectable(item))\n      {\n        // If already selected try to find out if this is the only item\n        var current = this.__selection;\n        var hash = this._selectableToHashCode(item);\n\n        if (!current[hash] || (current.length >= 2))\n        {\n          this._clearSelection();\n          this._addToSelection(item);\n        }\n      }\n    },\n\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MODIFY ITEM SELECTION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds an item to the current selection.\n     *\n     * @param item {Object} Any item\n     */\n    _addToSelection : function(item)\n    {\n      var hash = this._selectableToHashCode(item);\n\n      if (this.__selection[hash] == null && this._isSelectable(item))\n      {\n        this.__selection[hash] = item;\n        this._styleSelectable(item, \"selected\", true);\n\n        this.__selectionModified = true;\n      }\n    },\n\n\n    /**\n     * Toggles the item e.g. remove it when already selected\n     * or select it when currently not.\n     *\n     * @param item {Object} Any item\n     */\n    _toggleInSelection : function(item)\n    {\n      var hash = this._selectableToHashCode(item);\n\n      if (this.__selection[hash] == null)\n      {\n        this.__selection[hash] = item;\n        this._styleSelectable(item, \"selected\", true);\n      }\n      else\n      {\n        delete this.__selection[hash];\n        this._styleSelectable(item, \"selected\", false);\n      }\n\n      this.__selectionModified = true;\n    },\n\n\n    /**\n     * Removes the given item from the current selection.\n     *\n     * @param item {Object} Any item\n     */\n    _removeFromSelection : function(item)\n    {\n      var hash = this._selectableToHashCode(item);\n\n      if (this.__selection[hash] != null)\n      {\n        delete this.__selection[hash];\n        this._styleSelectable(item, \"selected\", false);\n\n        this.__selectionModified = true;\n      }\n    },\n\n\n    /**\n     * Replaces current selection with items from given array.\n     *\n     * @param items {Array} List of items to select\n     */\n    _replaceMultiSelection : function(items)\n    {\n      if (items.length === 0) {\n        this.clearSelection();\n        return;\n      }\n\n      var modified = false;\n\n      // Build map from hash codes and filter non-selectables\n      var selectable, hash;\n      var incoming = {};\n      for (var i=0, l=items.length; i<l; i++)\n      {\n        selectable = items[i];\n        if (this._isSelectable(selectable))\n        {\n          hash = this._selectableToHashCode(selectable);\n          incoming[hash] = selectable;\n        }\n      }\n\n      // Remember last\n      var first = items[0];\n      var last = selectable;\n\n      // Clear old entries from map\n      var current = this.__selection;\n      for (var hash in current)\n      {\n        if (incoming[hash])\n        {\n          // Reduce map to make next loop faster\n          delete incoming[hash];\n        }\n        else\n        {\n          // update internal map\n          selectable = current[hash];\n          delete current[hash];\n\n          // apply styling\n          this._styleSelectable(selectable, \"selected\", false);\n\n          // remember that the selection has been modified\n          modified = true;\n        }\n      }\n\n      // Add remaining selectables to selection\n      for (var hash in incoming)\n      {\n        // update internal map\n        selectable = current[hash] = incoming[hash];\n\n        // apply styling\n        this._styleSelectable(selectable, \"selected\", true);\n\n        // remember that the selection has been modified\n        modified = true;\n      }\n\n      // Do not do anything if selection is equal to previous one\n      if (!modified) {\n        return false;\n      }\n\n      // Scroll last incoming item into view\n      this._scrollItemIntoView(last);\n\n      // Reset anchor and lead item\n      this._setLeadItem(first);\n      this._setAnchorItem(first);\n\n      // Finally fire change event\n      this.__selectionModified = true;\n      this._fireChange();\n    },\n\n\n    /**\n     * Fires the selection change event if the selection has\n     * been modified.\n     *\n     * @param context {String} One of <code>tap</code>, <code>quick</code>,\n     *    <code>drag</code> or <code>key</code> or <code>null</code>\n     */\n    _fireChange : function(context)\n    {\n      if (this.__selectionModified)\n      {\n        // Store context\n        this.__selectionContext = context || null;\n\n        // Fire data event which contains the current selection\n        this.fireDataEvent(\"changeSelection\", this.getSelection());\n        delete this.__selectionModified;\n      }\n    },\n\n\n    /**\n     * Applies the default selection. The default item is the first item.\n     *\n     * @param force {Boolean} Whether the default selection should be forced.\n     *\n     * @return {var} The selected item.\n     */\n    _applyDefaultSelection : function(force)\n    {\n      if (force === true || this.getMode() === \"one\" && this.isSelectionEmpty())\n      {\n        var first = this._getFirstSelectable();\n        if (first != null) {\n          this.selectItem(first);\n        }\n        return first;\n      }\n      return null;\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this._disposeObjects(\"__scrollTimer\");\n    this.__selection = this.__pointerDownOnSelected = this.__anchorItem = null;\n    this.__leadItem = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * Abstract base class for selection manager, which manage selectable items\n * rendered in a virtual {@link qx.ui.virtual.core.Pane}.\n */\nqx.Class.define(\"qx.ui.virtual.selection.Abstract\",\n{\n  extend : qx.ui.core.selection.Abstract,\n\n\n  /*\n   *****************************************************************************\n      CONSTRUCTOR\n   *****************************************************************************\n   */\n\n  /**\n   * @param pane {qx.ui.virtual.core.Pane} The virtual pane on which the\n   *    selectable item are rendered\n   * @param selectionDelegate {qx.ui.virtual.selection.ISelectionDelegate?null} An optional delegate,\n   *    which can be used to customize the behavior of the selection manager\n   *    without sub classing it.\n   */\n  construct : function(pane, selectionDelegate)\n  {\n    this.base(arguments);\n\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertInstance(pane, qx.ui.virtual.core.Pane);\n    }\n\n    this._pane = pane;\n    this._delegate = selectionDelegate || {};\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // Determines if automatically scrolling of selected item into view is active.\n    _autoScrollIntoView : true,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DELEGATE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _isSelectable : function(item) {\n      return this._delegate.isItemSelectable ?\n        this._delegate.isItemSelectable(item) :\n        true;\n    },\n\n\n    // overridden\n    _styleSelectable : function(item, type, enabled)\n    {\n      if (this._delegate.styleSelectable) {\n        this._delegate.styleSelectable(item, type, enabled);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Attach pointer events to the managed pane.\n     */\n    attachPointerEvents : function()\n    {\n      var paneElement = this._pane.getContentElement();\n      paneElement.addListener(\"pointerdown\", this.handlePointerDown, this);\n      paneElement.addListener(\"tap\", this.handleTap, this);\n      paneElement.addListener(\"pointerover\", this.handlePointerOver, this);\n      paneElement.addListener(\"pointermove\", this.handlePointerMove, this);\n      paneElement.addListener(\"losecapture\", this.handleLoseCapture, this);\n    },\n\n\n    /**\n     * Detach pointer events from the managed pane.\n     */\n    detatchPointerEvents : function()\n    {\n      var paneElement = this._pane.getContentElement();\n      paneElement.removeListener(\"pointerdown\", this.handlePointerDown, this);\n      paneElement.removeListener(\"tap\", this.handleTap, this);\n      paneElement.removeListener(\"pointerover\", this.handlePointerOver, this);\n      paneElement.removeListener(\"pointermove\", this.handlePointerMove, this);\n      paneElement.removeListener(\"losecapture\", this.handleLoseCapture, this);\n    },\n\n\n    /**\n     * Attach key events to manipulate the selection using the keyboard. The\n     * event target doesn't need to be the pane itself. It can be an widget,\n     * which received key events. Usually the key event target is the\n     * {@link qx.ui.virtual.core.Scroller}.\n     *\n     * @param target {qx.core.Object} the key event target.\n     *\n     */\n    attachKeyEvents : function(target) {\n      target.addListener(\"keypress\", this.handleKeyPress, this);\n    },\n\n\n    /**\n     * Detach key events.\n     *\n     * @param target {qx.core.Object} the key event target.\n     */\n    detachKeyEvents : function(target) {\n      target.removeListener(\"keypress\", this.handleKeyPress, this);\n    },\n\n\n    /**\n     * Attach list events. The selection mode <code>one</code> need to know,\n     * when selectable items are added or removed. If this mode is used the\n     * <code>list</code> parameter must fire <code>addItem</code> and\n     * <code>removeItem</code> events.\n     *\n     * @param list {qx.core.Object} the event target for <code>addItem</code> and\n     *    <code>removeItem</code> events\n     */\n    attachListEvents : function(list)\n    {\n      list.addListener(\"addItem\", this.handleAddItem, this);\n      list.addListener(\"removeItem\", this.handleRemoveItem, this);\n    },\n\n\n    /**\n     * Detach list events.\n     *\n     * @param list {qx.core.Object} the event target for <code>addItem</code> and\n     *    <code>removeItem</code> events\n     */\n    detachListEvents : function(list)\n    {\n      list.removeListener(\"addItem\", this.handleAddItem, this);\n      list.removeListener(\"removeItem\", this.handleRemoveItem, this);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _capture : function() {\n      this._pane.capture();\n    },\n\n\n    // overridden\n    _releaseCapture : function() {\n      this._pane.releaseCapture();\n    },\n\n\n    // overridden\n    _getScroll : function()\n    {\n      return {\n        left : this._pane.getScrollX(),\n        top: this._pane.getScrollY()\n      };\n    },\n\n\n    // overridden\n    _scrollBy : function(xoff, yoff)\n    {\n      this._pane.setScrollX(this._pane.getScrollX() + xoff);\n      this._pane.setScrollY(this._pane.getScrollY() + yoff);\n    },\n\n\n    // overridden\n    _getLocation : function()\n    {\n      var elem = this._pane.getContentElement().getDomElement();\n      return elem ? qx.bom.element.Location.get(elem) : null;\n    },\n\n\n    // overridden\n    _getDimension : function() {\n      return this._pane.getInnerSize();\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct : function() {\n    this._pane = this._delegate = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * Row selection manager\n */\nqx.Class.define(\"qx.ui.virtual.selection.Row\",\n{\n  extend : qx.ui.virtual.selection.Abstract,\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Returns the number of all items in the pane. This number may contain\n     * unselectable items as well.\n     *\n     * @return {Integer} number of items\n     */\n    _getItemCount : function() {\n      return this._pane.getRowConfig().getItemCount();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getSelectableFromPointerEvent : function(event)\n    {\n      var cell = this._pane.getCellAtPosition(\n        event.getDocumentLeft(),\n        event.getDocumentTop()\n      );\n\n      if (!cell) {\n        return null;\n      }\n\n      return this._isSelectable(cell.row) ? cell.row : null;\n    },\n\n\n    // overridden\n    getSelectables : function(all)\n    {\n      var selectables = [];\n\n      for (var i=0, l=this._getItemCount(); i<l; i++)\n      {\n        if (this._isSelectable(i)) {\n          selectables.push(i);\n        }\n      }\n\n      return selectables;\n    },\n\n\n    // overridden\n    _getSelectableRange : function(item1, item2)\n    {\n      var selectables = [];\n      var min = Math.min(item1, item2);\n      var max = Math.max(item1, item2);\n\n      for (var i=min; i<=max; i++)\n      {\n        if (this._isSelectable(i)) {\n          selectables.push(i);\n        }\n      }\n\n      return selectables;\n    },\n\n\n    // overridden\n    _getFirstSelectable : function()\n    {\n      var count = this._getItemCount();\n      for (var i=0; i<count; i++)\n      {\n        if (this._isSelectable(i)) {\n          return i;\n        }\n      }\n      return null;\n    },\n\n\n    // overridden\n    _getLastSelectable : function()\n    {\n      var count = this._getItemCount();\n      for (var i=count-1; i>=0; i--)\n      {\n        if (this._isSelectable(i)) {\n          return i;\n        }\n      }\n      return null;\n    },\n\n\n    // overridden\n    _getRelatedSelectable : function(item, relation)\n    {\n      if (relation == \"above\")\n      {\n        var startIndex = item-1;\n        var endIndex = 0;\n        var increment = -1;\n      }\n      else if (relation == \"under\")\n      {\n        var startIndex = item+1;\n        var endIndex = this._getItemCount()-1;\n        var increment = 1;\n      }\n      else\n      {\n        return null;\n      }\n\n      for (var i=startIndex; i !== endIndex+increment; i += increment)\n      {\n        if (this._isSelectable(i)) {\n          return i;\n        }\n      }\n      return null;\n    },\n\n\n    // overridden\n    _getPage : function(lead, up)\n    {\n      if (up) {\n        return this._getFirstSelectable();\n      } else {\n        return this._getLastSelectable();\n      }\n    },\n\n\n    // overridden\n    _selectableToHashCode : function(item) {\n      return item;\n    },\n\n\n    // overridden\n    _scrollItemIntoView : function(item) {\n      if (this._autoScrollIntoView) {\n        this._pane.scrollRowIntoView(item);\n      }\n    },\n\n\n    // overridden\n    _getSelectableLocationX : function(item)\n    {\n      return {\n        left: 0,\n        right: this._pane.getColumnConfig().getTotalSize() - 1\n      };\n    },\n\n\n    // overridden\n    _getSelectableLocationY : function(item)\n    {\n      var rowConfig = this._pane.getRowConfig();\n\n      var itemTop = rowConfig.getItemPosition(item);\n      var itemBottom = itemTop + rowConfig.getItemSize(item) - 1;\n\n      return {\n        top: itemTop,\n        bottom: itemBottom\n      };\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Cajus Pollmeier\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Cajus Pollmeier\n     * Derrell Lipman\n\n************************************************************************ */\n\n/**\n * Because of the virtual nature of the VirtualTree, and the fact that\n * rendering occurs asynchronously, it is not a simple matter to bind a\n * property in the model that will open or close branches in the\n * tree. Instead, this controller listens to both the model and the tree, and\n * synchronizes the openness of branches in the tree.\n * \n * To use this controller, simply instantiate it with the requisite\n * constructor arguments.\n */\nqx.Class.define(\"qx.ui.tree.core.OpenCloseController\",\n{\n  extend: qx.core.Object,\n  \n  /**\n   * @param tree {qx.ui.tree.VirtualTree}\n   *   The tree whose branch open or closed state is to be synchronized to a\n   *   model property.\n   * \n   * @param rootModel {qx.data.Array}\n   *   The tree root model wherein a property is to be synchronized to the\n   *   tree branches' open or closed states\n   */\n  construct: function(tree, rootModel)\n  {\n    var             openProperty = tree.getOpenProperty();\n\n    this.base(arguments);\n    \n    // Save the tree and initialize storage of listener IDs\n    this._tree = tree;\n    this._lids = [];\n    \n    // Sync tree nodes\n    var sync = function(node) {\n      if (qx.Class.hasProperty(node.constructor, \"children\")) {\n        node.getChildren().forEach(sync);\n      }\n      \n      if (qx.Class.hasProperty(node.constructor, openProperty)) {\n        if (node.get(openProperty)) {\n          tree.openNode(node);\n        }\n        else {\n          tree.closeNode(node);\n        }\n      }\n    }.bind(this);\n    sync(rootModel);\n    \n    // Wire change listeners\n    var lid = tree.addListener(\"open\", this._onOpen, this);\n    this._lids.push([tree, lid]);\n    lid = tree.addListener(\"close\", this._onClose, this);\n    this._lids.push([tree, lid]);\n    lid = rootModel.addListener(\"changeBubble\", this._onChangeBubble, this);\n    this._lids.push([rootModel, lid]);\n  },\n  \n  members:\n  {\n    /** The tree which is synced to the model */\n    _tree: null,\n\n    /** Listener IDs that we manage */\n    _lids: null,\n    \n    // event listener for \"open\" on the tree\n    _onOpen: function(ev)\n    {\n      ev.getData().set(this._tree.getOpenProperty(), true);\n    },\n    \n    // event listener for \"close\" on the tree\n    _onClose: function(ev)\n    {\n      ev.getData().set(this._tree.getOpenProperty(), false);\n    },\n    \n    // event listener for model changes\n    _onChangeBubble: function(ev)\n    {\n      var index;\n      var item;\n      var isOpen;\n      var bubble = ev.getData();\n\n      // Extract the index of the current item\n      index = bubble.name.replace(/.*\\[([0-9]+)\\]$/, \"$1\");\n\n      // Retrieve that indexed array item if it's an array; otherwise the item itself\n      item = bubble.item.getItem ? bubble.item.getItem(index) : bubble.item;\n\n      // If this item isn't being deleted and has an open property...\n      if (item && qx.Class.hasProperty(item.constructor, this._tree.getOpenProperty())) {\n        // ... then find out if this branch is open\n        isOpen = item.get(this._tree.getOpenProperty());\n\n        // Open or close the tree branch as necessary\n        if (isOpen && !this._tree.isNodeOpen(item)) {\n          this._tree.openNode(item);\n        }\n        else if (! isOpen && this._tree.isNodeOpen(item)) {\n          this._tree.closeNode(item);\n        }\n      }\n\n      // Rebuild the internal lookup table\n      this._tree.refresh();\n    }\n  },\n  \n  destruct: function()\n  {\n    this._tree = null;\n    this._lids.forEach(function(data) {\n      data[0].removeListenerById(data[1]);\n    });\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * A widget cell provider provides the {@link qx.ui.virtual.layer.WidgetCell}\n * with configured widgets to render the cells and pools/releases unused\n * cell widgets.\n */\nqx.Interface.define(\"qx.ui.virtual.core.IWidgetCellProvider\",\n{\n  members :\n  {\n    /**\n     * This method returns the configured cell for the given cell. The return\n     * value may be <code>null</code> to indicate that the cell should be empty.\n     *\n     * @param row {Integer} The cell's row index.\n     * @param column {Integer} The cell's column index.\n     * @return {qx.ui.core.LayoutItem} The configured widget for the given cell.\n     */\n    getCellWidget : function(row, column) {},\n\n    /**\n     * Release the given cell widget. Either pool or destroy the widget.\n     *\n     * @param widget {qx.ui.core.LayoutItem} The cell widget to pool.\n     */\n    poolCellWidget : function(widget) {}\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This interface needs to implemented from all {@link qx.ui.tree.VirtualTree}\n * providers.\n *\n * @internal\n */\nqx.Interface.define(\"qx.ui.tree.provider.IVirtualTreeProvider\",\n{\n  members :\n  {\n    /**\n     * Creates a layer for node and leaf rendering.\n     *\n     * @return {qx.ui.virtual.layer.Abstract} new layer.\n     */\n    createLayer : function() {},\n\n\n    /**\n     * Creates a renderer for rendering.\n     *\n     * @return {var} new node renderer.\n     */\n    createRenderer : function() {},\n\n\n    /**\n     * Sets the name of the property, where the children are stored in the model.\n     *\n     * @param value {String} The child property name.\n     */\n    setChildProperty : function(value)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertString(value);\n    },\n\n\n    /**\n     * Sets the name of the property, where the value for the tree folders label\n     * is stored in the model classes.\n     *\n     * @param value {String} The label path.\n     */\n    setLabelPath : function(value)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertString(value);\n    },\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleSelectabled : function(row)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInteger(row);\n    },\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleUnselectabled : function(row)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInteger(row);\n    },\n\n\n    /**\n     * Returns if the passed row can be selected or not.\n     *\n     * @param row {Integer} row to select.\n     * @return {Boolean} <code>true</code> when the row can be selected,\n     *    <code>false</code> otherwise.\n     */\n    isSelectable : function(row)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInteger(row);\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The mixin controls the binding between model and item.\n *\n * @internal\n */\nqx.Mixin.define(\"qx.ui.tree.core.MWidgetController\",\n{\n  construct : function() {\n    this.__boundItems = [];\n  },\n\n\n  properties :\n  {\n    /**\n     * The name of the property, where the value for the tree node/leaf label\n     * is stored in the model classes.\n     */\n    labelPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon.\n     */\n    iconPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * The name of the property, where the children are stored in the model.\n     * Instead of the {@link #labelPath} must the child property a direct\n     * property form the model instance.\n     */\n    childProperty :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.tree.core.IVirtualTreeDelegate} interface.\n     */\n    delegate :\n    {\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    }\n  },\n\n\n  members :\n  {\n    /** @type {Array} which contains the bounded items */\n    __boundItems : null,\n\n\n    /**\n     * Helper-Method for binding the default properties from the model to the\n     * target widget. The used default properties  depends on the passed item.\n     *\n     * This method should only be called in the {@link IVirtualTreeDelegate#bindItem}\n     * function implemented by the {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used node or\n     *   leaf.\n     * @param index {Integer} The index of the item (node or leaf).\n     */\n    bindDefaultProperties : function(item, index)\n    {\n      // bind model first\n      this.bindProperty(\"\", \"model\", null, item, index);\n\n      this.bindProperty(\n        this.getLabelPath(), \"label\", this.getLabelOptions(), item, index\n      );\n\n      var bindPath = this.__getBindPath(index);\n      var bindTarget = this._tree.getLookupTable();\n      bindTarget = qx.data.SingleValueBinding.resolvePropertyChain(bindTarget, bindPath);\n\n      if (qx.util.OOUtil.hasProperty(bindTarget.constructor, this.getChildProperty())) {\n        this.bindProperty(\n          this.getChildProperty() + \".length\", \"appearance\",\n          {\n            converter : function() {\n              return \"virtual-tree-folder\";\n            }\n          }, item, index\n        );\n      } else {\n        item.setAppearance(\"virtual-tree-file\");\n      }\n\n      if (this.getIconPath() != null)\n      {\n        this.bindProperty(\n          this.getIconPath(), \"icon\", this.getIconOptions(), item, index\n        );\n      }\n    },\n\n\n    /**\n     * Helper-Method for binding a given property from the model to the target\n     * widget.\n     *\n     * This method should only be called in the {@link IVirtualTreeDelegate#bindItem}\n     * function implemented by the {@link #delegate} property.\n     *\n     * @param sourcePath {String | null} The path to the property in the model.\n     *   If you use an empty string, the whole model item will be bound.\n     * @param targetProperty {String} The name of the property in the target widget.\n     * @param options {Map | null} The options to use for the binding.\n     * @param targetWidget {qx.ui.core.Widget} The target widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindProperty : function(sourcePath, targetProperty, options, targetWidget, index)\n    {\n      var bindPath = this.__getBindPath(index, sourcePath);\n      var bindTarget = this._tree.getLookupTable();\n\n      var id = bindTarget.bind(bindPath, targetWidget, targetProperty, options);\n      this.__addBinding(targetWidget, id);\n    },\n\n\n    /**\n     * Helper-Method for binding a given property from the target widget to\n     * the model.\n     * This method should only be called in the\n     * {@link qx.ui.tree.core.IVirtualTreeDelegate#bindItem} function implemented by the\n     * {@link #delegate} property.\n     *\n     * @param targetPath {String | null} The path to the property in the model.\n     * @param sourceProperty {String} The name of the property in the target.\n     * @param options {Map | null} The options to use for the binding.\n     * @param sourceWidget {qx.ui.core.Widget} The source widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindPropertyReverse : function(targetPath, sourceProperty, options, sourceWidget, index)\n    {\n      var bindPath = this.__getBindPath(index, targetPath);\n      var bindTarget = this._tree.getLookupTable();\n\n      var id = sourceWidget.bind(sourceProperty, bindTarget, bindPath, options);\n      this.__addBinding(sourceWidget, id);\n    },\n\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings : function()\n    {\n      while(this.__boundItems.length > 0) {\n        var item = this.__boundItems.pop();\n        this._removeBindingsFrom(item);\n      }\n    },\n\n\n    /**\n     * Sets up the binding for the given item and index.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used item.\n     * @param index {Integer} The index of the item.\n     */\n    _bindItem : function(item, index)\n    {\n      var bindItem = qx.util.Delegate.getMethod(this.getDelegate(), \"bindItem\");\n\n      if (bindItem != null) {\n        bindItem(this, item, index);\n      } else {\n        this.bindDefaultProperties(item, index);\n      }\n    },\n\n\n    /**\n     * Removes the binding of the given item.\n     *\n     * @param item {qx.ui.core.Widget} The item which the binding should be\n     *   removed.\n     */\n    _removeBindingsFrom : function(item)\n    {\n      var bindings = this.__getBindings(item);\n\n      while (bindings.length > 0)\n      {\n        var id = bindings.pop();\n\n        try {\n          this._tree.getLookupTable().removeBinding(id);\n        } catch(e) {\n          item.removeBinding(id);\n        }\n      }\n\n      if (this.__boundItems.includes(item)) {\n        qx.lang.Array.remove(this.__boundItems, item);\n      }\n    },\n\n\n    /**\n     * Helper method to create the path for binding.\n     *\n     * @param index {Integer} The index of the item.\n     * @param path {String|null} The path to the property.\n     * @return {String} The binding path\n     */\n    __getBindPath : function(index, path)\n    {\n      var bindPath = \"[\" + index + \"]\";\n      if (path != null && path != \"\") {\n        bindPath += \".\" + path;\n      }\n      return bindPath;\n    },\n\n\n    /**\n     * Helper method to save the binding for the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to save binding.\n     * @param id {var} the id from the binding.\n     */\n    __addBinding : function(widget, id)\n    {\n      var bindings = this.__getBindings(widget);\n\n      if (!bindings.includes(id)) {\n        bindings.push(id);\n      }\n\n      if (!this.__boundItems.includes(widget)) {\n        this.__boundItems.push(widget);\n      }\n    },\n\n\n    /**\n     * Helper method which returns all bound id from the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to get all binding.\n     * @return {Array} all bound id's.\n     */\n    __getBindings : function(widget)\n    {\n      var bindings = widget.getUserData(\"BindingIds\");\n\n      if (bindings == null) {\n        bindings = [];\n        widget.setUserData(\"BindingIds\", bindings);\n      }\n\n      return bindings;\n    }\n  },\n\n\n  destruct : function() {\n    this.__boundItems = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The provider implements the {@link qx.ui.virtual.core.IWidgetCellProvider}\n * API, which can be used as delegate for the widget cell rendering and it\n * provides a API to bind the model with the rendered item.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.tree.provider.WidgetProvider\",\n{\n  extend : qx.core.Object,\n\n  implement : [\n   qx.ui.virtual.core.IWidgetCellProvider,\n   qx.ui.tree.provider.IVirtualTreeProvider\n  ],\n\n  include : [qx.ui.tree.core.MWidgetController],\n\n\n  /**\n   * @param tree {qx.ui.tree.VirtualTree} tree to provide.\n   */\n  construct : function(tree)\n  {\n    this.base(arguments);\n\n    this._tree = tree;\n\n    this.addListener(\"changeDelegate\", this._onChangeDelegate, this);\n    this._onChangeDelegate();\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.tree.VirtualTree} tree to provide. */\n    _tree : null,\n\n\n    /** @type {qx.ui.virtual.cell.WidgetCell} the used item renderer. */\n    _renderer : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // interface implementation\n    getCellWidget : function(row, column)\n    {\n      var item = this._tree.getLookupTable().getItem(row);\n\n      var hasChildren = false;\n      if (this._tree.isNode(item)) {\n        hasChildren = this._tree.hasChildren(item);\n      }\n\n      var widget = this._renderer.getCellWidget();\n      widget.setOpen(hasChildren && this._tree.isNodeOpen(item));\n      widget.addListener(\"changeOpen\", this.__onOpenChanged, this);\n      widget.setUserData(\"cell.childProperty\", this.getChildProperty());\n      widget.setUserData(\"cell.showLeafs\", this._tree.isShowLeafs());\n\n      if(this._tree.getSelection().contains(item)) {\n        this._styleSelectabled(widget);\n      } else {\n        this._styleUnselectabled(widget);\n      }\n\n      var level = this._tree.getLevel(row);\n      if (!this._tree.isShowTopLevelOpenCloseIcons()) {\n        level -= 1;\n      }\n      widget.setUserData(\"cell.level\", level);\n\n      if (!this._tree.isShowTopLevelOpenCloseIcons() && level == -1) {\n        widget.setOpenSymbolMode(\"never\");\n      } else {\n        widget.setOpenSymbolMode(\"auto\");\n      }\n\n      if (this._tree.getOpenProperty()) {\n        widget.setModel(item);\n      }\n\n      this._bindItem(widget, row);\n      qx.ui.core.queue.Widget.add(widget);\n\n      return widget;\n    },\n\n\n    // interface implementation\n    poolCellWidget : function(widget)\n    {\n      widget.removeListener(\"changeOpen\", this.__onOpenChanged, this);\n      this._removeBindingsFrom(widget);\n      this._renderer.pool(widget);\n      this._onPool(widget);\n    },\n\n\n    // Interface implementation\n    createLayer : function() {\n      return new qx.ui.virtual.layer.WidgetCell(this);\n    },\n\n\n    // Interface implementation\n    createRenderer : function()\n    {\n      var createItem = qx.util.Delegate.getMethod(this.getDelegate(), \"createItem\");\n\n      if (createItem == null) {\n        createItem = function() {\n          return new qx.ui.tree.VirtualTreeItem();\n        };\n      }\n\n      var renderer = new qx.ui.virtual.cell.WidgetCell();\n      renderer.setDelegate({\n        createWidget : createItem\n      });\n\n      return renderer;\n    },\n\n\n    // interface implementation\n    styleSelectabled : function(row)\n    {\n      var widget = this._tree._layer.getRenderedCellWidget(row, 0);\n      this._styleSelectabled(widget);\n    },\n\n\n    // interface implementation\n    styleUnselectabled : function(row)\n    {\n      var widget = this._tree._layer.getRenderedCellWidget(row, 0);\n      this._styleUnselectabled(widget);\n    },\n\n\n    // interface implementation\n    isSelectable : function(row)\n    {\n      var widget = this._tree._layer.getRenderedCellWidget(row, 0);\n      if (widget != null) {\n        return widget.isEnabled();\n      } else {\n        return true;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleSelectabled : function(widget) {\n      if(widget == null) {\n        return;\n      }\n\n      this._renderer.updateStates(widget, {selected: 1});\n    },\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleUnselectabled : function(widget) {\n      if(widget == null) {\n        return;\n      }\n\n      this._renderer.updateStates(widget, {});\n    },\n\n\n    /**\n     * Calls the delegate <code>onPool</code> method when it is used in the\n     * {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} Item to modify.\n     */\n    _onPool : function(item)\n    {\n      var onPool = qx.util.Delegate.getMethod(this.getDelegate(), \"onPool\");\n\n      if (onPool != null) {\n        onPool(item);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the created item's.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onItemCreated : function(event)\n    {\n      var configureItem = qx.util.Delegate.getMethod(this.getDelegate(), \"configureItem\");\n\n      if (configureItem != null) {\n        var leaf = event.getData();\n        configureItem(leaf);\n      }\n    },\n\n\n    /**\n     * Event handler for the change delegate event.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onChangeDelegate : function(event)\n    {\n      if (this._renderer != null) {\n        this._renderer.dispose();\n        this.removeBindings();\n      }\n\n      this._renderer = this.createRenderer();\n      this._renderer.addListener(\"created\", this._onItemCreated, this);\n    },\n\n\n    /**\n     * Handler when a node changes opened or closed state.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    __onOpenChanged : function(event)\n    {\n      var widget = event.getTarget();\n\n      var row = widget.getUserData(\"cell.row\");\n      var item = this._tree.getLookupTable().getItem(row);\n\n      if (event.getData()) {\n        this._tree.openNodeWithoutScrolling(item);\n      } else {\n        this._tree.closeNodeWithoutScrolling(item);\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.removeBindings();\n    this._renderer.dispose();\n    this._tree = this._renderer = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This utility class implements some methods for the <code>VirtualTree</code>.\n */\nqx.Class.define(\"qx.ui.tree.core.Util\",\n{\n  statics :\n  {\n    /**\n     * Returns if the passed item is a node or a leaf.\n     *\n     * @param node {qx.core.Object} Node to check.\n     * @param childProperty {String} The property name to find the children.\n     * @return {Boolean} <code>True</code> when the passed item is a node,\n     *   </code>false</code> when it is a leaf.\n     */\n    isNode : function(node, childProperty)\n    {\n      if (node == null || childProperty == null) {\n        return false;\n      }\n      return qx.Class.hasProperty(node.constructor, childProperty);\n    },\n\n\n    /**\n     * Returns whether the node has visible children or not.\n     *\n     * @param node {qx.core.Object} Node to check.\n     * @param childProperty {String} The property name to find the children.\n     * @param ignoreLeafs {Boolean?} Indicates whether leafs are ignored. This means when it is set to\n     *    <code>true</code> a node which contains only leafs has no children. The default value is <code>false</code>.\n     * @return {Boolean} <code>True</code> when the node has visible children,\n     *   <code>false</code> otherwise.\n     */\n    hasChildren : function(node, childProperty, ignoreLeafs)\n    {\n      if (node == null || childProperty == null || !this.isNode(node, childProperty)) {\n        return false;\n      }\n\n      var children = node.get(childProperty);\n      if (children == null) {\n        return false;\n      }\n\n      if (!ignoreLeafs) {\n        return children.length > 0;\n      }\n      else\n      {\n        for (var i = 0; i < children.getLength(); i++)\n        {\n          var child = children.getItem(i);\n          if (this.isNode(child, childProperty)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Methods to work with the delegate pattern.\n */\nqx.Class.define(\"qx.util.Delegate\",\n{\n  statics :\n  {\n    /**\n     * Returns the delegate method given my its name.\n     *\n     * @param delegate {Object} The delegate object to check the method.\n     * @param specificMethod {String} The name of the delegate method.\n     * @return {Function|null} The requested method or null, if no method is set.\n     */\n    getMethod : function(delegate, specificMethod)\n    {\n      if (qx.util.Delegate.containsMethod(delegate, specificMethod)) {\n        return qx.lang.Function.bind(delegate[specificMethod], delegate);\n      }\n\n      return null;\n    },\n\n\n\n    /**\n     * Checks, if the given delegate is valid or if a specific method is given.\n     *\n     * @param delegate {Object} The delegate object.\n     * @param specificMethod {String} The name of the method to search for.\n     * @return {Boolean} True, if everything was ok.\n     */\n    containsMethod : function (delegate, specificMethod)\n    {\n      var Type = qx.lang.Type;\n\n      if (Type.isObject(delegate)) {\n        return Type.isFunction(delegate[specificMethod]);\n      }\n\n      return false;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * The axis maps virtual screen coordinates to item indexes. By default all\n * items have the same size but it is also possible to give specific items\n * a different size.\n */\nqx.Class.define(\"qx.ui.virtual.core.Axis\",\n{\n  extend : qx.core.Object,\n\n  /**\n   * @param defaultItemSize {Integer} The default size of the items.\n   * @param itemCount {Integer} The number of item on the axis.\n   */\n  construct : function(defaultItemSize, itemCount)\n  {\n    this.base(arguments);\n\n    this.itemCount = itemCount;\n    this.defaultItemSize = defaultItemSize;\n\n    // sparse array\n    this.customSizes = {};\n  },\n\n\n  events :\n  {\n    /** Every change to the axis configuration triggers this event. */\n    \"change\" : \"qx.event.type.Event\"\n  },\n\n\n  members :\n  {\n    __ranges : null,\n\n\n    /**\n     * Get the default size of the items.\n     *\n     * @return {Integer} The default item size.\n     */\n    getDefaultItemSize : function() {\n      return this.defaultItemSize;\n    },\n\n\n    /**\n     * Set the default size the items.\n     *\n     * @param defaultItemSize {Integer} The default size of the items.\n     */\n    setDefaultItemSize : function(defaultItemSize)\n    {\n      if (this.defaultItemSize !== defaultItemSize)\n      {\n        this.defaultItemSize = defaultItemSize;\n        this.__ranges = null;\n        this.fireNonBubblingEvent(\"change\");\n      }\n    },\n\n\n    /**\n     * Get the number of items in the axis.\n     *\n     * @return {Integer} The number of items.\n     */\n    getItemCount : function() {\n      return this.itemCount;\n    },\n\n\n    /**\n     * Set the number of items in the axis.\n     *\n     * @param itemCount {Integer} The new item count.\n     */\n    setItemCount : function(itemCount)\n    {\n      if (this.itemCount !== itemCount)\n      {\n        this.itemCount = itemCount;\n        this.__ranges = null;\n        this.fireNonBubblingEvent(\"change\");\n      }\n    },\n\n\n    /**\n     * Sets the size of a specific item. This allow item, which have a size\n     * different from the default size.\n     *\n     * @param index {Integer} Index of the item to change.\n     * @param size {Integer} New size of the item.\n     */\n    setItemSize : function(index, size)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertArgumentsCount(arguments, 2, 2);\n        this.assert(\n          size >= 0 || size === null,\n          \"'size' must be 'null' or an integer larger than 0.\"\n        );\n      }\n      if (this.customSizes[index] == size) {\n        return;\n      }\n\n      if (size === null) {\n        delete this.customSizes[index];\n      } else {\n        this.customSizes[index] = size;\n      }\n      this.__ranges = null;\n      this.fireNonBubblingEvent(\"change\");\n    },\n\n\n    /**\n     * Get the size of the item at the given index.\n     *\n     * @param index {Integer} Index of the item to get the size for.\n     * @return {Integer} Size of the item.\n     */\n    getItemSize : function(index)\n    {\n      // custom size of 0 is not allowed\n      return this.customSizes[index] || this.defaultItemSize;\n    },\n\n\n    /**\n     * Reset all custom sizes set with {@link #setItemSize}.\n     */\n    resetItemSizes : function()\n    {\n      this.customSizes = {};\n      this.__ranges = null;\n      this.fireNonBubblingEvent(\"change\");\n    },\n\n\n    /**\n     * Split the position range into disjunct intervals. Each interval starts\n     * with a custom sized cell. Each position is contained in exactly one range.\n     * The ranges are sorted according to their start position.\n     *\n     * Complexity: O(n log n) (n = number of custom sized cells)\n     *\n     * @return {Map[]} The sorted list of ranges.\n     */\n    __getRanges : function()\n    {\n      if (this.__ranges) {\n        return this.__ranges;\n      }\n\n      var defaultSize = this.defaultItemSize;\n      var itemCount = this.itemCount;\n\n      var indexes = [];\n      for (var key in this.customSizes)\n      {\n        var index = parseInt(key, 10);\n        if (index < itemCount) {\n          indexes.push(index);\n        }\n      }\n      if (indexes.length == 0)\n      {\n        var ranges = [{\n          startIndex: 0,\n          endIndex: itemCount - 1,\n          firstItemSize: defaultSize,\n          rangeStart: 0,\n          rangeEnd: itemCount * defaultSize - 1\n        }];\n        this.__ranges = ranges;\n        return ranges;\n      }\n\n      indexes.sort(function(a,b) { return a > b ? 1 : -1;});\n\n      var ranges = [];\n      var correctionSum = 0;\n\n      for (var i=0; i<indexes.length; i++)\n      {\n        var index = indexes[i];\n        if (index >= itemCount) {\n          break;\n        }\n\n        var cellSize = this.customSizes[index];\n        var rangeStart = index * defaultSize + correctionSum;\n\n        correctionSum += cellSize - defaultSize;\n\n        ranges[i] = {\n          startIndex: index,\n          firstItemSize: cellSize,\n          rangeStart: rangeStart\n        };\n        if (i > 0) {\n          ranges[i-1].rangeEnd = rangeStart-1;\n          ranges[i-1].endIndex = index-1;\n        }\n      }\n\n      // fix first range\n      if (ranges[0].rangeStart > 0)\n      {\n        ranges.unshift({\n          startIndex: 0,\n          endIndex: ranges[0].startIndex-1,\n          firstItemSize: defaultSize,\n          rangeStart: 0,\n          rangeEnd: ranges[0].rangeStart-1\n        });\n      }\n\n      // fix last range\n      var lastRange = ranges[ranges.length-1];\n      var remainingItemsSize = (itemCount - lastRange.startIndex - 1) * defaultSize;\n      lastRange.rangeEnd = lastRange.rangeStart + lastRange.firstItemSize + remainingItemsSize - 1;\n      lastRange.endIndex = itemCount - 1;\n\n      this.__ranges = ranges;\n      return ranges;\n    },\n\n\n    /**\n     * Returns the range, which contains the position\n     *\n     * Complexity: O(log n) (n = number of custom sized cells)\n     *\n     * @param position {Integer} The position.\n     * @return {Map} The range, which contains the given position.\n     */\n    __findRangeByPosition : function(position)\n    {\n      var ranges = this.__ranges || this.__getRanges();\n\n      var start = 0;\n      var end = ranges.length-1;\n\n      // binary search in the sorted ranges list\n      while (true)\n      {\n        var pivot = start + ((end - start) >> 1);\n        var range = ranges[pivot];\n\n        if (range.rangeEnd < position) {\n          start = pivot + 1;\n        } else if (range.rangeStart > position) {\n          end = pivot - 1;\n        } else {\n          return range;\n        }\n      }\n    },\n\n\n    /**\n     * Get the item and the offset into the item at the given position.\n     *\n     * @param position {Integer|null} The position to get the item for.\n     * @return {Map} A map with the keys <code>index</code> and\n     *    <code>offset</code>. The index is the index of the item containing the\n     *    position and offsets specifies offset into this item. If the position\n     *    is outside of the range, <code>null</code> is returned.\n     */\n    getItemAtPosition : function(position)\n    {\n      if (position < 0 || position >= this.getTotalSize()) {\n        return null;\n      }\n\n      var range = this.__findRangeByPosition(position);\n\n      var startPos = range.rangeStart;\n      var index = range.startIndex;\n      var firstItemSize = range.firstItemSize;\n\n      if (startPos + firstItemSize > position)\n      {\n        return {\n          index: index,\n          offset: position - startPos\n        };\n      }\n      else\n      {\n        var defaultSize = this.defaultItemSize;\n        return {\n          index: index + 1 + Math.floor((position - startPos - firstItemSize) / defaultSize),\n          offset: (position - startPos - firstItemSize) % defaultSize\n        };\n      }\n    },\n\n\n    /**\n     * Returns the range, which contains the position.\n     *\n     * Complexity: O(log n) (n = number of custom sized cells)\n     *\n     * @param index {Integer} The index of the item to get the range for.\n     * @return {Map} The range for the index.\n     */\n    __findRangeByIndex : function(index)\n    {\n      var ranges = this.__ranges || this.__getRanges();\n\n      var start = 0;\n      var end = ranges.length-1;\n\n      // binary search in the sorted ranges list\n      while (true)\n      {\n        var pivot = start + ((end - start) >> 1);\n        var range = ranges[pivot];\n\n        if (range.endIndex < index) {\n          start = pivot + 1;\n        } else if (range.startIndex > index) {\n          end = pivot - 1;\n        } else {\n          return range;\n        }\n      }\n    },\n\n\n    /**\n     * Get the start position of the item with the given index.\n     *\n     * @param index {Integer} The item's index.\n     * @return {Integer|null} The start position of the item. If the index is outside\n     *    of the axis range <code>null</code> is returned.\n     */\n    getItemPosition : function(index)\n    {\n      if (index < 0 || index >= this.itemCount) {\n        return null;\n      }\n\n      var range = this.__findRangeByIndex(index);\n      if (range.startIndex == index) {\n        return range.rangeStart;\n      } else {\n        return range.rangeStart + range.firstItemSize + (index-range.startIndex-1) * this.defaultItemSize;\n      }\n    },\n\n\n    /**\n     * Returns the sum of all cell sizes.\n     *\n     * @return {Integer} The sum of all item sizes.\n     */\n    getTotalSize : function()\n    {\n      var ranges = this.__ranges || this.__getRanges();\n      return ranges[ranges.length-1].rangeEnd + 1;\n    },\n\n\n    /**\n     * Get an array of item sizes starting with the item at \"startIndex\". The\n     * sum of all sizes in the returned array is at least \"minSizeSum\".\n     *\n     * @param startIndex {Integer} The index of the first item.\n     * @param minSizeSum {Integer} The minimum sum of the item sizes.\n     * @return {Integer[]} List of item sizes starting with the size of the item\n     *    at index <code>startIndex</code>. The sum of the item sizes is at least\n     *    <code>minSizeSum</code>.\n     */\n    getItemSizes : function(startIndex, minSizeSum)\n    {\n      var customSizes = this.customSizes;\n      var defaultSize = this.defaultItemSize;\n\n      var sum = 0;\n      var sizes = [];\n      var i=0;\n      while (sum < minSizeSum)\n      {\n        var itemSize = customSizes[startIndex] != null ? customSizes[startIndex] : defaultSize;\n        startIndex++;\n\n        sum += itemSize;\n        sizes[i++] = itemSize;\n        if (startIndex >= this.itemCount) {\n          break;\n        }\n      }\n      return sizes;\n    }\n  },\n\n\n  destruct : function() {\n    this.customSizes = this.__ranges = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * A layer is responsible to render one aspect of a virtual pane. The pane tells\n * each layer to render/update a specific window of the virtual grid.\n */\nqx.Interface.define(\"qx.ui.virtual.core.ILayer\",\n{\n  members :\n  {\n    /**\n     * Do a complete update of the layer. All cached data should be discarded.\n     * This method is called e.g. after changes to the grid geometry\n     * (row/column sizes, row/column count, ...).\n     *\n     * Note: This method can only be called after the widgets initial appear\n     * event has been fired because it may work with the widget's DOM elements.\n     *\n     * @param firstRow {Integer} Index of the first row to display.\n     * @param firstColumn {Integer} Index of the first column to display.\n     * @param rowSizes {Integer[]} Array of heights for each row to display.\n     * @param columnSizes {Integer[]} Array of widths for each column to display.\n     */\n    fullUpdate : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    ) {\n      this.assertArgumentsCount(arguments, 6, 6);\n      this.assertPositiveInteger(firstRow);\n      this.assertPositiveInteger(firstColumn);\n      this.assertArray(rowSizes);\n      this.assertArray(columnSizes);\n    },\n\n\n    /**\n     * Update the layer to display a different window of the virtual grid.\n     * This method is called if the pane is scrolled, resized or cells\n     * are prefetched. The implementation can assume that no other grid\n     * data has been changed since the last \"fullUpdate\" of \"updateLayerWindow\"\n     * call.\n     *\n     * Note: This method can only be called after the widgets initial appear\n     * event has been fired because it may work with the widget's DOM elements.\n     *\n     * @param firstRow {Integer} Index of the first row to display.\n     * @param firstColumn {Integer} Index of the first column to display.\n     * @param rowSizes {Integer[]} Array of heights for each row to display.\n     * @param columnSizes {Integer[]} Array of widths for each column to display.\n     */\n    updateLayerWindow : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    ) {\n      this.assertArgumentsCount(arguments, 6, 6);\n      this.assertPositiveInteger(firstRow);\n      this.assertPositiveInteger(firstColumn);\n      this.assertArray(rowSizes);\n      this.assertArray(columnSizes);\n    },\n\n\n    /**\n     * Update the layer to reflect changes in the data the layer displays.\n     */\n    updateLayerData : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * David Perez Carmona (david-perez)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * A cell event instance contains all data for pointer events related to cells in\n * a pane.\n **/\nqx.Class.define(\"qx.ui.virtual.core.CellEvent\",\n{\n  extend : qx.event.type.Pointer,\n\n\n  properties :\n  {\n    /** The table row of the event target. */\n    row :\n    {\n      check : \"Integer\",\n      nullable: true\n    },\n\n    /** The table column of the event target. */\n    column :\n    {\n      check : \"Integer\",\n      nullable: true\n    }\n  },\n\n\n  members :\n  {\n     /**\n      * Initialize the event.\n      *\n      * @param scroller {qx.ui.table.pane.Scroller} The tables pane scroller.\n      * @param me {qx.event.type.Pointer} The original pointer event.\n      * @param row {Integer?null} The cell's row index.\n      * @param column {Integer?null} The cell's column index.\n      */\n     init : function(scroller, me, row, column)\n     {\n       me.clone(this);\n       this.setBubbles(false);\n\n       this.setRow(row);\n       this.setColumn(column);\n     }\n  }\n});\n"
  ]
}