{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/layout/Grow.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/testtapper/part-boot-bundle-16.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * The grow layout stretches all children to the full available size\n * but still respects limits configured by min/max values.\n *\n * It will place all children over each other with the top and left coordinates\n * set to <code>0</code>. The {@link qx.ui.container.Stack} and the\n * {@link qx.ui.core.scroll.ScrollPane} are using this layout.\n *\n * *Features*\n *\n * * Auto-sizing\n * * Respects minimum and maximum child dimensions\n *\n * *Item Properties*\n *\n * None\n *\n * *Example*\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.Grow();\n *\n * var w1 = new qx.ui.core.Widget();\n * var w2 = new qx.ui.core.Widget();\n * var w3 = new qx.ui.core.Widget();\n *\n * var container = new qx.ui.container.Composite(layout);\n * container.add(w1);\n * container.add(w2);\n * container.add(w3);\n * </pre>\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/layout/grow.html'>\n * Extended documentation</a> and links to demos of this layout in the qooxdoo manual.\n */\nqx.Class.define(\"qx.ui.layout.Grow\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value) {\n        this.assert(false, \"The property '\"+name+\"' is not supported by the Grow layout!\");\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      var children = this._getLayoutChildren();\n      var child, size, width, height;\n\n      // Render children\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n        size = child.getSizeHint();\n\n        width = availWidth;\n        if (width < size.minWidth) {\n          width = size.minWidth;\n        } else if (width > size.maxWidth) {\n          width = size.maxWidth;\n        }\n\n        height = availHeight;\n        if (height < size.minHeight) {\n          height = size.minHeight;\n        } else if (height > size.maxHeight) {\n          height = size.maxHeight;\n        }\n\n        child.renderLayout(padding.left, padding.top, width, height);\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      var children = this._getLayoutChildren();\n      var child, size;\n      var neededWidth=0, neededHeight=0;\n      var minWidth=0, minHeight=0;\n      var maxWidth=Infinity, maxHeight=Infinity;\n\n      // Iterate over children\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n        size = child.getSizeHint();\n\n        neededWidth = Math.max(neededWidth, size.width);\n        neededHeight = Math.max(neededHeight, size.height);\n\n        minWidth = Math.max(minWidth, size.minWidth);\n        minHeight = Math.max(minHeight, size.minHeight);\n\n        maxWidth = Math.min(maxWidth, size.maxWidth);\n        maxHeight = Math.min(maxHeight, size.maxHeight);\n      }\n\n\n      // Return hint\n      return {\n        width : neededWidth,\n        height : neededHeight,\n\n        minWidth : minWidth,\n        minHeight : minHeight,\n\n        maxWidth : maxWidth,\n        maxHeight : maxHeight\n      };\n    }\n  }\n});\n"
  ]
}