{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/form/MModelProperty.js",
    "../transpiled/qx/ui/form/IModel.js",
    "../transpiled/qx/ui/tree/core/AbstractItem.js",
    "../transpiled/qx/ui/tree/VirtualTreeItem.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/testtapper/part-boot-bundle-18.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * Can be included for implementing {@link qx.ui.form.IModel}. It only contains\n * a nullable property named 'model' with a 'changeModel' event.\n */\nqx.Mixin.define(\"qx.ui.form.MModelProperty\",\n{\n  properties :\n  {\n    /**\n     * Model property for storing additional information for the including\n     * object. It can act as value property on form items for example.\n     *\n     * Be careful using that property as this is used for the\n     * {@link qx.ui.form.MModelSelection} it has some restrictions:\n     *\n     * * Don't use equal models in one widget using the\n     *     {@link qx.ui.form.MModelSelection}.\n     *\n     * * Avoid setting only some model properties if the widgets are added to\n     *     a {@link qx.ui.form.MModelSelection} widget.\n     *\n     * Both restrictions result of the fact, that the set models are deputies\n     * for their widget.\n     */\n    model :\n    {\n      nullable : true,\n      event : \"changeModel\",\n      apply : \"_applyModel\",\n      dereference : true\n    }\n  },\n\n\n  members :\n  {\n    // apply method\n    _applyModel : function(value, old) {\n      // Empty implementation\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Each object which wants to store data representative for the real item\n * should implement this interface.\n */\nqx.Interface.define(\"qx.ui.form.IModel\",\n{\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the model data changes */\n    \"changeModel\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Set the representative data for the item.\n     *\n     * @param value {var} The data.\n     */\n    setModel : function(value) {},\n\n\n    /**\n     * Returns the representative data for the item\n     *\n     * @return {var} The data.\n     */\n    getModel : function() {},\n\n\n    /**\n     * Sets the representative data to null.\n     */\n    resetModel : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The AbstractItem serves as a common superclass for the {@link\n * qx.ui.tree.core.AbstractTreeItem} and {@link qx.ui.tree.VirtualTreeItem} classes.\n *\n * @childControl label {qx.ui.basic.Label} label of the tree item\n * @childControl icon {qx.ui.basic.Image} icon of the tree item\n * @childControl open {qx.ui.tree.core.FolderOpenButton} button to open/close a subtree\n */\nqx.Class.define(\"qx.ui.tree.core.AbstractItem\",\n{\n  extend : qx.ui.core.Widget,\n  type : \"abstract\",\n  include : [qx.ui.form.MModelProperty],\n  implement : [qx.ui.form.IModel],\n\n\n  /**\n   * @param label {String?null} The tree item's caption text\n   */\n  construct : function(label)\n  {\n    this.base(arguments);\n\n    if (label != null) {\n      this.setLabel(label);\n    }\n\n    this._setLayout(new qx.ui.layout.HBox());\n    this._addWidgets();\n\n    this.initOpen();\n  },\n\n\n  properties :\n  {\n    /**\n     * Whether the tree item is opened.\n     */\n    open :\n    {\n      check : \"Boolean\",\n      init : false,\n      event : \"changeOpen\",\n      apply : \"_applyOpen\"\n    },\n\n\n    /**\n     * Controls, when to show the open symbol. If the mode is \"auto\" , the open\n     * symbol is shown only if the item has child items.\n     */\n    openSymbolMode :\n    {\n      check : [\"always\", \"never\", \"auto\"],\n      init : \"auto\",\n      event : \"changeOpenSymbolMode\",\n      apply : \"_applyOpenSymbolMode\"\n    },\n\n\n    /**\n     * The number of pixel to indent the tree item for each level.\n     */\n    indent :\n    {\n      check : \"Integer\",\n      init : 19,\n      apply : \"_applyIndent\",\n      event : \"changeIndent\",\n      themeable : true\n    },\n\n\n    /**\n     * URI of \"closed\" icon. Can be any URI String supported by qx.ui.basic.Image.\n     **/\n    icon :\n    {\n      check : \"String\",\n      apply : \"_applyIcon\",\n      event : \"changeIcon\",\n      nullable : true,\n      themeable : true\n    },\n\n\n    /**\n     * URI of \"opened\" icon. Can be any URI String supported by qx.ui.basic.Image.\n     **/\n    iconOpened :\n    {\n      check : \"String\",\n      apply : \"_applyIconOpened\",\n      event : \"changeIconOpened\",\n      nullable : true,\n      themeable : true\n    },\n\n\n    /**\n     * The label/caption/text\n     */\n    label :\n    {\n      check : \"String\",\n      apply : \"_applyLabel\",\n      event : \"changeLabel\",\n      init : \"\"\n    }\n  },\n\n\n  members :\n  {\n    __labelAdded : null,\n    __iconAdded : null,\n    __spacer : null,\n\n\n    /**\n     * This method configures the tree item by adding its sub widgets like\n     * label, icon, open symbol, ...\n     *\n     * This method must be overridden by sub classes.\n     */\n    _addWidgets : function() {\n      throw new Error(\"Abstract method call.\");\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"label\":\n          control = new qx.ui.basic.Label().set({\n            alignY: \"middle\",\n            anonymous: true,\n            value: this.getLabel()\n          });\n          break;\n\n        case \"icon\":\n          control = new qx.ui.basic.Image().set({\n            alignY: \"middle\",\n            anonymous: true,\n            source: this.getIcon()\n          });\n          break;\n\n        case \"open\":\n          control = new qx.ui.tree.core.FolderOpenButton().set({\n            alignY: \"middle\"\n          });\n          control.addListener(\"changeOpen\", this._onChangeOpen, this);\n          control.addListener(\"resize\", this._updateIndent, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TREE ITEM CONFIGURATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a sub widget to the tree item's horizontal box layout.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to add\n     * @param options {Map?null} The (optional) layout options to use for the widget\n     */\n    addWidget : function(widget, options) {\n      this._add(widget, options);\n    },\n\n\n    /**\n     * Adds the spacer used to render the indentation to the item's horizontal\n     * box layout. If the spacer has been added before, it is removed from its\n     * old position and added to the end of the layout.\n     */\n    addSpacer : function()\n    {\n      if (!this.__spacer) {\n        this.__spacer = new qx.ui.core.Spacer();\n      } else {\n        this._remove(this.__spacer);\n      }\n\n      this._add(this.__spacer);\n    },\n\n\n    /**\n     * Adds the open button to the item's horizontal box layout. If the open\n     * button has been added before, it is removed from its old position and\n     * added to the end of the layout.\n     */\n    addOpenButton : function() {\n      this._add(this.getChildControl(\"open\"));\n    },\n\n\n    /**\n     * Event handler, which listens to open state changes of the open button\n     *\n     * @param e {qx.event.type.Data} The event object\n     */\n    _onChangeOpen : function(e)\n    {\n      if (this.isOpenable()) {\n        this.setOpen(e.getData());\n      }\n    },\n\n\n    /**\n     * Adds the icon widget to the item's horizontal box layout. If the icon\n     * widget has been added before, it is removed from its old position and\n     * added to the end of the layout.\n     */\n    addIcon : function()\n    {\n      var icon = this.getChildControl(\"icon\");\n\n      if (this.__iconAdded) {\n        this._remove(icon);\n      }\n\n      this._add(icon);\n      this.__iconAdded = true;\n    },\n\n\n    /**\n     * Adds the label to the item's horizontal box layout. If the label\n     * has been added before, it is removed from its old position and\n     * added to the end of the layout.\n     *\n     * @param text {String?0} The label's contents\n     */\n    addLabel : function(text)\n    {\n      var label = this.getChildControl(\"label\");\n\n      if (this.__labelAdded) {\n        this._remove(label);\n      }\n\n      if (text) {\n        this.setLabel(text);\n      } else {\n        label.setValue(this.getLabel());\n      }\n\n      this._add(label);\n      this.__labelAdded = true;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyIcon : function(value, old)\n    {\n      // Set \"closed\" icon - even when \"opened\" - if no \"opened\" icon was\n      // user-defined\n      if (!this.__getUserValueIconOpened()) {\n        this.__setIconSource(value);\n      }\n\n      else if (!this.isOpen()) {\n        this.__setIconSource(value);\n      }\n\n    },\n\n\n    // property apply\n    _applyIconOpened : function(value, old)\n    {\n\n      if (this.isOpen()) {\n\n        // ... both \"closed\" and \"opened\" icon were user-defined\n        if (this.__getUserValueIcon() && this.__getUserValueIconOpened()) {\n          this.__setIconSource(value);\n        }\n\n        // .. only \"opened\" icon was user-defined\n        else if (!this.__getUserValueIcon() && this.__getUserValueIconOpened()) {\n          this.__setIconSource(value);\n        }\n      }\n\n    },\n\n\n    // property apply\n    _applyLabel : function(value, old)\n    {\n      var label = this.getChildControl(\"label\", true);\n      if (label) {\n        label.setValue(value);\n      }\n    },\n\n    // property apply\n    _applyOpen : function(value, old)\n    {\n      var open = this.getChildControl(\"open\", true);\n      if (open) {\n        open.setOpen(value);\n      }\n\n      //\n      // Determine source of icon for \"opened\" or \"closed\" state\n      //\n      var source;\n\n      // Opened\n      if (value) {\n        // Never overwrite user-defined icon with themed \"opened\" icon\n        source = this.__getUserValueIconOpened() ? this.getIconOpened() : null;\n      }\n\n      // Closed\n      else {\n        source = this.getIcon();\n      }\n\n      if (source) {\n        this.__setIconSource(source);\n      }\n\n      value ? this.addState(\"opened\") : this.removeState(\"opened\");\n\n    },\n\n    /**\n    * Get user-defined value of \"icon\" property\n    *\n    * @return {var} The user value of the property \"icon\"\n    */\n    __getUserValueIcon : function() {\n      return qx.util.PropertyUtil.getUserValue(this, \"icon\");\n    },\n\n    /**\n    * Get user-defined value of \"iconOpened\" property\n    *\n    * @return {var} The user value of the property \"iconOpened\"\n    */\n    __getUserValueIconOpened : function() {\n      return qx.util.PropertyUtil.getUserValue(this, \"iconOpened\");\n    },\n\n    /**\n    * Set source of icon child control\n    *\n    * @param url {String} The URL of the icon\n    */\n    __setIconSource : function(url) {\n      var icon = this.getChildControl(\"icon\", true);\n      if (icon) {\n        icon.setSource(url);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INDENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Whether the tree item can be opened.\n     *\n     * @return {Boolean} Whether the tree item can be opened.\n     */\n    isOpenable : function()\n    {\n      var openMode = this.getOpenSymbolMode();\n      return (\n        openMode === \"always\" ||\n        openMode === \"auto\" && this.hasChildren()\n      );\n    },\n\n\n    /**\n     * Whether the open symbol should be shown\n     *\n     * @return {Boolean} Whether the open symbol should be shown.\n     */\n    _shouldShowOpenSymbol : function() {\n      throw new Error(\"Abstract method call.\");\n    },\n\n\n    // property apply\n    _applyOpenSymbolMode : function(value, old) {\n      this._updateIndent();\n    },\n\n\n    /**\n     * Update the indentation of the tree item.\n     */\n    _updateIndent : function()\n    {\n      var openWidth = 0;\n      var open = this.getChildControl(\"open\", true);\n\n      if (open)\n      {\n        if (this._shouldShowOpenSymbol())\n        {\n          open.show();\n\n          var openBounds = open.getBounds();\n          if (openBounds) {\n            openWidth = openBounds.width;\n          } else {\n            return;\n          }\n        }\n        else\n        {\n          open.exclude();\n        }\n      }\n\n      if (this.__spacer) {\n        this.__spacer.setWidth((this.getLevel() + 1) * this.getIndent() - openWidth);\n      }\n    },\n\n\n    // property apply\n    _applyIndent : function(value, old) {\n      this._updateIndent();\n    },\n\n\n    /**\n     * Computes the item's nesting level. If the item is not part of a tree\n     * this function will return <code>null</code>.\n     *\n     * @return {Integer|null} The item's nesting level or <code>null</code>.\n     */\n    getLevel : function() {\n      throw new Error(\"Abstract method call.\");\n    },\n\n\n    // overridden\n    syncWidget : function(jobs) {\n      this._updateIndent();\n    },\n\n\n    /**\n     * Whether the item has any children\n     *\n     * @return {Boolean} Whether the item has any children.\n     */\n    hasChildren : function() {\n      throw new Error(\"Abstract method call.\");\n    }\n  },\n\n\n  destruct : function() {\n    this._disposeObjects(\"__spacer\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The tree item is a tree element for the {@link VirtualTree}, which can have\n * nested tree elements.\n */\nqx.Class.define(\"qx.ui.tree.VirtualTreeItem\",\n{\n  extend : qx.ui.tree.core.AbstractItem,\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"virtual-tree-folder\"\n    }\n  },\n\n\n  members :\n  {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      selected : true\n    },\n\n\n    // overridden\n    _addWidgets : function()\n    {\n      this.addSpacer();\n      this.addOpenButton();\n      this.addIcon();\n      this.addLabel();\n    },\n\n\n    // overridden\n    _shouldShowOpenSymbol : function()\n    {\n      var open = this.getChildControl(\"open\", true);\n      if (open == null) {\n        return false;\n      }\n\n      return this.isOpenable();\n    },\n\n\n    // overridden\n    getLevel : function() {\n      return this.getUserData(\"cell.level\");\n    },\n\n\n    // overridden\n    hasChildren : function()\n    {\n      var model = this.getModel();\n      var childProperty = this.getUserData(\"cell.childProperty\");\n      var showLeafs = this.getUserData(\"cell.showLeafs\");\n\n      return qx.ui.tree.core.Util.hasChildren(model, childProperty, !showLeafs);\n    },\n\n\n    // apply method\n    _applyModel : function(value, old)\n    {\n      var childProperty = this.getUserData(\"cell.childProperty\");\n      var showLeafs = this.getUserData(\"cell.showLeafs\");\n\n      if (value != null && qx.ui.tree.core.Util.isNode(value, childProperty))\n      {\n        var eventType = \"change\" + qx.lang.String.firstUp(childProperty);\n        // listen to children property changes\n        if (qx.Class.hasProperty(value.constructor, childProperty)) {\n          value.addListener(eventType, this._onChangeChildProperty, this);\n        }\n\n\n        // children property has been set already, immediately add\n        // listener for indent updating\n        if (qx.ui.tree.core.Util.hasChildren(value, childProperty, !showLeafs)) {\n          value.get(childProperty).addListener(\"changeLength\",\n            this._onChangeLength, this);\n          this._updateIndent();\n        }\n      }\n\n\n      if (old != null && qx.ui.tree.core.Util.isNode(old, childProperty))\n      {\n        var eventType = \"change\" + qx.lang.String.firstUp(childProperty);\n        old.removeListener(eventType, this._onChangeChildProperty, this);\n\n        var oldChildren = old.get(childProperty);\n        if (oldChildren) {\n          oldChildren.removeListener(\"changeLength\", this._onChangeLength, this);\n        }\n      }\n    },\n\n\n    /**\n     * Handler to update open/close icon when model length changed.\n     */\n    _onChangeLength : function() {\n      this._updateIndent();\n    },\n\n\n    /**\n     * Handler to add listener to array of children property.\n     *\n     * @param e {qx.event.type.Data} Data event; provides children array\n     */\n    _onChangeChildProperty : function(e)\n    {\n      var children = e.getData();\n      var old = e.getOldData();\n\n      if (children) {\n        this._updateIndent();\n        children.addListener(\"changeLength\", this._onChangeLength, this);\n      }\n\n      if (old) {\n        old.removeListener(\"changeLength\", this._onChangeLength, this);\n      }\n    }\n  }\n});"
  ]
}