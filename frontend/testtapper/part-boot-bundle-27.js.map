{
  "version": 3,
  "sources": [
    "../transpiled/qx/event/message/Message.js",
    "../transpiled/qx/bom/request/SimpleXhr.js",
    "../transpiled/qx/ui/virtual/layer/Abstract.js",
    "../transpiled/qx/ui/virtual/layer/AbstractBackground.js",
    "../transpiled/qx/ui/virtual/layer/Row.js",
    "../transpiled/qx/ui/list/provider/IListProvider.js",
    "../transpiled/qx/ui/list/core/MWidgetController.js",
    "../transpiled/qx/ui/list/provider/WidgetProvider.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/testtapper/part-boot-bundle-27.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger\n\n************************************************************************ */\n\n/**\n * A message to be dispatched on the message bus.\n */\nqx.Class.define(\"qx.event.message.Message\",\n{\n  extend : qx.core.Object,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param name {String} The name of the message\n   * @param data {var} Any type of data to attach\n   */\n  construct : function(name, data)\n  {\n    this.base(arguments);\n\n    if (name != null) {\n      this.setName(name);\n    }\n\n    if (data != null) {\n      this.setData(data);\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Event name of the message. Based on this name the message is dispatched\n     * to the event listeners.\n     */\n    name :\n    {\n      check       : \"String\"\n    },\n\n    /**\n     * Any data the sender wants to pass with the event.\n     */\n    data :\n    {\n      init        : null,\n      nullable    : true\n    },\n\n    /**\n     * A reference to the sending object.\n     */\n    sender :\n    {\n      check       : \"Object\",\n      nullable    : true\n    }\n  },\n\n  destruct : function()\n  {\n    this.setData(null);\n    this.setSender(null);\n  }\n});\n\n\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\n/**\n * This class is internal because it's tailored to {@link qx.io.rest.Resource}\n * which needs more functionality than {@link qx.bom.request.Xhr} provides.\n * The usage of {@link qx.io.request.Xhr} isn't possible either due to it's qx.Class nature.\n *\n * For alternatives to this class have a look at:\n *\n * * \"qx.bom.request.Xhr\" (low level, cross-browser XHR abstraction compatible with spec)\n * * \"qx.io.request.Xhr\" (high level XHR abstraction)\n *\n * A wrapper of {@link qx.bom.request.Xhr} which offers:\n *\n * * set/get HTTP method, URL, request data and headers\n * * retrieve the parsed response as object (content-type recognition)\n * * more fine-grained events such as success, fail, ...\n * * supports hash code for request identification\n *\n * It does *not* comply the interface defined by {@link qx.bom.request.IRequest}.\n *\n * <div class=\"desktop\">\n * Example:\n *\n * <pre class=\"javascript\">\n *  var req = new qx.bom.request.SimpleXhr(\"/some/path/file.json\");\n *  req.setRequestData({\"a\":\"b\"});\n *  req.once(\"success\", function successHandler() {\n *    var response = req.getResponse();\n *  }, this);\n *  req.once(\"fail\", function successHandler() {\n *    var response = req.getResponse();\n *  }, this);\n *  req.send();\n * </pre>\n * </div>\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.request.SimpleXhr\",\n{\n\n  extend: qx.event.Emitter,\n  implement: [ qx.core.IDisposable ],\n\n  /**\n   * @param url {String?} The URL of the resource to request.\n   * @param method {String?\"GET\"} The HTTP method.\n   */\n  construct: function(url, method) {\n    if (url !== undefined) {\n      this.setUrl(url);\n    }\n\n    this.useCaching(true);\n    this.setMethod((method !== undefined) ? method : \"GET\");\n    this._transport = this._registerTransportListener(this._createTransport());\n\n    qx.core.ObjectRegistry.register(this);\n\n    this.__requestHeaders = {};\n    this.__parser = this._createResponseParser();\n  },\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets a request header.\n     *\n     * @param key {String} Key of the header.\n     * @param value {String} Value of the header.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setRequestHeader: function(key, value) {\n      this.__requestHeaders[key] = value;\n      return this;\n    },\n\n    /**\n     * Gets a request header.\n     *\n     * @param key {String} Key of the header.\n     * @return {String} The value of the header.\n     */\n    getRequestHeader: function(key) {\n      return this.__requestHeaders[key];\n    },\n\n\n    /**\n     * Returns a single response header\n     *\n     * @param header {String} Name of the header to get.\n     * @return {String} Response header\n     */\n    getResponseHeader: function(header) {\n      return this._transport.getResponseHeader(header);\n    },\n\n\n    /**\n     * Returns all response headers\n     * @return {String} String of response headers\n     */\n    getAllResponseHeaders: function() {\n      return this._transport.getAllResponseHeaders();\n    },\n\n    /**\n     * Sets the URL.\n     *\n     * @param url {String} URL to be requested.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setUrl: function(url) {\n      if (qx.lang.Type.isString(url)) {\n        this.__url = url;\n      }\n      return this;\n    },\n\n    /**\n     * Gets the URL.\n     *\n     * @return {String} URL to be requested.\n     */\n    getUrl: function() {\n      return this.__url;\n    },\n\n    /**\n     * Sets the HTTP-Method.\n     *\n     * @param method {String} The method.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setMethod: function(method) {\n      if (qx.util.Request.isMethod(method)) {\n        this.__method = method;\n      }\n      return this;\n    },\n\n    /**\n     * Gets the HTTP-Method.\n     *\n     * @return {String} The method.\n     */\n    getMethod: function() {\n      return this.__method;\n    },\n\n    /**\n     * Sets the request data to be send as part of the request.\n     *\n     * The request data is transparently included as URL query parameters or embedded in the\n     * request body as form data.\n     *\n     * @param data {String|Object} The request data.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setRequestData: function(data) {\n      if (qx.lang.Type.isString(data) || qx.lang.Type.isObject(data) ||\n         [\"ArrayBuffer\", \"Blob\", \"FormData\"].indexOf(qx.lang.Type.getClass(data)) !== -1) {\n        this.__requestData = data;\n      }\n      return this;\n    },\n\n    /**\n     * Gets the request data.\n     *\n     * @return {String} The request data.\n     */\n    getRequestData: function() {\n      return this.__requestData;\n    },\n\n    /**\n     * Gets parsed response.\n     *\n     * If problems occurred an empty string (\"\") is more likely to be returned (instead of null).\n     *\n     * @return {String|null} The parsed response of the request.\n     */\n    getResponse: function() {\n      if (this.__response !== null) {\n        return this.__response;\n      } else {\n        return (this._transport.responseXML !== null) ? this._transport.responseXML : this._transport.responseText;\n      }\n\n      return null;\n    },\n\n    /**\n     * Gets low-level transport.\n     *\n     * Note: To be used with caution!\n     *\n     * This method can be used to query the transport directly,\n     * but should be used with caution. Especially, it\n     * is not advisable to call any destructive methods\n     * such as <code>open</code> or <code>send</code>.\n     *\n     * @return {Object} An instance of a class found in\n     *  <code>qx.bom.request.*</code>\n     */\n     // This method mainly exists so that some methods found in the\n     // low-level transport can be deliberately omitted here,\n     // but still be accessed should it be absolutely necessary.\n     //\n     // Valid use cases include to query the transport’s responseXML\n     // property if performance is critical and any extra parsing\n     // should be avoided at all costs.\n     //\n    getTransport: function() {\n      return this._transport;\n    },\n\n    /**\n     * Sets (i.e. override) the parser for the response parsing.\n     *\n     * @see qx.util.ResponseParser#setParser\n     *\n     * @param parser {String|Function}\n     * @return {Function} The parser function\n     */\n    setParser: function(parser) {\n      return this.__parser.setParser(parser);\n    },\n\n    /**\n     * Sets the timout limit in milliseconds.\n     *\n     * @param millis {Number} limit in milliseconds.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setTimeout: function(millis) {\n      if (qx.lang.Type.isNumber(millis)) {\n        this.__timeout = millis;\n      }\n      return this;\n    },\n\n    /**\n     * The current timeout in milliseconds.\n     *\n     * @return {Number} The current timeout in milliseconds.\n     */\n    getTimeout: function() {\n      return this.__timeout;\n    },\n\n    /**\n     * Whether to allow request to be answered from cache.\n     *\n     * Allowed values:\n     *\n     * * <code>true</code>: Allow caching (Default)\n     * * <code>false</code>: Prohibit caching. Appends 'nocache' parameter to URL.\n     *\n     * Consider setting a Cache-Control header instead. A request’s Cache-Control\n     * header may contain a number of directives controlling the behavior of\n     * any caches in between client and origin server and allows therefore a more\n     * fine grained control over caching. If such a header is provided, the setting\n     * of setCache() will be ignored.\n     *\n     * * <code>\"no-cache\"</code>: Force caches to submit request in order to\n     * validate the freshness of the representation. Note that the requested\n     * resource may still be served from cache if the representation is\n     * considered fresh. Use this directive to ensure freshness but save\n     * bandwidth when possible.\n     * * <code>\"no-store\"</code>: Do not keep a copy of the representation under\n     * any conditions.\n     *\n     * See <a href=\"http://www.mnot.net/cache_docs/#CACHE-CONTROL\">\n     * Caching tutorial</a> for an excellent introduction to Caching in general.\n     * Refer to the corresponding section in the\n     * <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">\n     * HTTP 1.1 specification</a> for more details and advanced directives.\n     *\n     * It is recommended to choose an appropriate Cache-Control directive rather\n     * than prohibit caching using the nocache parameter.\n     *\n     * @param value {Boolean}\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    useCaching: function(value) {\n      if (qx.lang.Type.isBoolean(value)) {\n        this.__cache = value;\n      }\n      return this;\n    },\n\n    /**\n     * Whether requests are cached.\n     *\n     * @return {Boolean} Whether requests are cached.\n     */\n    isCaching: function() {\n      return this.__cache;\n    },\n\n    /**\n     * Whether request completed (is done).\n\n     * @return {Boolean} Whether request is completed.\n     */\n    isDone: function() {\n      return (this._transport.readyState === qx.bom.request.Xhr.DONE);\n    },\n\n    /**\n     * Returns unique hash code of object.\n     *\n     * @return {Integer} unique hash code of the object\n     */\n    toHashCode : function() {\n      return this.$$hash;\n    },\n\n    /**\n     * Returns true if the object is disposed.\n     *\n     * @return {Boolean} Whether the object has been disposed\n     */\n    isDisposed: function() {\n      return !!this.__disposed;\n    },\n\n    /**\n     * Sends request.\n     *\n     * Relies on set before:\n     * * a HTTP method\n     * * an URL\n     * * optional request headers\n     * * optional request data\n     */\n    send: function() {\n      var curTimeout = this.getTimeout(),\n          hasRequestData = (this.getRequestData() !== null),\n          hasCacheControlHeader = this.__requestHeaders.hasOwnProperty(\"Cache-Control\"),\n          isBodyForMethodAllowed = qx.util.Request.methodAllowsRequestBody(this.getMethod()),\n          curContentType = this.getRequestHeader(\"Content-Type\"),\n          serializedData = this._serializeData(this.getRequestData(), curContentType);\n\n      // add GET params if needed\n      if (this.getMethod() === \"GET\" && hasRequestData) {\n        this.setUrl(qx.util.Uri.appendParamsToUrl(this.getUrl(), serializedData));\n      }\n\n      // cache prevention\n      if (this.isCaching() === false && !hasCacheControlHeader) {\n        // Make sure URL cannot be served from cache and new request is made\n        this.setUrl(qx.util.Uri.appendParamsToUrl(this.getUrl(), {nocache: new Date().valueOf()}));\n      }\n\n      // set timeout\n      if (curTimeout) {\n        this._transport.timeout = curTimeout;\n      }\n\n      // initialize request\n      this._transport.open(this.getMethod(), this.getUrl(), true);\n\n      // set all previously stored headers on initialized request\n      for (var key in this.__requestHeaders) {\n        this._transport.setRequestHeader(key, this.__requestHeaders[key]);\n      }\n\n      // send\n      if (!isBodyForMethodAllowed) {\n        // GET & HEAD\n        this._transport.send();\n      } else {\n        // POST & PUT ...\n        if (typeof curContentType === \"undefined\" && [\"ArrayBuffer\", \"Blob\", \"FormData\"].indexOf(qx.Bootstrap.getClass(serializedData)) === -1) {\n          // by default, set content-type urlencoded for requests with body\n          this._transport.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        }\n\n        this._transport.send(serializedData);\n      }\n    },\n\n    /**\n     * Aborts request.\n     *\n     * Cancels any network activity.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    abort: function() {\n      this._transport.abort();\n      return this;\n    },\n\n    /**\n     * Disposes object and wrapped transport.\n     * @return {Boolean} <code>true</code> if the object was successfully disposed\n     */\n    dispose: function() {\n      if (this._transport.dispose()) {\n        this.__parser = null;\n        this.__disposed = true;\n        return true;\n      }\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Holds transport.\n     */\n    _transport: null,\n\n    /**\n     * Creates XHR transport.\n     *\n     * May be overridden to change type of resource.\n     * @return {qx.bom.request.IRequest} Transport.\n     */\n    _createTransport: function() {\n      return new qx.bom.request.Xhr();\n    },\n\n    /**\n     * Registers common listeners on given transport.\n     *\n     * @param transport {qx.bom.request.IRequest} Transport.\n     * @return {qx.bom.request.IRequest} Transport.\n     */\n    _registerTransportListener: function(transport) {\n      transport.onreadystatechange = qx.lang.Function.bind(this._onReadyStateChange, this);\n      transport.onloadend = qx.lang.Function.bind(this._onLoadEnd, this);\n      transport.ontimeout = qx.lang.Function.bind(this._onTimeout, this);\n      transport.onerror = qx.lang.Function.bind(this._onError, this);\n      transport.onabort = qx.lang.Function.bind(this._onAbort, this);\n      transport.onprogress = qx.lang.Function.bind(this._onProgress, this);\n      return transport;\n    },\n\n    /**\n     * Creates response parser.\n     *\n     * @return {qx.util.ResponseParser} parser.\n     */\n    _createResponseParser: function() {\n        return new qx.util.ResponseParser();\n    },\n\n    /**\n     * Sets the response.\n     *\n     * @param response {String} The parsed response of the request.\n     */\n    _setResponse: function(response) {\n      this.__response = response;\n    },\n\n    /**\n     * Serializes data.\n     *\n     * @param data {String|Map} Data to serialize.\n     * @param contentType {String?} Content-Type which influences the serialization.\n     * @return {String|null} Serialized data.\n     */\n    _serializeData: function(data, contentType) {\n      var isPost = this.getMethod() === \"POST\",\n          isJson = (/application\\/.*\\+?json/).test(contentType);\n\n      if (!data) {\n        return null;\n      }\n\n      if (qx.lang.Type.isString(data)) {\n        return data;\n      }\n\n      if (isJson && (qx.lang.Type.isObject(data) || qx.lang.Type.isArray(data))) {\n        return qx.lang.Json.stringify(data);\n      }\n\n      if (qx.lang.Type.isObject(data)) {\n        return qx.util.Uri.toParameter(data, isPost);\n      }\n\n      if ([\"ArrayBuffer\", \"Blob\", \"FormData\"].indexOf(qx.Bootstrap.getClass(data)) !== -1) {\n        return data;\n      }\n\n      return null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * {Array} Request headers.\n     */\n    __requestHeaders: null,\n    /**\n     * {Object} Request data (i.e. body).\n     */\n    __requestData: null,\n    /**\n     * {String} HTTP method to use for request.\n     */\n    __method: \"\",\n    /**\n     * {String} Requested URL.\n     */\n    __url: \"\",\n    /**\n     * {Object} Response data.\n     */\n    __response: null,\n    /**\n     * {Function} Parser.\n     */\n    __parser: null,\n    /**\n     * {Boolean} Whether caching will be enabled.\n     */\n    __cache: null,\n    /**\n     * {Number} The current timeout in milliseconds.\n     */\n    __timeout: null,\n    /**\n     * {Boolean} Whether object has been disposed.\n     */\n    __disposed: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds an event listener for the given event name which is executed only once.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function to execute when the event is fired\n     * @param ctx {var?} The context of the listener.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    addListenerOnce: function(name, listener, ctx) {\n      this.once(name, listener, ctx);\n      return this;\n    },\n\n    /**\n     * Adds an event listener for the given event name.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function to execute when the event is fired\n     * @param ctx {var?} The context of the listener.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    addListener: function(name, listener, ctx) {\n      this._transport._emitter.on(name, listener, ctx);\n      return this;\n    },\n\n    /**\n     * Handles \"readyStateChange\" event.\n     */\n    _onReadyStateChange: function() {\n      if (qx.core.Environment.get(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(\"Fire readyState: \" + this._transport.readyState);\n      }\n\n      if (this.isDone()) {\n        this.__onReadyStateDone();\n      }\n    },\n\n    /**\n     * Called internally when readyState is DONE.\n     */\n    __onReadyStateDone: function() {\n      if (qx.core.Environment.get(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(\"Request completed with HTTP status: \" + this._transport.status);\n      }\n\n      var response = this._transport.responseText;\n      var contentType = this._transport.getResponseHeader(\"Content-Type\");\n\n      // Successful HTTP status\n      if (qx.util.Request.isSuccessful(this._transport.status)) {\n\n        // Parse response\n        if (qx.core.Environment.get(\"qx.debug.io\")) {\n          qx.Bootstrap.debug(\"Response is of type: '\" + contentType + \"'\");\n        }\n\n        this._setResponse(this.__parser.parse(response, contentType));\n\n        this.emit(\"success\");\n\n      // Erroneous HTTP status\n      } else {\n\n        try {\n          this._setResponse(this.__parser.parse(response, contentType));\n        } catch (e) {\n          // ignore if it does not work\n        }\n\n        // A remote error failure\n        if (this._transport.status !== 0) {\n          this.emit(\"fail\");\n        }\n      }\n    },\n\n    /**\n     * Handles \"loadEnd\" event.\n     */\n    _onLoadEnd: function() {\n      this.emit(\"loadEnd\");\n    },\n\n    /**\n     * Handles \"abort\" event.\n     */\n    _onAbort: function() {\n      this.emit(\"abort\");\n    },\n\n    /**\n     * Handles \"timeout\" event.\n     */\n    _onTimeout: function() {\n      this.emit(\"timeout\");\n\n      // A network error failure\n      this.emit(\"fail\");\n    },\n\n    /**\n     * Handles \"error\" event.\n     */\n    _onError: function() {\n      this.emit(\"error\");\n\n      // A network error failure\n      this.emit(\"fail\");\n    },\n\n    /**\n     * Handles \"error\" event.\n     */\n    _onProgress: function() {\n      this.emit(\"progress\");\n    }\n\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * Abstract base class for layers of a virtual pane.\n *\n * This class queues calls to {@link #fullUpdate}, {@link #updateLayerWindow}\n * and {@link #updateLayerData} and only performs the absolute necessary\n * actions. Concrete implementation of this class must at least implement\n * the {@link #_fullUpdate} method. Additionally the two methods\n * {@link #_updateLayerWindow} and {@link #_updateLayerData} may be implemented\n * to increase the performance.\n */\nqx.Class.define(\"qx.ui.virtual.layer.Abstract\",\n{\n  extend : qx.ui.core.Widget,\n  type : \"abstract\",\n\n  implement : [qx.ui.virtual.core.ILayer],\n\n  /*\n   *****************************************************************************\n      CONSTRUCTOR\n   *****************************************************************************\n   */\n\n   construct : function()\n   {\n     this.base(arguments);\n\n     this.__jobs = {};\n   },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    anonymous :\n    {\n      refine: true,\n      init: true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __jobs : null,\n    __arguments : null,\n\n    __firstRow : null,\n    __firstColumn : null,\n    __rowSizes : null,\n    __columnSizes : null,\n\n\n    /**\n     * Get the first rendered row\n     *\n     * @return {Integer} The first rendered row\n     */\n    getFirstRow : function() {\n      return this.__firstRow;\n    },\n\n\n    /**\n     * Get the first rendered column\n     *\n     * @return {Integer} The first rendered column\n     */\n    getFirstColumn : function() {\n      return this.__firstColumn;\n    },\n\n\n    /**\n     * Get the sizes of the rendered rows\n     *\n     * @return {Integer[]} List of row heights\n     */\n    getRowSizes : function() {\n      return this.__rowSizes || [];\n    },\n\n\n    /**\n     * Get the sizes of the rendered column\n     *\n     * @return {Integer[]} List of column widths\n     */\n    getColumnSizes : function() {\n      return this.__columnSizes || [];\n    },\n\n\n    // overridden\n    syncWidget : function(jobs)\n    {\n      // return if the layer is not yet rendered\n      // it will rendered in the appear event\n      if (!this.getContentElement().getDomElement()) {\n        return;\n      }\n\n      if (\n        this.__jobs.fullUpdate ||\n        this.__jobs.updateLayerWindow && this.__jobs.updateLayerData\n      )\n      {\n        this._fullUpdate.apply(this, this.__arguments);\n      }\n      else if (this.__jobs.updateLayerWindow)\n      {\n        this._updateLayerWindow.apply(this, this.__arguments);\n      }\n      else if (this.__jobs.updateLayerData  && this.__rowSizes)\n      {\n        this._updateLayerData();\n      }\n\n      if (this.__jobs.fullUpdate || this.__jobs.updateLayerWindow)\n      {\n        var args = this.__arguments;\n        this.__firstRow = args[0];\n        this.__firstColumn = args[1];\n        this.__rowSizes = args[2];\n        this.__columnSizes = args[3];\n      }\n\n      this.__jobs = {};\n    },\n\n\n    /**\n     * Update the layer to reflect changes in the data the layer displays.\n     *\n     * Note: It is guaranteed that this method is only called after the layer\n     * has been rendered.\n     */\n    _updateLayerData : function()\n    {\n      this._fullUpdate(\n        this.__firstRow, this.__firstColumn,\n        this.__rowSizes, this.__columnSizes\n      );\n    },\n\n\n    /**\n     * Do a complete update of the layer. All cached data should be discarded.\n     * This method is called e.g. after changes to the grid geometry\n     * (row/column sizes, row/column count, ...).\n     *\n     * Note: It is guaranteed that this method is only called after the layer\n     * has been rendered.\n     *\n     * @param firstRow {Integer} Index of the first row to display\n     * @param firstColumn {Integer} Index of the first column to display\n     * @param rowSizes {Integer[]} Array of heights for each row to display\n     * @param columnSizes {Integer[]} Array of widths for each column to display\n     */\n    _fullUpdate : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    ) {\n      throw new Error(\"Abstract method '_fullUpdate' called!\");\n    },\n\n\n    /**\n     * Update the layer to display a different window of the virtual grid.\n     * This method is called if the pane is scrolled, resized or cells\n     * are prefetched. The implementation can assume that no other grid\n     * data has been changed since the last \"fullUpdate\" of \"updateLayerWindow\"\n     * call.\n     *\n     * Note: It is guaranteed that this method is only called after the layer\n     * has been rendered.\n     *\n     * @param firstRow {Integer} Index of the first row to display\n     * @param firstColumn {Integer} Index of the first column to display\n     * @param rowSizes {Integer[]} Array of heights for each row to display\n     * @param columnSizes {Integer[]} Array of widths for each column to display\n     */\n    _updateLayerWindow : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    )\n    {\n      this._fullUpdate(\n        firstRow, firstColumn,\n        rowSizes, columnSizes\n      );\n    },\n\n\n    // interface implementation\n    updateLayerData : function()\n    {\n      this.__jobs.updateLayerData = true;\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n\n    // interface implementation\n    fullUpdate : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    )\n    {\n      this.__arguments = arguments;\n      this.__jobs.fullUpdate = true;\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n\n    // interface implementation\n    updateLayerWindow : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    ) {\n      this.__arguments = arguments;\n      this.__jobs.updateLayerWindow = true;\n      qx.ui.core.queue.Widget.add(this);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.__jobs = this.__arguments = this.__rowSizes = this.__columnSizes = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * Abstract base class for the {@link Row} and {@link Column} layers.\n */\nqx.Class.define(\"qx.ui.virtual.layer.AbstractBackground\",\n{\n  extend : qx.ui.virtual.layer.Abstract,\n\n\n  /*\n   *****************************************************************************\n      CONSTRUCTOR\n   *****************************************************************************\n   */\n\n   /**\n    * @param colorEven {Color?null} color for even indexes\n    * @param colorOdd {Color?null} color for odd indexes\n    */\n   construct : function(colorEven, colorOdd)\n   {\n     this.base(arguments);\n\n     if (colorEven) {\n       this.setColorEven(colorEven);\n     }\n\n     if (colorOdd) {\n       this.setColorOdd(colorOdd);\n     }\n\n     this.__customColors = {};\n     this.__decorators = {};\n   },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** color for event indexes */\n    colorEven :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyColorEven\",\n      themeable : true\n    },\n\n    /** color for odd indexes */\n    colorOdd :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyColorOdd\",\n      themeable : true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __colorEven : null,\n    __colorOdd : null,\n    __customColors : null,\n    __decorators : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      COLOR HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the color for the given index\n     *\n     * @param index {Integer} Index to set the color for\n     * @param color {Color|null} the color to set. A value of <code>null</code>\n     *    will reset the color.\n     */\n    setColor : function(index, color)\n    {\n      if (color) {\n        this.__customColors[index] = qx.theme.manager.Color.getInstance().resolve(color);\n      } else {\n        delete(this.__customColors[index]);\n      }\n    },\n\n\n    /**\n     * Clear all colors set using {@link #setColor}.\n     */\n    clearCustomColors : function()\n    {\n      this.__customColors = {};\n      this.updateLayerData();\n    },\n\n\n    /**\n     * Get the color at the given index\n     *\n     * @param index {Integer} The index to get the color for.\n     * @return {Color} The color at the given index\n     */\n    getColor : function(index)\n    {\n      var customColor = this.__customColors[index];\n      if (customColor) {\n        return customColor;\n      } else {\n        return index % 2 == 0 ? this.__colorEven : this.__colorOdd;\n      }\n    },\n\n\n    // property apply\n    _applyColorEven : function(value, old)\n    {\n      if (value) {\n        this.__colorEven = qx.theme.manager.Color.getInstance().resolve(value);\n      } else {\n        this.__colorEven = null;\n      }\n      this.updateLayerData();\n    },\n\n\n    // property apply\n    _applyColorOdd : function(value, old)\n    {\n      if (value) {\n        this.__colorOdd = qx.theme.manager.Color.getInstance().resolve(value);\n      } else {\n        this.__colorOdd = null;\n      }\n      this.updateLayerData();\n    },\n\n\n    /**\n     * Sets the decorator for the given index\n     *\n     * @param index {Integer} Index to set the color for\n     * @param decorator {qx.ui.decoration.IDecorator|null} the decorator to set. A value of\n     *    <code>null</code> will reset the decorator.\n     */\n    setBackground : function(index, decorator)\n    {\n      if (decorator) {\n        this.__decorators[index] = qx.theme.manager.Decoration.getInstance().resolve(decorator);\n      } else {\n        delete(this.__decorators[index]);\n      }\n      this.updateLayerData();\n    },\n\n\n    /**\n     * Get the decorator at the given index\n     *\n     * @param index {Integer} The index to get the decorator for.\n     * @return {qx.ui.decoration.IDecorator} The decorator at the given index\n     */\n    getBackground : function(index) {\n      return this.__decorators[index];\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct : function() {\n    this.__customColors = this.__decorators = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * The Row layer renders row background colors.\n */\nqx.Class.define(\"qx.ui.virtual.layer.Row\",\n{\n  extend : qx.ui.virtual.layer.AbstractBackground,\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"row-layer\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    _fullUpdate : function(firstRow, firstColumn, rowSizes, columnSizes)\n    {\n      var html = [];\n\n      var width = qx.lang.Array.sum(columnSizes);\n\n      var top = 0;\n      var row = firstRow;\n      var childIndex = 0;\n\n      for (var y=0; y<rowSizes.length; y++)\n      {\n        var color = this.getColor(row);\n        var backgroundColor = color ? \"background-color:\" + color + \";\" : \"\";\n\n        var decorator = this.getBackground(row);\n        var styles = decorator ? qx.bom.element.Style.compile(decorator.getStyles()) : \"\";\n\n        html.push(\n          \"<div style='\",\n          \"position: absolute;\",\n          \"left: 0;\",\n          \"top:\", top, \"px;\",\n          \"height:\", rowSizes[y], \"px;\",\n          \"width:\", width, \"px;\",\n          backgroundColor,\n          styles,\n          \"'>\",\n          \"</div>\"\n        );\n        childIndex++;\n\n        top += rowSizes[y];\n        row += 1;\n      }\n\n      var el = this.getContentElement().getDomElement();\n      // hide element before changing the child nodes to avoid\n      // premature reflow calculations\n      el.style.display = \"none\";\n      el.innerHTML = html.join(\"\");\n\n      el.style.display = \"block\";\n      this._width = width;\n    },\n\n\n    // overridden\n    _updateLayerWindow : function(firstRow, firstColumn, rowSizes, columnSizes)\n    {\n      if (\n        firstRow !== this.getFirstRow() ||\n        rowSizes.length !== this.getRowSizes().length ||\n        this._width < qx.lang.Array.sum(columnSizes)\n      ) {\n        this._fullUpdate(firstRow, firstColumn, rowSizes, columnSizes);\n      }\n    },\n\n\n    // overridden\n    setColor : function(index, color)\n    {\n      this.base(arguments, index, color);\n\n      if (this.__isRowRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n\n    // overridden\n    setBackground : function(index, decorator)\n    {\n      this.base(arguments, index, decorator);\n      if (this.__isRowRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n\n    /**\n     * Whether the row with the given index is currently rendered (i.e. in the\n     * layer's view port).\n     *\n     * @param index {Integer} The row's index\n     * @return {Boolean} Whether the row is rendered\n     */\n    __isRowRendered : function(index)\n    {\n      var firstRow = this.getFirstRow();\n      var lastRow = firstRow + this.getRowSizes().length - 1;\n      return index >= firstRow && index <= lastRow;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This interface needs to implemented from all {@link qx.ui.list.List} providers.\n *\n * @internal\n */\nqx.Interface.define(\"qx.ui.list.provider.IListProvider\",\n{\n  members :\n  {\n    /**\n     * Creates a layer for item and group rendering.\n     *\n     * @return {qx.ui.virtual.layer.Abstract} new layer.\n     */\n    createLayer : function() {},\n\n\n    /**\n     * Creates a renderer for item rendering.\n     *\n     * @return {var} new item renderer.\n     */\n    createItemRenderer : function() {},\n\n\n    /**\n     * Creates a renderer for group rendering.\n     *\n     * @return {var} new group renderer.\n     */\n    createGroupRenderer : function() {},\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleSelectabled : function(row) {},\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleUnselectabled : function(row) {},\n\n\n    /**\n     * Returns if the passed row can be selected or not.\n     *\n     * @param row {Integer} row to select.\n     * @return {Boolean} <code>true</code> when the row can be selected,\n     *    <code>false</code> otherwise.\n     */\n    isSelectable : function(row) {},\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as a label. This is only needed if objects are stored in the model.\n     *\n     * @param path {String} path to the property.\n     */\n    setLabelPath : function(path) {},\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon. This is only needed if objects are stored in the model\n     * and if the icon should be shown.\n     *\n     * @param path {String} path to the property.\n     */\n    setIconPath : function(path) {},\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     *\n     * @param options {Map} options for the label binding.\n     */\n    setLabelOptions : function(options) {},\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     *\n     * @param options {Map} options for the icon binding.\n     */\n    setIconOptions : function(options) {},\n\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     *\n     * @param delegate {Object} delegation object.\n     */\n    setDelegate : function(delegate) {},\n\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings : function() {}\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The mixin controls the binding between model and item.\n *\n * @internal\n */\nqx.Mixin.define(\"qx.ui.list.core.MWidgetController\",\n{\n  construct : function() {\n    this.__boundItems = [];\n  },\n\n\n  properties :\n  {\n    /**\n     * The path to the property which holds the information that should be\n     * shown as a label. This is only needed if objects are stored in the model.\n     */\n    labelPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon. This is only needed if objects are stored in the model\n     * and if the icon should be shown.\n     */\n    iconPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a group label. This is only needed if objects are stored in the\n     * model.\n     */\n    groupLabelPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the group label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    groupLabelOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     */\n    delegate :\n    {\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    }\n  },\n\n\n  members :\n  {\n    /** @type {Array} which contains the bounded items */\n    __boundItems : null,\n\n\n    /**\n     * Helper-Method for binding the default properties from\n     * the model to the target widget. The used default properties\n     * depends on the passed item. When the passed item is\n     * a list item the \"label\" and \"icon\" property is used.\n     * When the passed item is a group item the \"value\" property is\n     * used.\n     *\n     * This method should only be called in the\n     * {@link IListDelegate#bindItem} function\n     * implemented by the {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used\n     *   list or group item.\n     * @param index {Integer} The index of the item.\n     */\n    bindDefaultProperties : function(item, index)\n    {\n      if(item.getUserData(\"cell.type\") != \"group\")\n      {\n        // bind model first\n        this.bindProperty(\n            \"\", \"model\", null, item, index\n        );\n\n        this.bindProperty(\n          this.getLabelPath(), \"label\", this.getLabelOptions(), item, index\n        );\n\n        if (this.getIconPath() != null) {\n          this.bindProperty(\n            this.getIconPath(), \"icon\", this.getIconOptions(), item, index\n          );\n        }\n      }\n      else\n      {\n        this.bindProperty(\n          this.getGroupLabelPath(), \"value\", this.getGroupLabelOptions(), item, index\n        );\n      }\n    },\n\n\n    /**\n     * Helper-Method for binding a given property from the model to the target\n     * widget.\n     * This method should only be called in the\n     * {@link IListDelegate#bindItem} function implemented by the\n     * {@link #delegate} property.\n     *\n     * @param sourcePath {String | null} The path to the property in the model.\n     *   If you use an empty string, the whole model item will be bound.\n     * @param targetProperty {String} The name of the property in the target widget.\n     * @param options {Map | null} The options to use for the binding.\n     * @param targetWidget {qx.ui.core.Widget} The target widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindProperty : function(sourcePath, targetProperty, options, targetWidget, index)\n    {\n      var type = targetWidget.getUserData(\"cell.type\");\n      var bindPath = this.__getBindPath(index, sourcePath, type);\n\n      if (options) {\n        options.ignoreConverter = \"model\";\n      }\n\n      var id = this._list.bind(bindPath, targetWidget, targetProperty, options);\n      this.__addBinding(targetWidget, id);\n    },\n\n\n    /**\n     * Helper-Method for binding a given property from the target widget to\n     * the model.\n     * This method should only be called in the\n     * {@link IListDelegate#bindItem} function implemented by the\n     * {@link #delegate} property.\n     *\n     * @param targetPath {String | null} The path to the property in the model.\n     * @param sourceProperty {String} The name of the property in the target.\n     * @param options {Map | null} The options to use for the binding.\n     * @param sourceWidget {qx.ui.core.Widget} The source widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindPropertyReverse : function(targetPath, sourceProperty, options, sourceWidget, index)\n    {\n      var type = sourceWidget.getUserData(\"cell.type\");\n      var bindPath = this.__getBindPath(index, targetPath, type);\n\n      var id = sourceWidget.bind(sourceProperty, this._list, bindPath, options);\n      this.__addBinding(sourceWidget, id);\n    },\n\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings : function()\n    {\n      while(this.__boundItems.length > 0) {\n        var item = this.__boundItems.pop();\n        this._removeBindingsFrom(item);\n      }\n    },\n\n\n    /**\n     * Configure the passed item if a delegate is set and the needed\n     * function {@link IListDelegate#configureItem} is available.\n     *\n     * @param item {qx.ui.core.Widget} item to configure.\n     */\n    _configureItem : function(item)\n    {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.configureItem != null) {\n        delegate.configureItem(item);\n      }\n    },\n\n\n    /**\n     * Configure the passed item if a delegate is set and the needed\n     * function {@link IListDelegate#configureGroupItem} is available.\n     *\n     * @param item {qx.ui.core.Widget} item to configure.\n     */\n    _configureGroupItem : function(item)\n    {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.configureGroupItem != null) {\n        delegate.configureGroupItem(item);\n      }\n    },\n\n\n    /**\n     * Sets up the binding for the given item and index.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used item.\n     * @param index {Integer} The index of the item.\n     */\n    _bindItem : function(item, index) {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.bindItem != null) {\n        delegate.bindItem(this, item, index);\n      } else {\n        this.bindDefaultProperties(item, index);\n      }\n    },\n\n\n    /**\n     * Sets up the binding for the given group item and index.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used item.\n     * @param index {Integer} The index of the item.\n     */\n    _bindGroupItem : function(item, index) {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.bindGroupItem != null) {\n        delegate.bindGroupItem(this, item, index);\n      } else {\n        this.bindDefaultProperties(item, index);\n      }\n    },\n\n\n    /**\n     * Removes the binding of the given item.\n     *\n     * @param item {qx.ui.core.Widget} The item which the binding should\n     *   be removed.\n     */\n    _removeBindingsFrom : function(item) {\n      var bindings = this.__getBindings(item);\n\n      while (bindings.length > 0) {\n        var id = bindings.pop();\n\n        try {\n          this._list.removeBinding(id);\n        } catch(e) {\n          item.removeBinding(id);\n        }\n      }\n\n      if (this.__boundItems.includes(item)) {\n        qx.lang.Array.remove(this.__boundItems, item);\n      }\n    },\n\n\n    /**\n     * Helper method to create the path for binding.\n     *\n     * @param index {Integer} The index of the item.\n     * @param path {String|null} The path to the property.\n     * @param type {String} The type <code>[\"item\", \"group\"]</code>.\n     * @return {String} The binding path\n     */\n    __getBindPath : function(index, path, type)\n    {\n      var bindPath = \"model[\" + index + \"]\";\n      if (type == \"group\") {\n        bindPath = \"groups[\" + index + \"]\";\n      }\n\n      if (path != null && path != \"\") {\n        bindPath += \".\" + path;\n      }\n\n      return bindPath;\n    },\n\n\n    /**\n     * Helper method to save the binding for the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to save binding.\n     * @param id {var} the id from the binding.\n     */\n    __addBinding : function(widget, id)\n    {\n      var bindings = this.__getBindings(widget);\n\n      if (!bindings.includes(id)) {\n        bindings.push(id);\n      }\n\n      if (!this.__boundItems.includes(widget)) {\n        this.__boundItems.push(widget);\n      }\n    },\n\n\n    /**\n     * Helper method which returns all bound id from the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to get all binding.\n     * @return {Array} all bound id's.\n     */\n    __getBindings : function(widget)\n    {\n      var bindings = widget.getUserData(\"BindingIds\");\n\n      if (bindings == null) {\n        bindings = [];\n        widget.setUserData(\"BindingIds\", bindings);\n      }\n\n      return bindings;\n    }\n  },\n\n\n  destruct : function() {\n    this.__boundItems = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The provider implements the {@link qx.ui.virtual.core.IWidgetCellProvider} API,\n * which can be used as delegate for the widget cell rendering and it\n * provides a API to bind the model with the rendered item.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.list.provider.WidgetProvider\",\n{\n  extend : qx.core.Object,\n\n  implement : [\n   qx.ui.virtual.core.IWidgetCellProvider,\n   qx.ui.list.provider.IListProvider\n  ],\n\n  include : [qx.ui.list.core.MWidgetController],\n\n\n  /**\n   * Creates the <code>WidgetProvider</code>\n   *\n   * @param list {qx.ui.list.List} list to provide.\n   */\n  construct : function(list)\n  {\n    this.base(arguments);\n\n    this._list = list;\n\n    this._itemRenderer = this.createItemRenderer();\n    this._groupRenderer = this.createGroupRenderer();\n\n    this._itemRenderer.addListener(\"created\", this._onItemCreated, this);\n    this._groupRenderer.addListener(\"created\", this._onGroupItemCreated, this);\n    this._list.addListener(\"changeDelegate\", this._onChangeDelegate, this);\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.virtual.cell.WidgetCell} the used item renderer */\n    _itemRenderer : null,\n\n\n    /** @type {qx.ui.virtual.cell.WidgetCell} the used group renderer */\n    _groupRenderer : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // interface implementation\n    getCellWidget : function(row, column)\n    {\n      var widget = null;\n\n      if (!this._list._isGroup(row))\n      {\n        widget = this._itemRenderer.getCellWidget();\n        widget.setUserData(\"cell.type\", \"item\");\n        this._bindItem(widget, this._list._lookup(row));\n\n        if(this._list._manager.isItemSelected(row)) {\n          this._styleSelectabled(widget);\n        } else {\n          this._styleUnselectabled(widget);\n        }\n      }\n      else\n      {\n        widget = this._groupRenderer.getCellWidget();\n        widget.setUserData(\"cell.type\", \"group\");\n        this._bindGroupItem(widget, this._list._lookupGroup(row));\n      }\n\n      return widget;\n    },\n\n\n    // interface implementation\n    poolCellWidget : function(widget) {\n      this._removeBindingsFrom(widget);\n\n      if (widget.getUserData(\"cell.type\") == \"item\") {\n        this._itemRenderer.pool(widget);\n      } else if (widget.getUserData(\"cell.type\") == \"group\") {\n        this._groupRenderer.pool(widget);\n      }\n      this._onPool(widget);\n    },\n\n\n    // interface implementation\n    createLayer : function() {\n      return new qx.ui.virtual.layer.WidgetCell(this);\n    },\n\n\n    // interface implementation\n    createItemRenderer : function()\n    {\n      var createWidget = qx.util.Delegate.getMethod(this.getDelegate(), \"createItem\");\n\n      if (createWidget == null) {\n        createWidget = function() {\n          return new qx.ui.form.ListItem();\n        };\n      }\n\n      var renderer = new qx.ui.virtual.cell.WidgetCell();\n      renderer.setDelegate({\n        createWidget : createWidget\n      });\n\n      return renderer;\n    },\n\n\n    // interface implementation\n    createGroupRenderer : function() {\n      var createWidget = qx.util.Delegate.getMethod(this.getDelegate(), \"createGroupItem\");\n\n      if (createWidget == null)\n      {\n        createWidget = function()\n        {\n          var group = new qx.ui.basic.Label();\n          group.setAppearance(\"group-item\");\n\n          return group;\n        };\n      }\n\n      var renderer = new qx.ui.virtual.cell.WidgetCell();\n      renderer.setDelegate({\n        createWidget : createWidget\n      });\n\n      return renderer;\n    },\n\n\n    // interface implementation\n    styleSelectabled : function(row)\n    {\n      var widget = this.__getWidgetFrom(row);\n      this._styleSelectabled(widget);\n    },\n\n\n    // interface implementation\n    styleUnselectabled : function(row)\n    {\n      var widget = this.__getWidgetFrom(row);\n      this._styleUnselectabled(widget);\n    },\n\n\n    // interface implementation\n    isSelectable : function(row)\n    {\n      if (this._list._isGroup(row)) {\n        return false;\n      }\n\n      var widget = this._list._layer.getRenderedCellWidget(row, 0);\n\n      if (widget != null) {\n        return widget.isEnabled();\n      } else {\n        return true;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleSelectabled : function(widget) {\n      this.__updateStates(widget, {selected: 1});\n    },\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleUnselectabled : function(widget) {\n      this.__updateStates(widget, {});\n    },\n\n\n    /**\n     * Calls the delegate <code>onPool</code> method when it is used in the\n     * {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} Item to modify.\n     */\n    _onPool : function(item)\n    {\n      var onPool = qx.util.Delegate.getMethod(this.getDelegate(), \"onPool\");\n\n      if (onPool != null) {\n        onPool(item);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the created item widget event.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onItemCreated : function(event)\n    {\n      var widget = event.getData();\n      this._configureItem(widget);\n    },\n\n\n    /**\n     * Event handler for the created item widget event.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onGroupItemCreated : function(event)\n    {\n      var widget = event.getData();\n      this._configureGroupItem(widget);\n    },\n\n\n    /**\n     * Event handler for the change delegate event.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onChangeDelegate : function(event)\n    {\n      this._itemRenderer.dispose();\n      this._itemRenderer = this.createItemRenderer();\n      this._itemRenderer.addListener(\"created\", this._onItemCreated, this);\n      this._groupRenderer.dispose();\n      this._groupRenderer = this.createGroupRenderer();\n      this._groupRenderer.addListener(\"created\", this._onGroupItemCreated, this);\n      this.removeBindings();\n      this._list.getPane().fullUpdate();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Helper method to get the widget from the passed row.\n     *\n     * @param row {Integer} row to search.\n     * @return {qx.ui.core.Widget|null} The found widget or <code>null</code> when no widget found.\n     */\n    __getWidgetFrom : function(row) {\n      return this._list._layer.getRenderedCellWidget(row, 0);\n    },\n\n\n    /**\n     * Helper method to update the states from a widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to set states.\n     * @param states {Map} the state to set.\n     */\n    __updateStates : function(widget, states)\n    {\n      if(widget == null) {\n        return;\n      }\n\n      this._itemRenderer.updateStates(widget, states);\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._itemRenderer.dispose();\n    this._groupRenderer.dispose();\n    this._itemRenderer = this._groupRenderer = null;\n  }\n});\n"
  ]
}