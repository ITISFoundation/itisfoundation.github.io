{
  "version": 3,
  "sources": [
    "../transpiled/qx/event/handler/Application.js",
    "../transpiled/qx/event/type/Native.js",
    "../transpiled/qx/event/handler/Window.js",
    "../transpiled/qx/core/BaseInit.js",
    "../transpiled/qx/core/Init.js",
    "../transpiled/qx/application/IApplication.js",
    "../transpiled/qx/locale/MTranslation.js",
    "../transpiled/qx/application/AbstractGui.js",
    "../transpiled/qx/application/Standalone.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-2.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This handler provides events for qooxdoo application startup/shutdown logic.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.bom.client.Engine)\n */\nqx.Class.define(\"qx.event.handler.Application\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    this.base(arguments);\n\n    // Define shorthands\n    this._window = manager.getWindow();\n\n    this.__domReady = false;\n    this.__loaded = false;\n    this.__isReady = false;\n    this.__isUnloaded = false;\n\n    // Initialize observers\n    this._initObserver();\n\n    // Store instance (only supported for main app window, this\n    // is the reason why this is OK here)\n    qx.event.handler.Application.$$instance = this;\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES :\n    {\n      ready : 1,\n      shutdown : 1\n    },\n\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_WINDOW,\n\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : true,\n\n\n    /**\n     * Sends the currently running application the ready signal. Used\n     * exclusively by package loader system.\n     *\n     * @internal\n     */\n    onScriptLoaded : function()\n    {\n      var inst = qx.event.handler.Application.$$instance;\n      if (inst) {\n        inst.__fireReady();\n      }\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type) {},\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    __isReady : null,\n    __domReady : null,\n    __loaded : null,\n    __isUnloaded : null,\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fires a global ready event.\n     *\n     */\n    __fireReady : function()\n    {\n      // Wrapper qxloader needed to be compatible with old generator\n      if (!this.__isReady && this.__domReady && qx.$$loader.scriptLoaded)\n      {\n        // If qooxdoo is loaded within a frame in IE, the document is ready before\n        // the \"ready\" listener can be added. To avoid any startup issue check\n        // for the availability of the \"ready\" listener before firing the event.\n        // So at last the native \"load\" will trigger the \"ready\" event.\n        if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n        {\n          if (qx.event.Registration.hasListener(this._window, \"ready\"))\n          {\n            this.__isReady = true;\n\n            // Fire user event\n            qx.event.Registration.fireEvent(this._window, \"ready\");\n          }\n        }\n        else\n        {\n          this.__isReady = true;\n\n          // Fire user event\n          qx.event.Registration.fireEvent(this._window, \"ready\");\n        }\n      }\n    },\n\n\n    /**\n     * Whether the application is ready.\n     *\n     * @return {Boolean} ready status\n     */\n    isApplicationReady : function() {\n      return this.__isReady;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      OBSERVER INIT/STOP\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Initializes the native application event listeners.\n     *\n     */\n    _initObserver : function()\n    {\n      // in Firefox the loader script sets the ready state\n      if (qx.$$domReady || document.readyState == \"complete\" || document.readyState == \"ready\")\n      {\n        this.__domReady = true;\n        this.__fireReady();\n      }\n      else\n      {\n        this._onNativeLoadWrapped = qx.lang.Function.bind(this._onNativeLoad, this);\n\n        if (\n          qx.core.Environment.get(\"engine.name\") == \"gecko\" ||\n          qx.core.Environment.get(\"engine.name\") == \"opera\" ||\n          qx.core.Environment.get(\"engine.name\") == \"webkit\" ||\n          (qx.core.Environment.get(\"engine.name\") == \"mshtml\" && qx.core.Environment.get(\"browser.documentmode\") > 8)\n        ) {\n          // Using native method supported by Mozilla, Webkit, Opera and IE >= 9\n          qx.bom.Event.addNativeListener(this._window, \"DOMContentLoaded\", this._onNativeLoadWrapped);\n        }\n        else {\n          var self = this;\n\n          // Continually check to see if the document is ready\n          var timer = function()\n          {\n            try\n            {\n              // If IE is used, use the trick by Diego Perini\n              // http://javascript.nwbox.com/IEContentLoaded/\n              document.documentElement.doScroll(\"left\");\n              if (document.body) {\n                self._onNativeLoadWrapped();\n              }\n            }\n            catch(error) {\n              window.setTimeout(timer, 100);\n            }\n          };\n\n          timer();\n        }\n\n        // Additional load listener as fallback\n        qx.bom.Event.addNativeListener(this._window, \"load\", this._onNativeLoadWrapped);\n      }\n\n      this._onNativeUnloadWrapped = qx.lang.Function.bind(this._onNativeUnload, this);\n      qx.bom.Event.addNativeListener(this._window, \"unload\", this._onNativeUnloadWrapped);\n    },\n\n\n    /**\n     * Disconnect the native application event listeners.\n     *\n     */\n    _stopObserver : function()\n    {\n      if (this._onNativeLoadWrapped) {\n        qx.bom.Event.removeNativeListener(this._window, \"load\", this._onNativeLoadWrapped);\n      }\n      qx.bom.Event.removeNativeListener(this._window, \"unload\", this._onNativeUnloadWrapped);\n\n      this._onNativeLoadWrapped = null;\n      this._onNativeUnloadWrapped = null;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      NATIVE LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * When qx.globalErrorHandling is enabled the callback will observed\n     */\n    _onNativeLoad: function () {\n      var callback = qx.core.Environment.select(\"qx.globalErrorHandling\", {\n        \"true\": qx.event.GlobalError.observeMethod(this.__onNativeLoadHandler),\n        \"false\": this.__onNativeLoadHandler\n      });\n      callback.apply(this, arguments);\n    },\n\n\n    /**\n     * Event listener for native load event\n     */\n    __onNativeLoadHandler: function () {\n      this.__domReady = true;\n      this.__fireReady();\n    },\n\n\n    /**\n     * When qx.globalErrorHandling is enabled the callback will observed\n     */\n    _onNativeUnload: function () {\n      var callback = qx.core.Environment.select(\"qx.globalErrorHandling\", {\n        \"true\": qx.event.GlobalError.observeMethod(this.__onNativeUnloadHandler),\n        \"false\": this.__onNativeUnloadHandler\n      });\n      callback.apply(this, arguments);\n    },\n\n\n    /**\n     * Event listener for native unload event\n     */\n    __onNativeUnloadHandler: function () {\n      if (!this.__isUnloaded) {\n        this.__isUnloaded = true;\n\n        try {\n          // Fire user event\n          qx.event.Registration.fireEvent(this._window, \"shutdown\");\n        }\n        catch (e) {\n          // IE doesn't execute the \"finally\" block if no \"catch\" block is present\n          throw e;\n        }\n      }\n    }\n\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this._stopObserver();\n\n    this._window = null;\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Common base class for all native events (DOM events, IO events, ...).\n */\nqx.Class.define(\"qx.event.type.Native\",\n{\n  extend : qx.event.type.Event,\n\n  members :\n  {\n    /**\n     * Initialize the fields of the event. The event must be initialized before\n     * it can be dispatched.\n     *\n     * @param nativeEvent {Event} The DOM event to use\n     * @param target {Object?} The event target\n     * @param relatedTarget {Object?null} The related event target\n     * @param canBubble {Boolean?false} Whether or not the event is a bubbling event.\n     *     If the event is bubbling, the bubbling can be stopped using\n     *     {@link qx.event.type.Event#stopPropagation}\n     * @param cancelable {Boolean?false} Whether or not an event can have its default\n     *     action prevented. The default action can either be the browser's\n     *     default action of a native event (e.g. open the context menu on a\n     *     right click) or the default action of a qooxdoo class (e.g. close\n     *     the window widget). The default action can be prevented by calling\n     *     {@link #preventDefault}\n     * @return {qx.event.type.Event} The initialized event instance\n     */\n    init : function(nativeEvent, target, relatedTarget, canBubble, cancelable)\n    {\n      this.base(arguments, canBubble, cancelable);\n\n      this._target = target || qx.bom.Event.getTarget(nativeEvent);\n      this._relatedTarget = relatedTarget || qx.bom.Event.getRelatedTarget(nativeEvent);\n\n      if (nativeEvent.timeStamp) {\n        this._timeStamp = nativeEvent.timeStamp;\n      }\n\n      this._native = nativeEvent;\n      this._returnValue = null;\n\n      return this;\n    },\n\n\n    // overridden\n    clone : function(embryo)\n    {\n      var clone = this.base(arguments, embryo);\n\n      var nativeClone = {};\n      clone._native = this._cloneNativeEvent(this._native, nativeClone);\n\n      clone._returnValue = this._returnValue;\n\n      return clone;\n    },\n\n\n    /**\n     * Clone the native browser event\n     *\n     * @param nativeEvent {Event} The native browser event\n     * @param clone {Object} The initialized clone.\n     * @return {Object} The cloned event\n     */\n    _cloneNativeEvent : function(nativeEvent, clone)\n    {\n      clone.preventDefault = (function() {});\n      return clone;\n    },\n\n\n    /**\n     * Prevent browser default behavior, e.g. opening the context menu, ...\n     */\n    preventDefault : function()\n    {\n      this.base(arguments);\n      qx.bom.Event.preventDefault(this._native);\n    },\n\n\n    /**\n     * Get the native browser event object of this event.\n     *\n     * @return {Event} The native browser event\n     */\n    getNativeEvent : function() {\n      return this._native;\n    },\n\n\n    /**\n     * Sets the event's return value. If the return value is set in a\n     * beforeunload event, the user will be asked by the browser, whether\n     * he really wants to leave the page. The return string will be displayed in\n     * the message box.\n     *\n     * @param returnValue {String?null} Return value\n     */\n    setReturnValue : function(returnValue) {\n      this._returnValue = returnValue;\n    },\n\n\n    /**\n     * Retrieves the event's return value.\n     *\n     * @return {String?null} The return value\n     */\n    getReturnValue : function() {\n      return this._returnValue;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This handler provides event for the window object.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.event.type.Native)\n * @require(qx.event.Pool)\n */\nqx.Class.define(\"qx.event.handler.Window\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    this.base(arguments);\n\n    // Define shorthands\n    this._manager = manager;\n    this._window = manager.getWindow();\n\n    // Initialize observers\n    this._initWindowObserver();\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES :\n    {\n      error : 1,\n      load : 1,\n      beforeunload : 1,\n      unload : 1,\n      resize : 1,\n      scroll : 1,\n      beforeshutdown : 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_WINDOW,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : true\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type) {},\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      OBSERVER INIT/STOP\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Initializes the native window event listeners.\n     *\n     */\n    _initWindowObserver : function()\n    {\n      this._onNativeWrapper = qx.lang.Function.listener(this._onNative, this);\n      var types = qx.event.handler.Window.SUPPORTED_TYPES;\n\n      for (var key in types) {\n        qx.bom.Event.addNativeListener(this._window, key, this._onNativeWrapper);\n      }\n    },\n\n\n    /**\n     * Disconnect the native window event listeners.\n     *\n     */\n    _stopWindowObserver : function()\n    {\n      var types = qx.event.handler.Window.SUPPORTED_TYPES;\n\n      for (var key in types) {\n        qx.bom.Event.removeNativeListener(this._window, key, this._onNativeWrapper);\n      }\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      NATIVE EVENT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * When qx.globalErrorHandling is enabled the callback will observed\n     */\n    _onNative: function () {\n      var callback = qx.core.Environment.select(\"qx.globalErrorHandling\", {\n        \"true\": qx.event.GlobalError.observeMethod(this.__onNativeHandler),\n        \"false\": this.__onNativeHandler\n      });\n      callback.apply(this, arguments);\n    },\n\n\n    /**\n     * Native listener for all supported events.\n     *\n     * @param e {Event} Native event\n     * @return {String|undefined}\n     */\n    __onNativeHandler: function (e) {\n      if (this.isDisposed()) {\n        return;\n      }\n\n      var win = this._window;\n      var doc;\n      try {\n        doc = win.document;\n      } catch(ex) {\n        // IE7 sometimes dispatches \"unload\" events on protected windows\n        // Ignore these events\n        return;\n      }\n\n      var html = doc.documentElement;\n\n      // At least Safari 3.1 and Opera 9.2.x have a bubbling scroll event\n      // which needs to be ignored here.\n      //\n      // In recent WebKit nightlies scroll events do no longer bubble\n      //\n      // Internet Explorer does not have a target in resize events.\n      var target = qx.bom.Event.getTarget(e);\n      if (target == null || target === win || target === doc || target === html) {\n        var event = qx.event.Registration.createEvent(e.type, qx.event.type.Native, [e, win]);\n        qx.event.Registration.dispatchEvent(win, event);\n\n        var result = event.getReturnValue();\n        if (result != null) {\n          e.returnValue = result;\n          return result;\n        }\n      }\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this._stopWindowObserver();\n    this._manager = this._window = null;\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Daniel Wagner (d_wagner)\n     * John Spackman\n\n************************************************************************ */\n\n/**\n * This is the base class for non-browser qooxdoo applications.\n */\nqx.Class.define(\"qx.core.BaseInit\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    __application : null,\n\n\n    /**\n     * Returns the instantiated qooxdoo application.\n     *\n     * @return {qx.core.Object} The application instance.\n     */\n    getApplication : function() {\n      return this.__application || null;\n    },\n\n\n    /**\n     * Runs when the application is loaded. Automatically creates an instance\n     * of the class defined by the setting <code>qx.application</code>.\n     *\n     */\n    ready : function()\n    {\n      if (this.__application) {\n        return;\n      }\n\n      if (qx.core.Environment.get(\"engine.name\") == \"\") {\n        qx.log.Logger.warn(\"Could not detect engine!\");\n      }\n      if (qx.core.Environment.get(\"engine.version\") == \"\") {\n        qx.log.Logger.warn(\"Could not detect the version of the engine!\");\n      }\n      if (qx.core.Environment.get(\"os.name\") == \"\") {\n        qx.log.Logger.warn(\"Could not detect operating system!\");\n      }\n\n      qx.log.Logger.debug(this, \"Load runtime: \" + (new Date - qx.Bootstrap.LOADSTART) + \"ms\");\n\n      var app = qx.core.Environment.get(\"qx.application\");\n      var clazz = qx.Class.getByName(app);\n\n      if (clazz)\n      {\n        this.__application = new clazz;\n\n        var start = new Date;\n        this.__application.main();\n        qx.log.Logger.debug(this, \"Main runtime: \" + (new Date - start) + \"ms\");\n\n        var start = new Date;\n        this.__application.finalize();\n        qx.log.Logger.debug(this, \"Finalize runtime: \" + (new Date - start) + \"ms\");\n      }\n      else\n      {\n        qx.log.Logger.warn(\"Missing application class: \" + app);\n      }\n    },\n\n\n    /**\n     * Runs before the document is unloaded. Calls the application's close\n     * method to check if the unload process should be stopped.\n     *\n     * @param e {qx.event.type.Native} Incoming beforeunload event.\n     */\n    __close : function(e)\n    {\n      var app = this.__application;\n      if (app) {\n        app.close();\n      }\n    },\n\n\n    /**\n     * Runs when the document is unloaded. Automatically terminates a previously\n     * created application instance.\n     *\n     */\n    __shutdown : function()\n    {\n      var app = this.__application;\n\n      if (app) {\n        app.terminate();\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This is the base class for all qooxdoo applications.\n *\n * @require(qx.event.handler.Application)\n * @require(qx.event.handler.Window)\n * @require(qx.event.dispatch.Direct)\n */\nqx.Class.define(\"qx.core.Init\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * Returns the instantiated qooxdoo application.\n     *\n     * @return {qx.core.Object} The application instance.\n     */\n    getApplication : qx.core.BaseInit.getApplication,\n\n\n    /**\n     * Runs when the application is loaded. Automatically creates an instance\n     * of the class defined by the setting <code>qx.application</code>.\n     *\n     */\n    ready : qx.core.BaseInit.ready,\n\n\n    /**\n     * Runs before the document is unloaded. Calls the application's close\n     * method to check if the unload process should be stopped.\n     *\n     * @param e {qx.event.type.Native} Incoming beforeunload event.\n     */\n    __close : function(e)\n    {\n      var app = this.getApplication();\n      if (app) {\n        e.setReturnValue(app.close());\n      }\n    },\n\n\n    /**\n     * Runs when the document is unloaded. Automatically terminates a previously\n     * created application instance.\n     *\n     */\n    __shutdown : function()\n    {\n      var app = this.getApplication();\n\n      if (app) {\n        app.terminate();\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics)\n  {\n    qx.event.Registration.addListener(window, \"ready\", statics.ready, statics);\n    qx.event.Registration.addListener(window, \"shutdown\", statics.__shutdown, statics);\n    qx.event.Registration.addListener(window, \"beforeunload\", statics.__close, statics);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This interface defines what an application class has to implement.\n */\nqx.Interface.define(\"qx.application.IApplication\",\n{\n  members :\n  {\n    /**\n     * Called when the application relevant classes are loaded and ready.\n     *\n     */\n    main : function() {},\n\n\n    /**\n     * Called when the application's main method was executed to handle\n     * \"final\" tasks like rendering or retrieving data.\n     *\n     */\n    finalize : function() {},\n\n    /**\n     * Called in the document.beforeunload event of the browser. If the method\n     * returns a string value, the user will be asked by the browser, whether\n     * he really wants to leave the page. The return string will be displayed in\n     * the message box.\n     *\n     * @return {String?null} message text on unloading the page\n     */\n    close : function() {},\n\n\n    /**\n     * This method contains the last code which is run inside the page and may contain cleanup code.\n     *\n     */\n    terminate : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This mixin contains the methods needed to use the translation features\n * of qooxdoo.\n *\n * @ignore(qx.locale.Manager)\n */\nqx.Mixin.define(\"qx.locale.MTranslation\",\n{\n  members:\n  {\n    /**\n     * Translate a message\n     * Mark the message for translation.\n     *\n     * @param messageId {String} message id (may contain format strings)\n     * @param varargs {Object?} variable number of arguments applied to the format string\n     * @return {String | LocalizedString} The translated message or localized string\n     */\n    tr : function(messageId, varargs)\n    {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.tr.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\"To enable localization please include qx.locale.Manager into your build!\");\n    },\n\n\n    /**\n     * Translate a plural message\n     * Mark the messages for translation.\n     *\n     * Depending on the third argument the plural or the singular form is chosen.\n     *\n     * @param singularMessageId {String} message id of the singular form (may contain format strings)\n     * @param pluralMessageId {String} message id of the plural form (may contain format strings)\n     * @param count {Integer} if greater than 1 the plural form otherwise the singular form is returned.\n     * @param varargs {Object?} variable number of arguments applied to the format string\n     * @return {String | LocalizedString} The translated message or localized string\n     */\n    trn : function(singularMessageId, pluralMessageId, count, varargs)\n    {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.trn.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\"To enable localization please include qx.locale.Manager into your build!\");\n    },\n\n\n    /**\n     * Translate a message with translation hint\n     * Mark the messages for translation.\n     *\n     * @param hint {String} hint for the translator of the message. Will be included in the .po file.\n     * @param messageId {String} message id (may contain format strings)\n     * @param varargs {Object?} variable number of arguments applied to the format string\n     * @return {String | LocalizedString} The translated message or localized string\n     */\n    trc : function(hint, messageId, varargs)\n    {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.trc.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\"To enable localization please include qx.locale.Manager into your build!\");\n    },\n\n\n    /**\n     * Translate a plural message with translation hint\n     * Mark the messages for translation.\n     *\n     * Depending on the third argument the plural or the singular form is chosen.\n     *\n     * @param hint {String} hint for the translator of the message. Will be included in the .po file.\n     * @param singularMessageId {String} message id of the singular form (may contain format strings)\n     * @param pluralMessageId {String} message id of the plural form (may contain format strings)\n     * @param count {Integer} if greater than 1 the plural form otherwise the singular form is returned.\n     * @param varargs {Object?} variable number of arguments applied to the format string\n     * @return {String | LocalizedString} The translated message or localized string\n     */\n    trnc : function(hint, singularMessageId, pluralMessageId, count, varargs)\n    {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.trnc.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\"To enable localization please include qx.locale.Manager into your build!\");\n    },\n\n\n    /**\n     * Mark the message for translation but return the original message.\n     *\n     * @param messageId {String} the message ID\n     * @return {String} messageId\n     */\n    marktr : function(messageId)\n    {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.marktr.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\"To enable localization please include qx.locale.Manager into your build!\");\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * Abstract base class for GUI applications using qooxdoo widgets.\n *\n * @require(qx.core.Init)\n */\nqx.Class.define(\"qx.application.AbstractGui\",\n{\n  type : \"abstract\",\n  extend : qx.core.Object,\n  implement : [qx.application.IApplication],\n  include : qx.locale.MTranslation,\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /** @type {qx.ui.core.Widget} The root widget */\n    __root : null,\n\n\n    /**\n     * Create the root widget. This method is abstract and must be overridden\n     * by sub classes.\n     *\n     * @return {qx.ui.core.Widget} The root widget. This widget must be configured\n     *     with a {@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas} layout.\n     */\n    _createRootWidget : function() {\n      throw new Error(\"Abstract method call\");\n    },\n\n\n    /**\n     * Returns the application's root widget. The root widgets can act as container\n     * for popups. It is configured with a {@link qx.ui.layout.Basic} (if the\n     * application is an inline application) layout or a {@link qx.ui.layout.Canvas}\n     * (if the application is a standalone application) layout .\n     *\n     * The root has the same add method as the configured layout\n     * ({@link qx.ui.layout.Basic} or {@link qx.ui.layout.Canvas}).\n     *\n     * @return {qx.ui.core.Widget} The application's root widget.\n     */\n    getRoot : function() {\n      return this.__root;\n    },\n\n\n    // interface method\n    main : function()\n    {\n      // Initialize themes\n      qx.theme.manager.Meta.getInstance().initialize();\n\n      // Initialize tooltip manager\n      qx.ui.tooltip.Manager.getInstance();\n\n      var rule = [\"-webkit-touch-callout: none;\",\n      \"-ms-touch-select: none;\",\n      \"-webkit-tap-highlight-color: rgba(0,0,0,0);\",\n      \"-webkit-tap-highlight-color: transparent;\"].join(\"\");\n      qx.ui.style.Stylesheet.getInstance().addRule(\"*\", rule);\n\n      this.__root = this._createRootWidget();\n\n      // make sure we start with a good scroll position\n      window.scrollTo(0, 0);\n    },\n\n\n    // interface method\n    finalize : function() {\n      this.render();\n    },\n\n\n    /**\n     * Updates the GUI rendering\n     *\n     */\n    render : function() {\n      qx.ui.core.queue.Manager.flush();\n    },\n\n\n    // interface method\n    close : function(val)\n    {\n      // empty\n    },\n\n\n    // interface method\n    terminate : function()\n    {\n      // empty\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * For a GUI application that looks & feels like native desktop application\n * (often called \"RIA\" - Rich Internet Application).\n *\n * Such a stand-alone application typically creates and updates all content\n * dynamically. Often it is called a \"single-page application\", since the\n * document itself is never reloaded or changed. Communication with the server\n * is done with AJAX.\n *\n * @require(qx.core.Init)\n */\nqx.Class.define(\"qx.application.Standalone\",\n{\n  extend : qx.application.AbstractGui,\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    _createRootWidget : function() {\n      return new qx.ui.root.Application(document);\n    }\n  }\n});\n"
  ]
}