{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/form/Form.js",
    "../transpiled/qx/ui/form/MForm.js",
    "../transpiled/qx/ui/form/AbstractField.js",
    "../transpiled/qx/ui/form/TextField.js",
    "../transpiled/qx/util/Validate.js",
    "../transpiled/qx/ui/form/PasswordField.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-18.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The form object is responsible for managing form items. For that, it takes\n * advantage of two existing qooxdoo classes.\n * The {@link qx.ui.form.Resetter} is used for resetting and the\n * {@link qx.ui.form.validation.Manager} is used for all validation purposes.\n *\n * The view code can be found in the used renderer ({@link qx.ui.form.renderer}).\n */\nqx.Class.define(\"qx.ui.form.Form\",\n{\n  extend : qx.core.Object,\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__groups = [];\n    this._buttons = [];\n    this._buttonOptions = [];\n    this._validationManager = this._createValidationManager();\n    this._resetter = this._createResetter();\n  },\n\n\n  events : {\n    /** Fired as soon as something changes in the form.*/\n    \"change\" : \"qx.event.type.Event\"\n  },\n\n\n  members :\n  {\n    __groups : null,\n    _validationManager : null,\n    _groupCounter : 0,\n    _buttons : null,\n    _buttonOptions : null,\n    _resetter : null,\n\n    /*\n    ---------------------------------------------------------------------------\n       ADD\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a form item to the form including its internal\n     * {@link qx.ui.form.validation.Manager} and {@link qx.ui.form.Resetter}.\n     *\n     * *Hint:* The order of all add calls represent the order in the layout.\n     *\n     * @param item {qx.ui.form.IForm} A supported form item.\n     * @param label {String} The string, which should be used as label.\n     * @param validator {Function | qx.ui.form.validation.AsyncValidator ? null}\n     *   The validator which is used by the validation\n     *   {@link qx.ui.form.validation.Manager}.\n     * @param name {String?null} The name which is used by the data binding\n     *   controller {@link qx.data.controller.Form}.\n     * @param validatorContext {var?null} The context of the validator.\n     * @param options {Map?null} An additional map containing custom data which\n     *   will be available in your form renderer specific to the added item.\n     */\n    add : function(item, label, validator, name, validatorContext, options) {\n      if (this.__isFirstAdd()) {\n        this.__groups.push({\n          title: null, items: [], labels: [], names: [],\n          options: [], headerOptions: {}\n        });\n      }\n      // save the given arguments\n      this.__groups[this._groupCounter].items.push(item);\n      this.__groups[this._groupCounter].labels.push(label);\n      this.__groups[this._groupCounter].options.push(options);\n      // if no name is given, use the label without not working character\n      if (name == null) {\n        name = label.replace(\n          /\\s+|&|-|\\+|\\*|\\/|\\||!|\\.|,|:|\\?|;|~|%|\\{|\\}|\\(|\\)|\\[|\\]|<|>|=|\\^|@|\\\\/g, \"\"\n        );\n      }\n      this.__groups[this._groupCounter].names.push(name);\n\n      // add the item to the validation manager\n      this._validationManager.add(item, validator, validatorContext);\n      // add the item to the reset manager\n      this._resetter.add(item);\n      // fire the change event\n      this.fireEvent(\"change\");\n    },\n\n\n    /**\n     * Adds a group header to the form.\n     *\n     * *Hint:* The order of all add calls represent the order in the layout.\n     *\n     * @param title {String} The title of the group header.\n     * @param options {Map?null} A special set of custom data which will be\n     *   given to the renderer.\n     */\n    addGroupHeader : function(title, options) {\n      if (!this.__isFirstAdd()) {\n        this._groupCounter++;\n      }\n      this.__groups.push({\n        title: title, items: [], labels: [], names: [],\n        options: [], headerOptions: options\n      });\n      // fire the change event\n      this.fireEvent(\"change\");\n    },\n\n\n    /**\n     * Adds a button to the form.\n     *\n     * *Hint:* The order of all add calls represent the order in the layout.\n     *\n     * @param button {qx.ui.form.Button} The button to add.\n     * @param options {Map?null} An additional map containing custom data which\n     *   will be available in your form renderer specific to the added button.\n     */\n    addButton : function(button, options) {\n      this._buttons.push(button);\n      this._buttonOptions.push(options || null);\n      // fire the change event\n      this.fireEvent(\"change\");\n    },\n\n\n    /**\n     * Returns whether something has already been added.\n     *\n     * @return {Boolean} true, if nothing has been added jet.\n     */\n    __isFirstAdd : function() {\n      return this.__groups.length === 0;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n       REMOVE\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Removes the given item from the form.\n     *\n     * @param item {qx.ui.form.IForm} A supported form item.\n     * @return {Boolean} <code>true</code>, if the item could be removed.\n     */\n    remove : function(item) {\n      for (var i = 0; i < this.__groups.length; i++) {\n        var group = this.__groups[i];\n        for (var j = 0; j < group.items.length; j++) {\n          var storedItem = group.items[j];\n          if (storedItem === item) {\n            // remove all stored data\n            group.items.splice(j, 1);\n            group.labels.splice(j, 1);\n            group.names.splice(j, 1);\n            group.options.splice(j, 1);\n\n            // remove the item to the validation manager\n            this._validationManager.remove(item);\n            // remove the item to the reset manager\n            this._resetter.remove(item);\n\n            // fire the change event\n            this.fireEvent(\"change\");\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n\n    /**\n     * Removes the given group header from the form. All items in the group will be moved to\n     * another group (usually the previous group). If there is more than one group with\n     * the same title, only the first group will be removed.\n     *\n     * @param title {String} The title.\n     * @return {Boolean} <code>true</code>, if the header could be removed.\n     */\n    removeGroupHeader : function(title) {\n      for (var i = 0; i < this.__groups.length; i++) {\n        var group = this.__groups[i];\n        if (group.title === title) {\n          var targetGroup;\n\n          // if it's the first group\n          if (i == 0) {\n            // if it's the only group\n            if (this.__groups.length == 1) {\n              // remove the title and the header options\n              group.title = null;\n              group.headerOptions = {};\n              // fire the change event\n              this.fireEvent(\"change\");\n              return true;\n            } else {\n              // add to the next\n              targetGroup = this.__groups[i+1];\n            }\n          } else {\n            // add to the previous group\n            targetGroup = this.__groups[i-1];\n          }\n\n          // copy the data over\n          targetGroup.items = targetGroup.items.concat(group.items);\n          targetGroup.labels = targetGroup.labels.concat(group.labels);\n          targetGroup.names = targetGroup.names.concat(group.names);\n          targetGroup.options = targetGroup.options.concat(group.options);\n\n          // delete the group\n          this.__groups.splice(i, 1);\n\n          this._groupCounter--;\n\n          // fire the change event\n          this.fireEvent(\"change\");\n          return true;\n        }\n      }\n      return false;\n    },\n\n\n    /**\n     * Removes the given button from the form.\n     *\n     * @param button {qx.ui.form.Button} The button to remove.\n     * @return {Boolean} <code>true</code>, if the button could be removed.\n     */\n    removeButton : function(button) {\n      for (var i = 0; i < this._buttons.length; i++) {\n        var storedButton = this._buttons[i];\n        if (storedButton === button) {\n          this._buttons.splice(i, 1);\n          this._buttonOptions.splice(i, 1);\n          // fire the change event\n          this.fireEvent(\"change\");\n          return true;\n        }\n      }\n      return false;\n    },\n\n\n    /**\n     * Returns all added items as a map.\n     *\n     * @return {Map} A map containing for every item an entry with its name.\n     */\n    getItems : function() {\n      var items = {};\n      // go threw all groups\n      for (var i = 0; i < this.__groups.length; i++) {\n        var group = this.__groups[i];\n        // get all items\n        for (var j = 0; j < group.names.length; j++) {\n          var name = group.names[j];\n          items[name] = group.items[j];\n        }\n      }\n      return items;\n    },\n\n\n    /**\n     * Return an item by name.\n     *\n     * @param name {string} Item name.\n     * @return {qx.ui.form.IForm|null} The form item or null.\n     */\n    getItem : function(name) {\n      for (var i = 0; i < this.__groups.length; i++) {\n        var group = this.__groups[i];\n        for (var j = 0; j < group.names.length; j++) {\n          if (group.names[j] === name) {\n            return group.items[j];\n          }\n        }\n      }\n\n      return null;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n       RESET SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Resets the form. This means reseting all form items and the validation.\n     */\n    reset : function() {\n      this._resetter.reset();\n      this._validationManager.reset();\n    },\n\n\n    /**\n     * Redefines the values used for resetting. It calls\n     * {@link qx.ui.form.Resetter#redefine} to get that.\n     */\n    redefineResetter : function() {\n      this._resetter.redefine();\n    },\n\n\n    /**\n     * Redefines the value used for resetting of the given item. It calls\n     * {@link qx.ui.form.Resetter#redefineItem} to get that.\n     *\n     * @param item {qx.ui.core.Widget} The item to redefine.\n     */\n    redefineResetterItem : function(item) {\n      this._resetter.redefineItem(item);\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n       VALIDATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Validates the form using the\n     * {@link qx.ui.form.validation.Manager#validate} method.\n     *\n     * @return {Boolean | null} The validation result.\n     */\n    validate : function() {\n      return this._validationManager.validate();\n    },\n\n\n    /**\n     * Returns the internally used validation manager. If you want to do some\n     * enhanced validation tasks, you need to use the validation manager.\n     *\n     * @return {qx.ui.form.validation.Manager} The used manager.\n     */\n    getValidationManager : function() {\n      return this._validationManager;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n       RENDERER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Accessor method for the renderer which returns all added items in a\n     * array containing a map of all items:\n     * {title: title, items: [], labels: [], names: []}\n     *\n     * @return {Array} An array containing all necessary data for the renderer.\n     * @internal\n     */\n    getGroups : function() {\n      return this.__groups;\n    },\n\n\n    /**\n     * Accessor method for the renderer which returns all added buttons in an\n     * array.\n     * @return {Array} An array containing all added buttons.\n     * @internal\n     */\n    getButtons : function() {\n      return this._buttons;\n    },\n\n\n    /**\n     * Accessor method for the renderer which returns all added options for\n     * the buttons in an array.\n     * @return {Array} An array containing all added options for the buttons.\n     * @internal\n     */\n    getButtonOptions : function() {\n      return this._buttonOptions;\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n       INTERNAL\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Creates and returns the used validation manager.\n     *\n     * @return {qx.ui.form.validation.Manager} The validation manager.\n     */\n    _createValidationManager : function() {\n      return new qx.ui.form.validation.Manager();\n    },\n\n\n    /**\n     * Creates and returns the used resetter.\n     *\n     * @return {qx.ui.form.Resetter} the resetter class.\n     */\n    _createResetter : function() {\n      return new qx.ui.form.Resetter();\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n  destruct : function()\n  {\n    // holding references to widgets --> must set to null\n    this.__groups = this._buttons = this._buttonOptions = null;\n    this._validationManager.dispose();\n    this._resetter.dispose();\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Mixin handling the valid and required properties for the form widgets.\n */\nqx.Mixin.define(\"qx.ui.form.MForm\",\n{\n\n  construct : function()\n  {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\"changeLocale\", this.__onChangeLocale, this);\n    }\n  },\n\n\n  properties : {\n\n    /**\n     * Flag signaling if a widget is valid. If a widget is invalid, an invalid\n     * state will be set.\n     */\n    valid : {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyValid\",\n      event : \"changeValid\"\n    },\n\n\n    /**\n     * Flag signaling if a widget is required.\n     */\n    required : {\n      check : \"Boolean\",\n      init : false,\n      event : \"changeRequired\"\n    },\n\n\n    /**\n     * Message which is shown in an invalid tooltip.\n     */\n    invalidMessage : {\n      check : \"String\",\n      init: \"\",\n      event : \"changeInvalidMessage\"\n    },\n\n\n    /**\n     * Message which is shown in an invalid tooltip if the {@link #required} is\n     * set to true.\n     */\n    requiredInvalidMessage : {\n      check : \"String\",\n      nullable : true,\n      event : \"changeInvalidMessage\"\n    }\n  },\n\n\n  members : {\n    // apply method\n    _applyValid: function(value, old) {\n      value ? this.removeState(\"invalid\") : this.addState(\"invalid\");\n    },\n\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    __onChangeLocale : qx.core.Environment.select(\"qx.dynlocale\",\n    {\n      \"true\" : function(e)\n      {\n        // invalid message\n        var invalidMessage = this.getInvalidMessage();\n        if (invalidMessage && invalidMessage.translate) {\n          this.setInvalidMessage(invalidMessage.translate());\n        }\n        // required invalid message\n        var requiredInvalidMessage = this.getRequiredInvalidMessage();\n        if (requiredInvalidMessage && requiredInvalidMessage.translate) {\n          this.setRequiredInvalidMessage(requiredInvalidMessage.translate());\n        }\n      },\n\n      \"false\" : null\n    })\n  },\n\n\n  destruct : function()\n  {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this.__onChangeLocale, this);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This is a basic form field with common functionality for\n * {@link TextArea} and {@link TextField}.\n *\n * On every keystroke the value is synchronized with the\n * value of the textfield. Value changes can be monitored by listening to the\n * {@link #input} or {@link #changeValue} events, respectively.\n */\nqx.Class.define(\"qx.ui.form.AbstractField\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [\n    qx.ui.form.IStringForm,\n    qx.ui.form.IForm\n  ],\n  include : [\n    qx.ui.form.MForm\n  ],\n  type : \"abstract\",\n\n  statics : {\n    /** Stylesheet needed to style the native placeholder element. */\n    __stylesheet : null,\n\n\n    /**\n     * Adds the CSS rules needed to style the native placeholder element.\n     */\n    __addPlaceholderRules : function() {\n      var engine = qx.core.Environment.get(\"engine.name\");\n      var browser = qx.core.Environment.get(\"browser.name\");\n      var colorManager = qx.theme.manager.Color.getInstance();\n      var color = colorManager.resolve(\"text-placeholder\");\n      var selector;\n\n      if (engine == \"gecko\") {\n        // see https://developer.mozilla.org/de/docs/CSS/:-moz-placeholder for details\n       if (parseFloat(qx.core.Environment.get(\"engine.version\")) >= 19) {\n          selector = \"input::-moz-placeholder, textarea::-moz-placeholder\";\n        } else {\n          selector = \"input:-moz-placeholder, textarea:-moz-placeholder\";\n        }\n        qx.ui.style.Stylesheet.getInstance().addRule(selector, \"color: \" + color + \" !important\");\n      } else if (engine == \"webkit\" && browser != \"edge\") {\n        selector = \"input.qx-placeholder-color::-webkit-input-placeholder, textarea.qx-placeholder-color::-webkit-input-placeholder\";\n        qx.ui.style.Stylesheet.getInstance().addRule(selector, \"color: \" + color);\n      } else if (engine == \"mshtml\" || browser == \"edge\") {\n        var separator = browser == \"edge\" ? \"::\" : \":\";\n        selector = [\"input.qx-placeholder-color\", \"-ms-input-placeholder, textarea.qx-placeholder-color\", \"-ms-input-placeholder\"].join(separator);\n        qx.ui.style.Stylesheet.getInstance().addRule(selector, \"color: \" + color + \" !important\");\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String} initial text value of the input field ({@link #setValue}).\n   */\n  construct : function(value)\n  {\n    this.base(arguments);\n\n    // shortcut for placeholder feature detection\n    this.__useQxPlaceholder = !qx.core.Environment.get(\"css.placeholder\");\n\n    if (value != null) {\n      this.setValue(value);\n    }\n\n    this.getContentElement().addListener(\n      \"change\", this._onChangeContent, this\n    );\n\n    // use qooxdoo placeholder if no native placeholder is supported\n    if (this.__useQxPlaceholder) {\n      // assign the placeholder text after the appearance has been applied\n      this.addListener(\"syncAppearance\", this._syncPlaceholder, this);\n    } else {\n      // add rules for native placeholder color\n      qx.ui.form.AbstractField.__addPlaceholderRules();\n      // add a class to the input to restrict the placeholder color\n      this.getContentElement().addClass(\"qx-placeholder-color\");\n    }\n\n    // translation support\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\", this._onChangeLocale, this\n      );\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * The event is fired on every keystroke modifying the value of the field.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current value of the text field.\n     */\n    \"input\" : \"qx.event.type.Data\",\n\n\n    /**\n     * The event is fired each time the text field looses focus and the\n     * text field values has changed.\n     *\n     * If you change {@link #liveUpdate} to true, the changeValue event will\n     * be fired after every keystroke and not only after every focus loss. In\n     * that mode, the changeValue event is equal to the {@link #input} event.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current text value of the field.\n     */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Alignment of the text\n     */\n    textAlign :\n    {\n      check : [ \"left\", \"center\", \"right\" ],\n      nullable : true,\n      themeable : true,\n      apply : \"_applyTextAlign\"\n    },\n\n\n    /** Whether the field is read only */\n    readOnly :\n    {\n      check : \"Boolean\",\n      apply : \"_applyReadOnly\",\n      event : \"changeReadOnly\",\n      init : false\n    },\n\n\n    // overridden\n    selectable :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    /** Maximal number of characters that can be entered in the TextArea. */\n    maxLength :\n    {\n      apply : \"_applyMaxLength\",\n      check : \"PositiveInteger\",\n      init : Infinity\n    },\n\n    /**\n     * Whether the {@link #changeValue} event should be fired on every key\n     * input. If set to true, the changeValue event is equal to the\n     * {@link #input} event.\n     */\n    liveUpdate :\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder :\n    {\n      check : \"String\",\n      nullable : true,\n      apply : \"_applyPlaceholder\"\n    },\n\n\n    /**\n     * RegExp responsible for filtering the value of the textfield. the RegExp\n     * gives the range of valid values.\n     * Note: The regexp specified is applied to each character in turn, \n     * NOT to the entire string. So only regular expressions matching a \n     * single character make sense in the context.\n     * The following example only allows digits in the textfield.\n     * <pre class='javascript'>field.setFilter(/[0-9]/);</pre>\n     */\n    filter :\n    {\n      check : \"RegExp\",\n      nullable : true,\n      init : null\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __nullValue : true,\n    _placeholder : null,\n    __oldValue : null,\n    __oldInputValue : null,\n    __useQxPlaceholder : true,\n    __font : null,\n    __webfontListenerId : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getFocusElement : function() {\n      var el = this.getContentElement();\n      if (el) {\n        return el;\n      }\n    },\n\n\n    /**\n     * Creates the input element. Derived classes may override this\n     * method, to create different input elements.\n     *\n     * @return {qx.html.Input} a new input element.\n     */\n    _createInputElement : function() {\n      return new qx.html.Input(\"text\");\n    },\n\n\n    // overridden\n    renderLayout : function(left, top, width, height)\n    {\n      var updateInsets = this._updateInsets;\n      var changes = this.base(arguments, left, top, width, height);\n\n      // Directly return if superclass has detected that no\n      // changes needs to be applied\n      if (!changes) {\n        return;\n      }\n\n      var inner = changes.size || updateInsets;\n      var pixel = \"px\";\n\n      if (inner || changes.local || changes.margin) {\n        var innerWidth = width;\n        var innerHeight = height;\n      }\n\n      var input = this.getContentElement();\n\n      // we don't need to update positions on native placeholders\n      if (updateInsets && this.__useQxPlaceholder)\n      {\n        if (this.__useQxPlaceholder) {\n          var insets = this.getInsets();\n          this._getPlaceholderElement().setStyles({\n            paddingTop : insets.top + pixel,\n            paddingRight : insets.right + pixel,\n            paddingBottom : insets.bottom + pixel,\n            paddingLeft : insets.left + pixel\n          });\n        }\n      }\n\n      if (inner || changes.margin)\n      {\n        // we don't need to update dimensions on native placeholders\n        if (this.__useQxPlaceholder) {\n          var insets = this.getInsets();\n          this._getPlaceholderElement().setStyles({\n            \"width\": (innerWidth - insets.left - insets.right) + pixel,\n            \"height\": (innerHeight - insets.top - insets.bottom) + pixel\n          });\n        }\n\n        input.setStyles({\n          \"width\": innerWidth + pixel,\n          \"height\": innerHeight + pixel\n        });\n\n        this._renderContentElement(innerHeight, input);\n\n      }\n\n      if (changes.position) {\n        if (this.__useQxPlaceholder) {\n          this._getPlaceholderElement().setStyles({\n            \"left\": left + pixel,\n            \"top\": top + pixel\n          });\n        }\n      }\n    },\n\n\n    /**\n     * Hook into {@link qx.ui.form.AbstractField#renderLayout} method.\n     * Called after the contentElement has a width and an innerWidth.\n     *\n     * Note: This was introduced to fix BUG#1585\n     *\n     * @param innerHeight {Integer} The inner height of the element.\n     * @param element {Element} The element.\n     */\n    _renderContentElement : function(innerHeight, element) {\n      //use it in child classes\n    },\n\n\n    // overridden\n    _createContentElement : function()\n    {\n      // create and add the input element\n      var el = this._createInputElement();\n\n      // initialize the html input\n      el.setSelectable(this.getSelectable());\n      el.setEnabled(this.getEnabled());\n\n      // Add listener for input event\n      el.addListener(\"input\", this._onHtmlInput, this);\n\n      // Disable HTML5 spell checking\n      el.setAttribute(\"spellcheck\", \"false\");\n      el.addClass(\"qx-abstract-field\");\n\n      // IE8 in standard mode needs some extra love here to receive events.\n      if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\") &&\n        (qx.core.Environment.get(\"browser.documentmode\") == 8)) {\n        el.setStyles({\n          backgroundImage: \"url(\" + qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\") + \")\"\n        });\n      }\n\n      return el;\n    },\n\n\n    // overridden\n    _applyEnabled : function(value, old)\n    {\n      this.base(arguments, value, old);\n\n      this.getContentElement().setEnabled(value);\n\n      if (this.__useQxPlaceholder) {\n        if (value) {\n          this._showPlaceholder();\n        } else {\n          this._removePlaceholder();\n        }\n      } else {\n        var input = this.getContentElement();\n        // remove the placeholder on disabled input elements\n        input.setAttribute(\"placeholder\", value ? this.getPlaceholder() : \"\");\n      }\n    },\n\n\n    // default text sizes\n    /**\n     * @lint ignoreReferenceField(__textSize)\n     */\n    __textSize :\n    {\n      width : 16,\n      height : 16\n    },\n\n\n    // overridden\n    _getContentHint : function()\n    {\n      return {\n        width : this.__textSize.width * 10,\n        height : this.__textSize.height || 16\n      };\n    },\n\n\n    // overridden\n    _applyFont : function(value, old)\n    {\n      if (old && this.__font && this.__webfontListenerId) {\n        this.__font.removeListenerById(this.__webfontListenerId);\n        this.__webfontListenerId = null;\n      }\n\n      // Apply\n      var styles;\n      if (value)\n      {\n        this.__font = qx.theme.manager.Font.getInstance().resolve(value);\n        if (this.__font instanceof qx.bom.webfonts.WebFont) {\n          this.__webfontListenerId = this.__font.addListener(\"changeStatus\", this._onWebFontStatusChange, this);\n        }\n        styles = this.__font.getStyles();\n      }\n      else\n      {\n        styles = qx.bom.Font.getDefaultStyles();\n      }\n\n      // check if text color already set - if so this local value has higher priority\n      if (this.getTextColor() != null) {\n        delete styles[\"color\"];\n      }\n\n      // apply the font to the content element\n      // IE 8 - 10 (but not 11 Preview) will ignore the lineHeight value\n      // unless it's applied directly.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 11)\n      {\n        qx.html.Element.flush();\n        this.getContentElement().setStyles(styles, true);\n      } else {\n        this.getContentElement().setStyles(styles);\n      }\n\n      // the font will adjust automatically on native placeholders\n      if (this.__useQxPlaceholder) {\n        // don't apply the color to the placeholder\n        delete styles[\"color\"];\n        // apply the font to the placeholder\n        this._getPlaceholderElement().setStyles(styles);\n      }\n\n      // Compute text size\n      if (value) {\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\n      } else {\n        delete this.__textSize;\n      }\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    // overridden\n    _applyTextColor : function(value, old)\n    {\n      if (value) {\n        this.getContentElement().setStyle(\n          \"color\", qx.theme.manager.Color.getInstance().resolve(value)\n        );\n      } else {\n        this.getContentElement().removeStyle(\"color\");\n      }\n    },\n\n\n    // property apply\n    _applyMaxLength : function(value, old) {\n      if (value) {\n        this.getContentElement().setAttribute(\"maxLength\", value);\n      } else {\n        this.getContentElement().removeAttribute(\"maxLength\");\n      }\n    },\n\n\n    // overridden\n    tabFocus : function() {\n      this.base(arguments);\n\n      this.selectAllText();\n    },\n\n    /**\n     * Returns the text size.\n     * @return {Map} The text size.\n     */\n    _getTextSize : function() {\n      return this.__textSize;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for native input events. Redirects the event\n     * to the widget. Also checks for the filter and max length.\n     *\n     * @param e {qx.event.type.Data} Input event\n     */\n    _onHtmlInput : function(e)\n    {\n      var value = e.getData();\n      var fireEvents = true;\n\n      this.__nullValue = false;\n\n      // value unchanged; Firefox fires \"input\" when pressing ESC [BUG #5309]\n      if (this.__oldInputValue && this.__oldInputValue === value) {\n        fireEvents = false;\n      }\n\n      // check for the filter\n      if (this.getFilter() != null)\n      {\n        var filteredValue = this._validateInput(value);\n        if (filteredValue != value)\n        {\n          fireEvents = this.__oldInputValue !== filteredValue;\n          value = filteredValue;\n          this.getContentElement().setValue(value);\n        }\n      }\n      // fire the events, if necessary\n      if (fireEvents)\n      {\n        // store the old input value\n        this.fireDataEvent(\"input\", value, this.__oldInputValue);\n        this.__oldInputValue = value;\n\n        // check for the live change event\n        if (this.getLiveUpdate()) {\n          this.__fireChangeValueEvent(value);\n        }\n      }\n    },\n\n    /**\n     * Triggers text size recalculation after a web font was loaded\n     *\n     * @param ev {qx.event.type.Data} \"changeStatus\" event\n     */\n    _onWebFontStatusChange : function(ev)\n    {\n      if (ev.getData().valid === true) {\n        var styles = this.__font.getStyles();\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n\n    /**\n     * Handles the firing of the changeValue event including the local cache\n     * for sending the old value in the event.\n     *\n     * @param value {String} The new value.\n     */\n    __fireChangeValueEvent : function(value) {\n      var old = this.__oldValue;\n      this.__oldValue = value;\n      if (old != value) {\n        this.fireNonBubblingEvent(\n          \"changeValue\", qx.event.type.Data, [value, old]\n        );\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD VALUE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the value of the textfield to the given value.\n     *\n     * @param value {String} The new value\n     */\n    setValue : function(value)\n    {\n      if (this.isDisposed()) {\n        return null;\n      }\n      \n      // handle null values\n      if (value === null) {\n        // just do nothing if null is already set\n        if (this.__nullValue) {\n          return value;\n        }\n        value = \"\";\n        this.__nullValue = true;\n      } else {\n        this.__nullValue = false;\n        // native placeholders will be removed by the browser\n        if (this.__useQxPlaceholder) {\n          this._removePlaceholder();\n        }\n      }\n\n      if (qx.lang.Type.isString(value))\n      {\n        var elem = this.getContentElement();\n        if (elem.getValue() != value)\n        {\n          var oldValue = elem.getValue();\n          elem.setValue(value);\n          var data = this.__nullValue ? null : value;\n          this.__oldValue = oldValue;\n          this.__fireChangeValueEvent(data);\n          // reset the input value on setValue calls [BUG #6892]\n          this.__oldInputValue = this.__oldValue;\n        }\n        // native placeholders will be shown by the browser\n        if (this.__useQxPlaceholder) {\n          this._showPlaceholder();\n        }\n        return value;\n      }\n      throw new Error(\"Invalid value type: \" + value);\n    },\n\n\n    /**\n     * Returns the current value of the textfield.\n     *\n     * @return {String|null} The current value\n     */\n    getValue : function() {\n      return (this.isDisposed() || this.__nullValue) ? null : this.getContentElement().getValue();\n    },\n\n\n    /**\n     * Resets the value to the default\n     */\n    resetValue : function() {\n      this.setValue(null);\n    },\n\n\n    /**\n     * Event listener for change event of content element\n     *\n     * @param e {qx.event.type.Data} Incoming change event\n     */\n    _onChangeContent : function(e)\n    {\n      this.__nullValue = e.getData() === null;\n      this.__fireChangeValueEvent(e.getData());\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {String|null}\n     */\n    getTextSelection : function() {\n      return this.getContentElement().getTextSelection();\n    },\n\n\n    /**\n     * Returns the current selection length.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength : function() {\n      return this.getContentElement().getTextSelectionLength();\n    },\n\n\n    /**\n     * Returns the start of the text selection\n     *\n     * @return {Integer|null} Start of selection or null if not available\n     */\n    getTextSelectionStart : function() {\n      return this.getContentElement().getTextSelectionStart();\n    },\n\n\n    /**\n     * Returns the end of the text selection\n     *\n     * @return {Integer|null} End of selection or null if not available\n     */\n    getTextSelectionEnd : function() {\n      return this.getContentElement().getTextSelectionEnd();\n    },\n\n\n    /**\n     * Set the selection to the given start and end (zero-based).\n     * If no end value is given the selection will extend to the\n     * end of the textfield's content.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @param start {Integer} start of the selection (zero-based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection : function(start, end) {\n      this.getContentElement().setTextSelection(start, end);\n    },\n\n\n    /**\n     * Clears the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     */\n    clearTextSelection : function() {\n      this.getContentElement().clearTextSelection();\n    },\n\n\n    /**\n     * Selects the whole content\n     *\n     */\n    selectAllText : function() {\n      this.setTextSelection(0);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PLACEHOLDER HELPERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    setLayoutParent : function(parent)\n    {\n      this.base(arguments, parent);\n      if (this.__useQxPlaceholder) {\n        if (parent) {\n          this.getLayoutParent().getContentElement().add(this._getPlaceholderElement());\n        } else {\n          var placeholder = this._getPlaceholderElement();\n          placeholder.getParent().remove(placeholder);\n        }\n      }\n    },\n\n\n    /**\n     * Helper to show the placeholder text in the field. It checks for all\n     * states and possible conditions and shows the placeholder only if allowed.\n     */\n    _showPlaceholder : function()\n    {\n      var fieldValue = this.getValue() || \"\";\n      var placeholder = this.getPlaceholder();\n      if (\n        placeholder != null &&\n        fieldValue == \"\" &&\n        !this.hasState(\"focused\") &&\n        !this.hasState(\"disabled\")\n      )\n      {\n        if (this.hasState(\"showingPlaceholder\"))\n        {\n          this._syncPlaceholder();\n        }\n        else\n        {\n          // the placeholder will be set as soon as the appearance is applied\n          this.addState(\"showingPlaceholder\");\n        }\n      }\n    },\n\n\n    /**\n     * Remove the fake placeholder\n     */\n    _onPointerDownPlaceholder : function() {\n      window.setTimeout(function() {\n        this.focus();\n      }.bind(this), 0);\n    },\n\n\n    /**\n     * Helper to remove the placeholder. Deletes the placeholder text from the\n     * field and removes the state.\n     */\n    _removePlaceholder: function() {\n      if (this.hasState(\"showingPlaceholder\")) {\n        if (this.__useQxPlaceholder) {\n          this._getPlaceholderElement().setStyle(\"visibility\", \"hidden\");\n        }\n        this.removeState(\"showingPlaceholder\");\n      }\n    },\n\n\n    /**\n     * Updates the placeholder text with the DOM\n     */\n    _syncPlaceholder : function ()\n    {\n      if (this.hasState(\"showingPlaceholder\") && this.__useQxPlaceholder) {\n        this._getPlaceholderElement().setStyle(\"visibility\", \"visible\");\n      }\n    },\n\n\n    /**\n     * Returns the placeholder label and creates it if necessary.\n     */\n    _getPlaceholderElement : function()\n    {\n      if (this._placeholder == null) {\n        // create the placeholder\n        this._placeholder = new qx.html.Label();\n        var colorManager = qx.theme.manager.Color.getInstance();\n        this._placeholder.setStyles({\n          \"zIndex\" : 11,\n          \"position\" : \"absolute\",\n          \"color\" : colorManager.resolve(\"text-placeholder\"),\n          \"whiteSpace\": \"normal\", // enable wrap by default\n          \"cursor\": \"text\",\n          \"visibility\" : \"hidden\"\n        });\n\n        this._placeholder.addListener(\"pointerdown\", this._onPointerDownPlaceholder, this);\n      }\n      return this._placeholder;\n    },\n\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale : qx.core.Environment.select(\"qx.dynlocale\",\n    {\n      \"true\" : function(e)\n      {\n        var content = this.getPlaceholder();\n        if (content && content.translate) {\n          this.setPlaceholder(content.translate());\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    _onChangeTheme : function() {\n      this.base(arguments);\n      if (this._placeholder) {\n        // delete the placeholder element because it uses a theme dependent color\n        this._placeholder.dispose();\n        this._placeholder = null;\n      }\n      if (!this.__useQxPlaceholder && qx.ui.form.AbstractField.__stylesheet) {\n        qx.bom.Stylesheet.removeSheet(qx.ui.form.AbstractField.__stylesheet);\n        qx.ui.form.AbstractField.__stylesheet = null;\n        qx.ui.form.AbstractField.__addPlaceholderRules();\n      }\n    },\n\n    /**\n     * Validates the the input value.\n     * \n     * @param value {Object} The value to check\n     * @returns The checked value\n     */\n    _validateInput : function(value) {\n      var filteredValue = value;\n      var filter = this.getFilter();\n\n      // If no filter is set return just the value\n      if (filter !== null) {\n        filteredValue = \"\";\n        var index = value.search(filter);\n        var processedValue = value;\n\n        while((index >= 0) && (processedValue.length > 0)) {\n          filteredValue = filteredValue + (processedValue.charAt(index));\n          processedValue = processedValue.substring(index + 1, processedValue.length);\n          index = processedValue.search(filter);\n        }\n      }\n\n      return filteredValue;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyPlaceholder : function(value, old)\n    {\n      if (this.__useQxPlaceholder) {\n        this._getPlaceholderElement().setValue(value);\n        if (value != null) {\n          this.addListener(\"focusin\", this._removePlaceholder, this);\n          this.addListener(\"focusout\", this._showPlaceholder, this);\n          this._showPlaceholder();\n        } else {\n          this.removeListener(\"focusin\", this._removePlaceholder, this);\n          this.removeListener(\"focusout\", this._showPlaceholder, this);\n          this._removePlaceholder();\n        }\n      } else {\n        // only apply if the widget is enabled\n        if (this.getEnabled()) {\n          this.getContentElement().setAttribute(\"placeholder\", value);\n\n          if (qx.core.Environment.get(\"browser.name\") === \"firefox\" &&\n              parseFloat(qx.core.Environment.get(\"browser.version\")) < 36 &&\n              this.getContentElement().getNodeName() === \"textarea\" &&\n              !this.getContentElement().getDomElement())\n          {\n            /* qx Bug #8870: Firefox 35 will not display a text area's\n               placeholder text if the attribute is set before the\n               element is added to the DOM. This is fixed in FF 36. */\n            this.addListenerOnce(\"appear\", function() {\n              this.getContentElement().getDomElement().removeAttribute(\"placeholder\");\n              this.getContentElement().getDomElement().setAttribute(\"placeholder\", value);\n            }, this);\n          }\n        }\n      }\n    },\n\n\n    // property apply\n    _applyTextAlign : function(value, old) {\n      this.getContentElement().setStyle(\"textAlign\", value);\n    },\n\n\n    // property apply\n    _applyReadOnly : function(value, old)\n    {\n      var element = this.getContentElement();\n\n      element.setAttribute(\"readOnly\", value);\n\n      if (value)\n      {\n        this.addState(\"readonly\");\n        this.setFocusable(false);\n      }\n      else\n      {\n        this.removeState(\"readonly\");\n        this.setFocusable(true);\n      }\n    }\n\n  },\n\n\n  defer : function(statics) {\n    var css = \"border: none;\" +\n      \"padding: 0;\" +\n      \"margin: 0;\" +\n      \"display : block;\" +\n      \"background : transparent;\" +\n      \"outline: none;\" +\n      \"appearance: none;\" +\n      \"position: absolute;\" +\n      \"autoComplete: off;\" +\n      \"resize: none;\" +\n      \"border-radius: 0;\";\n\n    qx.ui.style.Stylesheet.getInstance().addRule(\".qx-abstract-field\", css);\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n  destruct : function()\n  {\n    if (this._placeholder) {\n      this._placeholder.removeListener(\"pointerdown\", this._onPointerDownPlaceholder, this);\n      var parent = this._placeholder.getParent();\n      if (parent) {\n        parent.remove(this._placeholder);\n      }\n      this._placeholder.dispose();\n    }\n\n    this._placeholder = this.__font = null;\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n\n    if (this.__font && this.__webfontListenerId) {\n      this.__font.removeListenerById(this.__webfontListenerId);\n    }\n\n    this.getContentElement().removeListener(\"input\", this._onHtmlInput, this);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * The TextField is a single-line text input field.\n */\nqx.Class.define(\"qx.ui.form.TextField\",\n{\n  extend : qx.ui.form.AbstractField,\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"textfield\"\n    },\n\n    // overridden\n    allowGrowY :\n    {\n      refine : true,\n      init : false\n    },\n\n    // overridden\n    allowShrinkY :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n  members : {\n\n    // overridden\n    _renderContentElement : function(innerHeight, element) {\n     if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\") &&\n         (parseInt(qx.core.Environment.get(\"engine.version\"), 10) < 9\n         || qx.core.Environment.get(\"browser.documentmode\") < 9))\n     {\n       element.setStyles({\n         \"line-height\" : innerHeight + 'px'\n       });\n     }\n    },\n\n\n    // overridden\n    _createContentElement : function() {\n      var el = this.base(arguments);\n      var deviceType = qx.core.Environment.get(\"device.type\");\n      if (deviceType == \"tablet\" || deviceType == \"mobile\") {\n        el.addListener(\"keypress\", this._onKeyPress, this);\n      }\n\n      return el;\n    },\n\n\n    /**\n    * Close the virtual keyboard if the Enter key is pressed.\n    * @param evt {qx.event.type.KeySequence} the keypress event.\n    */\n    _onKeyPress : function(evt) {\n      // On return\n      if (evt.getKeyIdentifier() == \"Enter\") {\n        if (this.isFocusable()) {\n          this.blur();\n        }\n        else {\n           // When the text field is not focusable, blur() will raise an exception on\n           // touch devices and the virtual keyboard is not closed. To work around this\n           // issue, we're enabling the focus just for the blur() call.\n           this.setFocusable(true);\n           this.blur();\n           this.setFocusable(false);\n        }\n      }\n    }\n  },\n\n  destruct : function() {\n    this.getContentElement().removeListener(\"keypress\", this._onKeyPress, this);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * This static class contains a set of default validators.\n * These validators are listed twice\n * <ul>\n *   <li>number</li>\n *   <li>email</li>\n *   <li>string</li>\n *   <li>url</li>\n *   <li>color</li>\n * </ul>\n * All these validators don't need an input so the listed function just return a\n * method fitting for the use in the property system.\n * The methods with the check prefix are the returned methods and can be used in\n * other contexts without the property system.\n *\n * There are three more validators\n * <ul>\n *   <li>range</li>\n *   <li>inArray</li>\n *   <li>regExp</li>\n * </ul>\n * These methods do need some addition parameters to specify the validator. So\n * there is no check function which you can use in other contexts because the\n * check function for the validation is created based on the given parameter.\n *\n * *Example usage for a property*\n *\n * <code>validate: qx.util.Validate.number()</code>\n * <br>\n * <code>validate: qx.util.Validate.range(0, 100)</code>\n *\n * Because the methods without the check prefix return a validation method,\n * the function must be called at the property definition. So don't forget the\n * ending brackets for those methods without parameters!\n * For the correct usage, take an additional look at the documentation of the\n * {@link qx.core.Property} class.\n */\nqx.Class.define(\"qx.util.Validate\",\n{\n  statics :\n  {\n    /**\n     * Returns the function that checks for a number.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkNumber} Function.\n     */\n    number : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkNumber(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is a number.\n     * If not, an ValidationError will be thrown.\n     * If you want to use the number check in a property definition,\n     * use the {@link #number} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?undefined} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not a\n     *    finite number\n     */\n    checkNumber : function(value, formItem, errorMessage)\n    {\n      errorMessage = errorMessage ||\n        qx.locale.Manager.tr(\"%1 is not a number.\", value);\n\n      if ((typeof value !== \"number\" && (!(value instanceof Number)))\n        || (!(isFinite(value))))\n      {\n        throw new qx.core.ValidationError(\"Validation Error\", errorMessage);\n      }\n    },\n\n\n    /**\n     * Returns the function that checks for an email address.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkEmail} Function.\n     */\n    email : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkEmail(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is an email address.\n     * If not, an ValidationError will be thrown.\n     * If you want to use the email check in a property definition,\n     * use the {@link #email} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?null} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not\n     *    a valid email address.\n     */\n    checkEmail : function(value, formItem, errorMessage)\n    {\n      errorMessage = errorMessage ||\n        qx.locale.Manager.tr(\"'%1' is not an email address.\", (value || \"\"));\n\n      var reg = /^([A-Za-z0-9_\\-.+])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,})$/;\n      if (reg.test(value) === false) {\n        throw new qx.core.ValidationError(\"Validation Error\",errorMessage);\n      }\n    },\n\n\n    /**\n     * Returns the function that checks for a string.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkString} Function.\n     */\n    string : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkString(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is a string.\n     * If not, an ValidationError will be thrown.\n     * If you want to use the string check in a property definition,\n     * use the {@link #string} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?null} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not a string.\n     */\n    checkString : function(value, formItem, errorMessage)\n    {\n      errorMessage = errorMessage ||\n        qx.locale.Manager.tr(\"%1 is not a string.\", value);\n\n      if (typeof value !== \"string\" && (!(value instanceof String))) {\n        throw new qx.core.ValidationError(\"Validation Error\", errorMessage);\n      }\n    },\n\n\n    /**\n     * Returns the function that checks for an url.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkUrl} Function.\n     */\n    url : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkUrl(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is an url.\n     * If not, an ValidationError will be thrown.\n     * If you want to use the url check in a property definition,\n     * use the {@link #url} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?null} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not an url.\n     */\n    checkUrl : function(value, formItem, errorMessage)\n    {\n      errorMessage = errorMessage ||\n        qx.locale.Manager.tr(\"%1 is not an url.\", value);\n\n      var reg =  /([A-Za-z0-9])+:\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n      if (!reg.test(value)) {\n        throw new qx.core.ValidationError(\"Validation Error\", errorMessage);\n      }\n    },\n\n\n    /**\n     * Returns the function that checks for a color.\n     *\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} The {@link #checkColor} Function.\n     */\n    color : function(errorMessage) {\n      return function(value) {\n        qx.util.Validate.checkColor(value, null, errorMessage);\n      };\n    },\n\n\n    /**\n     * The function checks the incoming value to see if it is a color.\n     * If not, an ValidationError will be thrown. The check itself will be\n     * delegated to the {@link qx.util.ColorUtil#stringToRgb} method.\n     * If you want to use the color check in a property definition,\n     * use the {@link #color} method.\n     *\n     * @param value {var} The value to check.\n     * @param formItem {qx.ui.form.IForm} The form item to check if used in a\n     *   {@link qx.ui.form.Form}.\n     * @param errorMessage {String?null} Custom error message.\n     * @throws {qx.core.ValidationError} If the value parameter is not a color.\n     */\n    checkColor : function(value, formItem, errorMessage)\n    {\n      try {\n        qx.util.ColorUtil.stringToRgb(value);\n      } catch (e) {\n        var message = errorMessage ||\n          qx.locale.Manager.tr(\"%1 is not a color! %2\", value, e);\n        throw new qx.core.ValidationError(\"Validation Error\", message);\n      }\n    },\n\n\n    /**\n     * Returns a function that checks if the number is in the given range.\n     * The range includes the border values.\n     * A range from 1 to 2 accepts the values 1 equally as everything up to 2\n     * including the 2.\n     * If the value given to the returned function is out of the range, a\n     * ValidationError will be thrown.\n     *\n     * @param from {Number} The lower border of the range.\n     * @param to {Number} The upper border of the range.\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} A function taking one parameter (value).\n     */\n    range : function(from, to, errorMessage)\n    {\n      return function(value)\n      {\n        var message = errorMessage ||\n          qx.locale.Manager.tr(\"%1 is not in the range from [%2, %3].\", value, from, to);\n\n        if (value < from || value > to) {\n          throw new qx.core.ValidationError(\"Validation Error\", message);\n        }\n      };\n    },\n\n\n    /**\n     * Returns a function that checks if the given value is in the array.\n     * If the value given to the returned function is not in the array, a\n     * ValidationError will be thrown.\n     *\n     * @param array {Array} The array holding the possibilities.\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} A function taking one parameter (value).\n     */\n    inArray : function(array, errorMessage)\n    {\n      return function(value)\n      {\n        var message = errorMessage ||\n          qx.locale.Manager.tr(\"%1 is not in %2\", value, array);\n\n        if (array.indexOf(value) === -1) {\n          throw new qx.core.ValidationError(\"Validation Error\", message);\n        }\n      };\n    },\n\n\n    /**\n     * Returns a function that checks if the given value fits the RegExp.\n     * For testing, the function uses the RegExp.test function.\n     * If the value given to the returned function does not fit the RegExp, a\n     * ValidationError will be thrown.\n     * incoming\n     * @param reg {RegExp} The RegExp for the check.\n     * @param errorMessage {String?null} Custom error message.\n     * @return {Function} A function taking one parameter (value).\n     */\n    regExp : function(reg, errorMessage)\n    {\n      return function(value)\n      {\n        var message = errorMessage ||\n          qx.locale.Manager.tr(\"%1 does not fit %2.\", value, reg);\n\n        if (!reg.test(value)) {\n          throw new qx.core.ValidationError(\"Validation Error\", message);\n        }\n      };\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A password input field, which hides the entered text.\n */\nqx.Class.define(\"qx.ui.form.PasswordField\",\n{\n  extend : qx.ui.form.TextField,\n\n  members :\n  {\n    // overridden\n    _createInputElement : function() {\n      return new qx.html.Input(\"password\");\n    }\n  }\n});\n"
  ]
}