{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/list/List.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-53.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The <code>qx.ui.list.List</code> is based on the virtual infrastructure and\n * supports filtering, sorting, grouping, single selection, multi selection,\n * data binding and custom rendering.\n *\n * Using the virtual infrastructure has considerable advantages when there is a\n * huge amount of model items to render because the virtual infrastructure only\n * creates widgets for visible items and reuses them. This saves both creation\n * time and memory.\n *\n * With the {@link qx.ui.list.core.IListDelegate} interface it is possible\n * to configure the list's behavior (item and group renderer configuration,\n * filtering, sorting, grouping, etc.).\n *\n * Here's an example of how to use the widget:\n * <pre class=\"javascript\">\n * //create the model data\n * var rawData = [];\n * for (var i = 0; i < 2500; i++) {\n *  rawData[i] = \"Item No \" + i;\n * }\n * var model = qx.data.marshal.Json.createModel(rawData);\n *\n * //create the list\n * var list = new qx.ui.list.List(model);\n *\n * //configure the lists's behavior\n * var delegate = {\n *   sorter : function(a, b) {\n *     return a > b ? 1 : a < b ? -1 : 0;\n *   }\n * };\n * list.setDelegate(delegate);\n *\n * //Pre-Select \"Item No 20\"\n * list.getSelection().push(model.getItem(20));\n *\n * //log selection changes\n * list.getSelection().addListener(\"change\", function(e) {\n *   this.debug(\"Selection: \" + list.getSelection().getItem(0));\n * }, this);\n * </pre>\n *\n * @childControl row-layer {qx.ui.virtual.layer.Row} layer for all rows\n */\nqx.Class.define(\"qx.ui.list.List\",\n{\n  extend : qx.ui.virtual.core.Scroller,\n  include : [qx.ui.virtual.selection.MModel],\n  implement : qx.data.controller.ISelection,\n\n  /**\n   * Creates the <code>qx.ui.list.List</code> with the passed model.\n   *\n   * @param model {qx.data.IListData|null?} model for the list.\n   */\n  construct : function(model)\n  {\n    this.base(arguments, 0, 1, 20, 100);\n\n    this._init();\n\n    this.__defaultGroups = new qx.data.Array();\n    this.initGroups(this.__defaultGroups);\n\n    if(model != null) {\n      this.initModel(model);\n    }\n\n    this.initItemHeight();\n  },\n\n\n  events :\n  {\n    /**\n     * Fired when the length of {@link #model} changes.\n     */\n    \"changeModelLength\" : \"qx.event.type.Data\"\n  },\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"virtual-list\"\n    },\n\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    // overridden\n    width :\n    {\n      refine : true,\n      init : 100\n    },\n\n\n    // overridden\n    height :\n    {\n      refine : true,\n      init : 200\n    },\n\n\n    /** Data array containing the data which should be shown in the list. */\n    model :\n    {\n      check : \"qx.data.IListData\",\n      apply : \"_applyModel\",\n      event: \"changeModel\",\n      nullable : true,\n      deferredInit : true\n    },\n\n\n    /** Default item height */\n    itemHeight :\n    {\n      check : \"Integer\",\n      init : 25,\n      apply : \"_applyRowHeight\",\n      themeable : true\n    },\n\n\n    /** Group item height */\n    groupItemHeight :\n    {\n      check : \"Integer\",\n      init : null,\n      nullable : true,\n      apply : \"_applyGroupRowHeight\",\n      themeable : true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a label. This is only needed if objects are stored in the\n     * model.\n     */\n    labelPath :\n    {\n      check: \"String\",\n      apply: \"_applyLabelPath\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as an icon. This is only needed if objects are stored in the\n     * model and icons should be displayed.\n     */\n    iconPath :\n    {\n      check: \"String\",\n      apply: \"_applyIconPath\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a group label. This is only needed if objects are stored in the\n     * model.\n     */\n    groupLabelPath :\n    {\n      check: \"String\",\n      apply: \"_applyGroupLabelPath\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions :\n    {\n      apply: \"_applyLabelOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions :\n    {\n      apply: \"_applyIconOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the group label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    groupLabelOptions :\n    {\n      apply: \"_applyGroupLabelOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * Delegation object which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     */\n    delegate :\n    {\n      apply: \"_applyDelegate\",\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    },\n\n\n    /**\n     * Indicates that the list is managing the {@link #groups} automatically.\n     */\n    autoGrouping :\n    {\n      check: \"Boolean\",\n      init: true\n    },\n\n\n    /**\n     * Contains all groups for data binding, but do only manipulate the array\n     * when the {@link #autoGrouping} is set to <code>false</code>.\n     */\n    groups :\n    {\n      check: \"qx.data.Array\",\n      event: \"changeGroups\",\n      nullable: false,\n      deferredInit: true\n    },\n\n\n    /** \n     * Render list items with variable height, \n     * calculated from the individual item size. \n     */\n    variableItemHeight :\n    {\n      check : \"Boolean\",\n      apply : \"_applyVariableItemHeight\",\n      nullable : false,\n      init : true\n    }\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.virtual.layer.Row} background renderer */\n    _background : null,\n\n\n    /** @type {qx.ui.list.provider.IListProvider} provider for cell rendering */\n    _provider : null,\n\n\n    /** @type {qx.ui.virtual.layer.Abstract} layer which contains the items. */\n    _layer : null,\n\n\n    /**\n     * @type {Array} lookup table to get the model index from a row. To get the\n     *   correct value after applying filter, sorter, group.\n     *\n     * Note the value <code>-1</code> indicates that the value is a group item.\n     */\n    __lookupTable : null,\n\n\n    /** @type {Array} lookup table for getting the group index from the row */\n    __lookupTableForGroup : null,\n\n\n    /**\n     * @type {Map} contains all groups with the items as children. The key is\n     *   the group name and the value is an <code>Array</code> containing each\n     *   item's model index.\n     */\n    __groupHashMap : null,\n\n\n    /**\n     * @type {Boolean} indicates when one or more <code>String</code> are used for grouping.\n     */\n    __groupStringsUsed : false,\n\n\n    /**\n     * @type {Boolean} indicates when one or more <code>Object</code> are used for grouping.\n     */\n    __groupObjectsUsed : false,\n\n\n    /**\n     * @type {Boolean} indicates when a default group is used for grouping.\n     */\n    __defaultGroupUsed : false,\n\n    __defaultGroups : null,\n\n    __deferredLayerUpdate : null,\n\n\n    /**\n     * Trigger a rebuild from the internal data structure.\n     */\n    refresh : function() {\n      this.__buildUpLookupTable();\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"row-layer\" :\n          control = new qx.ui.virtual.layer.Row(null, null);\n          break;\n      }\n      return control || this.base(arguments, id);\n    },\n\n\n    /**\n     * Initializes the virtual list.\n     */\n    _init : function()\n    {\n      this._provider = new qx.ui.list.provider.WidgetProvider(this);\n\n      this.__lookupTable = [];\n      this.__lookupTableForGroup = [];\n      this.__groupHashMap = {};\n      this.__groupStringsUsed = false;\n      this.__groupObjectsUsed = false;\n      this.__defaultGroupUsed = false;\n\n      this.getPane().addListener(\"resize\", this._onResize, this);\n\n      this._initBackground();\n      this._initLayer();\n    },\n\n\n    /**\n     * Initializes the background renderer.\n     */\n    _initBackground : function()\n    {\n      this._background = this.getChildControl(\"row-layer\");\n      this.getPane().addLayer(this._background);\n    },\n\n\n    /**\n     * Initializes the layer for rendering.\n     */\n    _initLayer : function()\n    {\n      this._layer = this._provider.createLayer();\n      this._layer.addListener(\"updated\", this._onLayerUpdated, this);\n      this.getPane().addLayer(this._layer);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the model data for the given row.\n     *\n     * @param row {Integer} row to get data for.\n     * @return {var|null} the row's model data.\n     */\n    _getDataFromRow : function(row) {\n      var data = null;\n\n      var model = this.getModel();\n      if (model == null) {\n        return null;\n      }\n\n      if (this._isGroup(row)) {\n        data = this.getGroups().getItem(this._lookupGroup(row));\n      } else {\n        data = model.getItem(this._lookup(row));\n      }\n\n      if (data != null) {\n        return data;\n      } else {\n        return null;\n      }\n    },\n\n\n    /**\n     * Return the internal lookup table. But do not manipulate the\n     * lookup table!\n     *\n     * @return {Array} The internal lookup table.\n     */\n    _getLookupTable : function() {\n      return this.__lookupTable;\n    },\n\n\n    /**\n     * Performs a lookup from row to model index.\n     *\n     * @param row {Number} The row to look at.\n     * @return {Number} The model index or\n     *   <code>-1</code> if the row is a group item.\n     */\n    _lookup : function(row) {\n      return this.__lookupTable[row];\n    },\n\n\n    /**\n     * Performs a lookup from row to group index.\n     *\n     * @param row {Number} The row to look at.\n     * @return {Number} The group index or\n     *   <code>-1</code> if the row is a not a group item.\n     */\n    _lookupGroup : function(row) {\n      return this.__lookupTableForGroup.indexOf(row);\n    },\n\n\n    /**\n     * Performs a lookup from model index to row.\n     *\n     * @param index {Number} The index to look at.\n     * @return {Number} The row or <code>-1</code>\n     *  if the index is not a model index.\n     */\n    _reverseLookup : function(index) {\n      if (index < 0) {\n        return -1;\n      }\n      return this.__lookupTable.indexOf(index);\n    },\n\n\n    /**\n     * Checks if the passed row is a group or an item.\n     *\n     * @param row {Integer} row to check.\n     * @return {Boolean} <code>true</code> if the row is a group element,\n     *  <code>false</code> if the row is an item element.\n     */\n    _isGroup : function(row) {\n      return this._lookup(row) == -1;\n    },\n\n\n    /**\n     * Returns the selectable model items.\n     *\n     * @return {qx.data.Array | null} The selectable items.\n     */\n    _getSelectables : function() {\n      return this.getModel();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // apply method\n    _applyModel : function(value, old)\n    {\n      if (value != null) {\n        value.addListener(\"changeLength\", this._onModelChange, this);\n      }\n\n      if (old != null) {\n        old.removeListener(\"changeLength\", this._onModelChange, this);\n      }\n\n      this._onModelChange();\n    },\n\n\n    // apply method\n    _applyRowHeight : function(value, old) {\n      this.getPane().getRowConfig().setDefaultItemSize(value);\n    },\n\n    // apply method\n    _applyGroupRowHeight : function(value, old) {\n      this.__updateGroupRowHeight();\n    },\n\n    // apply method\n    _applyLabelPath : function(value, old) {\n      this._provider.setLabelPath(value);\n    },\n\n\n    // apply method\n    _applyIconPath : function(value, old) {\n      this._provider.setIconPath(value);\n    },\n\n\n    // apply method\n    _applyGroupLabelPath : function(value, old) {\n      this._provider.setGroupLabelPath(value);\n    },\n\n\n    // apply method\n    _applyLabelOptions : function(value, old) {\n      this._provider.setLabelOptions(value);\n    },\n\n\n    // apply method\n    _applyIconOptions : function(value, old) {\n      this._provider.setIconOptions(value);\n    },\n\n\n    // apply method\n    _applyGroupLabelOptions : function(value, old) {\n      this._provider.setGroupLabelOptions(value);\n    },\n\n\n    // apply method\n    _applyDelegate : function(value, old) {\n      this._provider.setDelegate(value);\n      this.__buildUpLookupTable();\n    },\n\n\n    // property apply\n    _applyVariableItemHeight : function(value, old) {\n      if(value) {\n        this._setRowItemSize();\n      }\n      else {\n        this.getPane().getRowConfig().resetItemSizes();\n        this.getPane().fullUpdate();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the resize event.\n     *\n     * @param e {qx.event.type.Data} resize event.\n     */\n    _onResize : function(e) {\n      this.getPane().getColumnConfig().setItemSize(0, e.getData().width);\n    },\n\n\n    /**\n     * Event handler for the model change event.\n     *\n     * @param e {qx.event.type.Data} model change event.\n     */\n    _onModelChange : function(e) {\n      // we have to remove the bindings before we rebuild the lookup table\n      // otherwise bindings might be dispatched to wrong items\n      // see: https://github.com/qooxdoo/qooxdoo/issues/196\n      this._provider.removeBindings();\n      this.__buildUpLookupTable();\n      this._applyDefaultSelection();\n\n      if (e instanceof qx.event.type.Data) {\n        this.fireDataEvent(\"changeModelLength\", e.getData(), e.getOldData());\n      }\n    },\n\n\n    /**\n     * Event handler for the updated event of the \n     * qx.ui.virtual.layer.WidgetCell layer.\n     *\n     * Recalculates the item sizes in a deffered call,\n     * which only happens if we have variable item heights\n     */\n    _onLayerUpdated: function () {\n      if (this.isVariableItemHeight() === false) {\n        return;\n      }\n\n      if (this.__deferredLayerUpdate === null) {\n        this.__deferredLayerUpdate = new qx.util.DeferredCall(function () {\n          this._setRowItemSize();\n        }, this);\n      }\n\n      this.__deferredLayerUpdate.schedule();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Helper method to update the row count.\n     */\n    __updateRowCount : function()\n    {\n      this.getPane().getRowConfig().setItemCount(this.__lookupTable.length);\n      this.getPane().fullUpdate();\n    },\n\n\n    /**\n     * Helper method to update row heights.\n     */\n    __updateGroupRowHeight : function()\n    {\n      var rc = this.getPane().getRowConfig();\n      var gh = this.getGroupItemHeight();\n      rc.resetItemSizes();\n\n      if (gh) {\n        for (var i = 0,l = this.__lookupTable.length; i < l; ++i)\n        {\n          if (this.__lookupTable[i] == -1) {\n            rc.setItemSize(i, gh);\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Internal method for building the lookup table.\n     */\n    __buildUpLookupTable : function()\n    {\n      this.__lookupTable = [];\n      this.__lookupTableForGroup = [];\n      this.__groupHashMap = {};\n\n      if (this.isAutoGrouping()) {\n        this.getGroups().removeAll();\n      }\n\n      var model = this.getModel();\n\n      if (model != null) {\n        this._runDelegateFilter(model);\n        this._runDelegateSorter(model);\n        this._runDelegateGroup(model);\n      }\n\n      this._updateSelection();\n      this.__updateGroupRowHeight();\n      this.__updateRowCount();\n    },\n\n\n    /**\n     * Invokes filtering using the filter given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateFilter : function (model)\n    {\n      var filter = qx.util.Delegate.getMethod(this.getDelegate(), \"filter\");\n\n      for (var i = 0,l = model.length; i < l; ++i)\n      {\n        if (filter == null || filter(model.getItem(i))) {\n          this.__lookupTable.push(i);\n        }\n      }\n    },\n\n\n    /**\n     * Invokes sorting using the sorter given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateSorter : function (model)\n    {\n      if (this.__lookupTable.length == 0) {\n        return;\n      }\n\n      var sorter = qx.util.Delegate.getMethod(this.getDelegate(), \"sorter\");\n\n      if (sorter != null)\n      {\n        this.__lookupTable.sort(function(a, b)\n        {\n          return sorter(model.getItem(a), model.getItem(b));\n        });\n      }\n    },\n\n\n    /**\n     * Invokes grouping using the group result given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateGroup : function (model)\n    {\n      var groupMethod = qx.util.Delegate.getMethod(this.getDelegate(), \"group\");\n\n      if (groupMethod != null)\n      {\n        for (var i = 0,l = this.__lookupTable.length; i < l; ++i)\n        {\n          var index = this.__lookupTable[i];\n          var item = this.getModel().getItem(index);\n          var group = groupMethod(item);\n\n          this.__addGroup(group, index);\n        }\n        this.__lookupTable = this.__createLookupFromGroup();\n      }\n    },\n\n\n    /**\n     * Adds a model index the the group.\n     *\n     * @param group {String|Object|null} the group.\n     * @param index {Integer} model index to add.\n     */\n    __addGroup : function(group, index)\n    {\n      // if group is null add to default group\n      if (group == null)\n      {\n        this.__defaultGroupUsed = true;\n        group = \"???\";\n      }\n\n      var name = this.__getUniqueGroupName(group);\n      if (this.__groupHashMap[name] == null)\n      {\n        this.__groupHashMap[name] = [];\n        if (this.isAutoGrouping()) {\n          this.getGroups().push(group);\n        }\n      }\n      this.__groupHashMap[name].push(index);\n    },\n\n\n    /**\n     * Creates a lookup table form the internal group hash map.\n     *\n     * @return {Array} the lookup table based on the internal group hash map.\n     */\n    __createLookupFromGroup : function()\n    {\n      this.__checkGroupStructure();\n\n      var result = [];\n      var row = 0;\n      var groups = this.getGroups();\n      for (var i = 0; i < groups.getLength(); i++)\n      {\n        var group = groups.getItem(i);\n\n        // indicate that the value is a group\n        result.push(-1);\n        this.__lookupTableForGroup.push(row);\n        row++;\n\n        var key = this.__getUniqueGroupName(group);\n        var groupMembers = this.__groupHashMap[key];\n        if (groupMembers != null)\n        {\n          for (var k = 0; k < groupMembers.length; k++) {\n            result.push(groupMembers[k]);\n            row++;\n          }\n        }\n      }\n      return result;\n    },\n\n\n    /**\n     * Returns an unique group name for the passed group.\n     *\n     * @param group {String|Object} Group to find unique group name.\n     * @return {String} Unique group name.\n     */\n    __getUniqueGroupName : function(group)\n    {\n      var name = null;\n      if (!qx.lang.Type.isString(group))\n      {\n        var index = this.getGroups().indexOf(group);\n        this.__groupObjectsUsed = true;\n\n        name = \"group\";\n        if (index == -1) {\n           name += this.getGroups().getLength();\n        } else {\n          name += index;\n        }\n      }\n      else\n      {\n        this.__groupStringsUsed = true;\n        var name = group;\n      }\n      return name;\n    },\n\n\n    /**\n     * Checks that <code>Object</code> and <code>String</code> are not mixed\n     * as group identifier, otherwise an exception occurs.\n     */\n    __checkGroupStructure : function() {\n      if (this.__groupObjectsUsed && this.__defaultGroupUsed ||\n          this.__groupObjectsUsed && this.__groupStringsUsed)\n      {\n        throw new Error(\"GroupingTypeError: You can't mix 'Objects' and 'Strings' as\" +\n          \" group identifier!\");\n      }\n    },\n\n\n    /**\n     * Get the height of each visible item and set it as the\n     * row size\n     */\n    _setRowItemSize : function() {\n      var rowConfig = this.getPane().getRowConfig();\n      var layer = this._layer;\n      \n      var firstRow = layer.getFirstRow();\n      var lastRow = firstRow + layer.getRowSizes().length;\n\n      for (var row = firstRow; row < lastRow; row++) {\n        var widget = layer.getRenderedCellWidget(row, 0);\n        if (widget !== null) {\n          var height = widget.getSizeHint().height;\n          \n          rowConfig.setItemSize(\n              row,\n              height\n          );\n        }\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._disposeObjects(\"__deferredLayerUpdate\");\n    \n    var model = this.getModel();\n    if (model != null) {\n      model.removeListener(\"changeLength\", this._onModelChange, this);\n    }\n\n    var pane = this.getPane();\n    if (pane != null) {\n      pane.removeListener(\"resize\", this._onResize, this);\n    }\n\n    this._background.dispose();\n    this._provider.dispose();\n    this._layer.dispose();\n    this._background = this._provider = this._layer =\n      this.__lookupTable = this.__lookupTableForGroup =\n      this.__groupHashMap = null;\n\n    if (this.__defaultGroups) {\n      this.__defaultGroups.dispose();\n    }\n  }\n});\n"
  ]
}