{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/core/MContentPadding.js",
    "../transpiled/qx/ui/tabview/TabView.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-14.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This mixin defines the <code>contentPadding</code> property, which is used\n * by widgets like the window or group box, which must have a property, which\n * defines the padding of an inner pane.\n *\n * The including class must implement the method\n * <code>_getContentPaddingTarget</code>, which must return the widget on which\n * the padding should be applied.\n */\nqx.Mixin.define(\"qx.ui.core.MContentPadding\",\n{\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** Top padding of the content pane */\n    contentPaddingTop :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyContentPadding\",\n      themeable : true\n    },\n\n    /** Right padding of the content pane */\n    contentPaddingRight :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyContentPadding\",\n      themeable : true\n    },\n\n    /** Bottom padding of the content pane */\n    contentPaddingBottom :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyContentPadding\",\n      themeable : true\n    },\n\n    /** Left padding of the content pane */\n    contentPaddingLeft :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyContentPadding\",\n      themeable : true\n    },\n\n    /**\n     * The 'contentPadding' property is a shorthand property for setting 'contentPaddingTop',\n     * 'contentPaddingRight', 'contentPaddingBottom' and 'contentPaddingLeft'\n     * at the same time.\n     *\n     * If four values are specified they apply to top, right, bottom and left respectively.\n     * If there is only one value, it applies to all sides, if there are two or three,\n     * the missing values are taken from the opposite side.\n     */\n    contentPadding :\n    {\n      group : [\n        \"contentPaddingTop\", \"contentPaddingRight\",\n        \"contentPaddingBottom\", \"contentPaddingLeft\"\n      ],\n      mode  : \"shorthand\",\n      themeable : true\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * @type {Map} Maps property names of content padding to the setter of the padding\n     *\n     * @lint ignoreReferenceField(__contentPaddingSetter)\n     */\n    __contentPaddingSetter :\n    {\n      contentPaddingTop : \"setPaddingTop\",\n      contentPaddingRight : \"setPaddingRight\",\n      contentPaddingBottom : \"setPaddingBottom\",\n      contentPaddingLeft : \"setPaddingLeft\"\n    },\n\n\n    /**\n     * @type {Map} Maps property names of content padding to the themed setter of the padding\n     *\n     * @lint ignoreReferenceField(__contentPaddingThemedSetter)\n     */\n    __contentPaddingThemedSetter :\n    {\n      contentPaddingTop : \"setThemedPaddingTop\",\n      contentPaddingRight : \"setThemedPaddingRight\",\n      contentPaddingBottom : \"setThemedPaddingBottom\",\n      contentPaddingLeft : \"setThemedPaddingLeft\"\n    },\n\n\n    /**\n     * @type {Map} Maps property names of content padding to the resetter of the padding\n     *\n     * @lint ignoreReferenceField(__contentPaddingResetter)\n     */\n    __contentPaddingResetter :\n    {\n      contentPaddingTop : \"resetPaddingTop\",\n      contentPaddingRight : \"resetPaddingRight\",\n      contentPaddingBottom : \"resetPaddingBottom\",\n      contentPaddingLeft : \"resetPaddingLeft\"\n    },\n\n\n    // property apply\n    _applyContentPadding : function(value, old, name, variant)\n    {\n      var target = this._getContentPaddingTarget();\n\n      if (value == null)\n      {\n        var resetter = this.__contentPaddingResetter[name];\n        target[resetter]();\n      }\n      else\n      {\n        // forward the themed sates if case the apply was invoked by a theme\n        if (variant == \"setThemed\" || variant == \"resetThemed\") {\n          var setter = this.__contentPaddingThemedSetter[name];\n          target[setter](value);\n        } else {\n          var setter = this.__contentPaddingSetter[name];\n          target[setter](value);\n        }\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Weiß (jonathan_rass)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A tab view is a multi page view where only one page is visible\n * at each moment. It is possible to switch the pages using the\n * buttons rendered by each page.\n * \n * Note that prior to v6.0, when changing the currently selected tab via code\n * (ie changing the selection property) TabView would automatically set the \n * focus to that tab; this is undesirable (and inconsistent with other parts\n * of the framework) and is no longer done automatically.\n *\n * @childControl bar {qx.ui.container.SlideBar} slidebar for all tab buttons\n * @childControl pane {qx.ui.container.Stack} stack container to show one tab page\n */\nqx.Class.define(\"qx.ui.tabview.TabView\",\n{\n  extend : qx.ui.core.Widget,\n  implement : qx.ui.core.ISingleSelection,\n  include : [qx.ui.core.MContentPadding],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  /**\n   * @param barPosition {String} Initial bar position ({@link #barPosition})\n   */\n  construct : function(barPosition)\n  {\n    this.base(arguments);\n\n    this.__barPositionToState = {\n      top : \"barTop\",\n      right : \"barRight\",\n      bottom : \"barBottom\",\n      left : \"barLeft\"\n    };\n\n    this._createChildControl(\"bar\");\n    this._createChildControl(\"pane\");\n\n    // Create manager\n    var mgr = this.__radioGroup = this._createRadioGroupInstance();\n    mgr.setWrap(false);\n    mgr.addListener(\"changeSelection\", this._onChangeSelection, this);\n\n    // Initialize bar position\n    if (barPosition != null) {\n      this.setBarPosition(barPosition);\n    } else {\n      this.initBarPosition();\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n\n  events :\n  {\n    /** Fires after the selection was modified */\n    \"changeSelection\" : \"qx.event.type.Data\",\n\n    /** Fires after the value was modified */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"tabview\"\n    },\n\n    /**\n     * This property defines on which side of the TabView the bar should be positioned.\n     */\n    barPosition :\n    {\n      check : [\"left\", \"right\", \"top\", \"bottom\"],\n      init : \"top\",\n      apply : \"_applyBarPosition\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /** @type {qx.ui.form.RadioGroup} instance containing the radio group */\n    __radioGroup : null,\n\n\n    /**\n     * setValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @param item {null|qx.ui.tabview.Page} Page to set as selected value.\n     * @returns {null|TypeError} The status of this operation.\n     */\n    setValue : function(item) {\n      if (null === item) {\n        this.resetSelection();\n        return null;\n      }\n\n      if (item instanceof qx.ui.tabview.Page) {\n        this.setSelection([item]);\n        return null;\n\n      } else {\n        return new TypeError(\"Given argument is not null or a {qx.ui.tabview.Page}.\");\n      }\n    },\n\n\n    /**\n     * getValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @returns {null|qx.ui.tabview.Page} The currently selected page or null if there is none.\n     */\n    getValue : function() {\n      var pages = this.getSelection();\n      if (pages.length) {\n        return pages[0];\n      } else {\n        return null;\n      }\n    },\n\n\n    /**\n     * resetValue implements part of the {@link qx.ui.form.IField} interface.\n     */\n    resetValue : function() {\n      this.resetSelection();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"bar\":\n          control = new qx.ui.container.SlideBar();\n          control.setZIndex(10);\n          this._add(control);\n          break;\n\n        case \"pane\":\n          control = new qx.ui.container.Stack;\n          control.setZIndex(5);\n          this._add(control, {flex:1});\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    /**\n     * Creates the radio group manager instance.\n     * \n     * Allows override customizations of the instance \n     * \n     * @return {qx.ui.form.RadioGroup} \n     */\n    _createRadioGroupInstance : function() {\n      return new qx.ui.form.RadioGroup;\n    },\n    \n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget : function() {\n      return this.getChildControl(\"pane\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Adds a page to the tabview including its needed button\n     * (contained in the page).\n     *\n     * @param page {qx.ui.tabview.Page} The page which should be added.\n     */\n    add : function(page)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (!(page instanceof qx.ui.tabview.Page)) {\n          throw new Error(\"Incompatible child for TabView: \" + page);\n        }\n      }\n\n      var button = page.getButton();\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      // Exclude page\n      page.exclude();\n\n      // Add button and page\n      bar.add(button);\n      pane.add(page);\n\n      // Register button\n      this.__radioGroup.add(button);\n\n      // Add state to page\n      page.addState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      page.addState(\"lastTab\");\n      var children = this.getChildren();\n      if (children[0] == page) {\n        page.addState(\"firstTab\");\n      } else {\n        children[children.length-2].removeState(\"lastTab\");\n      }\n\n      page.addListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Adds a page to the tabview including its needed button\n     * (contained in the page).\n     *\n     * @param page {qx.ui.tabview.Page} The page which should be added.\n     * @param index {Integer?null} Optional position where to add the page.\n     */\n    addAt : function(page, index)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (!(page instanceof qx.ui.tabview.Page)) {\n          throw new Error(\"Incompatible child for TabView: \" + page);\n        }\n      }\n      var children = this.getChildren();\n      if(!(index == null) && index > children.length) {\n        throw new Error(\"Index should be less than : \" + children.length);\n      }\n\n      if(index == null) {\n        index = children.length;\n      }\n\n      var button = page.getButton();\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      // Exclude page\n      page.exclude();\n\n      // Add button and page\n      bar.addAt(button, index);\n      pane.addAt(page, index);\n\n      // Register button\n      this.__radioGroup.add(button);\n\n      // Add state to page\n      page.addState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      children = this.getChildren();\n      if(index == children.length-1) {\n        page.addState(\"lastTab\");\n      }\n\n      if (children[0] == page) {\n        page.addState(\"firstTab\");\n      } else {\n        children[children.length-2].removeState(\"lastTab\");\n      }\n\n      page.addListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Removes a page (and its corresponding button) from the TabView.\n     *\n     * @param page {qx.ui.tabview.Page} The page to be removed.\n     */\n    remove : function(page)\n    {\n      var pane = this.getChildControl(\"pane\");\n      var bar = this.getChildControl(\"bar\");\n      var button = page.getButton();\n      var children = pane.getChildren();\n\n      // Try to select next page\n      if (this.getSelection()[0] == page)\n      {\n        var index = children.indexOf(page);\n        if (index == 0)\n        {\n          if (children[1]) {\n            this.setSelection([children[1]]);\n          } else {\n            this.resetSelection();\n          }\n        }\n        else\n        {\n          this.setSelection([children[index-1]]);\n        }\n      }\n\n      // Remove the button and page\n      bar.remove(button);\n      pane.remove(page);\n\n      // Remove the button from the radio group\n      this.__radioGroup.remove(button);\n\n      // Remove state from page\n      page.removeState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      if (page.hasState(\"firstTab\"))\n      {\n        page.removeState(\"firstTab\");\n        if (children[0]) {\n          children[0].addState(\"firstTab\");\n        }\n      }\n\n      if (page.hasState(\"lastTab\"))\n      {\n        page.removeState(\"lastTab\");\n        if (children.length > 0) {\n          children[children.length-1].addState(\"lastTab\");\n        }\n      }\n\n      page.removeListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Returns TabView's children widgets.\n     *\n     * @return {qx.ui.tabview.Page[]} List of children.\n     */\n    getChildren : function() {\n      return this.getChildControl(\"pane\").getChildren();\n    },\n\n    /**\n     * Returns the position of the given page in the TabView.\n     *\n     * @param page {qx.ui.tabview.Page} The page to query for.\n     * @return {Integer} Position of the page in the TabView.\n     */\n    indexOf : function(page) {\n      return this.getChildControl(\"pane\").indexOf(page);\n    },\n\n    /**\n     * Returns the radio group manager.\n     *\n     * @return {qx.ui.form.RadioGroup} the radio group.\n     */\n    getRadioGroup : function() {\n      return this.__radioGroup;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    /** @type {Map} Maps the bar position to an appearance state */\n    __barPositionToState : null,\n\n    /**\n     * Apply method for the placeBarOnTop-Property.\n     *\n     * Passes the desired value to the layout of the tabview so\n     * that the layout can handle it.\n     * It also sets the states to all buttons so they know the\n     * position of the bar.\n     *\n     * @param value {Boolean} The new value.\n     * @param old {Boolean} The old value.\n     */\n    _applyBarPosition : function(value, old)\n    {\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      var horizontal = value == \"left\" || value == \"right\";\n      var reversed = value == \"right\" || value == \"bottom\";\n\n      var layoutClass = horizontal ? qx.ui.layout.HBox : qx.ui.layout.VBox;\n\n      var layout = this._getLayout();\n      if (layout && layout instanceof layoutClass) {\n        // pass\n      } else {\n        this._setLayout(layout = new layoutClass);\n      }\n\n      // Update reversed\n      layout.setReversed(reversed);\n\n      // Sync orientation to bar\n      bar.setOrientation(horizontal ? \"vertical\" : \"horizontal\");\n\n      // Read children\n      var children = this.getChildren();\n\n      var i, l;\n      // Toggle state to bar\n      if (old)\n      {\n        var oldState = this.__barPositionToState[old];\n\n        // Update bar\n        bar.removeState(oldState);\n\n        // Update pane\n        pane.removeState(oldState);\n\n        // Update pages\n        for (i=0, l=children.length; i<l; i++) {\n          children[i].removeState(oldState);\n        }\n      }\n\n      if (value)\n      {\n        var newState = this.__barPositionToState[value];\n\n        // Update bar\n        bar.addState(newState);\n\n        // Update pane\n        pane.addState(newState);\n\n        // Update pages\n        for (i=0, l=children.length; i<l; i++) {\n          children[i].addState(newState);\n        }\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns an array of currently selected items.\n     *\n     * Note: The result is only a set of selected items, so the order can\n     * differ from the sequence in which the items were added.\n     *\n     * @return {qx.ui.tabview.Page[]} List of items.\n     */\n    getSelection : function() {\n      var buttons = this.__radioGroup.getSelection();\n      var result = [];\n\n      for (var i = 0; i < buttons.length; i++) {\n        result.push(buttons[i].getUserData(\"page\"));\n      }\n\n      return result;\n    },\n\n    /**\n     * Replaces current selection with the given items.\n     *\n     * @param items {qx.ui.tabview.Page[]} Items to select.\n     * @throws {Error} if one of the items is not a child element and if\n     *    items contains more than one elements.\n     */\n    setSelection : function(items) {\n      var buttons = [];\n\n      for (var i = 0; i < items.length; i++) {\n        buttons.push(items[i].getChildControl(\"button\"));\n      }\n      this.__radioGroup.setSelection(buttons);\n    },\n\n    /**\n     * Clears the whole selection at once.\n     */\n    resetSelection : function() {\n      this.__radioGroup.resetSelection();\n    },\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {qx.ui.tabview.Page} Any valid selectable item.\n     * @return {Boolean} Whether the item is selected.\n     * @throws {Error} if one of the items is not a child element.\n     */\n    isSelected : function(item) {\n      var button = item.getChildControl(\"button\");\n      return this.__radioGroup.isSelected(button);\n    },\n\n    /**\n     * Whether the selection is empty.\n     *\n     * @return {Boolean} Whether the selection is empty.\n     */\n    isSelectionEmpty : function() {\n      return this.__radioGroup.isSelectionEmpty();\n    },\n\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @return {qx.ui.tabview.Page[]} The contained items.\n     * @param all {Boolean} true for all selectables, false for the\n     *   selectables the user can interactively select\n     */\n    getSelectables: function(all) {\n      var buttons = this.__radioGroup.getSelectables(all);\n      var result = [];\n\n      for (var i = 0; i <buttons.length; i++) {\n        result.push(buttons[i].getUserData(\"page\"));\n      }\n\n      return result;\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    _onChangeSelection : function(e)\n    {\n      var pane = this.getChildControl(\"pane\");\n      var button = e.getData()[0];\n      var oldButton = e.getOldData()[0];\n      var value = [];\n      var old = [];\n\n      if (button)\n      {\n        value = [button.getUserData(\"page\")];\n        pane.setSelection(value);\n        this.scrollChildIntoView(button, null, null, false);\n      }\n      else\n      {\n        pane.resetSelection();\n      }\n\n      if (oldButton) {\n        old = [oldButton.getUserData(\"page\")];\n      }\n\n      this.fireDataEvent(\"changeSelection\", value, old);\n    },\n\n    /**\n     * Event handler for <code>beforeChangeSelection</code>.\n     *\n     * @param e {qx.event.type.Event} Data event.\n     */\n    _onBeforeChangeSelection : function(e)\n    {\n      if (!this.fireNonBubblingEvent(\"beforeChangeSelection\",\n          qx.event.type.Event, [false, true])) {\n        e.preventDefault();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the change of the selected item of the radio group.\n     * @param e {qx.event.type.Data} The data event\n     */\n    _onRadioChangeSelection : function(e) {\n      var element = e.getData()[0];\n      if (element) {\n        this.setSelection([element.getUserData(\"page\")]);\n      } else {\n        this.resetSelection();\n      }\n    },\n\n\n    /**\n     * Removes the Page widget on which the close button was tapped.\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPageClose : function(e)\n    {\n      // reset the old close button states, before remove page\n      // see http://bugzilla.qooxdoo.org/show_bug.cgi?id=3763 for details\n      var page = e.getTarget();\n      var closeButton = page.getButton().getChildControl(\"close-button\");\n      closeButton.reset();\n\n      this.remove(page);\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n\n  destruct : function() {\n    this._disposeObjects(\"__radioGroup\");\n    this.__barPositionToState = null;\n  }\n});\n"
  ]
}