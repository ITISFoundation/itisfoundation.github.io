{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/core/IMultiSelection.js",
    "../transpiled/qx/ui/core/MMultiSelectionHandling.js",
    "../transpiled/qx/ui/core/selection/Abstract.js",
    "../transpiled/qx/ui/core/selection/Widget.js",
    "../transpiled/qx/ui/core/selection/ScrollArea.js",
    "../transpiled/qx/ui/form/List.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-34.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Each object, which should support multiselection selection have to\n * implement this interface.\n */\nqx.Interface.define(\"qx.ui.core.IMultiSelection\",\n{\n  extend: qx.ui.core.ISingleSelection,\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /**\n     * Selects all items of the managed object.\n     */\n    selectAll : function() {\n      return true;\n    },\n\n    /**\n     * Adds the given item to the existing selection.\n     *\n     * @param item {qx.ui.core.Widget} Any valid item\n     * @throws {Error} if the item is not a child element.\n     */\n    addToSelection : function(item) {\n      return arguments.length == 1;\n    },\n\n    /**\n     * Removes the given item from the selection.\n     *\n     * Use {@link qx.ui.core.ISingleSelection#resetSelection} when you\n     * want to clear the whole selection at once.\n     *\n     * @param item {qx.ui.core.Widget} Any valid item\n     * @throws {Error} if the item is not a child element.\n     */\n    removeFromSelection : function(item) {\n      return arguments.length == 1;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This mixin links all methods to manage the multi selection from the\n * internal selection manager to the widget.\n */\nqx.Mixin.define(\"qx.ui.core.MMultiSelectionHandling\",\n{\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    // Create selection manager\n    var clazz = this.SELECTION_MANAGER;\n    var manager = this.__manager = new clazz(this);\n\n    // Add widget event listeners\n    this.addListener(\"pointerdown\", manager.handlePointerDown, manager);\n    this.addListener(\"tap\", manager.handleTap, manager);\n    this.addListener(\"pointerover\", manager.handlePointerOver, manager);\n    this.addListener(\"pointermove\", manager.handlePointerMove, manager);\n    this.addListener(\"losecapture\", manager.handleLoseCapture, manager);\n    this.addListener(\"keypress\", manager.handleKeyPress, manager);\n\n    this.addListener(\"addItem\", manager.handleAddItem, manager);\n    this.addListener(\"removeItem\", manager.handleRemoveItem, manager);\n\n    // Add manager listeners\n    manager.addListener(\"changeSelection\", this._onSelectionChange, this);\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fires after the value was modified */\n    \"changeValue\" : \"qx.event.type.Data\",\n\n    /** Fires after the selection was modified */\n    \"changeSelection\" : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n\n  properties :\n  {\n    /**\n     * The selection mode to use.\n     *\n     * For further details please have a look at:\n     * {@link qx.ui.core.selection.Abstract#mode}\n     */\n    selectionMode :\n    {\n      check : [ \"single\", \"multi\", \"additive\", \"one\" ],\n      init : \"single\",\n      apply : \"_applySelectionMode\"\n    },\n\n    /**\n     * Enable drag selection (multi selection of items through\n     * dragging the pointer in pressed states).\n     *\n     * Only possible for the selection modes <code>multi</code> and <code>additive</code>\n     */\n    dragSelection :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyDragSelection\"\n    },\n\n    /**\n     * Enable quick selection mode, where no tap is needed to change the selection.\n     *\n     * Only possible for the modes <code>single</code> and <code>one</code>.\n     */\n    quickSelection :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyQuickSelection\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /** @type {qx.ui.core.selection.Abstract} The selection manager */\n    __manager : null,\n\n    /** @type {Boolean} used to control recursion in onSelectionChange */\n    __inOnSelectionChange: false,\n\n    \n    /*\n    ---------------------------------------------------------------------------\n      USER API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * setValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @param items {null|qx.ui.core.Widget[]} Items to select.\n     * @returns {null|TypeError} The status of this operation.\n     */\n    setValue : function(items) {\n      if (null === items) {\n        this.__manager.clearSelection();\n        return null;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        for (var i=0, l=items.length; i<l; i++) {\n          if (!(items[i] instanceof qx.ui.core.Widget)) {\n            return new TypeError(\"Some items in provided argument are not widgets\");\n          }\n        }\n      }\n\n      try {\n        this.setSelection(items);\n        return null;\n\n      } catch (e) {\n        return e;\n      }\n    },\n\n\n    /**\n     * getValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @returns {qx.ui.core.Widget[]} The selected widgets or null if there are none.\n     */\n    getValue : function() {\n      return this.__manager.getSelection();\n    },\n\n\n    /**\n     * resetValue implements part of the {@link qx.ui.form.IField} interface.\n     */\n    resetValue : function() {\n      this.__manager.clearSelection();\n    },\n\n\n    /**\n     * Selects all items of the managed object.\n     */\n    selectAll : function() {\n      this.__manager.selectAll();\n    },\n\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {qx.ui.core.Widget} Any valid selectable item.\n     * @return {Boolean} Whether the item is selected.\n     * @throws {Error} if the item is not a child element.\n     */\n    isSelected : function(item) {\n      if (!qx.ui.core.Widget.contains(this, item)) {\n        throw new Error(\"Could not test if \" + item +\n          \" is selected, because it is not a child element!\");\n      }\n\n      return this.__manager.isItemSelected(item);\n    },\n\n\n    /**\n     * Adds the given item to the existing selection.\n     *\n     * Use {@link #setSelection} instead if you want to replace\n     * the current selection.\n     *\n     * @param item {qx.ui.core.Widget} Any valid item.\n     * @throws {Error} if the item is not a child element.\n     */\n    addToSelection : function(item) {\n      if (!qx.ui.core.Widget.contains(this, item)) {\n        throw new Error(\"Could not add + \" + item +\n          \" to selection, because it is not a child element!\");\n      }\n\n      this.__manager.addItem(item);\n    },\n\n\n    /**\n     * Removes the given item from the selection.\n     *\n     * Use {@link #resetSelection} when you want to clear\n     * the whole selection at once.\n     *\n     * @param item {qx.ui.core.Widget} Any valid item\n     * @throws {Error} if the item is not a child element.\n     */\n    removeFromSelection : function(item) {\n      if (!qx.ui.core.Widget.contains(this, item)) {\n        throw new Error(\"Could not remove \" + item +\n          \" from selection, because it is not a child element!\");\n      }\n\n      this.__manager.removeItem(item);\n    },\n\n\n    /**\n     * Selects an item range between two given items.\n     *\n     * @param begin {qx.ui.core.Widget} Item to start with\n     * @param end {qx.ui.core.Widget} Item to end at\n     */\n    selectRange : function(begin, end) {\n      this.__manager.selectItemRange(begin, end);\n    },\n\n\n    /**\n     * Clears the whole selection at once. Also\n     * resets the lead and anchor items and their\n     * styles.\n     */\n    resetSelection : function() {\n      this.__manager.clearSelection();\n    },\n\n\n    /**\n     * Replaces current selection with the given items.\n     *\n     * @param items {qx.ui.core.Widget[]} Items to select.\n     * @throws {Error} if one of the items is not a child element and if\n     *    the mode is set to <code>single</code> or <code>one</code> and\n     *    the items contains more than one item.\n     */\n    setSelection : function(items) {\n      // Block recursion so that when selection changes modelSelection, the modelSelection\n      //  cannot change selection again; this is important because modelSelection does not\n      //  necessarily match selection, for example when the item's model properties are\n      //  null.\n      if (this.__inOnSelectionChange) {\n        return;\n      }\n      for (var i = 0; i < items.length; i++) {\n        if (!qx.ui.core.Widget.contains(this, items[i])) {\n          throw new Error(\"Could not select \" + items[i] +\n            \", because it is not a child element!\");\n        }\n      }\n\n      if (items.length === 0) {\n        this.resetSelection();\n      } else {\n        var currentSelection = this.getSelection();\n        if (!qx.lang.Array.equals(currentSelection, items)) {\n          this.__manager.replaceSelection(items);\n        }\n      }\n    },\n\n\n    /**\n     * Returns an array of currently selected items.\n     *\n     * Note: The result is only a set of selected items, so the order can\n     * differ from the sequence in which the items were added.\n     *\n     * @return {qx.ui.core.Widget[]} List of items.\n     */\n    getSelection : function() {\n      return this.__manager.getSelection();\n    },\n\n    /**\n     * Returns an array of currently selected items sorted\n     * by their index in the container.\n     *\n     * @return {qx.ui.core.Widget[]} Sorted list of items\n     */\n    getSortedSelection : function() {\n      return this.__manager.getSortedSelection();\n    },\n\n    /**\n     * Whether the selection is empty\n     *\n     * @return {Boolean} Whether the selection is empty\n     */\n    isSelectionEmpty : function() {\n      return this.__manager.isSelectionEmpty();\n    },\n\n    /**\n     * Returns the last selection context.\n     *\n     * @return {String | null} One of <code>tap</code>, <code>quick</code>,\n     *    <code>drag</code> or <code>key</code> or <code>null</code>.\n     */\n    getSelectionContext : function() {\n      return this.__manager.getSelectionContext();\n    },\n\n    /**\n     * Returns the internal selection manager. Use this with\n     * caution!\n     *\n     * @return {qx.ui.core.selection.Abstract} The selection manager\n     */\n    _getManager : function() {\n      return this.__manager;\n    },\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @param all {Boolean} true for all selectables, false for the\n     *   selectables the user can interactively select\n     * @return {qx.ui.core.Widget[]} The contained items.\n     */\n    getSelectables: function(all) {\n      return this.__manager.getSelectables(all);\n    },\n\n    /**\n     * Invert the selection. Select the non selected and deselect the selected.\n     */\n    invertSelection: function() {\n      this.__manager.invertSelection();\n    },\n\n\n    /**\n     * Returns the current lead item. Generally the item which was last modified\n     * by the user (tapped on etc.)\n     *\n     * @return {qx.ui.core.Widget} The lead item or <code>null</code>\n     */\n    _getLeadItem : function() {\n      var mode = this.__manager.getMode();\n\n      if (mode === \"single\" || mode === \"one\") {\n        return this.__manager.getSelectedItem();\n      } else {\n        return this.__manager.getLeadItem();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applySelectionMode : function(value, old) {\n      this.__manager.setMode(value);\n    },\n\n    // property apply\n    _applyDragSelection : function(value, old) {\n      this.__manager.setDrag(value);\n    },\n\n    // property apply\n    _applyQuickSelection : function(value, old) {\n      this.__manager.setQuick(value);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event listener for <code>changeSelection</code> event on selection manager.\n     *\n     * @param e {qx.event.type.Data} Data event\n     */\n    _onSelectionChange : function(e) {\n      if (this.__inOnSelectionChange) {\n        return;\n      }\n      this.__inOnSelectionChange = true;\n      try {\n        this.fireDataEvent(\"changeSelection\", e.getData(), e.getOldData());\n        this.fireDataEvent(\"changeValue\", e.getData(), e.getOldData());\n      } finally {\n        this.__inOnSelectionChange = false;\n      }\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n\n  destruct : function() {\n    this._disposeObjects(\"__manager\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * Generic selection manager to bring rich desktop like selection behavior\n * to widgets and low-level interactive controls.\n *\n * The selection handling supports both Shift and Ctrl/Meta modifies like\n * known from native applications.\n */\nqx.Class.define(\"qx.ui.core.selection.Abstract\",\n{\n  type : \"abstract\",\n  extend : qx.core.Object,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // {Map} Internal selection storage\n    this.__selection = {};\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fires after the selection was modified. Contains the selection under the data property. */\n    \"changeSelection\" : \"qx.event.type.Data\"\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Selects the selection mode to use.\n     *\n     * * single: One or no element is selected\n     * * multi: Multi items could be selected. Also allows empty selections.\n     * * additive: Easy Web-2.0 selection mode. Allows multiple selections without modifier keys.\n     * * one: If possible always exactly one item is selected\n     */\n    mode :\n    {\n      check : [ \"single\", \"multi\", \"additive\", \"one\" ],\n      init : \"single\",\n      apply : \"_applyMode\"\n    },\n\n\n    /**\n     * Enable drag selection (multi selection of items through\n     * dragging the pointer in pressed states).\n     *\n     * Only possible for the modes <code>multi</code> and <code>additive</code>\n     */\n    drag :\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n\n    /**\n     * Enable quick selection mode, where no tap is needed to change the selection.\n     *\n     * Only possible for the modes <code>single</code> and <code>one</code>.\n     */\n    quick :\n    {\n      check : \"Boolean\",\n      init : false\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __scrollStepX : 0,\n    __scrollStepY : 0,\n    __scrollTimer : null,\n    __frameScroll : null,\n    __lastRelX : null,\n    __lastRelY : null,\n    __frameLocation : null,\n    __dragStartX : null,\n    __dragStartY : null,\n    __inCapture : null,\n    __pointerX : null,\n    __pointerY : null,\n    __moveDirectionX : null,\n    __moveDirectionY : null,\n    __selectionModified : null,\n    __selectionContext : null,\n    __leadItem : null,\n    __selection : null,\n    __anchorItem : null,\n    __pointerDownOnSelected : null,\n\n    // A flag that signals an user interaction, which means the selection change\n    // was triggered by pointer or keyboard [BUG #3344]\n    _userInteraction : false,\n\n    __oldScrollTop : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      USER APIS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the selection context. One of <code>tap</code>,\n     * <code>quick</code>, <code>drag</code> or <code>key</code> or\n     * <code>null</code>.\n     *\n     * @return {String} One of <code>tap</code>, <code>quick</code>,\n     *    <code>drag</code> or <code>key</code> or <code>null</code>\n     */\n    getSelectionContext : function() {\n      return this.__selectionContext;\n    },\n\n\n    /**\n     * Selects all items of the managed object.\n     *\n     */\n    selectAll : function()\n    {\n      var mode = this.getMode();\n      if (mode == \"single\" || mode == \"one\") {\n        throw new Error(\"Can not select all items in selection mode: \" + mode);\n      }\n\n      this._selectAllItems();\n      this._fireChange();\n    },\n\n\n    /**\n     * Selects the given item. Replaces current selection\n     * completely with the new item.\n     *\n     * Use {@link #addItem} instead if you want to add new\n     * items to an existing selection.\n     *\n     * @param item {Object} Any valid item\n     */\n    selectItem : function(item)\n    {\n      this._setSelectedItem(item);\n\n      var mode = this.getMode();\n      if (mode !== \"single\" && mode !== \"one\")\n      {\n        this._setLeadItem(item);\n        this._setAnchorItem(item);\n      }\n\n      this._scrollItemIntoView(item);\n      this._fireChange();\n    },\n\n\n    /**\n     * Adds the given item to the existing selection.\n     *\n     * Use {@link #selectItem} instead if you want to replace\n     * the current selection.\n     *\n     * @param item {Object} Any valid item\n     */\n    addItem : function(item)\n    {\n      var mode = this.getMode();\n      if (mode === \"single\" || mode === \"one\") {\n        this._setSelectedItem(item);\n      }\n      else\n      {\n        if (this._getAnchorItem() == null) {\n          this._setAnchorItem(item);\n        }\n\n        this._setLeadItem(item);\n        this._addToSelection(item);\n      }\n\n      this._scrollItemIntoView(item);\n      this._fireChange();\n    },\n\n\n    /**\n     * Removes the given item from the selection.\n     *\n     * Use {@link #clearSelection} when you want to clear\n     * the whole selection at once.\n     *\n     * @param item {Object} Any valid item\n     */\n    removeItem : function(item)\n    {\n      this._removeFromSelection(item);\n\n      if (this.getMode() === \"one\" && this.isSelectionEmpty())\n      {\n        var selected = this._applyDefaultSelection();\n\n        // Do not fire any event in this case.\n        if (selected == item) {\n          return;\n        }\n      }\n\n      if (this.getLeadItem() == item) {\n        this._setLeadItem(null);\n      }\n\n      if (this._getAnchorItem() == item) {\n        this._setAnchorItem(null);\n      }\n\n      this._fireChange();\n    },\n\n\n    /**\n     * Selects an item range between two given items.\n     *\n     * @param begin {Object} Item to start with\n     * @param end {Object} Item to end at\n     */\n    selectItemRange : function(begin, end)\n    {\n      var mode = this.getMode();\n      if (mode == \"single\" || mode == \"one\") {\n        throw new Error(\"Can not select multiple items in selection mode: \" + mode);\n      }\n\n      this._selectItemRange(begin, end);\n\n      this._setAnchorItem(begin);\n\n      this._setLeadItem(end);\n      this._scrollItemIntoView(end);\n\n      this._fireChange();\n    },\n\n\n    /**\n     * Clears the whole selection at once. Also\n     * resets the lead and anchor items and their\n     * styles.\n     *\n     */\n    clearSelection : function()\n    {\n      if (this.getMode() == \"one\")\n      {\n        var selected = this._applyDefaultSelection(true);\n        if (selected != null) {\n          return;\n        }\n      }\n\n      this._clearSelection();\n      this._setLeadItem(null);\n      this._setAnchorItem(null);\n\n      this._fireChange();\n    },\n\n\n    /**\n     * Replaces current selection with given array of items.\n     *\n     * Please note that in single selection scenarios it is more\n     * efficient to directly use {@link #selectItem}.\n     *\n     * @param items {Array} Items to select\n     */\n    replaceSelection : function(items)\n    {\n      var mode = this.getMode();\n      if (mode == \"one\" || mode === \"single\")\n      {\n        if (items.length > 1)   {\n          throw new Error(\"Could not select more than one items in mode: \" + mode + \"!\");\n        }\n\n        if (items.length == 1) {\n          this.selectItem(items[0]);\n        } else {\n          this.clearSelection();\n        }\n        return;\n      }\n      else\n      {\n        this._replaceMultiSelection(items);\n      }\n    },\n\n\n    /**\n     * Get the selected item. This method does only work in <code>single</code>\n     * selection mode.\n     *\n     * @return {Object} The selected item.\n     */\n    getSelectedItem : function()\n    {\n      var mode = this.getMode();\n      if (mode === \"single\" || mode === \"one\")\n      {\n        var result = this._getSelectedItem();\n        return result != undefined ? result : null;\n      }\n\n      throw new Error(\"The method getSelectedItem() is only supported in 'single' and 'one' selection mode!\");\n    },\n\n\n    /**\n     * Returns an array of currently selected items.\n     *\n     * Note: The result is only a set of selected items, so the order can\n     * differ from the sequence in which the items were added.\n     *\n     * @return {Object[]} List of items.\n     */\n    getSelection : function() {\n      return Object.values(this.__selection);\n    },\n\n\n    /**\n     * Returns the selection sorted by the index in the\n     * container of the selection (the assigned widget)\n     *\n     * @return {Object[]} Sorted list of items\n     */\n    getSortedSelection : function()\n    {\n      var children = this.getSelectables();\n      var sel = Object.values(this.__selection);\n\n      sel.sort(function(a, b) {\n        return children.indexOf(a) - children.indexOf(b);\n      });\n\n      return sel;\n    },\n\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {var} Any valid selectable item\n     * @return {Boolean} Whether the item is selected\n     */\n    isItemSelected : function(item)\n    {\n      var hash = this._selectableToHashCode(item);\n      return this.__selection[hash] !== undefined;\n    },\n\n\n    /**\n     * Whether the selection is empty\n     *\n     * @return {Boolean} Whether the selection is empty\n     */\n    isSelectionEmpty : function() {\n      return qx.lang.Object.isEmpty(this.__selection);\n    },\n\n\n    /**\n     * Invert the selection. Select the non selected and deselect the selected.\n     */\n    invertSelection: function() {\n      var mode = this.getMode();\n      if (mode === \"single\" || mode === \"one\") {\n        throw new Error(\"The method invertSelection() is only supported in 'multi' and 'additive' selection mode!\");\n      }\n\n      var selectables = this.getSelectables();\n      for (var i = 0; i < selectables.length; i++)\n      {\n        this._toggleInSelection(selectables[i]);\n      }\n\n      this._fireChange();\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LEAD/ANCHOR SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the lead item. Generally the item which was last modified\n     * by the user (tapped on etc.)\n     *\n     * @param value {Object} Any valid item or <code>null</code>\n     */\n    _setLeadItem : function(value)\n    {\n      var old = this.__leadItem;\n\n      if (old !== null) {\n        this._styleSelectable(old, \"lead\", false);\n      }\n\n      if (value !== null) {\n        this._styleSelectable(value, \"lead\", true);\n      }\n\n      this.__leadItem = value;\n    },\n\n\n    /**\n     * Returns the current lead item. Generally the item which was last modified\n     * by the user (tapped on etc.)\n     *\n     * @return {Object} The lead item or <code>null</code>\n     */\n    getLeadItem : function() {\n      return this.__leadItem;\n    },\n\n\n    /**\n     * Sets the anchor item. This is the item which is the starting\n     * point for all range selections. Normally this is the item which was\n     * tapped on the last time without any modifier keys pressed.\n     *\n     * @param value {Object} Any valid item or <code>null</code>\n     */\n    _setAnchorItem : function(value)\n    {\n      var old = this.__anchorItem;\n\n      if (old != null) {\n        this._styleSelectable(old, \"anchor\", false);\n      }\n\n      if (value != null) {\n        this._styleSelectable(value, \"anchor\", true);\n      }\n\n      this.__anchorItem = value;\n    },\n\n\n    /**\n     * Returns the current anchor item. This is the item which is the starting\n     * point for all range selections. Normally this is the item which was\n     * tapped on the last time without any modifier keys pressed.\n     *\n     * @return {Object} The anchor item or <code>null</code>\n     */\n    _getAnchorItem : function() {\n      return this.__anchorItem !== null ? this.__anchorItem : null;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      BASIC SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Whether the given item is selectable.\n     *\n     * @param item {var} Any item\n     * @return {Boolean} <code>true</code> when the item is selectable\n     */\n    _isSelectable : function(item) {\n      throw new Error(\"Abstract method call: _isSelectable()\");\n    },\n\n\n    /**\n     * Finds the selectable instance from a pointer event\n     *\n     * @param event {qx.event.type.Pointer} The pointer event\n     * @return {Object|null} The resulting selectable\n     */\n    _getSelectableFromPointerEvent : function(event)\n    {\n      var target = event.getTarget();\n      // check for target (may be null when leaving the viewport) [BUG #4378]\n      if (target && this._isSelectable(target)) {\n        return target;\n      }\n      return null;\n    },\n\n\n    /**\n     * Returns an unique hashcode for the given item.\n     *\n     * @param item {var} Any item\n     * @return {String} A valid hashcode\n     */\n    _selectableToHashCode : function(item) {\n      throw new Error(\"Abstract method call: _selectableToHashCode()\");\n    },\n\n\n    /**\n     * Updates the style (appearance) of the given item.\n     *\n     * @param item {var} Item to modify\n     * @param type {String} Any of <code>selected</code>, <code>anchor</code> or <code>lead</code>\n     * @param enabled {Boolean} Whether the given style should be added or removed.\n     */\n    _styleSelectable : function(item, type, enabled) {\n      throw new Error(\"Abstract method call: _styleSelectable()\");\n    },\n\n\n    /**\n     * Enables capturing of the container.\n     *\n     */\n    _capture : function() {\n      throw new Error(\"Abstract method call: _capture()\");\n    },\n\n\n    /**\n     * Releases capturing of the container\n     *\n     */\n    _releaseCapture : function() {\n      throw new Error(\"Abstract method call: _releaseCapture()\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DIMENSION AND LOCATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the location of the container\n     *\n     * @return {Map} Map with the keys <code>top</code>, <code>right</code>,\n     *    <code>bottom</code> and <code>left</code>.\n     */\n    _getLocation : function() {\n      throw new Error(\"Abstract method call: _getLocation()\");\n    },\n\n\n    /**\n     * Returns the dimension of the container (available scrolling space).\n     *\n     * @return {Map} Map with the keys <code>width</code> and <code>height</code>.\n     */\n    _getDimension : function() {\n      throw new Error(\"Abstract method call: _getDimension()\");\n    },\n\n\n    /**\n     * Returns the relative (to the container) horizontal location of the given item.\n     *\n     * @param item {var} Any item\n     * @return {Map} A map with the keys <code>left</code> and <code>right</code>.\n     */\n    _getSelectableLocationX : function(item) {\n      throw new Error(\"Abstract method call: _getSelectableLocationX()\");\n    },\n\n\n    /**\n     * Returns the relative (to the container) horizontal location of the given item.\n     *\n     * @param item {var} Any item\n     * @return {Map} A map with the keys <code>top</code> and <code>bottom</code>.\n     */\n    _getSelectableLocationY : function(item) {\n      throw new Error(\"Abstract method call: _getSelectableLocationY()\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the scroll position of the container.\n     *\n     * @return {Map} Map with the keys <code>left</code> and <code>top</code>.\n     */\n    _getScroll : function() {\n      throw new Error(\"Abstract method call: _getScroll()\");\n    },\n\n\n    /**\n     * Scrolls by the given offset\n     *\n     * @param xoff {Integer} Horizontal offset to scroll by\n     * @param yoff {Integer} Vertical offset to scroll by\n     */\n    _scrollBy : function(xoff, yoff) {\n      throw new Error(\"Abstract method call: _scrollBy()\");\n    },\n\n\n    /**\n     * Scrolls the given item into the view (make it visible)\n     *\n     * @param item {var} Any item\n     */\n    _scrollItemIntoView : function(item) {\n      throw new Error(\"Abstract method call: _scrollItemIntoView()\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      QUERY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns all selectable items of the container.\n     *\n     * @param all {Boolean} true for all selectables, false for the\n      *   selectables the user can interactively select\n     * @return {Array} A list of items\n     */\n    getSelectables : function(all) {\n      throw new Error(\"Abstract method call: getSelectables()\");\n    },\n\n\n    /**\n     * Returns all selectable items between the two given items.\n     *\n     * The items could be given in any order.\n     *\n     * @param item1 {var} First item\n     * @param item2 {var} Second item\n     * @return {Array} List of items\n     */\n    _getSelectableRange : function(item1, item2) {\n      throw new Error(\"Abstract method call: _getSelectableRange()\");\n    },\n\n\n    /**\n     * Returns the first selectable item.\n     *\n     * @return {var} The first selectable item\n     */\n    _getFirstSelectable : function() {\n      throw new Error(\"Abstract method call: _getFirstSelectable()\");\n    },\n\n\n    /**\n     * Returns the last selectable item.\n     *\n     * @return {var} The last selectable item\n     */\n    _getLastSelectable : function() {\n      throw new Error(\"Abstract method call: _getLastSelectable()\");\n    },\n\n\n    /**\n     * Returns a selectable item which is related to the given\n     * <code>item</code> through the value of <code>relation</code>.\n     *\n     * @param item {var} Any item\n     * @param relation {String} A valid relation: <code>above</code>,\n     *    <code>right</code>, <code>under</code> or <code>left</code>\n     * @return {var} The related item\n     */\n    _getRelatedSelectable : function(item, relation) {\n      throw new Error(\"Abstract method call: _getRelatedSelectable()\");\n    },\n\n\n    /**\n     * Returns the item which should be selected on pageUp/pageDown.\n     *\n     * May also scroll to the needed position.\n     *\n     * @param lead {var} The current lead item\n     * @param up {Boolean?false} Which page key was pressed:\n     *   <code>up</code> or <code>down</code>.\n     */\n    _getPage : function(lead, up) {\n      throw new Error(\"Abstract method call: _getPage()\");\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyMode : function(value, old)\n    {\n      this._setLeadItem(null);\n      this._setAnchorItem(null);\n\n      this._clearSelection();\n\n      // Mode \"one\" requires one selected item\n      if (value === \"one\") {\n        this._applyDefaultSelection(true);\n      }\n\n      this._fireChange();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method should be connected to the <code>pointerover</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Pointer} A valid pointer event\n     */\n    handlePointerOver : function(event)\n    {\n      // All browsers (except Opera) fire a native \"mouseover\" event when a scroll appears\n      // by keyboard interaction. We have to ignore the event to avoid a selection for\n      // \"pointerover\" (quick selection). For more details see [BUG #4225]\n      if(this.__oldScrollTop != null &&\n         this.__oldScrollTop != this._getScroll().top)\n      {\n        this.__oldScrollTop = null;\n        return;\n      }\n\n      // quick select should only work on mouse events\n      if (event.getPointerType() != \"mouse\") {\n        return;\n      }\n\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      if (!this.getQuick()) {\n        this._userInteraction = false;\n        return;\n      }\n\n      var mode = this.getMode();\n      if (mode !== \"one\" && mode !== \"single\") {\n        this._userInteraction = false;\n        return;\n      }\n\n      var item = this._getSelectableFromPointerEvent(event);\n      if (item === null) {\n        this._userInteraction = false;\n        return;\n      }\n\n      this._setSelectedItem(item);\n\n      // Be sure that item is in view\n      // This does not feel good when pointerover is used\n      // this._scrollItemIntoView(item);\n\n      // Fire change event as needed\n      this._fireChange(\"quick\");\n\n      this._userInteraction = false;\n    },\n\n\n    /**\n     * This method should be connected to the <code>pointerdown</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Pointer} A valid pointer event\n     */\n    handlePointerDown : function(event)\n    {\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      var item = this._getSelectableFromPointerEvent(event);\n      if (item === null) {\n        this._userInteraction = false;\n        return;\n      }\n\n      // Read in keyboard modifiers\n      var isCtrlPressed = event.isCtrlPressed() ||\n        (qx.core.Environment.get(\"os.name\") == \"osx\" && event.isMetaPressed());\n      var isShiftPressed = event.isShiftPressed();\n\n      // tapping on selected items deselect on pointerup, not on pointerdown\n      if (this.isItemSelected(item) && !isShiftPressed && !isCtrlPressed && !this.getDrag())\n      {\n        this.__pointerDownOnSelected = item;\n        this._userInteraction = false;\n        return;\n      }\n      else\n      {\n        this.__pointerDownOnSelected = null;\n      }\n\n      // Be sure that item is in view\n      this._scrollItemIntoView(item);\n\n      // Drag selection\n      var mode = this.getMode();\n      if (\n        this.getDrag() &&\n        mode !== \"single\" &&\n        mode !== \"one\" &&\n        !isShiftPressed &&\n        !isCtrlPressed &&\n        event.getPointerType() == \"mouse\"\n      )\n      {\n        this._setAnchorItem(item);\n        this._setLeadItem(item);\n\n        // Cache location/scroll data\n        this.__frameLocation = this._getLocation();\n        this.__frameScroll = this._getScroll();\n\n        // Store position at start\n        this.__dragStartX = event.getDocumentLeft() + this.__frameScroll.left;\n        this.__dragStartY = event.getDocumentTop() + this.__frameScroll.top;\n\n        // Switch to capture mode\n        this.__inCapture = true;\n        this._capture();\n      }\n\n\n      // Fire change event as needed\n      this._fireChange(\"tap\");\n\n      this._userInteraction = false;\n    },\n\n\n    /**\n     * This method should be connected to the <code>tap</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Tap} A valid pointer event\n     */\n    handleTap : function(event)\n    {\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      // Read in keyboard modifiers\n      var isCtrlPressed = event.isCtrlPressed() ||\n        (qx.core.Environment.get(\"os.name\") == \"osx\" && event.isMetaPressed());\n      var isShiftPressed = event.isShiftPressed();\n\n      if (!isCtrlPressed && !isShiftPressed && this.__pointerDownOnSelected != null)\n      {\n        this._userInteraction = false;\n        var item = this._getSelectableFromPointerEvent(event);\n        if (item === null || !this.isItemSelected(item)) {\n          return;\n        }\n      }\n\n      var item = this._getSelectableFromPointerEvent(event);\n      if (item === null) {\n        this._userInteraction = false;\n        return;\n      }\n\n      // Action depends on selected mode\n      switch(this.getMode())\n      {\n        case \"single\":\n        case \"one\":\n          this._setSelectedItem(item);\n          break;\n\n        case \"additive\":\n          this._setLeadItem(item);\n          this._setAnchorItem(item);\n          this._toggleInSelection(item);\n          break;\n\n        case \"multi\":\n          // Update lead item\n          this._setLeadItem(item);\n\n          // Create/Update range selection\n          if (isShiftPressed)\n          {\n            var anchor = this._getAnchorItem();\n            if (anchor === null)\n            {\n              anchor = this._getFirstSelectable();\n              this._setAnchorItem(anchor);\n            }\n\n            this._selectItemRange(anchor, item, isCtrlPressed);\n          }\n\n          // Toggle in selection\n          else if (isCtrlPressed)\n          {\n            this._setAnchorItem(item);\n            this._toggleInSelection(item);\n          }\n\n          // Replace current selection\n          else\n          {\n            this._setAnchorItem(item);\n            this._setSelectedItem(item);\n          }\n\n          break;\n      }\n\n      // Cleanup operation\n      this._cleanup();\n    },\n\n\n    /**\n     * This method should be connected to the <code>losecapture</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Pointer} A valid pointer event\n     */\n    handleLoseCapture : function(event) {\n      this._cleanup();\n    },\n\n\n    /**\n     * This method should be connected to the <code>pointermove</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.Pointer} A valid pointer event\n     */\n    handlePointerMove : function(event)\n    {\n      // Only relevant when capturing is enabled\n      if (!this.__inCapture) {\n        return;\n      }\n\n\n      // Update pointer position cache\n      this.__pointerX = event.getDocumentLeft();\n      this.__pointerY = event.getDocumentTop();\n\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      // Detect move directions\n      var dragX = this.__pointerX + this.__frameScroll.left;\n      if (dragX > this.__dragStartX) {\n        this.__moveDirectionX = 1;\n      } else if (dragX < this.__dragStartX) {\n        this.__moveDirectionX = -1;\n      } else {\n        this.__moveDirectionX = 0;\n      }\n\n      var dragY = this.__pointerY + this.__frameScroll.top;\n      if (dragY > this.__dragStartY) {\n        this.__moveDirectionY = 1;\n      } else if (dragY < this.__dragStartY) {\n        this.__moveDirectionY = -1;\n      } else {\n        this.__moveDirectionY = 0;\n      }\n\n\n      // Update scroll steps\n      var location = this.__frameLocation;\n\n      if (this.__pointerX < location.left) {\n        this.__scrollStepX = this.__pointerX - location.left;\n      } else if (this.__pointerX > location.right) {\n        this.__scrollStepX = this.__pointerX - location.right;\n      } else {\n        this.__scrollStepX = 0;\n      }\n\n      if (this.__pointerY < location.top) {\n        this.__scrollStepY = this.__pointerY - location.top;\n      } else if (this.__pointerY > location.bottom) {\n        this.__scrollStepY = this.__pointerY - location.bottom;\n      } else {\n        this.__scrollStepY = 0;\n      }\n\n\n      // Dynamically create required timer instance\n      if (!this.__scrollTimer)\n      {\n        this.__scrollTimer = new qx.event.Timer(100);\n        this.__scrollTimer.addListener(\"interval\", this._onInterval, this);\n      }\n\n\n      // Start interval\n      this.__scrollTimer.start();\n\n\n      // Auto select based on new cursor position\n      this._autoSelect();\n\n      event.stopPropagation();\n      this._userInteraction = false;\n    },\n\n\n    /**\n     * This method should be connected to the <code>addItem</code> event\n     * of the managed object.\n     *\n     * @param e {qx.event.type.Data} The event object\n     */\n    handleAddItem : function(e)\n    {\n      var item = e.getData();\n      if (this.getMode() === \"one\" && this.isSelectionEmpty()) {\n        this.addItem(item);\n      }\n    },\n\n\n    /**\n     * This method should be connected to the <code>removeItem</code> event\n     * of the managed object.\n     *\n     * @param e {qx.event.type.Data} The event object\n     */\n    handleRemoveItem : function(e) {\n      this.removeItem(e.getData());\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER SUPPORT INTERNALS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Stops all timers, release capture etc. to cleanup drag selection\n     */\n    _cleanup : function()\n    {\n      if (!this.getDrag() && this.__inCapture) {\n        return;\n      }\n\n      // Fire change event if needed\n      if (this.__selectionModified) {\n        this._fireChange(\"tap\");\n      }\n\n      // Remove flags\n      delete this.__inCapture;\n      delete this.__lastRelX;\n      delete this.__lastRelY;\n\n      // Stop capturing\n      this._releaseCapture();\n\n      // Stop timer\n      if (this.__scrollTimer) {\n        this.__scrollTimer.stop();\n      }\n    },\n\n\n    /**\n     * Event listener for timer used by drag selection\n     *\n     * @param e {qx.event.type.Event} Timer event\n     */\n    _onInterval : function(e)\n    {\n      // Scroll by defined block size\n      this._scrollBy(this.__scrollStepX, this.__scrollStepY);\n\n      // Update scroll cache\n      this.__frameScroll = this._getScroll();\n\n      // Auto select based on new scroll position and cursor\n      this._autoSelect();\n    },\n\n\n    /**\n     * Automatically selects items based on the pointer movement during a drag selection\n     */\n    _autoSelect : function()\n    {\n      var inner = this._getDimension();\n\n      // Get current relative Y position and compare it with previous one\n      var relX = Math.max(0, Math.min(this.__pointerX - this.__frameLocation.left, inner.width)) + this.__frameScroll.left;\n      var relY = Math.max(0, Math.min(this.__pointerY - this.__frameLocation.top, inner.height)) + this.__frameScroll.top;\n\n      // Compare old and new relative coordinates (for performance reasons)\n      if (this.__lastRelX === relX && this.__lastRelY === relY) {\n        return;\n      }\n      this.__lastRelX = relX;\n      this.__lastRelY = relY;\n\n      // Cache anchor\n      var anchor = this._getAnchorItem();\n      var lead = anchor;\n\n\n      // Process X-coordinate\n      var moveX = this.__moveDirectionX;\n      var nextX, locationX;\n\n      while (moveX !== 0)\n      {\n        // Find next item to process depending on current scroll direction\n        nextX = moveX > 0 ?\n          this._getRelatedSelectable(lead, \"right\") :\n          this._getRelatedSelectable(lead, \"left\");\n\n        // May be null (e.g. first/last item)\n        if (nextX !== null)\n        {\n          locationX = this._getSelectableLocationX(nextX);\n\n          // Continue when the item is in the visible area\n          if (\n            (moveX > 0 && locationX.left <= relX) ||\n            (moveX < 0 && locationX.right >= relX)\n          )\n          {\n            lead = nextX;\n            continue;\n          }\n        }\n\n        // Otherwise break\n        break;\n      }\n\n\n      // Process Y-coordinate\n      var moveY = this.__moveDirectionY;\n      var nextY, locationY;\n\n      while (moveY !== 0)\n      {\n        // Find next item to process depending on current scroll direction\n        nextY = moveY > 0 ?\n          this._getRelatedSelectable(lead, \"under\") :\n          this._getRelatedSelectable(lead, \"above\");\n\n        // May be null (e.g. first/last item)\n        if (nextY !== null)\n        {\n          locationY = this._getSelectableLocationY(nextY);\n\n          // Continue when the item is in the visible area\n          if (\n            (moveY > 0 && locationY.top <= relY) ||\n            (moveY < 0 && locationY.bottom >= relY)\n          )\n          {\n            lead = nextY;\n            continue;\n          }\n        }\n\n        // Otherwise break\n        break;\n      }\n\n\n      // Differenciate between the two supported modes\n      var mode = this.getMode();\n      if (mode === \"multi\")\n      {\n        // Replace current selection with new range\n        this._selectItemRange(anchor, lead);\n      }\n      else if (mode === \"additive\")\n      {\n        // Behavior depends on the fact whether the\n        // anchor item is selected or not\n        if (this.isItemSelected(anchor)) {\n          this._selectItemRange(anchor, lead, true);\n        } else {\n          this._deselectItemRange(anchor, lead);\n        }\n\n        // Improve performance. This mode does not rely\n        // on full ranges as it always extend the old\n        // selection/deselection.\n        this._setAnchorItem(lead);\n      }\n\n\n      // Fire change event as needed\n      this._fireChange(\"drag\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      KEYBOARD SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} All supported navigation keys\n     *\n     * @lint ignoreReferenceField(__navigationKeys)\n     */\n    __navigationKeys :\n    {\n      Home : 1,\n      Down : 1 ,\n      Right : 1,\n      PageDown : 1,\n      End : 1,\n      Up : 1,\n      Left : 1,\n      PageUp : 1\n    },\n\n\n    /**\n     * This method should be connected to the <code>keypress</code> event\n     * of the managed object.\n     *\n     * @param event {qx.event.type.KeySequence} A valid key sequence event\n     */\n    handleKeyPress : function(event)\n    {\n      // this is a method invoked by an user interaction, so be careful to\n      // set / clear the mark this._userInteraction [BUG #3344]\n      this._userInteraction = true;\n\n      var current, next;\n      var key = event.getKeyIdentifier();\n      var mode = this.getMode();\n\n      // Support both control keys on Mac\n      var isCtrlPressed = event.isCtrlPressed() ||\n        (qx.core.Environment.get(\"os.name\") == \"osx\" && event.isMetaPressed());\n      var isShiftPressed = event.isShiftPressed();\n\n      var consumed = false;\n\n      if (key === \"A\" && isCtrlPressed)\n      {\n        if (mode !== \"single\" && mode !== \"one\")\n        {\n          this._selectAllItems();\n          consumed = true;\n        }\n      }\n      else if (key === \"Escape\")\n      {\n        if (mode !== \"single\" && mode !== \"one\")\n        {\n          this._clearSelection();\n          consumed = true;\n        }\n      }\n      else if (key === \"Space\")\n      {\n        var lead = this.getLeadItem();\n        if (lead != null && !isShiftPressed)\n        {\n          if (isCtrlPressed || mode === \"additive\") {\n            this._toggleInSelection(lead);\n          } else {\n            this._setSelectedItem(lead);\n          }\n          consumed = true;\n        }\n      }\n      else if (this.__navigationKeys[key])\n      {\n        consumed = true;\n        if (mode === \"single\" || mode == \"one\") {\n          current = this._getSelectedItem();\n        } else {\n          current = this.getLeadItem();\n        }\n\n        if (current !== null)\n        {\n          switch(key)\n          {\n            case \"Home\":\n              next = this._getFirstSelectable();\n              break;\n\n            case \"End\":\n              next = this._getLastSelectable();\n              break;\n\n            case \"Up\":\n              next = this._getRelatedSelectable(current, \"above\");\n              break;\n\n            case \"Down\":\n              next = this._getRelatedSelectable(current, \"under\");\n              break;\n\n            case \"Left\":\n              next = this._getRelatedSelectable(current, \"left\");\n              break;\n\n            case \"Right\":\n              next = this._getRelatedSelectable(current, \"right\");\n              break;\n\n            case \"PageUp\":\n              next = this._getPage(current, true);\n              break;\n\n            case \"PageDown\":\n              next = this._getPage(current, false);\n              break;\n          }\n        }\n        else\n        {\n          switch(key)\n          {\n            case \"Home\":\n            case \"Down\":\n            case \"Right\":\n            case \"PageDown\":\n              next = this._getFirstSelectable();\n              break;\n\n            case \"End\":\n            case \"Up\":\n            case \"Left\":\n            case \"PageUp\":\n              next = this._getLastSelectable();\n              break;\n          }\n        }\n\n        // Process result\n        if (next !== null)\n        {\n          switch(mode)\n          {\n            case \"single\":\n            case \"one\":\n              this._setSelectedItem(next);\n              break;\n\n            case \"additive\":\n              this._setLeadItem(next);\n              break;\n\n            case \"multi\":\n              if (isShiftPressed)\n              {\n                var anchor = this._getAnchorItem();\n                if (anchor === null) {\n                  this._setAnchorItem(anchor = this._getFirstSelectable());\n                }\n\n                this._setLeadItem(next);\n                this._selectItemRange(anchor, next, isCtrlPressed);\n              }\n              else\n              {\n                this._setAnchorItem(next);\n                this._setLeadItem(next);\n\n                if (!isCtrlPressed) {\n                  this._setSelectedItem(next);\n                }\n              }\n\n              break;\n          }\n\n          this.__oldScrollTop = this._getScroll().top;\n          this._scrollItemIntoView(next);\n        }\n      }\n\n\n      if (consumed)\n      {\n        // Stop processed events\n        event.stop();\n\n        // Fire change event as needed\n        this._fireChange(\"key\");\n      }\n      this._userInteraction = false;\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SUPPORT FOR ITEM RANGES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds all items to the selection\n     */\n    _selectAllItems : function()\n    {\n      var range = this.getSelectables();\n      for (var i=0, l=range.length; i<l; i++) {\n        this._addToSelection(range[i]);\n      }\n    },\n\n\n    /**\n     * Clears current selection\n     */\n    _clearSelection : function()\n    {\n      var selection = this.__selection;\n      for (var hash in selection) {\n        this._removeFromSelection(selection[hash]);\n      }\n      this.__selection = {};\n    },\n\n\n    /**\n     * Select a range from <code>item1</code> to <code>item2</code>.\n     *\n     * @param item1 {Object} Start with this item\n     * @param item2 {Object} End with this item\n     * @param extend {Boolean?false} Whether the current\n     *    selection should be replaced or extended.\n     */\n    _selectItemRange : function(item1, item2, extend)\n    {\n      var range = this._getSelectableRange(item1, item2);\n\n      // Remove items which are not in the detected range\n      if (!extend)\n      {\n        var selected = this.__selection;\n        var mapped = this.__rangeToMap(range);\n\n        for (var hash in selected)\n        {\n          if (!mapped[hash]) {\n            this._removeFromSelection(selected[hash]);\n          }\n        }\n      }\n\n      // Add new items to the selection\n      for (var i=0, l=range.length; i<l; i++) {\n        this._addToSelection(range[i]);\n      }\n    },\n\n\n    /**\n     * Deselect all items between <code>item1</code> and <code>item2</code>.\n     *\n     * @param item1 {Object} Start with this item\n     * @param item2 {Object} End with this item\n     */\n    _deselectItemRange : function(item1, item2)\n    {\n      var range = this._getSelectableRange(item1, item2);\n      for (var i=0, l=range.length; i<l; i++) {\n        this._removeFromSelection(range[i]);\n      }\n    },\n\n\n    /**\n     * Internal method to convert a range to a map of hash\n     * codes for faster lookup during selection compare routines.\n     *\n     * @param range {Array} List of selectable items\n     */\n    __rangeToMap : function(range)\n    {\n      var mapped = {};\n      var item;\n\n      for (var i=0, l=range.length; i<l; i++)\n      {\n        item = range[i];\n        mapped[this._selectableToHashCode(item)] = item;\n      }\n\n      return mapped;\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SINGLE ITEM QUERY AND MODIFICATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the first selected item. Only makes sense\n     * when using manager in single selection mode.\n     *\n     * @return {var} The selected item (or <code>null</code>)\n     */\n    _getSelectedItem : function()\n    {\n      for (var hash in this.__selection) {\n        return this.__selection[hash];\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Replace current selection with given item.\n     *\n     * @param item {var} Any valid selectable item\n     */\n    _setSelectedItem : function(item)\n    {\n      if (this._isSelectable(item))\n      {\n        // If already selected try to find out if this is the only item\n        var current = this.__selection;\n        var hash = this._selectableToHashCode(item);\n\n        if (!current[hash] || (current.length >= 2))\n        {\n          this._clearSelection();\n          this._addToSelection(item);\n        }\n      }\n    },\n\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MODIFY ITEM SELECTION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds an item to the current selection.\n     *\n     * @param item {Object} Any item\n     */\n    _addToSelection : function(item)\n    {\n      var hash = this._selectableToHashCode(item);\n\n      if (this.__selection[hash] == null && this._isSelectable(item))\n      {\n        this.__selection[hash] = item;\n        this._styleSelectable(item, \"selected\", true);\n\n        this.__selectionModified = true;\n      }\n    },\n\n\n    /**\n     * Toggles the item e.g. remove it when already selected\n     * or select it when currently not.\n     *\n     * @param item {Object} Any item\n     */\n    _toggleInSelection : function(item)\n    {\n      var hash = this._selectableToHashCode(item);\n\n      if (this.__selection[hash] == null)\n      {\n        this.__selection[hash] = item;\n        this._styleSelectable(item, \"selected\", true);\n      }\n      else\n      {\n        delete this.__selection[hash];\n        this._styleSelectable(item, \"selected\", false);\n      }\n\n      this.__selectionModified = true;\n    },\n\n\n    /**\n     * Removes the given item from the current selection.\n     *\n     * @param item {Object} Any item\n     */\n    _removeFromSelection : function(item)\n    {\n      var hash = this._selectableToHashCode(item);\n\n      if (this.__selection[hash] != null)\n      {\n        delete this.__selection[hash];\n        this._styleSelectable(item, \"selected\", false);\n\n        this.__selectionModified = true;\n      }\n    },\n\n\n    /**\n     * Replaces current selection with items from given array.\n     *\n     * @param items {Array} List of items to select\n     */\n    _replaceMultiSelection : function(items)\n    {\n      if (items.length === 0) {\n        this.clearSelection();\n        return;\n      }\n\n      var modified = false;\n\n      // Build map from hash codes and filter non-selectables\n      var selectable, hash;\n      var incoming = {};\n      for (var i=0, l=items.length; i<l; i++)\n      {\n        selectable = items[i];\n        if (this._isSelectable(selectable))\n        {\n          hash = this._selectableToHashCode(selectable);\n          incoming[hash] = selectable;\n        }\n      }\n\n      // Remember last\n      var first = items[0];\n      var last = selectable;\n\n      // Clear old entries from map\n      var current = this.__selection;\n      for (var hash in current)\n      {\n        if (incoming[hash])\n        {\n          // Reduce map to make next loop faster\n          delete incoming[hash];\n        }\n        else\n        {\n          // update internal map\n          selectable = current[hash];\n          delete current[hash];\n\n          // apply styling\n          this._styleSelectable(selectable, \"selected\", false);\n\n          // remember that the selection has been modified\n          modified = true;\n        }\n      }\n\n      // Add remaining selectables to selection\n      for (var hash in incoming)\n      {\n        // update internal map\n        selectable = current[hash] = incoming[hash];\n\n        // apply styling\n        this._styleSelectable(selectable, \"selected\", true);\n\n        // remember that the selection has been modified\n        modified = true;\n      }\n\n      // Do not do anything if selection is equal to previous one\n      if (!modified) {\n        return false;\n      }\n\n      // Scroll last incoming item into view\n      this._scrollItemIntoView(last);\n\n      // Reset anchor and lead item\n      this._setLeadItem(first);\n      this._setAnchorItem(first);\n\n      // Finally fire change event\n      this.__selectionModified = true;\n      this._fireChange();\n    },\n\n\n    /**\n     * Fires the selection change event if the selection has\n     * been modified.\n     *\n     * @param context {String} One of <code>tap</code>, <code>quick</code>,\n     *    <code>drag</code> or <code>key</code> or <code>null</code>\n     */\n    _fireChange : function(context)\n    {\n      if (this.__selectionModified)\n      {\n        // Store context\n        this.__selectionContext = context || null;\n\n        // Fire data event which contains the current selection\n        this.fireDataEvent(\"changeSelection\", this.getSelection());\n        delete this.__selectionModified;\n      }\n    },\n\n\n    /**\n     * Applies the default selection. The default item is the first item.\n     *\n     * @param force {Boolean} Whether the default selection should be forced.\n     *\n     * @return {var} The selected item.\n     */\n    _applyDefaultSelection : function(force)\n    {\n      if (force === true || this.getMode() === \"one\" && this.isSelectionEmpty())\n      {\n        var first = this._getFirstSelectable();\n        if (first != null) {\n          this.selectItem(first);\n        }\n        return first;\n      }\n      return null;\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this._disposeObjects(\"__scrollTimer\");\n    this.__selection = this.__pointerDownOnSelected = this.__anchorItem = null;\n    this.__leadItem = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * A selection manager, which handles the selection in widgets.\n */\nqx.Class.define(\"qx.ui.core.selection.Widget\",\n{\n  extend : qx.ui.core.selection.Abstract,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param widget {qx.ui.core.Widget} The widget to connect to\n   */\n  construct : function(widget)\n  {\n    this.base(arguments);\n\n    this.__widget = widget;\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __widget : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      BASIC SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _isSelectable : function(item) {\n      return this._isItemSelectable(item) && item.getLayoutParent() === this.__widget;\n    },\n\n\n    // overridden\n    _selectableToHashCode : function(item) {\n      return item.$$hash;\n    },\n\n\n    // overridden\n    _styleSelectable : function(item, type, enabled) {\n      enabled ? item.addState(type) : item.removeState(type);\n    },\n\n\n    // overridden\n    _capture : function() {\n      this.__widget.capture();\n    },\n\n\n    // overridden\n    _releaseCapture : function() {\n      this.__widget.releaseCapture();\n    },\n\n\n    /**\n     * Helper to return the selectability of the item concerning the\n     * user interaction.\n     *\n     * @param item {qx.ui.core.Widget} The item to check.\n     * @return {Boolean} true, if the item is selectable.\n     */\n    _isItemSelectable : function(item) {\n      if (this._userInteraction) {\n        return item.isVisible() && item.isEnabled();\n      } else {\n        return item.isVisible();\n      }\n    },\n\n\n    /**\n     * Returns the connected widget.\n     * @return {qx.ui.core.Widget} The widget\n     */\n    _getWidget : function() {\n      return this.__widget;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DIMENSION AND LOCATION\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getLocation : function()\n    {\n      var elem = this.__widget.getContentElement().getDomElement();\n      return elem ? qx.bom.element.Location.get(elem) : null;\n    },\n\n\n    // overridden\n    _getDimension : function() {\n      return this.__widget.getInnerSize();\n    },\n\n\n    // overridden\n    _getSelectableLocationX : function(item)\n    {\n      var computed = item.getBounds();\n      if (computed)\n      {\n        return {\n          left : computed.left,\n          right : computed.left + computed.width\n        };\n      }\n    },\n\n\n    // overridden\n    _getSelectableLocationY : function(item)\n    {\n      var computed = item.getBounds();\n      if (computed)\n      {\n        return {\n          top : computed.top,\n          bottom : computed.top + computed.height\n        };\n      }\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getScroll : function()\n    {\n      return {\n        left : 0,\n        top : 0\n      };\n    },\n\n\n    // overridden\n    _scrollBy : function(xoff, yoff) {\n      // empty implementation\n    },\n\n\n    // overridden\n    _scrollItemIntoView : function(item) {\n      this.__widget.scrollChildIntoView(item);\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      QUERY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getSelectables : function(all)\n    {\n      // if only the user selectables should be returned\n      var oldUserInteraction = false;\n      if (!all) {\n        oldUserInteraction = this._userInteraction;\n        this._userInteraction = true;\n      }\n      var children = this.__widget.getChildren();\n      var result = [];\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        if (this._isItemSelectable(child)) {\n          result.push(child);\n        }\n      }\n\n      // reset to the former user interaction state\n      this._userInteraction = oldUserInteraction;\n      return result;\n    },\n\n\n    // overridden\n    _getSelectableRange : function(item1, item2)\n    {\n      // Fast path for identical items\n      if (item1 === item2) {\n        return [item1];\n      }\n\n      // Iterate over children and collect all items\n      // between the given two (including them)\n      var children = this.__widget.getChildren();\n      var result = [];\n      var active = false;\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        if (child === item1 || child === item2)\n        {\n          if (active)\n          {\n            result.push(child);\n            break;\n          }\n          else\n          {\n            active = true;\n          }\n        }\n\n        if (active && this._isItemSelectable(child)) {\n          result.push(child);\n        }\n      }\n\n      return result;\n    },\n\n\n    // overridden\n    _getFirstSelectable : function()\n    {\n      var children = this.__widget.getChildren();\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        if (this._isItemSelectable(children[i])) {\n          return children[i];\n        }\n      }\n\n      return null;\n    },\n\n\n    // overridden\n    _getLastSelectable : function()\n    {\n      var children = this.__widget.getChildren();\n      for (var i=children.length-1; i>0; i--)\n      {\n        if (this._isItemSelectable(children[i])) {\n          return children[i];\n        }\n      }\n\n      return null;\n    },\n\n\n    // overridden\n    _getRelatedSelectable : function(item, relation)\n    {\n      var vertical = this.__widget.getOrientation() === \"vertical\";\n      var children = this.__widget.getChildren();\n      var index = children.indexOf(item);\n      var sibling;\n\n      if ((vertical && relation === \"above\") || (!vertical && relation === \"left\"))\n      {\n        for (var i=index-1; i>=0; i--)\n        {\n          sibling = children[i];\n          if (this._isItemSelectable(sibling)) {\n            return sibling;\n          }\n        }\n      }\n      else if ((vertical && relation === \"under\") || (!vertical && relation === \"right\"))\n      {\n        for (var i=index+1; i<children.length; i++)\n        {\n          sibling = children[i];\n          if (this._isItemSelectable(sibling)) {\n            return sibling;\n          }\n        }\n      }\n\n      return null;\n    },\n\n\n    // overridden\n    _getPage : function(lead, up)\n    {\n      if (up) {\n        return this._getFirstSelectable();\n      } else {\n        return this._getLastSelectable();\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.__widget = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n\n/**\n * A selection manager, which handles the selection in widgets extending\n * {@link qx.ui.core.scroll.AbstractScrollArea}.\n */\nqx.Class.define(\"qx.ui.core.selection.ScrollArea\",\n{\n  extend : qx.ui.core.selection.Widget,\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      BASIC SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _isSelectable : function(item)\n    {\n      return this._isItemSelectable(item) &&\n        item.getLayoutParent() === this._getWidget().getChildrenContainer();\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DIMENSION AND LOCATION\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getDimension : function() {\n      return this._getWidget().getPaneSize();\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getScroll : function()\n    {\n      var widget = this._getWidget();\n\n      return {\n        left : widget.getScrollX(),\n        top : widget.getScrollY()\n      };\n    },\n\n\n    // overridden\n    _scrollBy : function(xoff, yoff)\n    {\n      var widget = this._getWidget();\n\n      widget.scrollByX(xoff);\n      widget.scrollByY(yoff);\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      QUERY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getPage : function(lead, up)\n    {\n      var selectables = this.getSelectables();\n      var length = selectables.length;\n      var start = selectables.indexOf(lead);\n\n      // Given lead is not a selectable?!?\n      if (start === -1) {\n        throw new Error(\"Invalid lead item: \" + lead);\n      }\n\n      var widget = this._getWidget();\n      var scrollTop = widget.getScrollY();\n      var innerHeight = widget.getInnerSize().height;\n      var top, bottom, found;\n\n      if (up)\n      {\n        var min = scrollTop;\n        var i=start;\n\n        // Loop required to scroll pages up dynamically\n        while(1)\n        {\n          // Iterate through all selectables from start\n          for (; i>=0; i--)\n          {\n            top = widget.getItemTop(selectables[i]);\n\n            // This item is out of the visible block\n            if (top < min)\n            {\n              // Use previous one\n              found = i+1;\n              break;\n            }\n          }\n\n          // Nothing found. Return first item.\n          if (found == null)\n          {\n            var first = this._getFirstSelectable();\n            return first == lead ? null : first;\n          }\n\n          // Found item, but is identical to start or even before start item\n          // Update min position and try on previous page\n          if (found >= start)\n          {\n            // Reduce min by the distance of the lead item to the visible\n            // bottom edge. This is needed instead of a simple subtraction\n            // of the inner height to keep the last lead visible on page key\n            // presses. This is the behavior of native toolkits as well.\n            min -= innerHeight + scrollTop - widget.getItemBottom(lead);\n            found = null;\n            continue;\n          }\n\n          // Return selectable\n          return selectables[found];\n        }\n      }\n      else\n      {\n        var max = innerHeight + scrollTop;\n        var i=start;\n\n        // Loop required to scroll pages down dynamically\n        while(1)\n        {\n          // Iterate through all selectables from start\n          for (; i<length; i++)\n          {\n            bottom = widget.getItemBottom(selectables[i]);\n\n            // This item is out of the visible block\n            if (bottom > max)\n            {\n              // Use previous one\n              found = i-1;\n              break;\n            }\n          }\n\n          // Nothing found. Return last item.\n          if (found == null)\n          {\n            var last = this._getLastSelectable();\n            return last == lead ? null : last;\n          }\n\n          // Found item, but is identical to start or even before start item\n          // Update max position and try on next page\n          if (found <= start)\n          {\n            // Extend max by the distance of the lead item to the visible\n            // top edge. This is needed instead of a simple addition\n            // of the inner height to keep the last lead visible on page key\n            // presses. This is the behavior of native toolkits as well.\n            max += widget.getItemTop(lead) - scrollTop;\n            found = null;\n            continue;\n          }\n\n          // Return selectable\n          return selectables[found];\n        }\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A list of items. Displays an automatically scrolling list for all\n * added {@link qx.ui.form.ListItem} instances. Supports various\n * selection options: single, multi, ...\n */\nqx.Class.define(\"qx.ui.form.List\",\n{\n  extend : qx.ui.core.scroll.AbstractScrollArea,\n  implement : [\n    qx.ui.core.IMultiSelection,\n    qx.ui.form.IForm,\n    qx.ui.form.IField,\n    qx.ui.form.IModelSelection\n  ],\n  include : [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MMultiSelectionHandling,\n    qx.ui.form.MForm,\n    qx.ui.form.MModelSelection\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param horizontal {Boolean?false} Whether the list should be horizontal.\n   */\n  construct : function(horizontal)\n  {\n    this.base(arguments);\n\n    // Create content\n    this.__content = this._createListItemContainer();\n\n    // Used to fire item add/remove events\n    this.__content.addListener(\"addChildWidget\", this._onAddChild, this);\n    this.__content.addListener(\"removeChildWidget\", this._onRemoveChild, this);\n\n    // Add to scrollpane\n    this.getChildControl(\"pane\").add(this.__content);\n\n    // Apply orientation\n    if (horizontal) {\n      this.setOrientation(\"horizontal\");\n    } else {\n      this.initOrientation();\n    }\n\n    // Add keypress listener\n    this.addListener(\"keypress\", this._onKeyPress);\n    this.addListener(\"keyinput\", this._onKeyInput);\n\n    // initialize the search string\n    this.__pressedString = \"\";\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n\n  events :\n  {\n    /**\n     * This event is fired after a list item was added to the list. The\n     * {@link qx.event.type.Data#getData} method of the event returns the\n     * added item.\n     */\n    addItem : \"qx.event.type.Data\",\n\n    /**\n     * This event is fired after a list item has been removed from the list.\n     * The {@link qx.event.type.Data#getData} method of the event returns the\n     * removed item.\n     */\n    removeItem : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"list\"\n    },\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    // overridden\n    width :\n    {\n      refine : true,\n      init : 100\n    },\n\n    // overridden\n    height :\n    {\n      refine : true,\n      init : 200\n    },\n\n    /**\n     * Whether the list should be rendered horizontal or vertical.\n     */\n    orientation :\n    {\n      check : [\"horizontal\", \"vertical\"],\n      init : \"vertical\",\n      apply : \"_applyOrientation\"\n    },\n\n    /** Spacing between the items */\n    spacing :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applySpacing\",\n      themeable : true\n    },\n\n    /** Controls whether the inline-find feature is activated or not */\n    enableInlineFind :\n    {\n      check : \"Boolean\",\n      init : true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    __pressedString : null,\n    __lastKeyPress : null,\n\n    /** @type {qx.ui.core.Widget} The children container */\n    __content : null,\n\n    /** @type {Class} Pointer to the selection manager to use */\n    SELECTION_MANAGER : qx.ui.core.selection.ScrollArea,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    getChildrenContainer : function() {\n      return this.__content;\n    },\n\n    /**\n     * Handle child widget adds on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onAddChild : function(e) {\n      this.fireDataEvent(\"addItem\", e.getData());\n    },\n\n    /**\n     * Handle child widget removes on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onRemoveChild : function(e) {\n      this.fireDataEvent(\"removeItem\", e.getData());\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Used to route external <code>keypress</code> events to the list\n     * handling (in fact the manager of the list)\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     */\n    handleKeyPress : function(e)\n    {\n      if (!this._onKeyPress(e)) {\n        this._getManager().handleKeyPress(e);\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This container holds the list item widgets.\n     *\n     * @return {qx.ui.container.Composite} Container for the list item widgets\n     */\n    _createListItemContainer : function() {\n      return new qx.ui.container.Composite;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applyOrientation : function(value, old)\n    {\n      var content = this.__content;\n\n      // save old layout for disposal\n      var oldLayout = content.getLayout();\n      \n      // Create new layout\n      var horizontal = value === \"horizontal\";\n      var layout = horizontal ? new qx.ui.layout.HBox() : new qx.ui.layout.VBox();\n\n      // Configure content\n      content.setLayout(layout);\n      content.setAllowGrowX(!horizontal);\n      content.setAllowGrowY(horizontal);\n\n      // Configure spacing\n      this._applySpacing(this.getSpacing());\n      \n      // dispose old layout\n      if(oldLayout) {\n        oldLayout.dispose();\n      }\n    },\n\n    // property apply\n    _applySpacing : function(value, old) {\n      this.__content.getLayout().setSpacing(value);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event listener for <code>keypress</code> events.\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     * @return {Boolean} Whether the event was processed\n     */\n    _onKeyPress : function(e)\n    {\n      // Execute action on press <ENTER>\n      if (e.getKeyIdentifier() == \"Enter\" && !e.isAltPressed())\n      {\n        var items = this.getSelection();\n        for (var i=0; i<items.length; i++) {\n          items[i].fireEvent(\"action\");\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FIND SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Handles the inline find - if enabled\n     *\n     * @param e {qx.event.type.KeyInput} key input event\n     */\n    _onKeyInput : function(e)\n    {\n      // do nothing if the find is disabled\n      if (!this.getEnableInlineFind()) {\n        return;\n      }\n\n      // Only useful in single or one selection mode\n      var mode = this.getSelectionMode();\n      if (!(mode === \"single\" || mode === \"one\")) {\n        return;\n      }\n\n      // Reset string after a second of non pressed key\n      if (((new Date).valueOf() - this.__lastKeyPress) > 1000) {\n        this.__pressedString = \"\";\n      }\n\n      // Combine keys the user pressed to a string\n      this.__pressedString += e.getChar();\n\n      // Find matching item\n      var matchedItem = this.findItemByLabelFuzzy(this.__pressedString);\n\n      // if an item was found, select it\n      if (matchedItem) {\n        this.setSelection([matchedItem]);\n      }\n\n      // Store timestamp\n      this.__lastKeyPress = (new Date).valueOf();\n    },\n\n    /**\n     * Takes the given string and tries to find a ListItem\n     * which starts with this string. The search is not case sensitive and the\n     * first found ListItem will be returned. If there could not be found any\n     * qualifying list item, null will be returned.\n     *\n     * @param search {String} The text with which the label of the ListItem should start with\n     * @return {qx.ui.form.ListItem} The found ListItem or null\n     */\n    findItemByLabelFuzzy : function(search)\n    {\n      // lower case search text\n      search = search.toLowerCase();\n\n      // get all items of the list\n      var items = this.getChildren();\n\n      // go threw all items\n      for (var i=0, l=items.length; i<l; i++)\n      {\n        // get the label of the current item\n        var currentLabel = items[i].getLabel();\n\n        // if the label fits with the search text (ignore case, begins with)\n        if (currentLabel && currentLabel.toLowerCase().indexOf(search) == 0)\n        {\n          // just return the first found element\n          return items[i];\n        }\n      }\n\n      // if no element was found, return null\n      return null;\n    },\n\n    /**\n     * Find an item by its {@link qx.ui.basic.Atom#getLabel}.\n     *\n     * @param search {String} A label or any item\n     * @param ignoreCase {Boolean?true} description\n     * @return {qx.ui.form.ListItem} The found ListItem or null\n     */\n    findItem : function(search, ignoreCase)\n    {\n      // lowercase search\n      if (ignoreCase !== false) {\n        search = search.toLowerCase();\n      };\n\n      // get all items of the list\n      var items = this.getChildren();\n      var item;\n\n      // go through all items\n      for (var i=0, l=items.length; i<l; i++)\n      {\n        item = items[i];\n\n        // get the content of the label; text content when rich\n        var label;\n\n        if (item.isRich()) {\n          var control = item.getChildControl(\"label\", true);\n          if (control) {\n            var labelNode = control.getContentElement().getDomElement();\n            if (labelNode) {\n              label = qx.bom.element.Attribute.get(labelNode, \"text\");\n            }\n          }\n\n        } else {\n          label = item.getLabel();\n        }\n\n        if (label != null) {\n          if (label.translate) {\n            label = label.translate();\n          }\n          if (ignoreCase !== false) {\n            label = label.toLowerCase();\n          }\n\n          if (label.toString() == search.toString()) {\n            return item;\n          }\n        }\n      }\n\n      return null;\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this._disposeObjects(\"__content\");\n  }\n});\n"
  ]
}