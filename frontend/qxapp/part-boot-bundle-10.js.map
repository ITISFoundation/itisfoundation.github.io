{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/embed/AbstractIframe.js",
    "../transpiled/qx/ui/embed/Iframe.js",
    "../transpiled/qx/util/ColorUtil.js",
    "../transpiled/qx/ui/layout/Grid.js",
    "../transpiled/qx/ui/form/IField.js",
    "../transpiled/qx/ui/core/ISingleSelection.js",
    "../transpiled/qx/ui/core/MSingleSelectionHandling.js",
    "../transpiled/qx/ui/container/Stack.js"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;AAAC,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;AAGA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,4BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;;AAGC;;;AAGA,IAAA,SAAS,EAAG,mBAAS,MAAT,EACZ;AACE;;AAEA,UAAI,MAAJ,EAAY;AACV,aAAK,SAAL,CAAe,MAAf;AACD;;AAED,WAAK,iBAAL,GAAyB,WAAzB,CAAqC,UAArC,EAAiD,KAAK,YAAtD,EAAoE,IAApE;AACD,KAfF;AAkBC,IAAA,MAAM,EACN;AACE;;;AAGA,cAAS,qBAJX;;AAME;;;;;;;;AAQA,kBAAa;AAdf,KAnBD;AAqCC,IAAA,UAAU,EACV;AACE;;;AAGA,MAAA,MAAM,EACN;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,KAAK,EAAG,cAFV;AAGE,QAAA,IAAI,EAAG;AAHT,OALF;;AAWE;;;AAGA,MAAA,SAAS,EACT;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,IAAI,EAAG,EAFT;AAGE,QAAA,KAAK,EAAG;AAHV;AAfF,KAtCD;AA6DC,IAAA,OAAO,EACP;AACE;;;;;;AAMA,MAAA,iBAAiB,EAAG,6BAAW;AAC7B,cAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACD,OATH;AAYE;AACA,MAAA,YAAY,EAAG,sBAAS,KAAT,EAAgB,GAAhB,EAAqB;AAClC,aAAK,iBAAL,GAAyB,SAAzB,CAAmC,KAAnC;AACD,OAfH;AAkBE;AACA,MAAA,eAAe,EAAG,yBAAS,KAAT,EAAgB,GAAhB,EAAqB;AACrC,aAAK,iBAAL,GAAyB,YAAzB,CAAsC,MAAtC,EAA8C,KAA9C;AACD,OArBH;;AAyBE;;;;;AAKA,MAAA,SAAS,EAAG,qBAAW;AACrB,eAAO,KAAK,iBAAL,GAAyB,SAAzB,EAAP;AACD,OAhCH;;AAmCE;;;;;AAKA,MAAA,WAAW,EAAG,uBAAW;AACvB,eAAO,KAAK,iBAAL,GAAyB,WAAzB,EAAP;AACD,OA1CH;;AA6CE;;;;;AAKA,MAAA,OAAO,EAAG,mBAAW;AACnB,eAAO,KAAK,iBAAL,GAAyB,OAAzB,EAAP;AACD,OApDH;;AAuDE;;;;;AAKA,MAAA,OAAO,EAAG,mBAAW;AACnB,eAAO,KAAK,iBAAL,GAAyB,OAAzB,EAAP;AACD,OA9DH;;AAiEE;;;;AAIA,MAAA,MAAM,EAAG,kBAAW;AAClB,aAAK,iBAAL,GAAyB,MAAzB;AACD,OAvEH;;AAyEE;;;;;AAKA,MAAA,YAAY,EAAE,sBAAS,CAAT,EAAY;AACxB,YAAI,SAAS,GAAG,CAAC,CAAC,OAAF,EAAhB;;AAEA,YAAI,SAAJ,EAAe;AACb,eAAK,SAAL,CAAe,SAAf;AACD;;AAED,aAAK,aAAL,CAAmB,UAAnB,EAA+B,SAA/B;AACD;AAtFH;AA9DD,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,KAAL,CAAW,cAAX,CAA0B,aAA1B,GAA0C,aAA1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,oBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,KAAN,CAAY,cADtB;;AAIC;;;;;;AAMA;;;;AAIA,IAAA,SAAS,EAAG,mBAAS,MAAT,EACZ;AACE,UAAI,MAAM,IAAI,IAAd,EAAoB;AAClB,aAAK,QAAL,GAAgB,MAAhB;AACD;;AAED,wDAAqB,MAArB;AAEA,MAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,WAAtB,CAAkC,QAAQ,CAAC,IAA3C,EAAiD,aAAjD,EAAgE,KAAK,KAArE,EAA4E,IAA5E,EAAkF,IAAlF;AACA,MAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,WAAtB,CAAkC,QAAQ,CAAC,IAA3C,EAAiD,WAAjD,EAA8D,KAAK,OAAnE,EAA4E,IAA5E,EAAkF,IAAlF;AACA,MAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,WAAtB,CAAkC,QAAQ,CAAC,IAA3C,EAAiD,aAAjD,EAAgE,KAAK,OAArE,EAA8E,IAA9E,EAAoF,IAApF;AAEA,WAAK,gBAAL,GAAwB,KAAK,qBAAL,EAAxB;;AAEA,UAAK,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,6BAAxB,CAAL,EACA;AACE,aAAK,eAAL,CAAqB,QAArB,EAA+B,YAC/B;AACE,cAAI,OAAO,GAAG,KAAK,iBAAL,GAAyB,aAAzB,EAAd,CADF,CAGE;;AACA,cAAI,iBAAiB,GAAG,SAApB,iBAAoB,CAAU,cAAV,EACxB;AACE,gBAAI,CAAJ,CADF,CAEE;;AACA,gBAAI,cAAc,CAAC,UAAnB,EACA;AACE,mBAAK,CAAC,GAAG,cAAc,CAAC,UAAf,CAA0B,MAAnC,EAA2C,CAAC,IAAE,CAA9C,EAAiD,EAAE,CAAnD,EAAsD;AACpD,oBAAI,cAAc,CAAC,UAAf,CAA0B,CAA1B,KAAgC,OAApC,EAA6C;AAC3C,yBAAO,IAAP;AACD;AACF;AACF,aAVH,CAWE;;;AACA,gBAAI,cAAc,CAAC,YAAnB,EACA;AACE,mBAAK,CAAC,GAAG,cAAc,CAAC,YAAf,CAA4B,MAArC,EAA6C,CAAC,IAAE,CAAhD,EAAmD,EAAE,CAArD,EAAwD;AACtD,oBAAI,cAAc,CAAC,YAAf,CAA4B,CAA5B,KAAkC,OAAtC,EAA+C;AAC7C,yBAAO,IAAP;AACD;AACF;AACF;;AACD,mBAAO,KAAP;AACD,WAtBD;;AAwBA,cAAI,QAAQ,GAAG,IAAI,gBAAJ,CAAqB,UAAU,eAAV,EACpC;AACE,gBAAI,eAAe,CAAC,IAAhB,CAAqB,iBAArB,CAAJ,EAA6C;AAC3C,mBAAK,uBAAL;AACD;AACF,WALmC,CAKlC,IALkC,CAK7B,IAL6B,CAArB,CAAf,CA5BF,CAmCE;;AACA,cAAI,MAAM,GAAG,KAAK,eAAL,GAAuB,iBAAvB,GAA2C,aAA3C,EAAb;AACA,UAAA,QAAQ,CAAC,OAAT,CAAiB,MAAjB,EAAyB;AAAE,YAAA,SAAS,EAAE;AAAb,WAAzB;AAED,SAxCD,EAwCG,IAxCH;AAyCD,OA3CD,MA4CK;AACL;AACE,eAAK,eAAL,CAAqB,QAArB,EAA+B,YAC/B;AACE,gBAAI,OAAO,GAAG,KAAK,iBAAL,GAAyB,aAAzB,EAAd;AACA,YAAA,EAAE,CAAC,GAAH,CAAO,KAAP,CAAa,iBAAb,CAA+B,OAA/B,EAAwC,iBAAxC,EAA2D,KAAK,kBAAhE;AACD,WAJD,EAIG,IAJH;AAKA,eAAK,kBAAL,GAA0B,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,QAAjB,CAA0B,KAAK,uBAA/B,EAAwD,IAAxD,CAA1B;AACD;AACF,KAjFF;AAoFC,IAAA,UAAU,EACV;AACE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAHF;;AASE;;;;;;AAMA,MAAA,iBAAiB,EACjB;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,IAAI,EAAG;AAFT,OAhBF;;AAsBE;;;;;;;;AAQA,MAAA,UAAU,EACV;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,KAFT;AAGE,QAAA,KAAK,EAAG;AAHV,OA/BF;;AAqCE;;;AAGA,MAAA,SAAS,EACT;AACE,QAAA,KAAK,EAAG,CAAC,MAAD,EAAS,IAAT,EAAe,KAAf,CADV;AAEE,QAAA,QAAQ,EAAG,IAFb;AAGE,QAAA,SAAS,EAAG,IAHd;AAIE,QAAA,KAAK,EAAG;AAJV;AAzCF,KArFD;;AAyIC;;;;;AAMA,IAAA,OAAO,EACP;AACE,MAAA,QAAQ,EAAG,IADb;AAEE,MAAA,gBAAgB,EAAG,IAFrB;AAKE;AACA,MAAA,YAAY,EAAG,sBAAS,IAAT,EAAe,GAAf,EAAoB,KAApB,EAA2B,MAA3B,EACf;AACE,kEAAqB,IAArB,EAA2B,GAA3B,EAAgC,KAAhC,EAAuC,MAAvC;AAEA,YAAI,KAAK,GAAG,IAAZ;AACA,YAAI,MAAM,GAAG,KAAK,SAAL,EAAb;;AAEA,aAAK,gBAAL,CAAsB,SAAtB,CAAgC;AAC9B,kBAAS,IAAI,GAAG,MAAM,CAAC,IAAf,GAAuB,KADD;AAE9B,iBAAQ,GAAG,GAAG,MAAM,CAAC,GAAd,GAAqB,KAFE;AAG9B,mBAAU,KAAK,GAAG,MAAM,CAAC,IAAf,GAAsB,MAAM,CAAC,KAA9B,GAAuC,KAHlB;AAI9B,oBAAW,MAAM,GAAG,MAAM,CAAC,GAAhB,GAAsB,MAAM,CAAC,MAA9B,GAAwC;AAJpB,SAAhC;AAMD,OAnBH;AAsBE;AACA,MAAA,qBAAqB,EAAG,iCACxB;AACE,YAAI,MAAM,GAAG,IAAI,EAAE,CAAC,IAAH,CAAQ,MAAZ,CAAmB,KAAK,QAAxB,CAAb;AACA,QAAA,MAAM,CAAC,WAAP,CAAmB,MAAnB,EAA2B,KAAK,aAAhC,EAA+C,IAA/C;AACA,eAAO,MAAP;AACD,OA5BH;AA+BE;AACA,MAAA,iBAAiB,EAAG,6BAAW;AAC7B,eAAO,KAAK,iBAAL,EAAP;AACD,OAlCH;;AAqCE;;;;;AAKA,MAAA,qBAAqB,EAAG,iCACxB;AACE,YAAI,EAAE,GAAG,IAAI,EAAE,CAAC,IAAH,CAAQ,OAAZ,EAAT;AACA,QAAA,EAAE,CAAC,SAAH,CAAa;AACX,oBAAU,EADC;AAEX,qBAAW;AAFA,SAAb;AAKA,eAAO,EAAP;AACD,OAnDH;;AAsDE;;;;;AAKA,MAAA,aAAa,EAAG,uBAAS,CAAT,EAChB;AACE,aAAK,uBAAL,CAA6B,KAAK,oBAAL,EAA7B,EAA0D,IAA1D;;AACA,aAAK,gBAAL,CAAsB,KAAK,aAAL,EAAtB,EAA4C,IAA5C;;AAEA,aAAK,oBAAL,CAA0B,MAA1B;AACD,OAjEH;;AAsEE;;;;;;AAMA;;;;;;AAMA,MAAA,KAAK,EAAG,iBAAW;AACjB,aAAK,gBAAL,CAAsB,QAAtB,CAA+B,SAA/B,EAA0C,OAA1C;AACD,OApFH;;AAuFE;;;;AAIA,MAAA,OAAO,EAAG,mBAAW;AACnB,aAAK,gBAAL,CAAsB,QAAtB,CAA+B,SAA/B,EAA0C,MAA1C;AACD,OA7FH;;AAgGE;;;;;AAMA;AACA,MAAA,uBAAuB,EAAG,iCAAS,KAAT,EAAgB,GAAhB,EAC1B;AACE,YAAI,KAAK,KAAK,KAAV,IAAmB,GAAG,KAAK,KAA/B,EAAsC;AACpC;AACD;;AAED,YAAI,GAAG,GAAG,KAAK,WAAL,EAAV;;AACA,YAAI,CAAC,GAAL,EAAU;AACR;AACD;;AAED,YAAI;AACF,cAAI,eAAe,GAAG,GAAG,CAAC,eAA1B;AACD,SAFD,CAEE,OAAM,CAAN,EAAS;AACT;AACA;AACD;;AAED,YAAI,GAAG,KAAK,KAAZ,EACA;AACE,UAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,cAAtB,CACE,eADF,EACmB,aADnB,EAEE,KAAK,oBAFP,EAE6B,IAF7B,EAEmC,IAFnC;AAID;;AAED,YAAI,KAAK,KAAK,KAAd,EACA;AACE,UAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,WAAtB,CACE,eADF,EACmB,aADnB,EAEE,KAAK,oBAFP,EAE6B,IAF7B,EAEmC,IAFnC;AAID;AACF,OAxIH;;AA2IE;;;;;AAKA,MAAA,oBAAoB,EAAG,8BAAS,CAAT,EAAY;AACjC,QAAA,CAAC,CAAC,cAAF;AACD,OAlJH;AAqJE;AACA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EAAgB,GAAhB,EACnB;AACE,YAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,YAAxB,CAAJ,EAA2C;AACzC,cAAI,QAAQ,GAAG,KAAK,WAAL,EAAf;;AACA,cAAI,CAAC,QAAL,EAAe;AACb;AACD;;AAED,cACA;AACE,gBAAI,GAAG,KAAK,KAAZ,EAAmB;AACjB,cAAA,EAAE,CAAC,GAAH,CAAO,KAAP,CAAa,oBAAb,CAAkC,QAAlC,EAA4C,MAA5C,EAAqD,YAAW;AAAC,uBAAO,KAAP;AAAc,eAA/E;AACD;;AAED,gBAAI,KAAK,KAAK,KAAd,EAAqB;AACnB,cAAA,EAAE,CAAC,GAAH,CAAO,KAAP,CAAa,iBAAb,CAA+B,QAA/B,EAAyC,MAAzC,EAAkD,YAAW;AAAC,uBAAO,KAAP;AAAc,eAA5E;AACD;AACF,WATD,CASE,OAAO,CAAP,EAAU;AAC+B;AACvC,mBAAK,IAAL,CACE,4EADF;AAGD;AACF;AACF;AACF,OA/KH;;AAkLE;;;;;;AAMA,MAAA,uBAAuB,EAAG,mCAC1B;AACE,YAAI,gBAAgB,GAAG,KAAK,iBAAL,MAA4B,KAAK,iBAAL,GAAyB,aAAzB,EAAnD;;AACA,YAAI,CAAC,gBAAL,EAAuB;AACrB;AACD;;AACD,YAAI,YAAY,GAAG,gBAAgB,CAAC,GAApC,CALF,CAOE;;AACA,YAAI,YAAY,CAAC,MAAb,CAAoB,YAAY,CAAC,MAAb,GAAoB,CAAxC,KAA8C,GAAlD,EAAuD;AACrD,UAAA,YAAY,GAAG,YAAY,CAAC,SAAb,CAAuB,CAAvB,EAA0B,YAAY,CAAC,MAAb,GAAoB,CAA9C,CAAf;AACD;;AAED,YAAI,YAAY,IAAI,KAAK,SAAL,EAApB,EACA;AACE,cAAK,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,cAAxB,KAA2C,MAA3C,IACA,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,cAAxB,KAA2C,IADhD,EAEA;AACE,YAAA,EAAE,CAAC,GAAH,CAAO,MAAP,CAAc,SAAd,CAAwB,gBAAxB,EAA0C,IAA1C;AACD;;AACD,UAAA,gBAAgB,CAAC,GAAjB,GAAuB,KAAK,SAAL,EAAvB;AACD;AACF,OA9MH;AAiNE;AACA,MAAA,eAAe,EAAG,yBAAS,KAAT,EAAgB;AAChC,aAAK,iBAAL,GAAyB,YAAzB,CAAsC,WAAtC,EAAmD,KAAnD;AACD,OApNH;AAuNE;AACA,MAAA,eAAe,EAAG,yBAAS,MAAT,EAClB;AACE,qEAAqB,MAArB;;AACA,YAAI,MAAJ,EAAY;AACV,eAAK,eAAL,GAAuB,iBAAvB,GAA2C,GAA3C,CAA+C,KAAK,gBAApD;AACD;AACF;AA9NH,KAhJD;;AAkXC;;;;;AAMA,IAAA,QAAQ,EAAG,oBACX;AACE,UAAI,KAAK,eAAL,MAA0B,KAAK,gBAAL,CAAsB,SAAtB,EAA9B,EAAiE;AAC/D,aAAK,eAAL,GAAuB,iBAAvB,GAA2C,MAA3C,CAAkD,KAAK,gBAAvD;AACD;;AACD,WAAK,eAAL,CAAqB,kBAArB;;AAEA,MAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,cAAtB,CAAqC,QAAQ,CAAC,IAA9C,EAAoD,aAApD,EAAmE,KAAK,KAAxE,EAA+E,IAA/E,EAAqF,IAArF;AACA,MAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,cAAtB,CAAqC,QAAQ,CAAC,IAA9C,EAAoD,WAApD,EAAiE,KAAK,OAAtE,EAA+E,IAA/E,EAAqF,IAArF;AACA,MAAA,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,cAAtB,CAAqC,QAAQ,CAAC,IAA9C,EAAoD,aAApD,EAAmE,KAAK,OAAxE,EAAiF,IAAjF,EAAuF,IAAvF;AACD;AAlYF,GADA;AA/CA,EAAA,EAAC,CAAC,EAAF,CAAK,KAAL,CAAW,MAAX,CAAkB,aAAlB,GAAkC,aAAlC;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;AAOA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,mBAAnB,EACA;AACC,IAAA,OAAO,EACP;AACE;;;AAGA,MAAA,MAAM,EACN;AACE,QAAA,IAAI,EAAG,qDADT;AAEE,QAAA,IAAI,EAAG,qGAFT;AAGE,QAAA,GAAG,EAAG,0GAHR;AAIE,QAAA,IAAI,EAAG;AAJT,OALF;;AAaE;;;AAGA,MAAA,MAAM,EACN;AACE,QAAA,YAAY,EAAU,IADxB;AAEE,QAAA,aAAa,EAAS,IAFxB;AAGE,QAAA,YAAY,EAAU,IAHxB;AAIE,QAAA,UAAU,EAAY,IAJxB;AAKE,QAAA,UAAU,EAAY,IALxB;AAME,QAAA,eAAe,EAAO,IANxB;AAOE,QAAA,YAAY,EAAU,IAPxB;AAQE,QAAA,UAAU,EAAY,IARxB;AASE,QAAA,WAAW,EAAW,IATxB;AAUE,QAAA,QAAQ,EAAc,IAVxB;AAWE,QAAA,SAAS,EAAa,IAXxB;AAYE,QAAA,aAAa,EAAS,IAZxB;AAaE,QAAA,cAAc,EAAQ,IAbxB;AAcE,QAAA,eAAe,EAAO,IAdxB;AAeE,QAAA,mBAAmB,EAAG,IAfxB;AAgBE,QAAA,cAAc,EAAQ,IAhBxB;AAiBE,QAAA,QAAQ,EAAc,IAjBxB;AAkBE,QAAA,IAAI,EAAkB,IAlBxB;AAmBE,QAAA,QAAQ,EAAc,IAnBxB;AAoBE,QAAA,SAAS,EAAa,IApBxB;AAqBE,QAAA,gBAAgB,EAAM,IArBxB;AAsBE,QAAA,UAAU,EAAY,IAtBxB;AAuBE,QAAA,eAAe,EAAO,IAvBxB;AAwBE,QAAA,iBAAiB,EAAK,IAxBxB;AAyBE,QAAA,YAAY,EAAU,IAzBxB;AA0BE,QAAA,MAAM,EAAgB,IA1BxB;AA2BE,QAAA,WAAW,EAAW,IA3BxB;AA4BE,QAAA,UAAU,EAAY;AA5BxB,OAjBF;;AAiDE;;;;AAIA,MAAA,KAAK,EACL;AACE,QAAA,KAAK,EAAS,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CADhB;AAEE,QAAA,MAAM,EAAQ,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAFhB;AAGE,QAAA,IAAI,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAHhB;AAIE,QAAA,KAAK,EAAS,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAJhB;AAKE,QAAA,MAAM,EAAQ,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CALhB;AAME,QAAA,GAAG,EAAW,CAAE,GAAF,EAAO,CAAP,EAAU,CAAV,CANhB;AAOE,QAAA,MAAM,EAAQ,CAAE,GAAF,EAAO,CAAP,EAAU,GAAV,CAPhB;AAQE,QAAA,OAAO,EAAO,CAAE,GAAF,EAAO,CAAP,EAAU,GAAV,CARhB;AASE,QAAA,KAAK,EAAS,CAAE,CAAF,EAAK,GAAL,EAAU,CAAV,CAThB;AAUE,QAAA,IAAI,EAAU,CAAE,CAAF,EAAK,GAAL,EAAU,CAAV,CAVhB;AAWE,QAAA,KAAK,EAAS,CAAE,GAAF,EAAO,GAAP,EAAY,CAAZ,CAXhB;AAYE,QAAA,MAAM,EAAQ,CAAE,GAAF,EAAO,GAAP,EAAY,CAAZ,CAZhB;AAaE,QAAA,IAAI,EAAU,CAAE,CAAF,EAAK,CAAL,EAAQ,GAAR,CAbhB;AAcE,QAAA,IAAI,EAAU,CAAE,CAAF,EAAK,CAAL,EAAQ,GAAR,CAdhB;AAeE,QAAA,IAAI,EAAU,CAAE,CAAF,EAAK,GAAL,EAAU,GAAV,CAfhB;AAgBE,QAAA,IAAI,EAAU,CAAE,CAAF,EAAK,GAAL,EAAU,GAAV,CAhBhB;AAkBE;AACA,QAAA,WAAW,EAAG,CAAE,CAAC,CAAH,EAAM,CAAC,CAAP,EAAU,CAAC,CAAX,CAnBhB;AAoBE,QAAA,OAAO,EAAO,CAAE,GAAF,EAAO,CAAP,EAAU,GAAV,CApBhB;AAoBmC;AACjC,QAAA,MAAM,EAAQ,CAAE,GAAF,EAAO,GAAP,EAAY,CAAZ,CArBhB;AAsBE,QAAA,KAAK,EAAS,CAAE,GAAF,EAAO,EAAP,EAAW,EAAX;AAtBhB,OAtDF;;AAgFE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,KAAT,EAAgB;AAC7B,eAAO,KAAK,KAAL,CAAW,KAAX,MAAsB,SAA7B;AACD,OAxFH;;AA2FE;;;;;;AAMA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB;AAC9B,eAAO,KAAK,MAAL,CAAY,KAAZ,MAAuB,SAA9B;AACD,OAnGH;;AAsGE;;;;;;AAMA,MAAA,cAAc,EAAG,0BAAW;AAC1B,YAAI,EAAE,CAAC,KAAP,EAAc;AACZ,iBAAO,EAAE,CAAC,KAAH,CAAS,SAAT,CAAmB,wBAAnB,CAAP;AACD;;AACD,eAAO,KAAP;AACD,OAjHH;;AAoHE;;;;;;AAMA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAChB;AACE,YAAI,CAAC,KAAK,cAAL,EAAL,EAA4B;AAC1B,iBAAO,KAAP;AACD;;AAED,YAAI,EAAE,CAAC,KAAH,IAAY,EAAE,CAAC,KAAH,CAAS,OAArB,IAAgC,EAAE,CAAC,KAAH,CAAS,OAAT,CAAiB,KAArD,EAA4D;AAC1D,iBAAO,EAAE,CAAC,KAAH,CAAS,OAAT,CAAiB,KAAjB,CAAuB,WAAvB,GAAqC,SAArC,CAA+C,KAA/C,CAAP;AACD;;AACD,eAAO,KAAP;AACD,OApIH;;AAuIE;;;;;;;;;AASA,MAAA,WAAW,EAAG,qBAAS,GAAT,EACd;AACE,YAAI,KAAK,cAAL,MAAyB,KAAK,aAAL,CAAmB,GAAnB,CAA7B,EAAsD;AACpD,UAAA,GAAG,GAAG,EAAE,CAAC,KAAH,CAAS,OAAT,CAAiB,KAAjB,CAAuB,WAAvB,GAAqC,cAArC,CAAoD,GAApD,CAAN;AACD;;AAED,YAAI,KAAK,YAAL,CAAkB,GAAlB,CAAJ,EACA;AACE,iBAAO,KAAK,KAAL,CAAW,GAAX,EAAgB,MAAhB,EAAP;AACD,SAHD,MAIK,IAAI,KAAK,aAAL,CAAmB,GAAnB,CAAJ,EACL;AACE,gBAAM,IAAI,KAAJ,CAAU,6CAA6C,GAAvD,CAAN;AACD,SAHI,MAIA,IAAI,KAAK,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC/B,iBAAO,KAAK,iBAAL,CAAuB,GAAvB,CAAP;AACD,SAFI,MAGA,IAAI,KAAK,WAAL,CAAiB,GAAjB,CAAJ,EACL;AACE,iBAAO,KAAK,gBAAL,EAAP;AACD,SAHI,MAIA,IAAI,KAAK,YAAL,CAAkB,GAAlB,CAAJ,EACL;AACE,iBAAO,KAAK,iBAAL,EAAP;AACD,SAHI,MAIA,IAAI,KAAK,YAAL,CAAkB,GAAlB,CAAJ,EACL;AACE,iBAAO,KAAK,iBAAL,EAAP;AACD;;AAED,cAAM,IAAI,KAAJ,CAAU,4BAA4B,GAAtC,CAAN;AACD,OA/KH;;AAkLE;;;;;;;;AAQA,MAAA,cAAc,EAAG,wBAAS,GAAT,EACjB;AACE,YAAI,KAAK,YAAL,CAAkB,GAAlB,CAAJ,EACA;AACE,iBAAO,KAAK,KAAL,CAAW,GAAX,CAAP;AACD,SAHD,MAIK,IAAI,KAAK,aAAL,CAAmB,GAAnB,CAAJ,EACL;AACE,gBAAM,IAAI,KAAJ,CAAU,6CAA6C,GAAvD,CAAN;AACD,SAHI,MAIA,IAAI,KAAK,WAAL,CAAiB,GAAjB,CAAJ,EACL;AACE,iBAAO,KAAK,gBAAL,EAAP;AACD,SAHI,MAIA,IAAI,KAAK,YAAL,CAAkB,GAAlB,CAAJ,EACL;AACE,iBAAO,KAAK,iBAAL,EAAP;AACD,SAHI,MAIA,IAAI,KAAK,YAAL,CAAkB,GAAlB,CAAJ,EACL;AACE,iBAAO,KAAK,iBAAL,EAAP;AACD,SAHI,MAIA,IAAI,KAAK,YAAL,CAAkB,GAAlB,CAAJ,EACL;AACE,iBAAO,KAAK,iBAAL,EAAP;AACD;;AAED,cAAM,IAAI,KAAJ,CAAU,4BAA4B,GAAtC,CAAN;AACD,OAtNH;;AAyNE;;;;;;;;;;AAUA,MAAA,iBAAiB,EAAG,2BAAS,GAAT,EAAc;AAChC,eAAO,KAAK,cAAL,CAAoB,KAAK,WAAL,CAAiB,GAAjB,CAApB,CAAP;AACD,OArOH;;AAwOE;;;;;;;AAOA,MAAA,cAAc,EAAG,wBAAS,GAAT,EAAc;AAC7B,eAAO,SAAS,GAAG,CAAC,CAAD,CAAH,KAAW,SAAX,GAAuB,GAAvB,GAA6B,EAAtC,IAA6C,GAA7C,GAAmD,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAnD,GAAmE,GAA1E;AACD,OAjPH;;AAoPE;;;;;;AAMA,MAAA,cAAc,EAAG,wBAAS,GAAT,EACjB;AACE,eACE,MACA,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,GAAf,CAAmB,GAAG,CAAC,CAAD,CAAH,CAAO,QAAP,CAAgB,EAAhB,EAAoB,WAApB,EAAnB,EAAsD,CAAtD,CADA,GAEA,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,GAAf,CAAmB,GAAG,CAAC,CAAD,CAAH,CAAO,QAAP,CAAgB,EAAhB,EAAoB,WAApB,EAAnB,EAAsD,CAAtD,CAFA,GAGA,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,GAAf,CAAmB,GAAG,CAAC,CAAD,CAAH,CAAO,QAAP,CAAgB,EAAhB,EAAoB,WAApB,EAAnB,EAAsD,CAAtD,CAJF;AAMD,OAlQH;;AAqQE;;;;;;AAMA,MAAA,oBAAoB,EAAG,8BAAS,GAAT,EAAc;AACnC,eACE,KAAK,aAAL,CAAmB,GAAnB,KACA,KAAK,YAAL,CAAkB,GAAlB,CADA,IAEA,KAAK,YAAL,CAAkB,GAAlB,CAFA,IAGA,KAAK,YAAL,CAAkB,GAAlB,CAHA,IAIA,KAAK,WAAL,CAAiB,GAAjB,CAJA,IAKA,KAAK,YAAL,CAAkB,GAAlB,CANF;AAOD,OAnRH;;AAsRE;;;;;;AAMA,MAAA,WAAW,EAAG,qBAAS,GAAT,EAAc;AAC1B,eACE,KAAK,aAAL,CAAmB,GAAnB,KACA,KAAK,YAAL,CAAkB,GAAlB,CADA,IAEA,KAAK,YAAL,CAAkB,GAAlB,CAFA,IAGA,KAAK,YAAL,CAAkB,GAAlB,CAHA,IAIA,KAAK,WAAL,CAAiB,GAAjB,CAJA,IAKA,KAAK,YAAL,CAAkB,GAAlB,CANF;AAOD,OApSH;;AAuSE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,GAAT,EAAc;AAC3B,eAAO,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAsB,GAAtB,CAAP;AACD,OA/SH;;AAkTE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,GAAT,EAAc;AAC3B,eAAO,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAsB,GAAtB,CAAP;AACD,OA1TH;;AA6TE;;;;;;AAMA,MAAA,WAAW,EAAG,qBAAS,GAAT,EAAc;AAC1B,eAAO,KAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB,CAAqB,GAArB,CAAP;AACD,OArUH;;AAwUE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,GAAT,EAAc;AAC3B,eAAO,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAsB,GAAtB,CAAP;AACD,OAhVH;;AAmVE;;;;;AAKA,MAAA,gBAAgB,EAAG,4BACnB;AACE,YAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAlB;AACA,YAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAApB;AACA,YAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAnB;AAEA,eAAO,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,CAAP;AACD,OA/VH;;AAiWC;;;;;AAKC,MAAA,iBAAiB,EAAG,6BACpB;AACE,YAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAlB;AACA,YAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAApB;AACA,YAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAnB;AACA,YAAI,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAtB;;AAEA,YAAI,GAAG,KAAK,CAAR,IAAa,KAAK,KAAK,CAAV,GAAc,IAAI,KAAK,CAApC,IAAyC,KAAK,KAAK,CAAvD,EAA0D;AACxD,iBAAO,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,CAAP;AACD;;AAED,eAAO,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,CAAP;AACD,OAlXH;;AAqXE;;;;;AAKA,MAAA,iBAAiB,EAAG,6BACpB;AACE,YAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAR,GAA0B,EAApC;AACA,YAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAR,GAA0B,EAAtC;AACA,YAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAR,GAA0B,EAArC;AAEA,eAAO,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,CAAP;AACD,OAjYH;;AAoYE;;;;;AAKA,MAAA,iBAAiB,EAAG,6BACpB;AACE,YAAI,GAAG,GAAI,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAR,GAA0B,EAA3B,GAAiC,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAnD;AACA,YAAI,KAAK,GAAI,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAR,GAA0B,EAA3B,GAAiC,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAArD;AACA,YAAI,IAAI,GAAI,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAAR,GAA0B,EAA3B,GAAiC,QAAQ,CAAC,MAAM,CAAC,EAAR,EAAY,EAAZ,CAApD;AAEA,eAAO,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,CAAP;AACD,OAhZH;;AAmZE;;;;;;AAMA,MAAA,eAAe,EAAG,yBAAS,KAAT,EAClB;AACE,YAAI,KAAK,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B,iBAAO,KAAK,iBAAL,CAAuB,KAAvB,CAAP;AACD;;AAED,cAAM,IAAI,KAAJ,CAAU,yBAAyB,KAAnC,CAAN;AACD,OAhaH;;AAmaE;;;;;;;AAOA,MAAA,sBAAsB,EAAG,gCAAS,KAAT,EACzB;AACE,YAAI,KAAK,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B,iBAAO,KAAK,cAAL,CAAoB,KAAK,eAAL,CAAqB,KAArB,CAApB,CAAP;AACD;;AACD,eAAO,KAAP;AACD,OAhbH;;AAmbE;;;;;;AAMA,MAAA,eAAe,EAAG,yBAAS,KAAT,EAClB;AACE,YAAI,KAAK,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B,iBAAO,KAAK,iBAAL,CAAuB,KAAvB,CAAP;AACD;;AAED,cAAM,IAAI,KAAJ,CAAU,yBAAyB,KAAnC,CAAN;AACD,OAhcH;;AAmcE;;;;;;AAMA,MAAA,cAAc,EAAG,wBAAS,KAAT,EACjB;AACE,YAAI,KAAK,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B,iBAAO,KAAK,iBAAL,CAAuB,KAAvB,CAAP;AACD;;AAED,YAAI,KAAK,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B,iBAAO,KAAK,iBAAL,CAAuB,KAAvB,CAAP;AACD;;AAED,cAAM,IAAI,KAAJ,CAAU,wBAAwB,KAAlC,CAAN;AACD,OApdH;;AAudE;;;;;;AAMA,MAAA,QAAQ,EAAG,kBAAS,GAAT,EACX;AACE,YAAI,GAAJ,EAAS,UAAT,EAAqB,UAArB;AAEA,YAAI,GAAG,GAAG,GAAG,CAAC,CAAD,CAAb;AACA,YAAI,KAAK,GAAG,GAAG,CAAC,CAAD,CAAf;AACA,YAAI,IAAI,GAAG,GAAG,CAAC,CAAD,CAAd;AAEA,YAAI,IAAI,GAAI,GAAG,GAAG,KAAP,GAAgB,GAAhB,GAAsB,KAAjC;;AAEA,YAAI,IAAI,GAAG,IAAX,EAAiB;AACf,UAAA,IAAI,GAAG,IAAP;AACD;;AAED,YAAI,IAAI,GAAI,GAAG,GAAG,KAAP,GAAgB,GAAhB,GAAsB,KAAjC;;AAEA,YAAI,IAAI,GAAG,IAAX,EAAiB;AACf,UAAA,IAAI,GAAG,IAAP;AACD;;AAED,QAAA,UAAU,GAAG,IAAI,GAAG,KAApB;;AAEA,YAAI,IAAI,IAAI,CAAZ,EAAe;AACb,UAAA,UAAU,GAAG,CAAC,IAAI,GAAG,IAAR,IAAgB,IAA7B;AACD,SAFD,MAEO;AACL,UAAA,UAAU,GAAG,CAAb;AACD;;AAED,YAAI,UAAU,IAAI,CAAlB,EACA;AACE,UAAA,GAAG,GAAG,CAAN;AACD,SAHD,MAKA;AACE,cAAI,IAAI,GAAG,CAAC,IAAI,GAAG,GAAR,KAAgB,IAAI,GAAG,IAAvB,CAAX;AACA,cAAI,MAAM,GAAG,CAAC,IAAI,GAAG,KAAR,KAAkB,IAAI,GAAG,IAAzB,CAAb;AACA,cAAI,KAAK,GAAG,CAAC,IAAI,GAAG,IAAR,KAAiB,IAAI,GAAG,IAAxB,CAAZ;;AAEA,cAAI,GAAG,IAAI,IAAX,EAAiB;AACf,YAAA,GAAG,GAAG,KAAK,GAAG,MAAd;AACD,WAFD,MAEO,IAAI,KAAK,IAAI,IAAb,EAAmB;AACxB,YAAA,GAAG,GAAG,MAAM,IAAN,GAAa,KAAnB;AACD,WAFM,MAEA;AACL,YAAA,GAAG,GAAG,MAAM,MAAN,GAAe,IAArB;AACD;;AAED,UAAA,GAAG,GAAG,GAAG,GAAG,GAAZ;;AAEA,cAAI,GAAG,GAAG,CAAV,EAAa;AACX,YAAA,GAAG,GAAG,GAAG,GAAG,GAAZ;AACD;AACF;;AAED,eAAO,CAAE,IAAI,CAAC,KAAL,CAAW,GAAG,GAAG,GAAjB,CAAF,EAAyB,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,GAAxB,CAAzB,EAAuD,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,GAAxB,CAAvD,CAAP;AACD,OAnhBH;;AAshBE;;;;;;AAMA,MAAA,QAAQ,EAAG,kBAAS,GAAT,EACX;AACE,YAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB;AAEA,YAAI,GAAG,GAAG,GAAG,CAAC,CAAD,CAAH,GAAS,GAAnB;AACA,YAAI,UAAU,GAAG,GAAG,CAAC,CAAD,CAAH,GAAS,GAA1B;AACA,YAAI,UAAU,GAAG,GAAG,CAAC,CAAD,CAAH,GAAS,GAA1B;;AAEA,YAAI,GAAG,IAAI,GAAX,EAAgB;AACd,UAAA,GAAG,IAAI,GAAP;AACD;;AAED,YAAI,UAAU,GAAG,GAAjB,EAAsB;AACpB,UAAA,UAAU,GAAG,GAAb;AACD;;AAED,YAAI,UAAU,GAAG,GAAjB,EAAsB;AACpB,UAAA,UAAU,GAAG,GAAb;AACD;;AAED,YAAI,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,MAAM,UAAjB,CAAV;AACA,YAAI,GAAG,GAAG,EAAV;;AAEA,YAAI,UAAU,IAAI,GAAlB,EACA;AACE,UAAA,GAAG,CAAC,GAAJ,GAAU,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,IAAJ,GAAW,GAAjC;AACD,SAHD,MAKA;AACE,UAAA,GAAG,IAAI,GAAP;AAEA,UAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAJ;AAEA,UAAA,CAAC,GAAG,GAAG,GAAG,CAAV;AAEA,UAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,GAAG,IAAI,MAAM,UAAV,CAAd,CAAJ;AACA,UAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,GAAG,IAAI,MAAO,UAAU,GAAG,CAAxB,CAAd,CAAJ;AACA,UAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,GAAG,IAAI,MAAO,UAAU,IAAI,MAAM,CAAV,CAArB,CAAd,CAAJ;;AAEA,kBAAO,CAAP;AAEE,iBAAK,CAAL;AACE,cAAA,GAAG,CAAC,GAAJ,GAAU,GAAV;AACA,cAAA,GAAG,CAAC,KAAJ,GAAY,CAAZ;AACA,cAAA,GAAG,CAAC,IAAJ,GAAW,CAAX;AACA;;AAEF,iBAAK,CAAL;AACE,cAAA,GAAG,CAAC,GAAJ,GAAU,CAAV;AACA,cAAA,GAAG,CAAC,KAAJ,GAAY,GAAZ;AACA,cAAA,GAAG,CAAC,IAAJ,GAAW,CAAX;AACA;;AAEF,iBAAK,CAAL;AACE,cAAA,GAAG,CAAC,GAAJ,GAAU,CAAV;AACA,cAAA,GAAG,CAAC,KAAJ,GAAY,GAAZ;AACA,cAAA,GAAG,CAAC,IAAJ,GAAW,CAAX;AACA;;AAEF,iBAAK,CAAL;AACE,cAAA,GAAG,CAAC,GAAJ,GAAU,CAAV;AACA,cAAA,GAAG,CAAC,KAAJ,GAAY,CAAZ;AACA,cAAA,GAAG,CAAC,IAAJ,GAAW,GAAX;AACA;;AAEF,iBAAK,CAAL;AACE,cAAA,GAAG,CAAC,GAAJ,GAAU,CAAV;AACA,cAAA,GAAG,CAAC,KAAJ,GAAY,CAAZ;AACA,cAAA,GAAG,CAAC,IAAJ,GAAW,GAAX;AACA;;AAEF,iBAAK,CAAL;AACE,cAAA,GAAG,CAAC,GAAJ,GAAU,GAAV;AACA,cAAA,GAAG,CAAC,KAAJ,GAAY,CAAZ;AACA,cAAA,GAAG,CAAC,IAAJ,GAAW,CAAX;AACA;AApCJ;AAsCD;;AAED,eAAO,CAAC,GAAG,CAAC,GAAL,EAAU,GAAG,CAAC,KAAd,EAAqB,GAAG,CAAC,IAAzB,CAAP;AACD,OA5mBH;;AA+mBE;;;;;AAKA,MAAA,WAAW,EAAG,uBACd;AACE,YAAI,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,GAA3B,CAAR;AACA,YAAI,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,GAA3B,CAAR;AACA,YAAI,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,GAA3B,CAAR;AAEA,eAAO,KAAK,cAAL,CAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApB,CAAP;AACD;AA3nBH;AAFD,GADA;AA3BA,EAAA,EAAC,CAAC,IAAF,CAAO,SAAP,CAAiB,aAAjB,GAAiC,aAAjC;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,mBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,QADvB;;AAQC;;;;;;AAMA;;;;;;AAMA,IAAA,SAAS,EAAG,mBAAS,QAAT,EAAmB,QAAnB,EACZ;AACE;AAEA,WAAK,SAAL,GAAiB,EAAjB;AACA,WAAK,SAAL,GAAiB,EAAjB;;AAEA,UAAI,QAAJ,EAAc;AACZ,aAAK,WAAL,CAAiB,QAAjB;AACD;;AAED,UAAI,QAAJ,EAAc;AACZ,aAAK,WAAL,CAAiB,QAAjB;AACD;AACF,KAlCF;;AAuCC;;;;;AAMA,IAAA,UAAU,EACV;AACE;;;AAGA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,CAFT;AAGE,QAAA,KAAK,EAAG;AAHV,OALF;;AAYE;;;AAGA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,CAFT;AAGE,QAAA,KAAK,EAAG;AAHV;AAhBF,KA9CD;;AAwEC;;;;;AAMA,IAAA,OAAO,EACP;AACE;AACA,MAAA,MAAM,EAAG,IAFX;AAGE,MAAA,SAAS,EAAG,IAHd;AAIE,MAAA,SAAS,EAAG,IAJd;AAME,MAAA,UAAU,EAAG,IANf;AAOE,MAAA,UAAU,EAAG,IAPf;AAQE,MAAA,aAAa,EAAG,IARlB;AASE,MAAA,aAAa,EAAG,IATlB;;AAWE;AACA,MAAA,YAAY,EAAG,IAZjB;;AAcE;AACA,MAAA,WAAW,EAAG,IAfhB;AAmBE;AACA,MAAA,oBAAoB,EAET,8BAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,EACT;AACE,YAAI,gBAAgB,GAAG;AACrB,iBAAQ,CADa;AAErB,oBAAW,CAFU;AAGrB,qBAAY,CAHS;AAIrB,qBAAY;AAJS,SAAvB;AAMA,aAAK,MAAL,CAAY,gBAAgB,CAAC,IAAD,CAAhB,IAA0B,CAAtC,EAAyC,mBAAiB,IAAjB,GAAsB,wCAA/D;AACA,aAAK,aAAL,CAAmB,KAAnB;AACA,aAAK,MAAL,CAAY,KAAK,IAAI,CAArB,EAAwB,wBAAxB;AACD,OAjCL;;AAuCE;;;AAGA,MAAA,WAAW,EAAG,uBACd;AACE,YAAI,IAAI,GAAG,EAAX;AACA,YAAI,QAAQ,GAAG,EAAf;AACA,YAAI,QAAQ,GAAG,EAAf;AAEA,YAAI,WAAW,GAAG,CAAC,CAAnB;AACA,YAAI,WAAW,GAAG,CAAC,CAAnB;;AAEA,YAAI,QAAQ,GAAG,KAAK,kBAAL,EAAf;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAQ,CAAC,GAAC,QAAQ,CAAC,MAAxB,EAAgC,CAAC,GAAC,CAAlC,EAAqC,CAAC,EAAtC,EACA;AACE,cAAI,KAAK,GAAG,QAAQ,CAAC,CAAD,CAApB;AACA,cAAI,KAAK,GAAG,KAAK,CAAC,mBAAN,EAAZ;AAEA,cAAI,GAAG,GAAG,KAAK,CAAC,GAAhB;AACA,cAAI,MAAM,GAAG,KAAK,CAAC,MAAnB;AAEA,UAAA,KAAK,CAAC,OAAN,GAAgB,KAAK,CAAC,OAAN,IAAiB,CAAjC;AACA,UAAA,KAAK,CAAC,OAAN,GAAgB,KAAK,CAAC,OAAN,IAAiB,CAAjC,CARF,CAUE;;AACA,cAAI,GAAG,IAAI,IAAP,IAAe,MAAM,IAAI,IAA7B,EAAmC;AACjC,kBAAM,IAAI,KAAJ,CACJ,mEACA,KADA,GACQ,oBAFJ,CAAN;AAID;;AAED,cAAI,IAAI,CAAC,GAAD,CAAJ,IAAa,IAAI,CAAC,GAAD,CAAJ,CAAU,MAAV,CAAjB,EAAoC;AAClC,kBAAM,IAAI,KAAJ,CACJ,wBAAwB,KAAxB,GAAgC,MAAhC,GACA,6BADA,GACgC,IAAI,CAAC,GAAD,CAAJ,CAAU,MAAV,CADhC,GAEA,kBAFA,GAEqB,GAFrB,GAE2B,IAF3B,GAEkC,MAFlC,GAE2C,SAF3C,GAEuD,IAFvD,GAE8D,GAH1D,CAAN;AAKD;;AAED,eAAK,IAAI,CAAC,GAAC,MAAX,EAAmB,CAAC,GAAC,MAAM,GAAC,KAAK,CAAC,OAAlC,EAA2C,CAAC,EAA5C,EACA;AACE,iBAAK,IAAI,CAAC,GAAC,GAAX,EAAgB,CAAC,GAAC,GAAG,GAAC,KAAK,CAAC,OAA5B,EAAqC,CAAC,EAAtC,EACA;AACE,kBAAI,IAAI,CAAC,CAAD,CAAJ,IAAW,SAAf,EAA0B;AACvB,gBAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAV;AACF;;AAED,cAAA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAa,KAAb;AAEA,cAAA,WAAW,GAAG,IAAI,CAAC,GAAL,CAAS,WAAT,EAAsB,CAAtB,CAAd;AACA,cAAA,WAAW,GAAG,IAAI,CAAC,GAAL,CAAS,WAAT,EAAsB,CAAtB,CAAd;AACD;AACF;;AAED,cAAI,KAAK,CAAC,OAAN,GAAgB,CAApB,EAAuB;AACrB,YAAA,QAAQ,CAAC,IAAT,CAAc,KAAd;AACD;;AAED,cAAI,KAAK,CAAC,OAAN,GAAgB,CAApB,EAAuB;AACrB,YAAA,QAAQ,CAAC,IAAT,CAAc,KAAd;AACD;AACF,SA3DH,CA6DE;AACA;;;AACA,aAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,IAAE,WAAjB,EAA8B,CAAC,EAA/B,EAAmC;AACjC,cAAI,IAAI,CAAC,CAAD,CAAJ,IAAW,SAAf,EAA0B;AACvB,YAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAV;AACF;AACF;;AAED,aAAK,MAAL,GAAc,IAAd;AAEA,aAAK,UAAL,GAAkB,QAAlB;AACA,aAAK,UAAL,GAAkB,QAAlB;AAEA,aAAK,aAAL,GAAqB,WAArB;AACA,aAAK,aAAL,GAAqB,WAArB;AAEA,aAAK,YAAL,GAAoB,IAApB;AACA,aAAK,WAAL,GAAmB,IAAnB,CA9EF,CAgFE;;AACA,eAAO,KAAK,qBAAZ;AACD,OA7HH;;AAgIE;;;;;;;AAOA,MAAA,WAAW,EAAG,qBAAS,GAAT,EAAc,GAAd,EAAmB,KAAnB,EACd;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,GAAf,CAAd;;AAEA,YAAI,CAAC,OAAL,EACA;AACE,eAAK,SAAL,CAAe,GAAf,IAAsB,EAAtB;AACA,eAAK,SAAL,CAAe,GAAf,EAAoB,GAApB,IAA2B,KAA3B;AACD,SAJD,MAMA;AACE,UAAA,OAAO,CAAC,GAAD,CAAP,GAAe,KAAf;AACD;AACF,OApJH;;AAuJE;;;;;;;AAOA,MAAA,cAAc,EAAG,wBAAS,MAAT,EAAiB,GAAjB,EAAsB,KAAtB,EACjB;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,MAAf,CAAd;;AAEA,YAAI,CAAC,OAAL,EACA;AACE,eAAK,SAAL,CAAe,MAAf,IAAyB,EAAzB;AACA,eAAK,SAAL,CAAe,MAAf,EAAuB,GAAvB,IAA8B,KAA9B;AACD,SAJD,MAMA;AACE,UAAA,OAAO,CAAC,GAAD,CAAP,GAAe,KAAf;AACD;AACF,OA3KH;;AA8KE;;;;;;;AAOA,MAAA,UAAU,EAAG,oBAAS,OAAT,EACb;AACE,aAAK,WAAL,CAAiB,OAAjB;AACA,aAAK,WAAL,CAAiB,OAAjB;AACA,eAAO,IAAP;AACD,OA1LH;;AA6LE;;;;;;;;;;;;;;;;AAgBA,MAAA,cAAc,EAAG,wBAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EACjB;AAEE;AACE,eAAK,aAAL,CAAmB,MAAnB,EAA2B,4BAA3B;AACA,eAAK,aAAL,CAAmB,MAAnB,EAA2B,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAA3B;AACA,eAAK,aAAL,CAAmB,MAAnB,EAA2B,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CAA3B;AACD;;AAED,aAAK,cAAL,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,MAAtC;;AACA,aAAK,cAAL,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,MAAtC;;AAEA,aAAK,kBAAL;;AAEA,eAAO,IAAP;AACD,OA5NH;;AA+NE;;;;;;;AAOA,MAAA,cAAc,EAAG,wBAAS,MAAT,EACjB;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,MAAf,KAA0B,EAAxC;AAEA,eAAO;AACL,UAAA,MAAM,EAAG,OAAO,CAAC,MAAR,IAAkB,KADtB;AAEL,UAAA,MAAM,EAAG,OAAO,CAAC,MAAR,IAAkB;AAFtB,SAAP;AAID,OA9OH;;AAiPE;;;;;;;;;;;;;;;;AAgBA,MAAA,WAAW,EAAG,qBAAS,GAAT,EAAc,MAAd,EAAsB,MAAtB,EACd;AAEE;AACE,eAAK,aAAL,CAAmB,GAAnB,EAAwB,yBAAxB;AACA,eAAK,aAAL,CAAmB,MAAnB,EAA2B,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAA3B;AACA,eAAK,aAAL,CAAmB,MAAnB,EAA2B,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CAA3B;AACD;;AAED,aAAK,WAAL,CAAiB,GAAjB,EAAsB,QAAtB,EAAgC,MAAhC;;AACA,aAAK,WAAL,CAAiB,GAAjB,EAAsB,QAAtB,EAAgC,MAAhC;;AAEA,aAAK,kBAAL;;AAEA,eAAO,IAAP;AACD,OAhRH;;AAmRE;;;;;;;AAOA,MAAA,WAAW,EAAG,qBAAS,GAAT,EACd;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,GAAf,KAAuB,EAArC;AAEA,eAAO;AACL,UAAA,MAAM,EAAG,OAAO,CAAC,MAAR,IAAkB,KADtB;AAEL,UAAA,MAAM,EAAG,OAAO,CAAC,MAAR,IAAkB;AAFtB,SAAP;AAID,OAlSH;;AAqSE;;;;;;;;;AASA,MAAA,aAAa,EAAG,uBAAS,GAAT,EAAc,MAAd,EAChB;AACE,YAAI,KAAK,qBAAT,EAAgC;AAC9B,eAAK,WAAL;AACD;;AAED,YAAI,GAAG,GAAG,KAAK,MAAL,CAAY,GAAZ,KAAoB,EAA9B;AACA,eAAO,GAAG,CAAC,MAAD,CAAH,IAAgB,IAAvB;AACD,OAtTH;;AAyTE;;;;;AAKA,MAAA,WAAW,EAAG,uBACd;AACE,YAAI,KAAK,qBAAT,EAAgC;AAC9B,eAAK,WAAL;AACD;;AAED,eAAO,KAAK,aAAL,GAAqB,CAA5B;AACD,OArUH;;AAwUE;;;;;AAKA,MAAA,cAAc,EAAG,0BACjB;AACE,YAAI,KAAK,qBAAT,EAAgC;AAC9B,eAAK,WAAL;AACD;;AAED,eAAO,KAAK,aAAL,GAAqB,CAA5B;AACD,OApVH;;AAuVE;;;;;;;;;;;;AAYA,MAAA,YAAY,EAAG,sBAAS,GAAT,EAAc,MAAd,EACf;AACE,YAAI,MAAM,GAAG,KAAb;AACA,YAAI,MAAM,GAAG,MAAb;AAEA,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,GAAf,CAAd;AACA,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,MAAf,CAAd;AAEA,YAAI,MAAM,GAAG,KAAK,MAAL,CAAY,GAAZ,EAAiB,MAAjB,CAAb;;AACA,YAAI,MAAJ,EACA;AACE,cAAI,WAAW,GAAG;AAChB,YAAA,MAAM,EAAG,MAAM,CAAC,SAAP,EADO;AAEhB,YAAA,MAAM,EAAG,MAAM,CAAC,SAAP;AAFO,WAAlB;AAID,SAND,MAQA;AACE,UAAA,WAAW,GAAG,EAAd;AACD,SAlBH,CAoBE;AACA;;;AACA,YAAI,WAAW,CAAC,MAAhB,EAAwB;AACtB,UAAA,MAAM,GAAG,WAAW,CAAC,MAArB;AACD,SAFD,MAEO,IAAI,OAAO,IAAI,OAAO,CAAC,MAAvB,EAA+B;AACpC,UAAA,MAAM,GAAG,OAAO,CAAC,MAAjB;AACD,SAFM,MAEA,IAAI,OAAO,IAAI,OAAO,CAAC,MAAvB,EAA+B;AACpC,UAAA,MAAM,GAAG,OAAO,CAAC,MAAjB;AACD,SA5BH,CA8BE;AACA;;;AACA,YAAI,WAAW,CAAC,MAAhB,EAAwB;AACtB,UAAA,MAAM,GAAG,WAAW,CAAC,MAArB;AACD,SAFD,MAEO,IAAI,OAAO,IAAI,OAAO,CAAC,MAAvB,EAA+B;AACpC,UAAA,MAAM,GAAG,OAAO,CAAC,MAAjB;AACD,SAFM,MAEA,IAAI,OAAO,IAAI,OAAO,CAAC,MAAvB,EAA+B;AACpC,UAAA,MAAM,GAAG,OAAO,CAAC,MAAjB;AACD;;AAED,eAAO;AACL,UAAA,MAAM,EAAG,MADJ;AAEL,UAAA,MAAM,EAAG;AAFJ,SAAP;AAID,OAhZH;;AAmZE;;;;;;;;AAQA,MAAA,aAAa,EAAG,uBAAS,MAAT,EAAiB,IAAjB,EAChB;AACE,aAAK,cAAL,CAAoB,MAApB,EAA4B,MAA5B,EAAoC,IAApC;;AACA,aAAK,kBAAL;;AACA,eAAO,IAAP;AACD,OAhaH;;AAmaE;;;;;;AAMA,MAAA,aAAa,EAAG,uBAAS,MAAT,EAChB;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,MAAf,KAA0B,EAAxC;AACA,eAAO,OAAO,CAAC,IAAR,KAAiB,SAAjB,GAA6B,OAAO,CAAC,IAArC,GAA4C,CAAnD;AACD,OA7aH;;AAgbE;;;;;;;;AAQA,MAAA,UAAU,EAAG,oBAAS,GAAT,EAAc,IAAd,EACb;AACE,aAAK,WAAL,CAAiB,GAAjB,EAAsB,MAAtB,EAA8B,IAA9B;;AACA,aAAK,kBAAL;;AACA,eAAO,IAAP;AACD,OA7bH;;AAgcE;;;;;;AAMA,MAAA,UAAU,EAAG,oBAAS,GAAT,EACb;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,GAAf,KAAuB,EAArC;AACA,YAAI,OAAO,GAAG,OAAO,CAAC,IAAR,KAAiB,SAAjB,GAA6B,OAAO,CAAC,IAArC,GAA4C,CAA1D;AACA,eAAO,OAAP;AACD,OA3cH;;AA8cE;;;;;;;;AAQA,MAAA,iBAAiB,EAAG,2BAAS,MAAT,EAAiB,QAAjB,EACpB;AACE,aAAK,cAAL,CAAoB,MAApB,EAA4B,UAA5B,EAAwC,QAAxC;;AACA,aAAK,kBAAL;;AACA,eAAO,IAAP;AACD,OA3dH;;AA8dE;;;;;;AAMA,MAAA,iBAAiB,EAAG,2BAAS,MAAT,EACpB;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,MAAf,KAA0B,EAAxC;AACA,eAAO,OAAO,CAAC,QAAR,KAAqB,SAArB,GAAiC,OAAO,CAAC,QAAzC,GAAoD,QAA3D;AACD,OAxeH;;AA2eE;;;;;;;;AAQA,MAAA,cAAc,EAAG,wBAAS,MAAT,EAAiB,KAAjB,EACjB;AACE,aAAK,cAAL,CAAoB,MAApB,EAA4B,OAA5B,EAAqC,KAArC;;AACA,aAAK,kBAAL;;AACA,eAAO,IAAP;AACD,OAxfH;;AA2fE;;;;;;AAMA,MAAA,cAAc,EAAG,wBAAS,MAAT,EACjB;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,MAAf,KAA0B,EAAxC;AACA,eAAO,OAAO,CAAC,KAAR,KAAkB,SAAlB,GAA8B,OAAO,CAAC,KAAtC,GAA8C,IAArD;AACD,OArgBH;;AAwgBE;;;;;;;;AAQA,MAAA,iBAAiB,EAAG,2BAAS,MAAT,EAAiB,QAAjB,EACpB;AACE,aAAK,cAAL,CAAoB,MAApB,EAA4B,UAA5B,EAAwC,QAAxC;;AACA,aAAK,kBAAL;;AACA,eAAO,IAAP;AACD,OArhBH;;AAwhBE;;;;;;AAMA,MAAA,iBAAiB,EAAG,2BAAS,MAAT,EACpB;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,MAAf,KAA0B,EAAxC;AACA,eAAO,OAAO,CAAC,QAAR,IAAoB,CAA3B;AACD,OAliBH;;AAqiBE;;;;;;;;AAQA,MAAA,eAAe,EAAG,yBAAS,GAAT,EAAc,SAAd,EAClB;AACE,aAAK,WAAL,CAAiB,GAAjB,EAAsB,WAAtB,EAAmC,SAAnC;;AACA,aAAK,kBAAL;;AACA,eAAO,IAAP;AACD,OAljBH;;AAqjBE;;;;;;AAMA,MAAA,eAAe,EAAG,yBAAS,GAAT,EAClB;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,GAAf,KAAuB,EAArC;AACA,eAAO,OAAO,CAAC,SAAR,IAAqB,QAA5B;AACD,OA/jBH;;AAkkBE;;;;;;;;AAQA,MAAA,YAAY,EAAG,sBAAS,GAAT,EAAc,MAAd,EACf;AACE,aAAK,WAAL,CAAiB,GAAjB,EAAsB,QAAtB,EAAgC,MAAhC;;AACA,aAAK,kBAAL;;AACA,eAAO,IAAP;AACD,OA/kBH;;AAklBE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,GAAT,EACf;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,GAAf,KAAuB,EAArC;AACA,eAAO,OAAO,CAAC,MAAR,KAAmB,SAAnB,GAA+B,OAAO,CAAC,MAAvC,GAAgD,IAAvD;AACD,OA5lBH;;AA+lBE;;;;;;;;AAQA,MAAA,eAAe,EAAG,yBAAS,GAAT,EAAc,SAAd,EAClB;AACE,aAAK,WAAL,CAAiB,GAAjB,EAAsB,WAAtB,EAAmC,SAAnC;;AACA,aAAK,kBAAL;;AACA,eAAO,IAAP;AACD,OA5mBH;;AA+mBE;;;;;;AAMA,MAAA,eAAe,EAAG,yBAAS,GAAT,EAClB;AACE,YAAI,OAAO,GAAG,KAAK,SAAL,CAAe,GAAf,KAAuB,EAArC;AACA,eAAO,OAAO,CAAC,SAAR,IAAqB,CAA5B;AACD,OAznBH;;AA4nBE;;;;;;AAMA,MAAA,cAAc,EAAG,wBAAS,MAAT,EACjB;AACE,YAAI,IAAI,GAAG,MAAM,CAAC,WAAP,EAAX;AACA,YAAI,QAAQ,GAAG,MAAM,CAAC,aAAP,KAAyB,MAAM,CAAC,cAAP,EAAxC;AACA,YAAI,QAAQ,GAAG,MAAM,CAAC,YAAP,KAAwB,MAAM,CAAC,eAAP,EAAvC;AAEA,YAAI,SAAS,GAAG;AACd,UAAA,MAAM,EAAE,IAAI,CAAC,MAAL,GAAc,QADR;AAEd,UAAA,KAAK,EAAE,IAAI,CAAC,KAAL,GAAa,QAFN;AAGd,UAAA,SAAS,EAAE,IAAI,CAAC,SAAL,GAAiB,QAHd;AAId,UAAA,QAAQ,EAAE,IAAI,CAAC,QAAL,GAAgB,QAJZ;AAKd,UAAA,SAAS,EAAE,IAAI,CAAC,SAAL,GAAiB,QALd;AAMd,UAAA,QAAQ,EAAE,IAAI,CAAC,QAAL,GAAgB;AANZ,SAAhB;AASA,eAAO,SAAP;AACD,OAlpBH;;AAqpBE;;;;;;;;;;;;;AAaA,MAAA,kBAAkB,EAAG,4BAAS,UAAT,EACrB;AACE,YAAI,QAAQ,GAAG,KAAK,WAAL,EAAf;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,KAAK,UAAL,CAAgB,MAAhC,EAAwC,CAAC,GAAC,CAA1C,EAA6C,CAAC,EAA9C,EACA;AACE,cAAI,MAAM,GAAG,KAAK,UAAL,CAAgB,CAAhB,CAAb;;AAEA,cAAI,IAAI,GAAG,KAAK,cAAL,CAAoB,MAApB,CAAX;;AAEA,cAAI,WAAW,GAAG,MAAM,CAAC,mBAAP,EAAlB;AACA,cAAI,SAAS,GAAG,WAAW,CAAC,GAA5B;AAEA,cAAI,cAAc,GAAG,QAAQ,IAAI,WAAW,CAAC,OAAZ,GAAsB,CAA1B,CAA7B;AACA,cAAI,aAAa,GAAG,cAApB;AAEA,cAAI,SAAS,GAAG,EAAhB;;AAEA,eAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,OAA5B,EAAqC,CAAC,EAAtC,EACA;AACE,gBAAI,GAAG,GAAG,WAAW,CAAC,GAAZ,GAAgB,CAA1B;AACA,gBAAI,SAAS,GAAG,UAAU,CAAC,GAAD,CAA1B;AACA,gBAAI,OAAO,GAAG,KAAK,UAAL,CAAgB,GAAhB,CAAd;;AAEA,gBAAI,OAAO,GAAG,CAAd,EACA;AACE;AACA,cAAA,SAAS,CAAC,GAAD,CAAT,GACA;AACE,gBAAA,GAAG,EAAG,SAAS,CAAC,SADlB;AAEE,gBAAA,KAAK,EAAG,SAAS,CAAC,MAFpB;AAGE,gBAAA,GAAG,EAAG,SAAS,CAAC,SAHlB;AAIE,gBAAA,IAAI,EAAE;AAJR,eADA;AAOD;;AAED,YAAA,cAAc,IAAI,SAAS,CAAC,MAA5B;AACA,YAAA,aAAa,IAAI,SAAS,CAAC,SAA3B;AACD,WAjCH,CAmCE;AACA;;;AACA,cAAI,cAAc,GAAG,IAAI,CAAC,MAA1B,EACA;AACE,gBAAI,CAAC,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,OAAf,CAAuB,SAAvB,CAAL,EAAwC;AACtC,kBAAI,aAAa,GAAG,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAb,CAAkB,kBAAlB,CAClB,SADkB,EACP,IAAI,CAAC,MADE,EACM,cADN,CAApB;;AAIA,mBAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,OAA5B,EAAqC,CAAC,EAAtC,EACA;AACE,oBAAI,MAAM,GAAG,aAAa,CAAC,SAAS,GAAC,CAAX,CAAb,GAA6B,aAAa,CAAC,SAAS,GAAC,CAAX,CAAb,CAA2B,MAAxD,GAAiE,CAA9E;AACA,gBAAA,UAAU,CAAC,SAAS,GAAC,CAAX,CAAV,CAAwB,MAAxB,IAAkC,MAAlC;AACD,eATqC,CAUxC;;AACC,aAXD,MAWO;AACL,kBAAI,YAAY,GAAG,QAAQ,IAAI,WAAW,CAAC,OAAZ,GAAsB,CAA1B,CAA3B;AACA,kBAAI,eAAe,GAAG,IAAI,CAAC,MAAL,GAAc,YAApC,CAFK,CAIL;AACA;;AACA,kBAAI,YAAY,GACd,IAAI,CAAC,KAAL,CAAW,eAAe,GAAG,WAAW,CAAC,OAAzC,CADF,CANK,CASL;AACA;;AACA,kBAAI,UAAU,GAAG,CAAjB;AACA,kBAAI,gBAAgB,GAAG,CAAvB;;AACA,mBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,OAAhC,EAAyC,CAAC,EAA1C,EAA8C;AAC5C,oBAAI,aAAa,GAAG,UAAU,CAAC,SAAS,GAAG,CAAb,CAAV,CAA0B,MAA9C;AACA,gBAAA,UAAU,IAAI,aAAd;;AACA,oBAAI,aAAa,GAAG,YAApB,EAAkC;AAChC,kBAAA,gBAAgB;AACjB;AACF,eAnBI,CAqBL;AACA;;;AACA,kBAAI,mBAAmB,GACrB,IAAI,CAAC,KAAL,CAAW,CAAC,eAAe,GAAG,UAAnB,IAAiC,gBAA5C,CADF,CAvBK,CA0BL;;AACA,mBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,OAAhC,EAAyC,CAAC,EAA1C,EAA8C;AAC5C,oBAAI,UAAU,CAAC,SAAS,GAAG,CAAb,CAAV,CAA0B,MAA1B,GAAmC,YAAvC,EAAqD;AACnD,kBAAA,UAAU,CAAC,SAAS,GAAG,CAAb,CAAV,CAA0B,MAA1B,IAAoC,mBAApC;AACD;AACF;AACF;AACF,WAnFH,CAqFE;AACA;;;AACA,cAAI,aAAa,GAAG,IAAI,CAAC,SAAzB,EACA;AACE,gBAAI,aAAa,GAAG,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAb,CAAkB,kBAAlB,CAClB,SADkB,EACP,IAAI,CAAC,SADE,EACS,aADT,CAApB;;AAIA,iBAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,OAA5B,EAAqC,CAAC,EAAtC,EACA;AACE,kBAAI,MAAM,GAAG,aAAa,CAAC,SAAS,GAAC,CAAX,CAAb,GAA6B,aAAa,CAAC,SAAS,GAAC,CAAX,CAAb,CAA2B,MAAxD,GAAiE,CAA9E;AACA,cAAA,UAAU,CAAC,SAAS,GAAC,CAAX,CAAV,CAAwB,SAAxB,IAAqC,MAArC;AACD;AACF;AACF;AACF,OA3wBH;;AA8wBE;;;;;;;;;;;;;AAaA,MAAA,iBAAiB,EAAG,2BAAS,SAAT,EACpB;AACE,YAAI,QAAQ,GAAG,KAAK,WAAL,EAAf;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,KAAK,UAAL,CAAgB,MAAhC,EAAwC,CAAC,GAAC,CAA1C,EAA6C,CAAC,EAA9C,EACA;AACE,cAAI,MAAM,GAAG,KAAK,UAAL,CAAgB,CAAhB,CAAb;;AAEA,cAAI,IAAI,GAAG,KAAK,cAAL,CAAoB,MAApB,CAAX;;AAEA,cAAI,WAAW,GAAG,MAAM,CAAC,mBAAP,EAAlB;AACA,cAAI,YAAY,GAAG,WAAW,CAAC,MAA/B;AAEA,cAAI,aAAa,GAAG,QAAQ,IAAI,WAAW,CAAC,OAAZ,GAAsB,CAA1B,CAA5B;AACA,cAAI,YAAY,GAAG,aAAnB;AAEA,cAAI,SAAS,GAAG,EAAhB;AAEA,cAAI,MAAJ;;AAEA,eAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,OAA5B,EAAqC,CAAC,EAAtC,EACA;AACE,gBAAI,GAAG,GAAG,WAAW,CAAC,MAAZ,GAAmB,CAA7B;AACA,gBAAI,QAAQ,GAAG,SAAS,CAAC,GAAD,CAAxB;AACA,gBAAI,OAAO,GAAG,KAAK,aAAL,CAAmB,GAAnB,CAAd,CAHF,CAKE;;AACA,gBAAI,OAAO,GAAG,CAAd,EACA;AACE,cAAA,SAAS,CAAC,GAAD,CAAT,GACA;AACE,gBAAA,GAAG,EAAG,QAAQ,CAAC,QADjB;AAEE,gBAAA,KAAK,EAAG,QAAQ,CAAC,KAFnB;AAGE,gBAAA,GAAG,EAAG,QAAQ,CAAC,QAHjB;AAIE,gBAAA,IAAI,EAAE;AAJR,eADA;AAOD;;AAED,YAAA,aAAa,IAAI,QAAQ,CAAC,KAA1B;AACA,YAAA,YAAY,IAAI,QAAQ,CAAC,QAAzB;AACD,WAnCH,CAqCE;AACA;;;AACA,cAAI,aAAa,GAAG,IAAI,CAAC,KAAzB,EACA;AACE,gBAAI,aAAa,GAAG,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAb,CAAkB,kBAAlB,CAClB,SADkB,EACP,IAAI,CAAC,KADE,EACK,aADL,CAApB;;AAIA,iBAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,OAA5B,EAAqC,CAAC,EAAtC,EACA;AACE,cAAA,MAAM,GAAG,aAAa,CAAC,YAAY,GAAC,CAAd,CAAb,GAAgC,aAAa,CAAC,YAAY,GAAC,CAAd,CAAb,CAA8B,MAA9D,GAAuE,CAAhF;AACA,cAAA,SAAS,CAAC,YAAY,GAAC,CAAd,CAAT,CAA0B,KAA1B,IAAmC,MAAnC;AACD;AACF,WAlDH,CAoDE;AACA;;;AACA,cAAI,YAAY,GAAG,IAAI,CAAC,QAAxB,EACA;AACE,gBAAI,aAAa,GAAG,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAb,CAAkB,kBAAlB,CAClB,SADkB,EACP,IAAI,CAAC,QADE,EACQ,YADR,CAApB;;AAIA,iBAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,OAA5B,EAAqC,CAAC,EAAtC,EACA;AACE,cAAA,MAAM,GAAG,aAAa,CAAC,YAAY,GAAC,CAAd,CAAb,GAAgC,aAAa,CAAC,YAAY,GAAC,CAAd,CAAb,CAA8B,MAA9D,GAAuE,CAAhF;AACA,cAAA,SAAS,CAAC,YAAY,GAAC,CAAd,CAAT,CAA0B,QAA1B,IAAsC,MAAtC;AACD;AACF;AACF;AACF,OAn2BH;;AAs2BE;;;;;;;AAOA,MAAA,cAAc,EAAG,0BACjB;AACE,YAAI,KAAK,YAAL,IAAqB,IAAzB,EAA+B;AAC7B,iBAAO,KAAK,YAAZ;AACD;;AAED,YAAI,UAAU,GAAG,EAAjB;AAEA,YAAI,WAAW,GAAG,KAAK,aAAvB;AACA,YAAI,WAAW,GAAG,KAAK,aAAvB;;AAEA,aAAK,IAAI,GAAG,GAAC,CAAb,EAAgB,GAAG,IAAE,WAArB,EAAkC,GAAG,EAArC,EACA;AACE,cAAI,SAAS,GAAG,CAAhB;AACA,cAAI,MAAM,GAAG,CAAb;AACA,cAAI,SAAS,GAAG,CAAhB;;AAEA,eAAK,IAAI,GAAG,GAAC,CAAb,EAAgB,GAAG,IAAE,WAArB,EAAkC,GAAG,EAArC,EACA;AACE,gBAAI,MAAM,GAAG,KAAK,MAAL,CAAY,GAAZ,EAAiB,GAAjB,CAAb;;AACA,gBAAI,CAAC,MAAL,EAAa;AACX;AACD,aAJH,CAME;AACA;;;AACA,gBAAI,aAAa,GAAG,MAAM,CAAC,mBAAP,GAA6B,OAA7B,IAAwC,CAA5D;;AACA,gBAAI,aAAa,GAAG,CAApB,EAAuB;AACrB;AACD;;AAED,gBAAI,QAAQ,GAAG,KAAK,cAAL,CAAoB,MAApB,CAAf;;AAEA,gBAAI,KAAK,UAAL,CAAgB,GAAhB,IAAuB,CAA3B,EAA8B;AAC5B,cAAA,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,SAAT,EAAoB,QAAQ,CAAC,SAA7B,CAAZ;AACD,aAFD,MAEO;AACL,cAAA,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,SAAT,EAAoB,QAAQ,CAAC,MAA7B,CAAZ;AACD;;AAED,YAAA,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,QAAQ,CAAC,MAA1B,CAAT;AACD;;AAED,cAAI,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,SAAT,EAAoB,KAAK,eAAL,CAAqB,GAArB,CAApB,CAAhB;AACA,cAAI,SAAS,GAAG,KAAK,eAAL,CAAqB,GAArB,CAAhB;;AAEA,cAAI,KAAK,YAAL,CAAkB,GAAlB,MAA2B,IAA/B,EAAqC;AACnC,gBAAI,MAAM,GAAG,KAAK,YAAL,CAAkB,GAAlB,CAAb;AACD,WAFD,MAEO;AACL,gBAAI,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,SAAT,EAAoB,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,SAAjB,CAApB,CAAb;AACD;;AAED,UAAA,UAAU,CAAC,GAAD,CAAV,GAAkB;AAChB,YAAA,SAAS,EAAG,SADI;AAEhB,YAAA,MAAM,EAAG,MAFO;AAGhB,YAAA,SAAS,EAAG;AAHI,WAAlB;AAKD;;AAED,YAAI,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,eAAK,kBAAL,CAAwB,UAAxB;AACD;;AAED,aAAK,YAAL,GAAoB,UAApB;AACA,eAAO,UAAP;AACD,OA76BH;;AAg7BE;;;;;;;AAOA,MAAA,aAAa,EAAG,yBAChB;AACE,YAAI,KAAK,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,iBAAO,KAAK,WAAZ;AACD;;AAED,YAAI,SAAS,GAAG,EAAhB;AAEA,YAAI,WAAW,GAAG,KAAK,aAAvB;AACA,YAAI,WAAW,GAAG,KAAK,aAAvB;;AAEA,aAAK,IAAI,GAAG,GAAC,CAAb,EAAgB,GAAG,IAAE,WAArB,EAAkC,GAAG,EAArC,EACA;AACE,cAAI,KAAK,GAAG,CAAZ;AACA,cAAI,QAAQ,GAAG,CAAf;AACA,cAAI,QAAQ,GAAG,QAAf;;AAEA,eAAK,IAAI,GAAG,GAAC,CAAb,EAAgB,GAAG,IAAE,WAArB,EAAkC,GAAG,EAArC,EACA;AACE,gBAAI,MAAM,GAAG,KAAK,MAAL,CAAY,GAAZ,EAAiB,GAAjB,CAAb;;AACA,gBAAI,CAAC,MAAL,EAAa;AACX;AACD,aAJH,CAME;AACA;;;AACA,gBAAI,aAAa,GAAG,MAAM,CAAC,mBAAP,GAA6B,OAA7B,IAAwC,CAA5D;;AACA,gBAAI,aAAa,GAAG,CAApB,EAAuB;AACrB;AACD;;AAED,gBAAI,QAAQ,GAAG,KAAK,cAAL,CAAoB,MAApB,CAAf;;AAEA,YAAA,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,QAAT,EAAmB,QAAQ,CAAC,QAA5B,CAAX;AAEA,YAAA,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,QAAQ,CAAC,KAAzB,CAAR;AACD;;AAED,UAAA,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,QAAT,EAAmB,KAAK,iBAAL,CAAuB,GAAvB,CAAnB,CAAX;AACA,UAAA,QAAQ,GAAG,KAAK,iBAAL,CAAuB,GAAvB,CAAX;;AAEA,cAAI,KAAK,cAAL,CAAoB,GAApB,MAA6B,IAAjC,EAAuC;AACrC,gBAAI,KAAK,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAZ;AACD,WAFD,MAEO;AACL,gBAAI,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,QAAT,EAAmB,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,QAAhB,CAAnB,CAAZ;AACD;;AAED,UAAA,SAAS,CAAC,GAAD,CAAT,GAAiB;AACf,YAAA,QAAQ,EAAE,QADK;AAEf,YAAA,KAAK,EAAG,KAFO;AAGf,YAAA,QAAQ,EAAG;AAHI,WAAjB;AAKD;;AAED,YAAI,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,eAAK,iBAAL,CAAuB,SAAvB;AACD;;AAED,aAAK,WAAL,GAAmB,SAAnB;AACA,eAAO,SAAP;AACD,OAn/BH;;AAs/BE;;;;;;;;AAQA,MAAA,qBAAqB,EAAG,+BAAS,KAAT,EACxB;AACE,YAAI,IAAI,GAAG,KAAK,WAAL,EAAX;AACA,YAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,KAAxB;;AAEA,YAAI,IAAI,IAAI,CAAZ,EAAe;AACb,iBAAO,EAAP;AACD,SANH,CAQE;;;AACA,YAAI,SAAS,GAAG,KAAK,aAAL,EAAhB;;AACA,YAAI,SAAS,GAAG,EAAhB;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,SAAS,CAAC,MAA1B,EAAkC,CAAC,GAAC,CAApC,EAAuC,CAAC,EAAxC,EACA;AACE,cAAI,GAAG,GAAG,SAAS,CAAC,CAAD,CAAnB;AACA,cAAI,OAAO,GAAG,KAAK,aAAL,CAAmB,CAAnB,CAAd;;AAEA,cACG,OAAO,IAAI,CAAZ,IACC,GAAG,CAAC,KAAJ,IAAa,GAAG,CAAC,QAAjB,IAA6B,IAAI,GAAG,CADrC,IAEC,GAAG,CAAC,KAAJ,IAAa,GAAG,CAAC,QAAjB,IAA6B,IAAI,GAAG,CAHvC,EAIE;AACA;AACD;;AAED,UAAA,SAAS,CAAC,CAAD,CAAT,GAAc;AACZ,YAAA,GAAG,EAAG,GAAG,CAAC,QADE;AAEZ,YAAA,KAAK,EAAG,GAAG,CAAC,KAFA;AAGZ,YAAA,GAAG,EAAG,GAAG,CAAC,QAHE;AAIZ,YAAA,IAAI,EAAG;AAJK,WAAd;AAMD;;AAED,eAAO,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAb,CAAkB,kBAAlB,CAAqC,SAArC,EAAgD,KAAhD,EAAuD,IAAI,CAAC,KAA5D,CAAP;AACD,OAjiCH;;AAoiCE;;;;;;;;AAQA,MAAA,kBAAkB,EAAG,4BAAS,MAAT,EACrB;AACE,YAAI,IAAI,GAAG,KAAK,WAAL,EAAX;AACA,YAAI,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,MAAzB;;AAEA,YAAI,IAAI,IAAI,CAAZ,EAAe;AACb,iBAAO,EAAP;AACD,SANH,CAQE;;;AACA,YAAI,UAAU,GAAG,KAAK,cAAL,EAAjB;;AACA,YAAI,SAAS,GAAG,EAAhB;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,UAAU,CAAC,MAA3B,EAAmC,CAAC,GAAC,CAArC,EAAwC,CAAC,EAAzC,EACA;AACE,cAAI,GAAG,GAAG,UAAU,CAAC,CAAD,CAApB;AACA,cAAI,OAAO,GAAG,KAAK,UAAL,CAAgB,CAAhB,CAAd;;AAEA,cACG,OAAO,IAAI,CAAZ,IACC,GAAG,CAAC,MAAJ,IAAc,GAAG,CAAC,SAAlB,IAA+B,IAAI,GAAG,CADvC,IAEC,GAAG,CAAC,MAAJ,IAAc,GAAG,CAAC,SAAlB,IAA+B,IAAI,GAAG,CAHzC,EAIE;AACA;AACD;;AAED,UAAA,SAAS,CAAC,CAAD,CAAT,GAAe;AACb,YAAA,GAAG,EAAG,GAAG,CAAC,SADG;AAEb,YAAA,KAAK,EAAG,GAAG,CAAC,MAFC;AAGb,YAAA,GAAG,EAAG,GAAG,CAAC,SAHG;AAIb,YAAA,IAAI,EAAG;AAJM,WAAf;AAMD;;AAED,eAAO,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAb,CAAkB,kBAAlB,CAAqC,SAArC,EAAgD,MAAhD,EAAwD,IAAI,CAAC,MAA7D,CAAP;AACD,OA/kCH;AAklCE;AACA,MAAA,YAAY,EAAG,sBAAS,UAAT,EAAqB,WAArB,EAAkC,OAAlC,EACf;AACE,YAAI,KAAK,qBAAT,EAAgC;AAC9B,eAAK,WAAL;AACD;;AAED,YAAI,IAAI,GAAG,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAxB;AACA,YAAI,QAAQ,GAAG,KAAK,WAAL,EAAf;AACA,YAAI,QAAQ,GAAG,KAAK,WAAL,EAAf,CAPF,CASE;;AACA,YAAI,UAAU,GAAG,KAAK,aAAL,EAAjB;;AACA,YAAI,iBAAiB,GAAG,KAAK,qBAAL,CAA2B,UAA3B,CAAxB;;AAEA,YAAI,SAAS,GAAG,EAAhB;AAEA,YAAI,WAAW,GAAG,KAAK,aAAvB;AACA,YAAI,WAAW,GAAG,KAAK,aAAvB;AAEA,YAAI,MAAJ;;AAEA,aAAK,IAAI,GAAG,GAAC,CAAb,EAAgB,GAAG,IAAE,WAArB,EAAkC,GAAG,EAArC,EACA;AACE,UAAA,MAAM,GAAG,iBAAiB,CAAC,GAAD,CAAjB,GAAyB,iBAAiB,CAAC,GAAD,CAAjB,CAAuB,MAAhD,GAAyD,CAAlE;AACA,UAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,UAAU,CAAC,GAAD,CAAV,CAAgB,KAAhB,GAAwB,MAAzC;AACD,SAxBH,CA0BE;;;AACA,YAAI,WAAW,GAAG,KAAK,cAAL,EAAlB;;AACA,YAAI,iBAAiB,GAAG,KAAK,kBAAL,CAAwB,WAAxB,CAAxB;;AAEA,YAAI,UAAU,GAAG,EAAjB;;AAEA,aAAK,IAAI,GAAG,GAAC,CAAb,EAAgB,GAAG,IAAE,WAArB,EAAkC,GAAG,EAArC,EACA;AACE,UAAA,MAAM,GAAG,iBAAiB,CAAC,GAAD,CAAjB,GAAyB,iBAAiB,CAAC,GAAD,CAAjB,CAAuB,MAAhD,GAAyD,CAAlE;AACA,UAAA,UAAU,CAAC,GAAD,CAAV,GAAkB,WAAW,CAAC,GAAD,CAAX,CAAiB,MAAjB,GAA0B,MAA5C;AACD,SApCH,CAsCE;;;AACA,YAAI,IAAI,GAAG,CAAX;;AACA,aAAK,IAAI,GAAG,GAAC,CAAb,EAAgB,GAAG,IAAE,WAArB,EAAkC,GAAG,EAArC,EACA;AACE,cAAI,GAAG,GAAG,CAAV;;AAEA,eAAK,IAAI,GAAG,GAAC,CAAb,EAAgB,GAAG,IAAE,WAArB,EAAkC,GAAG,EAArC,EACA;AACE,gBAAI,MAAM,GAAG,KAAK,MAAL,CAAY,GAAZ,EAAiB,GAAjB,CAAb,CADF,CAGE;;AACA,gBAAI,CAAC,MAAL,EACA;AACE,cAAA,GAAG,IAAI,UAAU,CAAC,GAAD,CAAV,GAAkB,QAAzB;AACA;AACD;;AAED,gBAAI,WAAW,GAAG,MAAM,CAAC,mBAAP,EAAlB,CAVF,CAYE;AACA;;AACA,gBAAG,WAAW,CAAC,GAAZ,KAAoB,GAApB,IAA2B,WAAW,CAAC,MAAZ,KAAuB,GAArD,EACA;AACE,cAAA,GAAG,IAAI,UAAU,CAAC,GAAD,CAAV,GAAkB,QAAzB;AACA;AACD,aAlBH,CAoBE;;;AACA,gBAAI,SAAS,GAAG,QAAQ,IAAI,WAAW,CAAC,OAAZ,GAAsB,CAA1B,CAAxB;;AACA,iBAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,OAA5B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,cAAA,SAAS,IAAI,SAAS,CAAC,GAAG,GAAC,CAAL,CAAtB;AACD;;AAED,gBAAI,UAAU,GAAG,QAAQ,IAAI,WAAW,CAAC,OAAZ,GAAsB,CAA1B,CAAzB;;AACA,iBAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAC,WAAW,CAAC,OAA5B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,cAAA,UAAU,IAAI,UAAU,CAAC,GAAG,GAAC,CAAL,CAAxB;AACD;;AAED,gBAAI,QAAQ,GAAG,MAAM,CAAC,WAAP,EAAf;AACA,gBAAI,SAAS,GAAG,MAAM,CAAC,YAAP,EAAhB;AACA,gBAAI,UAAU,GAAG,MAAM,CAAC,aAAP,EAAjB;AACA,gBAAI,YAAY,GAAG,MAAM,CAAC,eAAP,EAAnB;AACA,gBAAI,WAAW,GAAG,MAAM,CAAC,cAAP,EAAlB;AAEA,gBAAI,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,QAAQ,CAAC,QAAlB,EAA4B,IAAI,CAAC,GAAL,CAAS,SAAS,GAAC,UAAV,GAAqB,WAA9B,EAA2C,QAAQ,CAAC,QAApD,CAA5B,CAAhB;AACA,gBAAI,UAAU,GAAG,IAAI,CAAC,GAAL,CAAS,QAAQ,CAAC,SAAlB,EAA6B,IAAI,CAAC,GAAL,CAAS,UAAU,GAAC,SAAX,GAAqB,YAA9B,EAA4C,QAAQ,CAAC,SAArD,CAA7B,CAAjB;AAEA,gBAAI,SAAS,GAAG,KAAK,YAAL,CAAkB,GAAlB,EAAuB,GAAvB,CAAhB;AACA,gBAAI,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,4BAAL,CAAkC,SAAS,CAAC,MAA5C,EAAoD,SAApD,EAA+D,SAA/D,EAA0E,UAA1E,EAAsF,WAAtF,CAAtB;AACA,gBAAI,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,0BAAL,CAAgC,SAAS,CAAC,MAA1C,EAAkD,UAAlD,EAA8D,UAA9D,EAA0E,SAA1E,EAAqF,YAArF,CAApB;AAEA,YAAA,MAAM,CAAC,YAAP,CACE,QAAQ,GAAG,OAAO,CAAC,IADrB,EAEE,OAAO,GAAG,OAAO,CAAC,GAFpB,EAGE,SAHF,EAIE,UAJF;AAOA,YAAA,GAAG,IAAI,UAAU,CAAC,GAAD,CAAV,GAAkB,QAAzB;AACD;;AAED,UAAA,IAAI,IAAI,SAAS,CAAC,GAAD,CAAT,GAAiB,QAAzB;AACD;AACF,OAzrCH;AA4rCE;AACA,MAAA,qBAAqB,EAAG,iCACxB;AACE;AAEA,aAAK,WAAL,GAAmB,IAAnB;AACA,aAAK,YAAL,GAAoB,IAApB;AACD,OAnsCH;AAssCE;AACA,MAAA,gBAAgB,EAAG,4BACnB;AACE,YAAI,KAAK,qBAAT,EAAgC;AAC9B,eAAK,WAAL;AACD,SAHH,CAKE;;;AACA,YAAI,SAAS,GAAG,KAAK,aAAL,EAAhB;;AAEA,YAAI,QAAQ,GAAC,CAAb;AAAA,YAAgB,KAAK,GAAC,CAAtB;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,SAAS,CAAC,MAA1B,EAAkC,CAAC,GAAC,CAApC,EAAuC,CAAC,EAAxC,EACA;AACE,cAAI,GAAG,GAAG,SAAS,CAAC,CAAD,CAAnB;;AACA,cAAI,KAAK,aAAL,CAAmB,CAAnB,IAAwB,CAA5B,EAA+B;AAC7B,YAAA,QAAQ,IAAI,GAAG,CAAC,QAAhB;AACD,WAFD,MAEO;AACL,YAAA,QAAQ,IAAI,GAAG,CAAC,KAAhB;AACD;;AAED,UAAA,KAAK,IAAI,GAAG,CAAC,KAAb;AACD,SApBH,CAsBE;;;AACA,YAAI,UAAU,GAAG,KAAK,cAAL,EAAjB;;AAEA,YAAI,SAAS,GAAC,CAAd;AAAA,YAAiB,MAAM,GAAC,CAAxB;;AACA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,UAAU,CAAC,MAA3B,EAAmC,CAAC,GAAC,CAArC,EAAwC,CAAC,EAAzC,EACA;AACE,cAAI,GAAG,GAAG,UAAU,CAAC,CAAD,CAApB;;AAEA,cAAI,KAAK,UAAL,CAAgB,CAAhB,IAAqB,CAAzB,EAA4B;AAC1B,YAAA,SAAS,IAAI,GAAG,CAAC,SAAjB;AACD,WAFD,MAEO;AACL,YAAA,SAAS,IAAI,GAAG,CAAC,MAAjB;AACD;;AAED,UAAA,MAAM,IAAI,GAAG,CAAC,MAAd;AACD;;AAED,YAAI,QAAQ,GAAG,KAAK,WAAL,MAAsB,SAAS,CAAC,MAAV,GAAmB,CAAzC,CAAf;AACA,YAAI,QAAQ,GAAG,KAAK,WAAL,MAAsB,UAAU,CAAC,MAAX,GAAoB,CAA1C,CAAf;AAEA,YAAI,IAAI,GAAG;AACT,UAAA,QAAQ,EAAG,QAAQ,GAAG,QADb;AAET,UAAA,KAAK,EAAG,KAAK,GAAG,QAFP;AAGT,UAAA,SAAS,EAAG,SAAS,GAAG,QAHf;AAIT,UAAA,MAAM,EAAG,MAAM,GAAG;AAJT,SAAX;AAOA,eAAO,IAAP;AACD;AA1vCH,KA/ED;;AA+0CC;;;;;AAMA,IAAA,QAAQ,EAAG,oBACX;AACE,WAAK,MAAL,GAAc,KAAK,SAAL,GAAiB,KAAK,SAAL,GAAiB,KAAK,UAAL,GAC9C,KAAK,UAAL,GAAkB,KAAK,WAAL,GAAmB,KAAK,YAAL,GAAoB,IAD3D;AAED;AAz1CF,GADA;AA3EA,EAAA,EAAC,CAAC,EAAF,CAAK,MAAL,CAAY,IAAZ,CAAiB,aAAjB,GAAiC,aAAjC;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,mBAAnB,EACA;AACC;;;;;AAMA,IAAA,MAAM,EACN;AACE;AACA,qBAAgB;AAFlB,KARD;;AAeC;;;;;AAMA,IAAA,OAAO,EACP;AACE;;;;;;AAMA;;;;;;;AAOA,MAAA,QAAQ,EAAG,kBAAS,KAAT,EAAgB;AACzB,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD,OAhBH;;AAmBE;;;AAGA,MAAA,UAAU,EAAG,sBAAW,CAAE,CAtB5B;;AAyBE;;;;;;;AAOA,MAAA,QAAQ,EAAG,oBAAW,CAAE;AAhC1B;AAtBD,GADA;AAzCA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,MAAV,CAAiB,aAAjB,GAAiC,aAAjC;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;AAIA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,6BAAnB,EACA;AACC;;;;;AAOA,IAAA,MAAM,EACN;AACE;AACA,yBAAoB;AAFtB,KATD;;AAeC;;;;;AAOA,IAAA,OAAO,EACP;AACE;;;;;;;;AAQA,MAAA,YAAY,EAAG,wBAAW;AACxB,eAAO,IAAP;AACD,OAXH;;AAaE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,KAAT,EAAgB;AAC7B,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD,OArBH;;AAuBE;;;AAGA,MAAA,cAAc,EAAG,0BAAW;AAC1B,eAAO,IAAP;AACD,OA5BH;;AA8BE;;;;;;;AAOA,MAAA,UAAU,EAAG,oBAAS,IAAT,EAAe;AAC1B,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD,OAvCH;;AAyCE;;;;;AAKA,MAAA,gBAAgB,EAAG,4BAAW;AAC5B,eAAO,IAAP;AACD,OAhDH;;AAkDE;;;;;;;AAOA,MAAA,cAAc,EAAE,wBAAS,GAAT,EAAc;AAC5B,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD;AA3DH;AAvBD,GADA;AAvBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,gBAAV,CAA2B,aAA3B,GAA2C,aAA3C;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;AAcA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,qCAAf,EACA;AACC;;;;;AAMA,IAAA,MAAM,EACN;AACE;AACA,qBAAgB,oBAFlB;;AAIE;AACA,yBAAoB;AALtB,KARD;;AAiBC;;;;;AAOA,IAAA,OAAO,EACP;AACE;AACA,MAAA,SAAS,EAAG,IAFd;;AAKE;;;;;;AAMA;;;;;;AAMA,MAAA,QAAQ,EAAG,kBAAS,IAAT,EAAe;AACxB,YAAI,SAAS,IAAb,EAAmB;AACjB,eAAK,cAAL;AACA,iBAAO,IAAP;AACD;;AAED,YAAI,IAAI,YAAY,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAA/B,EAAuC;AACrC,eAAK,YAAL,GAAoB,WAApB,CAAgC,IAAhC;;AACA,iBAAO,IAAP;AAED,SAJD,MAIO;AACL,iBAAO,IAAI,SAAJ,CAAc,sDAAd,CAAP;AACD;AACF,OA9BH;;AAgCE;;;;;AAKA,MAAA,QAAQ,EAAG,oBAAW;AACpB,eAAO,KAAK,YAAL,GAAoB,WAApB,MAAqC,IAA5C;AACD,OAvCH;;AAyCE;;;AAGA,MAAA,UAAU,EAAG,sBAAW;AACtB,aAAK,YAAL,GAAoB,aAApB;AACD,OA9CH;;AAgDE;;;;;;;;AAQA,MAAA,YAAY,EAAG,wBAAW;AACxB,YAAI,QAAQ,GAAG,KAAK,YAAL,GAAoB,WAApB,EAAf;;AAEA,YAAI,QAAJ,EAAc;AACZ,iBAAO,CAAC,QAAD,CAAP;AACD,SAFD,MAEO;AACL,iBAAO,EAAP;AACD;AACF,OAhEH;;AAkEE;;;;;;;AAOA,MAAA,YAAY,EAAG,sBAAS,KAAT,EAAgB;AAC7B,gBAAO,KAAK,CAAC,MAAb;AAEE,eAAK,CAAL;AACE,iBAAK,cAAL;AACA;;AACF,eAAK,CAAL;AACE,iBAAK,YAAL,GAAoB,WAApB,CAAgC,KAAK,CAAC,CAAD,CAArC;;AACA;;AACF;AACE,kBAAM,IAAI,KAAJ,CAAU,kEACO,KAAK,CAAC,MADb,GACsB,SADhC,CAAN;AATJ;AAYD,OAtFH;;AAwFE;;;AAGA,MAAA,cAAc,EAAG,0BAAW;AAC1B,aAAK,YAAL,GAAoB,aAApB;AACD,OA7FH;;AA+FE;;;;;;;AAOA,MAAA,UAAU,EAAG,oBAAS,IAAT,EAAe;AAC1B,eAAO,KAAK,YAAL,GAAoB,UAApB,CAA+B,IAA/B,CAAP;AACD,OAxGH;;AA0GE;;;;;AAKA,MAAA,gBAAgB,EAAG,4BAAW;AAC5B,eAAO,KAAK,YAAL,GAAoB,gBAApB,EAAP;AACD,OAjHH;;AAoHE;;;;;;;AAOA,MAAA,cAAc,EAAE,wBAAS,GAAT,EAAc;AAC5B,eAAO,KAAK,YAAL,GAAoB,cAApB,CAAmC,GAAnC,CAAP;AACD,OA7HH;;AAgIE;;;;;;AAOA;;;;;;AAMA,MAAA,iBAAiB,EAAG,2BAAS,CAAT,EAAY;AAC9B,YAAI,QAAQ,GAAG,CAAC,CAAC,OAAF,EAAf;AACA,YAAI,QAAQ,GAAG,CAAC,CAAC,UAAF,EAAf;AACA,aAAK,aAAL,CAAmB,aAAnB,EAAkC,QAAlC,EAA4C,QAA5C;AAEA,QAAA,QAAQ,IAAI,IAAZ,GAAmB,QAAQ,GAAG,EAA9B,GAAmC,QAAQ,GAAG,CAAC,QAAD,CAA9C;AACA,QAAA,QAAQ,IAAI,IAAZ,GAAmB,QAAQ,GAAG,EAA9B,GAAmC,QAAQ,GAAG,CAAC,QAAD,CAA9C;AACA,aAAK,aAAL,CAAmB,iBAAnB,EAAsC,QAAtC,EAAgD,QAAhD;AACD,OArJH;;AAuJE;;;;;;AAMA,MAAA,YAAY,EAAG,wBACf;AACE,YAAI,KAAK,SAAL,IAAkB,IAAtB,EACA;AACE,cAAI,IAAI,GAAG,IAAX;AACA,eAAK,SAAL,GAAiB,IAAI,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,sBAAf,CACjB;AACE,YAAA,QAAQ,EAAG,oBAAW;AACpB,qBAAO,IAAI,CAAC,SAAL,EAAP;AACD,aAHH;AAKE,YAAA,gBAAgB,EAAG,0BAAS,IAAT,EAAe;AAChC,kBAAI,IAAI,CAAC,iBAAT,EAA4B;AAC1B,uBAAO,IAAI,CAAC,iBAAL,CAAuB,IAAvB,CAAP;AACD,eAFD,MAEO;AACL,uBAAO,IAAI,CAAC,SAAL,EAAP;AACD;AACF;AAXH,WADiB,CAAjB;;AAcA,eAAK,SAAL,CAAe,WAAf,CAA2B,gBAA3B,EAA6C,KAAK,iBAAlD,EAAqE,IAArE;AACD;;AACD,aAAK,SAAL,CAAe,sBAAf,CAAsC,KAAK,sBAAL,EAAtC;;AAEA,eAAO,KAAK,SAAZ;AACD;AArLH,KAzBD;;AAkNC;;;;;AAOA,IAAA,QAAQ,EAAG,oBAAW;AACpB,WAAK,eAAL,CAAqB,WAArB;AACD;AA3NF,GADA;AAhCA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,wBAAV,CAAmC,aAAnC,GAAmD,aAAnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,uBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;AAEC,IAAA,SAAS,EAAG,CACV,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADD,EAEV,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,gBAFD,CAFb;AAMC,IAAA,OAAO,EAAG,CACR,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,wBADH,EAER,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,iBAFH,CANX;;AAYC;;;;;AAOA,IAAA,SAAS,EAAG,qBACZ;AACE;;AAEA,WAAK,UAAL,CAAgB,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAjB,EAAhB;;AAEA,WAAK,WAAL,CAAiB,iBAAjB,EAAoC,KAAK,mBAAzC,EAA8D,IAA9D;AACD,KA1BF;;AA6BC;;;;;AAMA,IAAA,UAAU,EACV;AACE;;;;AAIA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,KAFT;AAGE,QAAA,KAAK,EAAG;AAHV;AANF,KApCD;;AAkDC;;;;;AAOA,IAAA,OAAO,EACP;AACE;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAChB;AACE,YAAI,QAAQ,GAAG,KAAK,YAAL,EAAf;;AACA,YAAI,QAAQ,GAAG,KAAK,YAAL,GAAoB,CAApB,CAAf;AACA,YAAI,KAAJ;;AAEA,aAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,QAAQ,CAAC,MAAzB,EAAiC,CAAC,GAAC,CAAnC,EAAsC,CAAC,EAAvC,EACA;AACE,UAAA,KAAK,GAAG,QAAQ,CAAC,CAAD,CAAhB;;AAEA,cAAI,KAAK,IAAI,QAAb,EACA;AACE,gBAAI,KAAJ,EAAW;AACT,cAAA,QAAQ,CAAC,CAAD,CAAR,CAAY,OAAZ;AACD,aAFD,MAEO;AACL,cAAA,QAAQ,CAAC,CAAD,CAAR,CAAY,IAAZ;AACD;AACF;AACF;AACF,OArBH;;AAwBE;;;;;;AAOA;;;;AAIA,MAAA,SAAS,EAAG,qBAAW;AACrB,eAAO,KAAK,WAAL,EAAP;AACD,OArCH;;AAuCE;;;;;;AAMA,MAAA,sBAAsB,EAAG,kCAAW;AAClC,eAAO,IAAP;AACD,OA/CH;;AAiDE;;;;;;AAMA,MAAA,iBAAiB,EAAG,2BAAS,IAAT,EAAe;AACjC,eAAO,IAAP;AACD,OAzDH;;AA2DE;;;;;;;AAOA,MAAA,mBAAmB,EAAG,6BAAS,CAAT,EACtB;AACE,YAAI,GAAG,GAAG,CAAC,CAAC,UAAF,GAAe,CAAf,CAAV;AACA,YAAI,KAAK,GAAG,CAAC,CAAC,OAAF,GAAY,CAAZ,CAAZ;;AAEA,YAAI,GAAJ,EACA;AACE,cAAI,KAAK,SAAL,EAAJ,EAAsB;AACpB,YAAA,GAAG,CAAC,OAAJ;AACD,WAFD,MAEO;AACL,YAAA,GAAG,CAAC,IAAJ;AACD;AACF;;AAED,YAAI,KAAJ,EAAW;AACT,UAAA,KAAK,CAAC,IAAN;AACD;AACF,OAnFH;AAsFE;AACA,MAAA,cAAc,EAAG,wBAAS,KAAT,EAAgB;AAC/B,YAAI,QAAQ,GAAG,KAAK,YAAL,GAAoB,CAApB,CAAf;;AAEA,YAAI,CAAC,QAAL,EAAe;AACb,eAAK,YAAL,CAAkB,CAAC,KAAD,CAAlB;AACD,SAFD,MAEO,IAAI,QAAQ,KAAK,KAAjB,EAAwB;AAC7B,cAAI,KAAK,SAAL,EAAJ,EAAsB;AACpB,YAAA,KAAK,CAAC,OAAN;AACD,WAFD,MAEO;AACL,YAAA,KAAK,CAAC,IAAN;AACD;AACF;AACF,OAnGH;AAsGE;AACA,MAAA,iBAAiB,EAAG,2BAAS,KAAT,EAAgB;AAClC,YAAI,KAAK,YAAL,GAAoB,CAApB,MAA2B,KAA/B,EAAsC;AACpC,cAAI,KAAK,GAAG,KAAK,YAAL,GAAoB,CAApB,CAAZ;;AAEA,cAAI,KAAJ,EAAW;AACT,iBAAK,YAAL,CAAkB,CAAC,KAAD,CAAlB;AACD,WAFD,MAEO;AACL,iBAAK,cAAL;AACD;AACF;AACF,OAjHH;;AAoHE;;;;;;AAMA;;;AAGA,MAAA,QAAQ,EAAG,oBACX;AACE,YAAI,QAAQ,GAAG,KAAK,YAAL,GAAoB,CAApB,CAAf;AACA,YAAI,EAAE,GAAG,KAAK,QAAL,CAAc,QAAd,IAAwB,CAAjC;;AACA,YAAI,QAAQ,GAAG,KAAK,YAAL,EAAf;;AAEA,YAAI,EAAE,GAAG,CAAT,EAAY;AACV,UAAA,EAAE,GAAG,QAAQ,CAAC,MAAT,GAAkB,CAAvB;AACD;;AAED,YAAI,IAAI,GAAG,QAAQ,CAAC,EAAD,CAAnB;AACA,aAAK,YAAL,CAAkB,CAAC,IAAD,CAAlB;AACD,OAzIH;;AA2IE;;;AAGA,MAAA,IAAI,EAAG,gBACP;AACE,YAAI,QAAQ,GAAG,KAAK,YAAL,GAAoB,CAApB,CAAf;AACA,YAAI,EAAE,GAAG,KAAK,QAAL,CAAc,QAAd,IAAwB,CAAjC;;AACA,YAAI,QAAQ,GAAG,KAAK,YAAL,EAAf;;AAEA,YAAI,IAAI,GAAG,QAAQ,CAAC,EAAD,CAAR,IAAgB,QAAQ,CAAC,CAAD,CAAnC;AAEA,aAAK,YAAL,CAAkB,CAAC,IAAD,CAAlB;AACD;AAvJH;AA1DD,GADA;AA7DA,EAAA,EAAC,CAAC,EAAF,CAAK,SAAL,CAAe,KAAf,CAAqB,aAArB,GAAqC,aAArC",
  "file": "build-output/qxapp/part-boot-bundle-10.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Til Schneider (til132)\n     * Jonathan Weiß (jonathan_rass)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Abstract base class for iframe widgets.\n */\nqx.Class.define(\"qx.ui.embed.AbstractIframe\",\n{\n  extend : qx.ui.core.Widget,\n\n  /**\n   * @param source {String} URL which should initially set.\n   */\n  construct : function(source)\n  {\n    this.base(arguments);\n\n    if (source) {\n      this.setSource(source);\n    }\n\n    this._getIframeElement().addListener(\"navigate\", this.__onNavigate, this);\n  },\n\n\n  events:\n  {\n    /**\n     * The \"load\" event is fired after the iframe content has successfully been loaded.\n     */\n    \"load\" : \"qx.event.type.Event\",\n\n    /**\n    * The \"navigate\" event is fired whenever the location of the iframe\n    * changes.\n    *\n    * Useful to track user navigation and internally used to keep the source\n    * property in sync. Only works when the destination source is of same\n    * origin than the page embedding the iframe.\n    */\n    \"navigate\" : \"qx.event.type.Data\"\n  },\n\n\n  properties :\n  {\n    /**\n     * Source URL of the iframe.\n     */\n    source :\n    {\n      check : \"String\",\n      apply : \"_applySource\",\n      init : \"about:blank\"\n    },\n\n    /**\n     * Name of the iframe.\n     */\n    frameName :\n    {\n      check : \"String\",\n      init : \"\",\n      apply : \"_applyFrameName\"\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Get the Element wrapper for the iframe\n     *\n     * @abstract\n     * @return {qx.html.Iframe} the iframe element wrapper\n     */\n    _getIframeElement : function() {\n      throw new Error(\"Abstract method call\");\n    },\n\n\n    // property apply\n    _applySource : function(value, old) {\n      this._getIframeElement().setSource(value);\n    },\n\n\n    // property apply\n    _applyFrameName : function(value, old) {\n      this._getIframeElement().setAttribute(\"name\", value);\n    },\n\n\n\n    /**\n     * Get the DOM window object of an iframe.\n     *\n     * @return {Window} The DOM window object of the iframe.\n     */\n    getWindow : function() {\n      return this._getIframeElement().getWindow();\n    },\n\n\n    /**\n     * Get the DOM document object of an iframe.\n     *\n     * @return {Document} The DOM document object of the iframe.\n     */\n    getDocument : function() {\n      return this._getIframeElement().getDocument();\n    },\n\n\n    /**\n     * Get the HTML body element of the iframe.\n     *\n     * @return {Element} The DOM node of the <code>body</code> element of the iframe.\n     */\n    getBody : function() {\n      return this._getIframeElement().getBody();\n    },\n\n\n    /**\n     * Get the current name.\n     *\n     * @return {String} The iframe's name.\n     */\n    getName : function() {\n      return this._getIframeElement().getName();\n    },\n\n\n    /**\n     * Reload the contents of the iframe.\n     *\n     */\n    reload : function() {\n      this._getIframeElement().reload();\n    },\n\n    /**\n    * Handle user navigation. Sync actual URL of iframe with source property.\n    *\n    * @param e {qx.event.type.Data} navigate event\n    */\n    __onNavigate: function(e) {\n      var actualUrl = e.getData();\n\n      if (actualUrl) {\n        this.setSource(actualUrl);\n      }\n\n      this.fireDataEvent(\"navigate\", actualUrl);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Til Schneider (til132)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Container widget for internal frames (iframes).\n * An iframe can display any HTML page inside the widget.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n * var document = this.getRoot();\n * var iframe = new qx.ui.embed.Iframe(\"http://www.qooxdoo.org\");\n * document.add(iframe);\n * </pre>\n *\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/iframe.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n * \n * \n * *Notes*\n * When modifying this file, note that the test qx.test.ui.embed.Iframe.testSyncSourceAfterDOMMove\n * has been disabled under Chrome because of problems with Travis and Github.  Changes to this file\n * should be tested manually against that test.\n */\nqx.Class.define(\"qx.ui.embed.Iframe\",\n{\n  extend : qx.ui.embed.AbstractIframe,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @ignore(MutationObserver)\n   * @param source {String} URL which should initially set.\n   */\n  construct : function(source)\n  {\n    if (source != null) {\n      this.__source = source;\n    }\n\n    this.base(arguments, source);\n\n    qx.event.Registration.addListener(document.body, \"pointerdown\", this.block, this, true);\n    qx.event.Registration.addListener(document.body, \"pointerup\", this.release, this, true);\n    qx.event.Registration.addListener(document.body, \"losecapture\", this.release, this, true);\n\n    this.__blockerElement = this._createBlockerElement();\n\n    if ( qx.core.Environment.get(\"ecmascript.mutationobserver\") )\n    {\n      this.addListenerOnce(\"appear\", function ()\n      {\n        var element = this.getContentElement().getDomElement();\n\n        // Mutation record check callback\n        var isDOMNodeInserted = function (mutationRecord)\n        {\n          var i;\n          // 'our' iframe was either added...\n          if (mutationRecord.addedNodes)\n          {\n            for (i = mutationRecord.addedNodes.length; i>=0; --i) {\n              if (mutationRecord.addedNodes[i] == element) {\n                return true;\n              }\n            }\n          }\n          // ...or removed\n          if (mutationRecord.removedNodes)\n          {\n            for (i = mutationRecord.removedNodes.length; i>=0; --i) {\n              if (mutationRecord.removedNodes[i] == element) {\n                return true;\n              }\n            }\n          }\n          return false;\n        };\n\n        var observer = new MutationObserver(function (mutationRecords)\n        {\n          if (mutationRecords.some(isDOMNodeInserted)) {\n            this._syncSourceAfterDOMMove();\n          }\n        }.bind(this));\n\n        // Observe parent element\n        var parent = this.getLayoutParent().getContentElement().getDomElement();\n        observer.observe(parent, { childList: true });\n\n      }, this);\n    }\n    else // !qx.core.Environment.get(\"ecmascript.mutationobserver\")\n    {\n      this.addListenerOnce(\"appear\", function ()\n      {\n        var element = this.getContentElement().getDomElement();\n        qx.bom.Event.addNativeListener(element, \"DOMNodeInserted\", this._onDOMNodeInserted);\n      }, this);\n      this._onDOMNodeInserted = qx.lang.Function.listener(this._syncSourceAfterDOMMove, this);\n    }\n  },\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"iframe\"\n    },\n\n\n    /**\n     * Whether to show the frame's native context menu.\n     *\n     * Note: This only works if the iframe source is served from the same domain\n     * as the main application.\n     */\n    nativeContextMenu :\n    {\n      refine: true,\n      init : false\n    },\n\n\n    /**\n     * If the user presses F1 in IE by default the onhelp event is fired and\n     * IE’s help window is opened. Setting this property to <code>false</code>\n     * prevents this behavior.\n     *\n     * Note: This only works if the iframe source is served from the same domain\n     * as the main application.\n     */\n    nativeHelp :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyNativeHelp\"\n    },\n\n    /**\n     * Whether the widget should have scrollbars.\n     */\n    scrollbar :\n    {\n      check : [\"auto\", \"no\", \"yes\"],\n      nullable : true,\n      themeable : true,\n      apply : \"_applyScrollbar\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __source : null,\n    __blockerElement : null,\n\n\n    // overridden\n    renderLayout : function(left, top, width, height)\n    {\n      this.base(arguments, left, top, width, height);\n\n      var pixel = \"px\";\n      var insets = this.getInsets();\n\n      this.__blockerElement.setStyles({\n        \"left\": (left + insets.left) + pixel,\n        \"top\": (top + insets.top) + pixel,\n        \"width\": (width - insets.left - insets.right) + pixel,\n        \"height\": (height - insets.top - insets.bottom) + pixel\n      });\n    },\n\n\n    // overridden\n    _createContentElement : function()\n    {\n      var iframe = new qx.html.Iframe(this.__source);\n      iframe.addListener(\"load\", this._onIframeLoad, this);\n      return iframe;\n    },\n\n\n    // overridden\n    _getIframeElement : function() {\n      return this.getContentElement();\n    },\n\n\n    /**\n     * Creates <div> element which is aligned over iframe node to avoid losing pointer events.\n     *\n     * @return {Object} Blocker element node\n     */\n    _createBlockerElement : function()\n    {\n      var el = new qx.html.Blocker();\n      el.setStyles({\n        \"zIndex\": 20,\n        \"display\": \"none\"\n      });\n\n      return el;\n    },\n\n\n    /**\n     * Reacts on native load event and redirects it to the widget.\n     *\n     * @param e {qx.event.type.Event} Native load event\n     */\n    _onIframeLoad : function(e)\n    {\n      this._applyNativeContextMenu(this.getNativeContextMenu(), null);\n      this._applyNativeHelp(this.getNativeHelp(), null);\n\n      this.fireNonBubblingEvent(\"load\");\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Cover the iframe with a transparent blocker div element. This prevents\n     * pointer or key events to be handled by the iframe. To release the blocker\n     * use {@link #release}.\n     *\n     */\n    block : function() {\n      this.__blockerElement.setStyle(\"display\", \"block\");\n    },\n\n\n    /**\n     * Release the blocker set by {@link #block}.\n     *\n     */\n    release : function() {\n      this.__blockerElement.setStyle(\"display\", \"none\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyNativeContextMenu : function(value, old)\n    {\n      if (value !== false && old !== false) {\n        return;\n      }\n\n      var doc = this.getDocument();\n      if (!doc) {\n        return;\n      }\n\n      try {\n        var documentElement = doc.documentElement;\n      } catch(e) {\n        // this may fail due to security restrictions\n        return;\n      }\n\n      if (old === false)\n      {\n        qx.event.Registration.removeListener(\n          documentElement, \"contextmenu\",\n          this._onNativeContextMenu, this, true\n        );\n      }\n\n      if (value === false)\n      {\n        qx.event.Registration.addListener(\n          documentElement, \"contextmenu\",\n          this._onNativeContextMenu, this, true\n        );\n      }\n    },\n\n\n    /**\n     * Stops the <code>contextmenu</code> event from showing the native context menu\n     *\n     * @param e {qx.event.type.Mouse} The event object\n     */\n    _onNativeContextMenu : function(e) {\n      e.preventDefault();\n    },\n\n\n    // property apply\n    _applyNativeHelp : function(value, old)\n    {\n      if (qx.core.Environment.get(\"event.help\")) {\n        var document = this.getDocument();\n        if (!document) {\n          return;\n        }\n\n        try\n        {\n          if (old === false) {\n            qx.bom.Event.removeNativeListener(document, \"help\", (function() {return false;}));\n          }\n\n          if (value === false) {\n            qx.bom.Event.addNativeListener(document, \"help\", (function() {return false;}));\n          }\n        } catch (e) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.warn(\n              \"Unable to set 'nativeHelp' property, possibly due to security restrictions\"\n            );\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Checks if the iframe element is out of sync. This can happen in Firefox\n     * if the iframe is moved around and the source is changed right after.\n     * The root cause is that Firefox is reloading the iframe when its position\n     * in DOM has changed.\n     */\n    _syncSourceAfterDOMMove : function()\n    {\n      var iframeDomElement = this.getContentElement() && this.getContentElement().getDomElement();\n      if (!iframeDomElement) {\n        return;\n      }\n      var iframeSource = iframeDomElement.src;\n\n      // remove trailing \"/\"\n      if (iframeSource.charAt(iframeSource.length-1) == \"/\") {\n        iframeSource = iframeSource.substring(0, iframeSource.length-1);\n      }\n\n      if (iframeSource != this.getSource())\n      {\n        if ( qx.core.Environment.get(\"browser.name\") != \"edge\" &&\n             qx.core.Environment.get(\"browser.name\") != \"ie\" )\n        {\n          qx.bom.Iframe.getWindow(iframeDomElement).stop();\n        }\n        iframeDomElement.src = this.getSource();\n      }\n    },\n\n\n    // property apply\n    _applyScrollbar : function(value) {\n      this.getContentElement().setAttribute(\"scrolling\", value);\n    },\n\n\n    // overridden\n    setLayoutParent : function(parent)\n    {\n      this.base(arguments, parent);\n      if (parent) {\n        this.getLayoutParent().getContentElement().add(this.__blockerElement);\n      }\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (this.getLayoutParent() && this.__blockerElement.getParent()) {\n      this.getLayoutParent().getContentElement().remove(this.__blockerElement);\n    }\n    this._disposeObjects(\"__blockerElement\");\n\n    qx.event.Registration.removeListener(document.body, \"pointerdown\", this.block, this, true);\n    qx.event.Registration.removeListener(document.body, \"pointerup\", this.release, this, true);\n    qx.event.Registration.removeListener(document.body, \"losecapture\", this.release, this, true);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Christian Hagendorn (cs)\n\n************************************************************************ */\n\n/**\n * Methods to convert colors between different color spaces.\n *\n * @ignore(qx.theme.*)\n * @ignore(qx.Class)\n * @ignore(qx.Class.*)\n */\nqx.Bootstrap.define(\"qx.util.ColorUtil\",\n{\n  statics :\n  {\n    /**\n     * Regular expressions for color strings\n     */\n    REGEXP :\n    {\n      hex3 : /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6 : /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      rgb : /^rgb\\(\\s*([0-9]{1,3}\\.{0,1}[0-9]*)\\s*,\\s*([0-9]{1,3}\\.{0,1}[0-9]*)\\s*,\\s*([0-9]{1,3}\\.{0,1}[0-9]*)\\s*\\)$/,\n      rgba : /^rgba\\(\\s*([0-9]{1,3}\\.{0,1}[0-9]*)\\s*,\\s*([0-9]{1,3}\\.{0,1}[0-9]*)\\s*,\\s*([0-9]{1,3}\\.{0,1}[0-9]*)\\s*,\\s*([0-9]{1,3}\\.{0,1}[0-9]*)\\s*\\)$/\n    },\n\n\n    /**\n     * CSS3 system color names.\n     */\n    SYSTEM :\n    {\n      activeborder        : true,\n      activecaption       : true,\n      appworkspace        : true,\n      background          : true,\n      buttonface          : true,\n      buttonhighlight     : true,\n      buttonshadow        : true,\n      buttontext          : true,\n      captiontext         : true,\n      graytext            : true,\n      highlight           : true,\n      highlighttext       : true,\n      inactiveborder      : true,\n      inactivecaption     : true,\n      inactivecaptiontext : true,\n      infobackground      : true,\n      infotext            : true,\n      menu                : true,\n      menutext            : true,\n      scrollbar           : true,\n      threeddarkshadow    : true,\n      threedface          : true,\n      threedhighlight     : true,\n      threedlightshadow   : true,\n      threedshadow        : true,\n      window              : true,\n      windowframe         : true,\n      windowtext          : true\n    },\n\n\n    /**\n     * Named colors, only the 16 basic colors plus the following ones:\n     * transparent, grey, magenta, orange and brown\n     */\n    NAMED :\n    {\n      black       : [ 0, 0, 0 ],\n      silver      : [ 192, 192, 192 ],\n      gray        : [ 128, 128, 128 ],\n      white       : [ 255, 255, 255 ],\n      maroon      : [ 128, 0, 0 ],\n      red         : [ 255, 0, 0 ],\n      purple      : [ 128, 0, 128 ],\n      fuchsia     : [ 255, 0, 255 ],\n      green       : [ 0, 128, 0 ],\n      lime        : [ 0, 255, 0 ],\n      olive       : [ 128, 128, 0 ],\n      yellow      : [ 255, 255, 0 ],\n      navy        : [ 0, 0, 128 ],\n      blue        : [ 0, 0, 255 ],\n      teal        : [ 0, 128, 128 ],\n      aqua        : [ 0, 255, 255 ],\n\n      // Additional values\n      transparent : [ -1, -1, -1 ],\n      magenta     : [ 255, 0, 255 ],   // alias for fuchsia\n      orange      : [ 255, 165, 0 ],\n      brown       : [ 165, 42, 42 ]\n    },\n\n\n    /**\n     * Whether the incoming value is a named color.\n     *\n     * @param value {String} the color value to test\n     * @return {Boolean} true if the color is a named color\n     */\n    isNamedColor : function(value) {\n      return this.NAMED[value] !== undefined;\n    },\n\n\n    /**\n     * Whether the incoming value is a system color.\n     *\n     * @param value {String} the color value to test\n     * @return {Boolean} true if the color is a system color\n     */\n    isSystemColor : function(value) {\n      return this.SYSTEM[value] !== undefined;\n    },\n\n\n    /**\n     * Whether the color theme manager is loaded. Generally\n     * part of the GUI of qooxdoo.\n     *\n     * @return {Boolean} <code>true</code> when color theme support is ready.\n     **/\n    supportsThemes : function() {\n      if (qx.Class) {\n        return qx.Class.isDefined(\"qx.theme.manager.Color\");\n      }\n      return false;\n    },\n\n\n    /**\n     * Whether the incoming value is a themed color.\n     *\n     * @param value {String} the color value to test\n     * @return {Boolean} true if the color is a themed color\n     */\n    isThemedColor : function(value)\n    {\n      if (!this.supportsThemes()) {\n        return false;\n      }\n\n      if (qx.theme && qx.theme.manager && qx.theme.manager.Color) {\n        return qx.theme.manager.Color.getInstance().isDynamic(value);\n      }\n      return false;\n    },\n\n\n    /**\n     * Try to convert an incoming string to an RGB array.\n     * Supports themed, named and system colors, but also RGB strings,\n     * hex3 and hex6 values.\n     *\n     * @param str {String} any string\n     * @return {Array} returns an array of red, green, blue on a successful transformation\n     * @throws {Error} if the string could not be parsed\n     */\n    stringToRgb : function(str)\n    {\n      if (this.supportsThemes() && this.isThemedColor(str)) {\n        str = qx.theme.manager.Color.getInstance().resolveDynamic(str);\n      }\n\n      if (this.isNamedColor(str))\n      {\n        return this.NAMED[str].concat();\n      }\n      else if (this.isSystemColor(str))\n      {\n        throw new Error(\"Could not convert system colors to RGB: \" + str);\n      }\n      else if (this.isRgbaString(str)) {\n        return this.__rgbaStringToRgb(str);\n      }\n      else if (this.isRgbString(str))\n      {\n        return this.__rgbStringToRgb();\n      }\n      else if (this.isHex3String(str))\n      {\n        return this.__hex3StringToRgb();\n      }\n      else if (this.isHex6String(str))\n      {\n        return this.__hex6StringToRgb();\n      }\n\n      throw new Error(\"Could not parse color: \" + str);\n    },\n\n\n    /**\n     * Try to convert an incoming string to an RGB array.\n     * Support named colors, RGB strings, hex3 and hex6 values.\n     *\n     * @param str {String} any string\n     * @return {Array} returns an array of red, green, blue on a successful transformation\n     * @throws {Error} if the string could not be parsed\n     */\n    cssStringToRgb : function(str)\n    {\n      if (this.isNamedColor(str))\n      {\n        return this.NAMED[str];\n      }\n      else if (this.isSystemColor(str))\n      {\n        throw new Error(\"Could not convert system colors to RGB: \" + str);\n      }\n      else if (this.isRgbString(str))\n      {\n        return this.__rgbStringToRgb();\n      }\n      else if (this.isRgbaString(str))\n      {\n        return this.__rgbaStringToRgb();\n      }\n      else if (this.isHex3String(str))\n      {\n        return this.__hex3StringToRgb();\n      }\n      else if (this.isHex6String(str))\n      {\n        return this.__hex6StringToRgb();\n      }\n\n      throw new Error(\"Could not parse color: \" + str);\n    },\n\n\n    /**\n     * Try to convert an incoming string to an RGB string, which can be used\n     * for all color properties.\n     * Supports themed, named and system colors, but also RGB strings,\n     * hex3 and hex6 values.\n     *\n     * @param str {String} any string\n     * @return {String} a RGB string\n     * @throws {Error} if the string could not be parsed\n     */\n    stringToRgbString : function(str) {\n      return this.rgbToRgbString(this.stringToRgb(str));\n    },\n\n\n    /**\n     * Converts a RGB array to an RGB string\n     *\n     * @param rgb {Array} an array with red, green and blue values and optionally\n     * an alpha value\n     * @return {String} an RGB string\n     */\n    rgbToRgbString : function(rgb) {\n      return \"rgb\" + (rgb[3] !== undefined ? \"a\" : \"\") +  \"(\" + rgb.join(\",\") + \")\";\n    },\n\n\n    /**\n     * Converts a RGB array to an hex6 string\n     *\n     * @param rgb {Array} an array with red, green and blue\n     * @return {String} a hex6 string (#xxxxxx)\n     */\n    rgbToHexString : function(rgb)\n    {\n      return (\n        \"#\" +\n        qx.lang.String.pad(rgb[0].toString(16).toUpperCase(), 2) +\n        qx.lang.String.pad(rgb[1].toString(16).toUpperCase(), 2) +\n        qx.lang.String.pad(rgb[2].toString(16).toUpperCase(), 2)\n      );\n    },\n\n\n    /**\n     * Detects if a string is a valid qooxdoo color\n     *\n     * @param str {String} any string\n     * @return {Boolean} true when the incoming value is a valid qooxdoo color\n     */\n    isValidPropertyValue : function(str) {\n      return (\n        this.isThemedColor(str) ||\n        this.isNamedColor(str) ||\n        this.isHex3String(str) ||\n        this.isHex6String(str) ||\n        this.isRgbString(str) ||\n        this.isRgbaString(str));\n    },\n\n\n    /**\n     * Detects if a string is a valid CSS color string\n     *\n     * @param str {String} any string\n     * @return {Boolean} true when the incoming value is a valid CSS color string\n     */\n    isCssString : function(str) {\n      return (\n        this.isSystemColor(str) ||\n        this.isNamedColor(str) ||\n        this.isHex3String(str) ||\n        this.isHex6String(str) ||\n        this.isRgbString(str) ||\n        this.isRgbaString(str));\n    },\n\n\n    /**\n     * Detects if a string is a valid hex3 string\n     *\n     * @param str {String} any string\n     * @return {Boolean} true when the incoming value is a valid hex3 string\n     */\n    isHex3String : function(str) {\n      return this.REGEXP.hex3.test(str);\n    },\n\n\n    /**\n     * Detects if a string is a valid hex6 string\n     *\n     * @param str {String} any string\n     * @return {Boolean} true when the incoming value is a valid hex6 string\n     */\n    isHex6String : function(str) {\n      return this.REGEXP.hex6.test(str);\n    },\n\n\n    /**\n     * Detects if a string is a valid RGB string\n     *\n     * @param str {String} any string\n     * @return {Boolean} true when the incoming value is a valid RGB string\n     */\n    isRgbString : function(str) {\n      return this.REGEXP.rgb.test(str);\n    },\n\n\n    /**\n     * Detects if a string is a valid RGBA string\n     *\n     * @param str {String} any string\n     * @return {Boolean} true when the incoming value is a valid RGBA string\n     */\n    isRgbaString : function(str) {\n      return this.REGEXP.rgba.test(str);\n    },\n\n\n    /**\n     * Converts a regexp object match of a rgb string to an RGB array.\n     *\n     * @return {Array} an array with red, green, blue\n     */\n    __rgbStringToRgb : function()\n    {\n      var red = parseInt(RegExp.$1, 10);\n      var green = parseInt(RegExp.$2, 10);\n      var blue = parseInt(RegExp.$3, 10);\n\n      return [red, green, blue];\n    },\n\n   /**\n    * Converts a regexp object match of a rgba string to an RGB array.\n    *\n    * @return {Array} an array with red, green, blue\n    */\n    __rgbaStringToRgb : function()\n    {\n      var red = parseInt(RegExp.$1, 10);\n      var green = parseInt(RegExp.$2, 10);\n      var blue = parseInt(RegExp.$3, 10);\n      var alpha = parseFloat(RegExp.$4, 10);\n\n      if (red === 0 && green === 0 & blue === 0 && alpha === 0) {\n        return [-1, -1, -1];\n      }\n\n      return [red, green, blue];\n    },\n\n\n    /**\n     * Converts a regexp object match of a hex3 string to an RGB array.\n     *\n     * @return {Array} an array with red, green, blue\n     */\n    __hex3StringToRgb : function()\n    {\n      var red = parseInt(RegExp.$1, 16) * 17;\n      var green = parseInt(RegExp.$2, 16) * 17;\n      var blue = parseInt(RegExp.$3, 16) * 17;\n\n      return [red, green, blue];\n    },\n\n\n    /**\n     * Converts a regexp object match of a hex6 string to an RGB array.\n     *\n     * @return {Array} an array with red, green, blue\n     */\n    __hex6StringToRgb : function()\n    {\n      var red = (parseInt(RegExp.$1, 16) * 16) + parseInt(RegExp.$2, 16);\n      var green = (parseInt(RegExp.$3, 16) * 16) + parseInt(RegExp.$4, 16);\n      var blue = (parseInt(RegExp.$5, 16) * 16) + parseInt(RegExp.$6, 16);\n\n      return [red, green, blue];\n    },\n\n\n    /**\n     * Converts a hex3 string to an RGB array\n     *\n     * @param value {String} a hex3 (#xxx) string\n     * @return {Array} an array with red, green, blue\n     */\n    hex3StringToRgb : function(value)\n    {\n      if (this.isHex3String(value)) {\n        return this.__hex3StringToRgb(value);\n      }\n\n      throw new Error(\"Invalid hex3 value: \" + value);\n    },\n\n\n    /**\n     * Converts a hex3 (#xxx) string to a hex6 (#xxxxxx) string.\n     *\n     * @param value {String} a hex3 (#xxx) string\n     * @return {String} The hex6 (#xxxxxx) string or the passed value when the\n     *   passed value is not an hex3 (#xxx) value.\n     */\n    hex3StringToHex6String : function(value)\n    {\n      if (this.isHex3String(value)) {\n        return this.rgbToHexString(this.hex3StringToRgb(value));\n      }\n      return value;\n    },\n\n\n    /**\n     * Converts a hex6 string to an RGB array\n     *\n     * @param value {String} a hex6 (#xxxxxx) string\n     * @return {Array} an array with red, green, blue\n     */\n    hex6StringToRgb : function(value)\n    {\n      if (this.isHex6String(value)) {\n        return this.__hex6StringToRgb(value);\n      }\n\n      throw new Error(\"Invalid hex6 value: \" + value);\n    },\n\n\n    /**\n     * Converts a hex string to an RGB array\n     *\n     * @param value {String} a hex3 (#xxx) or hex6 (#xxxxxx) string\n     * @return {Array} an array with red, green, blue\n     */\n    hexStringToRgb : function(value)\n    {\n      if (this.isHex3String(value)) {\n        return this.__hex3StringToRgb(value);\n      }\n\n      if (this.isHex6String(value)) {\n        return this.__hex6StringToRgb(value);\n      }\n\n      throw new Error(\"Invalid hex value: \" + value);\n    },\n\n\n    /**\n     * Convert RGB colors to HSB\n     *\n     * @param rgb {Number[]} red, blue and green as array\n     * @return {Array} an array with hue, saturation and brightness\n     */\n    rgbToHsb : function(rgb)\n    {\n      var hue, saturation, brightness;\n\n      var red = rgb[0];\n      var green = rgb[1];\n      var blue = rgb[2];\n\n      var cmax = (red > green) ? red : green;\n\n      if (blue > cmax) {\n        cmax = blue;\n      }\n\n      var cmin = (red < green) ? red : green;\n\n      if (blue < cmin) {\n        cmin = blue;\n      }\n\n      brightness = cmax / 255.0;\n\n      if (cmax != 0) {\n        saturation = (cmax - cmin) / cmax;\n      } else {\n        saturation = 0;\n      }\n\n      if (saturation == 0)\n      {\n        hue = 0;\n      }\n      else\n      {\n        var redc = (cmax - red) / (cmax - cmin);\n        var greenc = (cmax - green) / (cmax - cmin);\n        var bluec = (cmax - blue) / (cmax - cmin);\n\n        if (red == cmax) {\n          hue = bluec - greenc;\n        } else if (green == cmax) {\n          hue = 2.0 + redc - bluec;\n        } else {\n          hue = 4.0 + greenc - redc;\n        }\n\n        hue = hue / 6.0;\n\n        if (hue < 0) {\n          hue = hue + 1.0;\n        }\n      }\n\n      return [ Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100) ];\n    },\n\n\n    /**\n     * Convert HSB colors to RGB\n     *\n     * @param hsb {Number[]} an array with hue, saturation and brightness\n     * @return {Integer[]} an array with red, green, blue\n     */\n    hsbToRgb : function(hsb)\n    {\n      var i, f, p, r, t;\n\n      var hue = hsb[0] / 360;\n      var saturation = hsb[1] / 100;\n      var brightness = hsb[2] / 100;\n\n      if (hue >= 1.0) {\n        hue %= 1.0;\n      }\n\n      if (saturation > 1.0) {\n        saturation = 1.0;\n      }\n\n      if (brightness > 1.0) {\n        brightness = 1.0;\n      }\n\n      var tov = Math.floor(255 * brightness);\n      var rgb = {};\n\n      if (saturation == 0.0)\n      {\n        rgb.red = rgb.green = rgb.blue = tov;\n      }\n      else\n      {\n        hue *= 6.0;\n\n        i = Math.floor(hue);\n\n        f = hue - i;\n\n        p = Math.floor(tov * (1.0 - saturation));\n        r = Math.floor(tov * (1.0 - (saturation * f)));\n        t = Math.floor(tov * (1.0 - (saturation * (1.0 - f))));\n\n        switch(i)\n        {\n          case 0:\n            rgb.red = tov;\n            rgb.green = t;\n            rgb.blue = p;\n            break;\n\n          case 1:\n            rgb.red = r;\n            rgb.green = tov;\n            rgb.blue = p;\n            break;\n\n          case 2:\n            rgb.red = p;\n            rgb.green = tov;\n            rgb.blue = t;\n            break;\n\n          case 3:\n            rgb.red = p;\n            rgb.green = r;\n            rgb.blue = tov;\n            break;\n\n          case 4:\n            rgb.red = t;\n            rgb.green = p;\n            rgb.blue = tov;\n            break;\n\n          case 5:\n            rgb.red = tov;\n            rgb.green = p;\n            rgb.blue = r;\n            break;\n        }\n      }\n\n      return [rgb.red, rgb.green, rgb.blue];\n    },\n\n\n    /**\n     * Creates a random color.\n     *\n     * @return {String} a valid qooxdoo/CSS rgb color string.\n     */\n    randomColor : function()\n    {\n      var r = Math.round(Math.random() * 255);\n      var g = Math.round(Math.random() * 255);\n      var b = Math.round(Math.random() * 255);\n\n      return this.rgbToRgbString([r, g, b]);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The grid layout manager arranges the items in a two dimensional\n * grid. Widgets can be placed into the grid's cells and may span multiple rows\n * and columns.\n *\n * *Features*\n *\n * * Flex values for rows and columns\n * * Minimal and maximal column and row sizes\n * * Manually setting of column and row sizes\n * * Horizontal and vertical alignment\n * * Horizontal and vertical spacing\n * * Column and row spans\n * * Auto-sizing\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>row</strong> <em>(Integer)</em>: The row of the cell the\n *   widget should occupy. Each cell can only containing one widget. This layout\n *   property is mandatory.\n * </li>\n * <li><strong>column</strong> <em>(Integer)</em>: The column of the cell the\n *   widget should occupy. Each cell can only containing one widget. This layout\n *   property is mandatory.\n * </li>\n * <li><strong>rowSpan</strong> <em>(Integer)</em>: The number of rows, the\n *   widget should span, starting from the row specified in the <code>row</code>\n *   property. The cells in the spanned rows must be empty as well.\n * </li>\n * <li><strong>colSpan</strong> <em>(Integer)</em>: The number of columns, the\n *   widget should span, starting from the column specified in the <code>column</code>\n *   property. The cells in the spanned columns must be empty as well.\n * </li>\n * </ul>\n *\n * *Example*\n *\n * Here is a little example of how to use the grid layout.\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.Grid();\n * layout.setRowFlex(0, 1); // make row 0 flexible\n * layout.setColumnWidth(1, 200); // set with of column 1 to 200 pixel\n *\n * var container = new qx.ui.container.Composite(layout);\n * container.add(new qx.ui.core.Widget(), {row: 0, column: 0});\n * container.add(new qx.ui.core.Widget(), {row: 0, column: 1});\n * container.add(new qx.ui.core.Widget(), {row: 1, column: 0, rowSpan: 2});\n * </pre>\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/layout/grid.html'>\n * Extended documentation</a> and links to demos of this layout in the qooxdoo manual.\n */\nqx.Class.define(\"qx.ui.layout.Grid\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param spacingX {Integer?0} The horizontal spacing between grid cells.\n   *     Sets {@link #spacingX}.\n   * @param spacingY {Integer?0} The vertical spacing between grid cells.\n   *     Sets {@link #spacingY}.\n   */\n  construct : function(spacingX, spacingY)\n  {\n    this.base(arguments);\n\n    this.__rowData = [];\n    this.__colData = [];\n\n    if (spacingX) {\n      this.setSpacingX(spacingX);\n    }\n\n    if (spacingY) {\n      this.setSpacingY(spacingY);\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * The horizontal spacing between grid cells.\n     */\n    spacingX :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /**\n     * The vertical spacing between grid cells.\n     */\n    spacingY :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyLayoutChange\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /** @type {Array} 2D array of grid cell data */\n    __grid : null,\n    __rowData : null,\n    __colData : null,\n\n    __colSpans : null,\n    __rowSpans : null,\n    __maxRowIndex : null,\n    __maxColIndex : null,\n\n    /** @type {Array} cached row heights */\n    __rowHeights : null,\n\n    /** @type {Array} cached column widths */\n    __colWidths : null,\n\n\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value)\n      {\n        var layoutProperties = {\n          \"row\" : 1,\n          \"column\" : 1,\n          \"rowSpan\" : 1,\n          \"colSpan\" : 1\n        };\n        this.assert(layoutProperties[name] == 1, \"The property '\"+name+\"' is not supported by the Grid layout!\");\n        this.assertInteger(value);\n        this.assert(value >= 0, \"Value must be positive\");\n      },\n\n      \"false\" : null\n    }),\n\n\n    /**\n     * Rebuild the internal representation of the grid\n     */\n    __buildGrid : function()\n    {\n      var grid = [];\n      var colSpans = [];\n      var rowSpans = [];\n\n      var maxRowIndex = -1;\n      var maxColIndex = -1;\n\n      var children = this._getLayoutChildren();\n\n      for (var i=0,l=children.length; i<l; i++)\n      {\n        var child = children[i];\n        var props = child.getLayoutProperties();\n\n        var row = props.row;\n        var column = props.column;\n\n        props.colSpan = props.colSpan || 1;\n        props.rowSpan = props.rowSpan || 1;\n\n        // validate arguments\n        if (row == null || column == null) {\n          throw new Error(\n            \"The layout properties 'row' and 'column' of the child widget '\" +\n            child + \"' must be defined!\"\n          );\n        }\n\n        if (grid[row] && grid[row][column]) {\n          throw new Error(\n            \"Cannot add widget '\" + child + \"'!. \" +\n            \"There is already a widget '\" + grid[row][column] +\n            \"' in this cell (\" + row + \", \" + column + \") for '\" + this + \"'\"\n          );\n        }\n\n        for (var x=column; x<column+props.colSpan; x++)\n        {\n          for (var y=row; y<row+props.rowSpan; y++)\n          {\n            if (grid[y] == undefined) {\n               grid[y] = [];\n            }\n\n            grid[y][x] = child;\n\n            maxColIndex = Math.max(maxColIndex, x);\n            maxRowIndex = Math.max(maxRowIndex, y);\n          }\n        }\n\n        if (props.rowSpan > 1) {\n          rowSpans.push(child);\n        }\n\n        if (props.colSpan > 1) {\n          colSpans.push(child);\n        }\n      }\n\n      // make sure all columns are defined so that accessing the grid using\n      // this.__grid[column][row] will never raise an exception\n      for (var y=0; y<=maxRowIndex; y++) {\n        if (grid[y] == undefined) {\n           grid[y] = [];\n        }\n      }\n\n      this.__grid = grid;\n\n      this.__colSpans = colSpans;\n      this.__rowSpans = rowSpans;\n\n      this.__maxRowIndex = maxRowIndex;\n      this.__maxColIndex = maxColIndex;\n\n      this.__rowHeights = null;\n      this.__colWidths = null;\n\n      // Clear invalidation marker\n      delete this._invalidChildrenCache;\n    },\n\n\n    /**\n     * Stores data for a grid row\n     *\n     * @param row {Integer} The row index\n     * @param key {String} The key under which the data should be stored\n     * @param value {var} data to store\n     */\n    _setRowData : function(row, key, value)\n    {\n      var rowData = this.__rowData[row];\n\n      if (!rowData)\n      {\n        this.__rowData[row] = {};\n        this.__rowData[row][key] = value;\n      }\n      else\n      {\n        rowData[key] = value;\n      }\n    },\n\n\n    /**\n     * Stores data for a grid column\n     *\n     * @param column {Integer} The column index\n     * @param key {String} The key under which the data should be stored\n     * @param value {var} data to store\n     */\n    _setColumnData : function(column, key, value)\n    {\n      var colData = this.__colData[column];\n\n      if (!colData)\n      {\n        this.__colData[column] = {};\n        this.__colData[column][key] = value;\n      }\n      else\n      {\n        colData[key] = value;\n      }\n    },\n\n\n    /**\n     * Shortcut to set both horizontal and vertical spacing between grid cells\n     * to the same value.\n     *\n     * @param spacing {Integer} new horizontal and vertical spacing\n     * @return {qx.ui.layout.Grid} This object (for chaining support).\n     */\n    setSpacing : function(spacing)\n    {\n      this.setSpacingY(spacing);\n      this.setSpacingX(spacing);\n      return this;\n    },\n\n\n    /**\n     * Set the default cell alignment for a column. This alignment can be\n     * overridden on a per cell basis by setting the cell's content widget's\n     * <code>alignX</code> and <code>alignY</code> properties.\n     *\n     * If on a grid cell both row and a column alignment is set, the horizontal\n     * alignment is taken from the column and the vertical alignment is taken\n     * from the row.\n     *\n     * @param column {Integer} Column index\n     * @param hAlign {String} The horizontal alignment. Valid values are\n     *    \"left\", \"center\" and \"right\".\n     * @param vAlign {String} The vertical alignment. Valid values are\n     *    \"top\", \"middle\", \"bottom\"\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setColumnAlign : function(column, hAlign, vAlign)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(column, \"Invalid parameter 'column'\");\n        this.assertInArray(hAlign, [\"left\", \"center\", \"right\"]);\n        this.assertInArray(vAlign, [\"top\", \"middle\", \"bottom\"]);\n      }\n\n      this._setColumnData(column, \"hAlign\", hAlign);\n      this._setColumnData(column, \"vAlign\", vAlign);\n\n      this._applyLayoutChange();\n\n      return this;\n    },\n\n\n    /**\n     * Get a map of the column's alignment.\n     *\n     * @param column {Integer} The column index\n     * @return {Map} A map with the keys <code>vAlign</code> and <code>hAlign</code>\n     *     containing the vertical and horizontal column alignment.\n     */\n    getColumnAlign : function(column)\n    {\n      var colData = this.__colData[column] || {};\n\n      return {\n        vAlign : colData.vAlign || \"top\",\n        hAlign : colData.hAlign || \"left\"\n      };\n    },\n\n\n    /**\n     * Set the default cell alignment for a row. This alignment can be\n     * overridden on a per cell basis by setting the cell's content widget's\n     * <code>alignX</code> and <code>alignY</code> properties.\n     *\n     * If on a grid cell both row and a column alignment is set, the horizontal\n     * alignment is taken from the column and the vertical alignment is taken\n     * from the row.\n     *\n     * @param row {Integer} Row index\n     * @param hAlign {String} The horizontal alignment. Valid values are\n     *    \"left\", \"center\" and \"right\".\n     * @param vAlign {String} The vertical alignment. Valid values are\n     *    \"top\", \"middle\", \"bottom\"\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setRowAlign : function(row, hAlign, vAlign)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(row, \"Invalid parameter 'row'\");\n        this.assertInArray(hAlign, [\"left\", \"center\", \"right\"]);\n        this.assertInArray(vAlign, [\"top\", \"middle\", \"bottom\"]);\n      }\n\n      this._setRowData(row, \"hAlign\", hAlign);\n      this._setRowData(row, \"vAlign\", vAlign);\n\n      this._applyLayoutChange();\n\n      return this;\n    },\n\n\n    /**\n     * Get a map of the row's alignment.\n     *\n     * @param row {Integer} The Row index\n     * @return {Map} A map with the keys <code>vAlign</code> and <code>hAlign</code>\n     *     containing the vertical and horizontal row alignment.\n     */\n    getRowAlign : function(row)\n    {\n      var rowData = this.__rowData[row] || {};\n\n      return {\n        vAlign : rowData.vAlign || \"top\",\n        hAlign : rowData.hAlign || \"left\"\n      };\n    },\n\n\n    /**\n     * Get the widget located in the cell. If a the cell is empty or the widget\n     * has a {@link qx.ui.core.Widget#visibility} value of <code>exclude</code>,\n     * <code>null</code> is returned.\n     *\n     * @param row {Integer} The cell's row index\n     * @param column {Integer} The cell's column index\n     * @return {qx.ui.core.Widget|null}The cell's widget. The value may be null.\n     */\n    getCellWidget : function(row, column)\n    {\n      if (this._invalidChildrenCache) {\n        this.__buildGrid();\n      }\n\n      var row = this.__grid[row] || {};\n      return row[column] ||  null;\n    },\n\n\n    /**\n     * Get the number of rows in the grid layout.\n     *\n     * @return {Integer} The number of rows in the layout\n     */\n    getRowCount : function()\n    {\n      if (this._invalidChildrenCache) {\n        this.__buildGrid();\n      }\n\n      return this.__maxRowIndex + 1;\n    },\n\n\n    /**\n     * Get the number of columns in the grid layout.\n     *\n     * @return {Integer} The number of columns in the layout\n     */\n    getColumnCount : function()\n    {\n      if (this._invalidChildrenCache) {\n        this.__buildGrid();\n      }\n\n      return this.__maxColIndex + 1;\n    },\n\n\n    /**\n     * Get a map of the cell's alignment. For vertical alignment the row alignment\n     * takes precedence over the column alignment. For horizontal alignment it is\n     * the over way round. If an alignment is set on the cell widget using\n     * {@link qx.ui.core.LayoutItem#setLayoutProperties}, this alignment takes\n     * always precedence over row or column alignment.\n     *\n     * @param row {Integer} The cell's row index\n     * @param column {Integer} The cell's column index\n     * @return {Map} A map with the keys <code>vAlign</code> and <code>hAlign</code>\n     *     containing the vertical and horizontal cell alignment.\n     */\n    getCellAlign : function(row, column)\n    {\n      var vAlign = \"top\";\n      var hAlign = \"left\";\n\n      var rowData = this.__rowData[row];\n      var colData = this.__colData[column];\n\n      var widget = this.__grid[row][column];\n      if (widget)\n      {\n        var widgetProps = {\n          vAlign : widget.getAlignY(),\n          hAlign : widget.getAlignX()\n        };\n      }\n      else\n      {\n        widgetProps = {};\n      }\n\n      // compute vAlign\n      // precedence : widget -> row -> column\n      if (widgetProps.vAlign) {\n        vAlign = widgetProps.vAlign;\n      } else if (rowData && rowData.vAlign) {\n        vAlign = rowData.vAlign;\n      } else if (colData && colData.vAlign) {\n        vAlign = colData.vAlign;\n      }\n\n      // compute hAlign\n      // precedence : widget -> column -> row\n      if (widgetProps.hAlign) {\n        hAlign = widgetProps.hAlign;\n      } else if (colData && colData.hAlign) {\n        hAlign = colData.hAlign;\n      } else if (rowData && rowData.hAlign) {\n        hAlign = rowData.hAlign;\n      }\n\n      return {\n        vAlign : vAlign,\n        hAlign : hAlign\n      };\n    },\n\n\n    /**\n     * Set the flex value for a grid column.\n     * By default the column flex value is <code>0</code>.\n     *\n     * @param column {Integer} The column index\n     * @param flex {Integer} The column's flex value\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setColumnFlex : function(column, flex)\n    {\n      this._setColumnData(column, \"flex\", flex);\n      this._applyLayoutChange();\n      return this;\n    },\n\n\n    /**\n     * Get the flex value of a grid column.\n     *\n     * @param column {Integer} The column index\n     * @return {Integer} The column's flex value\n     */\n    getColumnFlex : function(column)\n    {\n      var colData = this.__colData[column] || {};\n      return colData.flex !== undefined ? colData.flex : 0;\n    },\n\n\n    /**\n     * Set the flex value for a grid row.\n     * By default the row flex value is <code>0</code>.\n     *\n     * @param row {Integer} The row index\n     * @param flex {Integer} The row's flex value\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setRowFlex : function(row, flex)\n    {\n      this._setRowData(row, \"flex\", flex);\n      this._applyLayoutChange();\n      return this;\n    },\n\n\n    /**\n     * Get the flex value of a grid row.\n     *\n     * @param row {Integer} The row index\n     * @return {Integer} The row's flex value\n     */\n    getRowFlex : function(row)\n    {\n      var rowData = this.__rowData[row] || {};\n      var rowFlex = rowData.flex !== undefined ? rowData.flex : 0;\n      return rowFlex;\n    },\n\n\n    /**\n     * Set the maximum width of a grid column.\n     * The default value is <code>Infinity</code>.\n     *\n     * @param column {Integer} The column index\n     * @param maxWidth {Integer} The column's maximum width\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setColumnMaxWidth : function(column, maxWidth)\n    {\n      this._setColumnData(column, \"maxWidth\", maxWidth);\n      this._applyLayoutChange();\n      return this;\n    },\n\n\n    /**\n     * Get the maximum width of a grid column.\n     *\n     * @param column {Integer} The column index\n     * @return {Integer} The column's maximum width\n     */\n    getColumnMaxWidth : function(column)\n    {\n      var colData = this.__colData[column] || {};\n      return colData.maxWidth !== undefined ? colData.maxWidth : Infinity;\n    },\n\n\n    /**\n     * Set the preferred width of a grid column.\n     * The default value is <code>Infinity</code>.\n     *\n     * @param column {Integer} The column index\n     * @param width {Integer} The column's width\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setColumnWidth : function(column, width)\n    {\n      this._setColumnData(column, \"width\", width);\n      this._applyLayoutChange();\n      return this;\n    },\n\n\n    /**\n     * Get the preferred width of a grid column.\n     *\n     * @param column {Integer} The column index\n     * @return {Integer} The column's width\n     */\n    getColumnWidth : function(column)\n    {\n      var colData = this.__colData[column] || {};\n      return colData.width !== undefined ? colData.width : null;\n    },\n\n\n    /**\n     * Set the minimum width of a grid column.\n     * The default value is <code>0</code>.\n     *\n     * @param column {Integer} The column index\n     * @param minWidth {Integer} The column's minimum width\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setColumnMinWidth : function(column, minWidth)\n    {\n      this._setColumnData(column, \"minWidth\", minWidth);\n      this._applyLayoutChange();\n      return this;\n    },\n\n\n    /**\n     * Get the minimum width of a grid column.\n     *\n     * @param column {Integer} The column index\n     * @return {Integer} The column's minimum width\n     */\n    getColumnMinWidth : function(column)\n    {\n      var colData = this.__colData[column] || {};\n      return colData.minWidth || 0;\n    },\n\n\n    /**\n     * Set the maximum height of a grid row.\n     * The default value is <code>Infinity</code>.\n     *\n     * @param row {Integer} The row index\n     * @param maxHeight {Integer} The row's maximum width\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setRowMaxHeight : function(row, maxHeight)\n    {\n      this._setRowData(row, \"maxHeight\", maxHeight);\n      this._applyLayoutChange();\n      return this;\n    },\n\n\n    /**\n     * Get the maximum height of a grid row.\n     *\n     * @param row {Integer} The row index\n     * @return {Integer} The row's maximum width\n     */\n    getRowMaxHeight : function(row)\n    {\n      var rowData = this.__rowData[row] || {};\n      return rowData.maxHeight || Infinity;\n    },\n\n\n    /**\n     * Set the preferred height of a grid row.\n     * The default value is <code>Infinity</code>.\n     *\n     * @param row {Integer} The row index\n     * @param height {Integer} The row's width\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setRowHeight : function(row, height)\n    {\n      this._setRowData(row, \"height\", height);\n      this._applyLayoutChange();\n      return this;\n    },\n\n\n    /**\n     * Get the preferred height of a grid row.\n     *\n     * @param row {Integer} The row index\n     * @return {Integer} The row's width\n     */\n    getRowHeight : function(row)\n    {\n      var rowData = this.__rowData[row] || {};\n      return rowData.height !== undefined ? rowData.height : null;\n    },\n\n\n    /**\n     * Set the minimum height of a grid row.\n     * The default value is <code>0</code>.\n     *\n     * @param row {Integer} The row index\n     * @param minHeight {Integer} The row's minimum width\n     * @return {qx.ui.layout.Grid} This object (for chaining support)\n     */\n    setRowMinHeight : function(row, minHeight)\n    {\n      this._setRowData(row, \"minHeight\", minHeight);\n      this._applyLayoutChange();\n      return this;\n    },\n\n\n    /**\n     * Get the minimum height of a grid row.\n     *\n     * @param row {Integer} The row index\n     * @return {Integer} The row's minimum width\n     */\n    getRowMinHeight : function(row)\n    {\n      var rowData = this.__rowData[row] || {};\n      return rowData.minHeight || 0;\n    },\n\n\n    /**\n     * Computes the widget's size hint including the widget's margins\n     *\n     * @param widget {qx.ui.core.LayoutItem} The widget to get the size for\n     * @return {Map} a size hint map\n     */\n    __getOuterSize : function(widget)\n    {\n      var hint = widget.getSizeHint();\n      var hMargins = widget.getMarginLeft() + widget.getMarginRight();\n      var vMargins = widget.getMarginTop() + widget.getMarginBottom();\n\n      var outerSize = {\n        height: hint.height + vMargins,\n        width: hint.width + hMargins,\n        minHeight: hint.minHeight + vMargins,\n        minWidth: hint.minWidth + hMargins,\n        maxHeight: hint.maxHeight + vMargins,\n        maxWidth: hint.maxWidth + hMargins\n      };\n\n      return outerSize;\n    },\n\n\n    /**\n     * Check whether all row spans fit with their preferred height into the\n     * preferred row heights. If there is not enough space, the preferred\n     * row sizes are increased. The distribution respects the flex and max\n     * values of the rows.\n     *\n     *  The same is true for the min sizes.\n     *\n     *  The height array is modified in place.\n     *\n     * @param rowHeights {Map[]} The current row height array as computed by\n     *     {@link #_getRowHeights}.\n     */\n    _fixHeightsRowSpan : function(rowHeights)\n    {\n      var vSpacing = this.getSpacingY();\n\n      for (var i=0, l=this.__rowSpans.length; i<l; i++)\n      {\n        var widget = this.__rowSpans[i];\n\n        var hint = this.__getOuterSize(widget);\n\n        var widgetProps = widget.getLayoutProperties();\n        var widgetRow = widgetProps.row;\n\n        var prefSpanHeight = vSpacing * (widgetProps.rowSpan - 1);\n        var minSpanHeight = prefSpanHeight;\n\n        var rowFlexes = {};\n\n        for (var j=0; j<widgetProps.rowSpan; j++)\n        {\n          var row = widgetProps.row+j;\n          var rowHeight = rowHeights[row];\n          var rowFlex = this.getRowFlex(row);\n\n          if (rowFlex > 0)\n          {\n            // compute flex array for the preferred height\n            rowFlexes[row] =\n            {\n              min : rowHeight.minHeight,\n              value : rowHeight.height,\n              max : rowHeight.maxHeight,\n              flex: rowFlex\n            };\n          }\n\n          prefSpanHeight += rowHeight.height;\n          minSpanHeight += rowHeight.minHeight;\n        }\n\n        // If there is not enough space for the preferred size\n        // increment the preferred row sizes.\n        if (prefSpanHeight < hint.height)\n        {\n          if (!qx.lang.Object.isEmpty(rowFlexes)) {\n            var rowIncrements = qx.ui.layout.Util.computeFlexOffsets(\n              rowFlexes, hint.height, prefSpanHeight\n            );\n\n            for (var k=0; k<widgetProps.rowSpan; k++)\n            {\n              var offset = rowIncrements[widgetRow+k] ? rowIncrements[widgetRow+k].offset : 0;\n              rowHeights[widgetRow+k].height += offset;\n            }\n          // row is too small and we have no flex value set\n          } else {\n            var totalSpacing = vSpacing * (widgetProps.rowSpan - 1);\n            var availableHeight = hint.height - totalSpacing;\n\n            // get the row height which every child would need to share the\n            // available hight equally\n            var avgRowHeight =\n              Math.floor(availableHeight / widgetProps.rowSpan);\n\n            // get the hight already used and the number of children which do\n            // not have at least that avg row height\n            var usedHeight = 0;\n            var rowsNeedAddition = 0;\n            for (var k = 0; k < widgetProps.rowSpan; k++) {\n              var currentHeight = rowHeights[widgetRow + k].height;\n              usedHeight += currentHeight;\n              if (currentHeight < avgRowHeight) {\n                rowsNeedAddition++;\n              }\n            }\n\n            // the difference of available and used needs to be shared among\n            // those not having the min size\n            var additionalRowHeight =\n              Math.floor((availableHeight - usedHeight) / rowsNeedAddition);\n\n            // add the extra height to the too small children\n            for (var k = 0; k < widgetProps.rowSpan; k++) {\n              if (rowHeights[widgetRow + k].height < avgRowHeight) {\n                rowHeights[widgetRow + k].height += additionalRowHeight;\n              }\n            }\n          }\n        }\n\n        // If there is not enough space for the min size\n        // increment the min row sizes.\n        if (minSpanHeight < hint.minHeight)\n        {\n          var rowIncrements = qx.ui.layout.Util.computeFlexOffsets(\n            rowFlexes, hint.minHeight, minSpanHeight\n          );\n\n          for (var j=0; j<widgetProps.rowSpan; j++)\n          {\n            var offset = rowIncrements[widgetRow+j] ? rowIncrements[widgetRow+j].offset : 0;\n            rowHeights[widgetRow+j].minHeight += offset;\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Check whether all col spans fit with their preferred width into the\n     * preferred column widths. If there is not enough space the preferred\n     * column sizes are increased. The distribution respects the flex and max\n     * values of the columns.\n     *\n     *  The same is true for the min sizes.\n     *\n     *  The width array is modified in place.\n     *\n     * @param colWidths {Map[]} The current column width array as computed by\n     *     {@link #_getColWidths}.\n     */\n    _fixWidthsColSpan : function(colWidths)\n    {\n      var hSpacing = this.getSpacingX();\n\n      for (var i=0, l=this.__colSpans.length; i<l; i++)\n      {\n        var widget = this.__colSpans[i];\n\n        var hint = this.__getOuterSize(widget);\n\n        var widgetProps = widget.getLayoutProperties();\n        var widgetColumn = widgetProps.column;\n\n        var prefSpanWidth = hSpacing * (widgetProps.colSpan - 1);\n        var minSpanWidth = prefSpanWidth;\n\n        var colFlexes = {};\n\n        var offset;\n\n        for (var j=0; j<widgetProps.colSpan; j++)\n        {\n          var col = widgetProps.column+j;\n          var colWidth = colWidths[col];\n          var colFlex = this.getColumnFlex(col);\n\n          // compute flex array for the preferred width\n          if (colFlex > 0)\n          {\n            colFlexes[col] =\n            {\n              min : colWidth.minWidth,\n              value : colWidth.width,\n              max : colWidth.maxWidth,\n              flex: colFlex\n            };\n          }\n\n          prefSpanWidth += colWidth.width;\n          minSpanWidth += colWidth.minWidth;\n        }\n\n        // If there is not enough space for the preferred size\n        // increment the preferred column sizes.\n        if (prefSpanWidth < hint.width)\n        {\n          var colIncrements = qx.ui.layout.Util.computeFlexOffsets(\n            colFlexes, hint.width, prefSpanWidth\n          );\n\n          for (var j=0; j<widgetProps.colSpan; j++)\n          {\n            offset = colIncrements[widgetColumn+j] ? colIncrements[widgetColumn+j].offset : 0;\n            colWidths[widgetColumn+j].width += offset;\n          }\n        }\n\n        // If there is not enough space for the min size\n        // increment the min column sizes.\n        if (minSpanWidth < hint.minWidth)\n        {\n          var colIncrements = qx.ui.layout.Util.computeFlexOffsets(\n            colFlexes, hint.minWidth, minSpanWidth\n          );\n\n          for (var j=0; j<widgetProps.colSpan; j++)\n          {\n            offset = colIncrements[widgetColumn+j] ? colIncrements[widgetColumn+j].offset : 0;\n            colWidths[widgetColumn+j].minWidth += offset;\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Compute the min/pref/max row heights.\n     *\n     * @return {Map[]} An array containing height information for each row. The\n     *     entries have the keys <code>minHeight</code>, <code>maxHeight</code> and\n     *     <code>height</code>.\n     */\n    _getRowHeights : function()\n    {\n      if (this.__rowHeights != null) {\n        return this.__rowHeights;\n      }\n\n      var rowHeights = [];\n\n      var maxRowIndex = this.__maxRowIndex;\n      var maxColIndex = this.__maxColIndex;\n\n      for (var row=0; row<=maxRowIndex; row++)\n      {\n        var minHeight = 0;\n        var height = 0;\n        var maxHeight = 0;\n\n        for (var col=0; col<=maxColIndex; col++)\n        {\n          var widget = this.__grid[row][col];\n          if (!widget) {\n            continue;\n          }\n\n          // ignore rows with row spans at this place\n          // these rows will be taken into account later\n          var widgetRowSpan = widget.getLayoutProperties().rowSpan || 0;\n          if (widgetRowSpan > 1) {\n            continue;\n          }\n\n          var cellSize = this.__getOuterSize(widget);\n\n          if (this.getRowFlex(row) > 0) {\n            minHeight = Math.max(minHeight, cellSize.minHeight);\n          } else {\n            minHeight = Math.max(minHeight, cellSize.height);\n          }\n\n          height = Math.max(height, cellSize.height);\n        }\n\n        var minHeight = Math.max(minHeight, this.getRowMinHeight(row));\n        var maxHeight = this.getRowMaxHeight(row);\n\n        if (this.getRowHeight(row) !== null) {\n          var height = this.getRowHeight(row);\n        } else {\n          var height = Math.max(minHeight, Math.min(height, maxHeight));\n        }\n\n        rowHeights[row] = {\n          minHeight : minHeight,\n          height : height,\n          maxHeight : maxHeight\n        };\n      }\n\n      if (this.__rowSpans.length > 0) {\n        this._fixHeightsRowSpan(rowHeights);\n      }\n\n      this.__rowHeights = rowHeights;\n      return rowHeights;\n    },\n\n\n    /**\n     * Compute the min/pref/max column widths.\n     *\n     * @return {Map[]} An array containing width information for each column. The\n     *     entries have the keys <code>minWidth</code>, <code>maxWidth</code> and\n     *     <code>width</code>.\n     */\n    _getColWidths : function()\n    {\n      if (this.__colWidths != null) {\n        return this.__colWidths;\n      }\n\n      var colWidths = [];\n\n      var maxColIndex = this.__maxColIndex;\n      var maxRowIndex = this.__maxRowIndex;\n\n      for (var col=0; col<=maxColIndex; col++)\n      {\n        var width = 0;\n        var minWidth = 0;\n        var maxWidth = Infinity;\n\n        for (var row=0; row<=maxRowIndex; row++)\n        {\n          var widget = this.__grid[row][col];\n          if (!widget) {\n            continue;\n          }\n\n          // ignore columns with col spans at this place\n          // these columns will be taken into account later\n          var widgetColSpan = widget.getLayoutProperties().colSpan || 0;\n          if (widgetColSpan > 1) {\n            continue;\n          }\n\n          var cellSize = this.__getOuterSize(widget);\n\n          minWidth = Math.max(minWidth, cellSize.minWidth);\n\n          width = Math.max(width, cellSize.width);\n        }\n\n        minWidth = Math.max(minWidth, this.getColumnMinWidth(col));\n        maxWidth = this.getColumnMaxWidth(col);\n\n        if (this.getColumnWidth(col) !== null) {\n          var width = this.getColumnWidth(col);\n        } else {\n          var width = Math.max(minWidth, Math.min(width, maxWidth));\n        }\n\n        colWidths[col] = {\n          minWidth: minWidth,\n          width : width,\n          maxWidth : maxWidth\n        };\n      }\n\n      if (this.__colSpans.length > 0) {\n        this._fixWidthsColSpan(colWidths);\n      }\n\n      this.__colWidths = colWidths;\n      return colWidths;\n    },\n\n\n    /**\n     * Computes for each column by how many pixels it must grow or shrink, taking\n     * the column flex values and min/max widths into account.\n     *\n     * @param width {Integer} The grid width\n     * @return {Integer[]} Sparse array of offsets to add to each column width. If\n     *     an array entry is empty nothing should be added to the column.\n     */\n    _getColumnFlexOffsets : function(width)\n    {\n      var hint = this.getSizeHint();\n      var diff = width - hint.width;\n\n      if (diff == 0) {\n        return {};\n      }\n\n      // collect all flexible children\n      var colWidths = this._getColWidths();\n      var flexibles = {};\n\n      for (var i=0, l=colWidths.length; i<l; i++)\n      {\n        var col = colWidths[i];\n        var colFlex = this.getColumnFlex(i);\n\n        if (\n          (colFlex <= 0) ||\n          (col.width == col.maxWidth && diff > 0) ||\n          (col.width == col.minWidth && diff < 0)\n        ) {\n          continue;\n        }\n\n        flexibles[i] ={\n          min : col.minWidth,\n          value : col.width,\n          max : col.maxWidth,\n          flex : colFlex\n        };\n      }\n\n      return qx.ui.layout.Util.computeFlexOffsets(flexibles, width, hint.width);\n    },\n\n\n    /**\n     * Computes for each row by how many pixels it must grow or shrink, taking\n     * the row flex values and min/max heights into account.\n     *\n     * @param height {Integer} The grid height\n     * @return {Integer[]} Sparse array of offsets to add to each row height. If\n     *     an array entry is empty nothing should be added to the row.\n     */\n    _getRowFlexOffsets : function(height)\n    {\n      var hint = this.getSizeHint();\n      var diff = height - hint.height;\n\n      if (diff == 0) {\n        return {};\n      }\n\n      // collect all flexible children\n      var rowHeights = this._getRowHeights();\n      var flexibles = {};\n\n      for (var i=0, l=rowHeights.length; i<l; i++)\n      {\n        var row = rowHeights[i];\n        var rowFlex = this.getRowFlex(i);\n\n        if (\n          (rowFlex <= 0) ||\n          (row.height == row.maxHeight && diff > 0) ||\n          (row.height == row.minHeight && diff < 0)\n        ) {\n          continue;\n        }\n\n        flexibles[i] = {\n          min : row.minHeight,\n          value : row.height,\n          max : row.maxHeight,\n          flex : rowFlex\n        };\n      }\n\n      return qx.ui.layout.Util.computeFlexOffsets(flexibles, height, hint.height);\n    },\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      if (this._invalidChildrenCache) {\n        this.__buildGrid();\n      }\n\n      var Util = qx.ui.layout.Util;\n      var hSpacing = this.getSpacingX();\n      var vSpacing = this.getSpacingY();\n\n      // calculate column widths\n      var prefWidths = this._getColWidths();\n      var colStretchOffsets = this._getColumnFlexOffsets(availWidth);\n\n      var colWidths = [];\n\n      var maxColIndex = this.__maxColIndex;\n      var maxRowIndex = this.__maxRowIndex;\n\n      var offset;\n\n      for (var col=0; col<=maxColIndex; col++)\n      {\n        offset = colStretchOffsets[col] ? colStretchOffsets[col].offset : 0;\n        colWidths[col] = prefWidths[col].width + offset;\n      }\n\n      // calculate row heights\n      var prefHeights = this._getRowHeights();\n      var rowStretchOffsets = this._getRowFlexOffsets(availHeight);\n\n      var rowHeights = [];\n\n      for (var row=0; row<=maxRowIndex; row++)\n      {\n        offset = rowStretchOffsets[row] ? rowStretchOffsets[row].offset : 0;\n        rowHeights[row] = prefHeights[row].height + offset;\n      }\n\n      // do the layout\n      var left = 0;\n      for (var col=0; col<=maxColIndex; col++)\n      {\n        var top = 0;\n\n        for (var row=0; row<=maxRowIndex; row++)\n        {\n          var widget = this.__grid[row][col];\n\n          // ignore empty cells\n          if (!widget)\n          {\n            top += rowHeights[row] + vSpacing;\n            continue;\n          }\n\n          var widgetProps = widget.getLayoutProperties();\n\n          // ignore cells, which have cell spanning but are not the origin\n          // of the widget\n          if(widgetProps.row !== row || widgetProps.column !== col)\n          {\n            top += rowHeights[row] + vSpacing;\n            continue;\n          }\n\n          // compute sizes width including cell spanning\n          var spanWidth = hSpacing * (widgetProps.colSpan - 1);\n          for (var i=0; i<widgetProps.colSpan; i++) {\n            spanWidth += colWidths[col+i];\n          }\n\n          var spanHeight = vSpacing * (widgetProps.rowSpan - 1);\n          for (var i=0; i<widgetProps.rowSpan; i++) {\n            spanHeight += rowHeights[row+i];\n          }\n\n          var cellHint = widget.getSizeHint();\n          var marginTop = widget.getMarginTop();\n          var marginLeft = widget.getMarginLeft();\n          var marginBottom = widget.getMarginBottom();\n          var marginRight = widget.getMarginRight();\n\n          var cellWidth = Math.max(cellHint.minWidth, Math.min(spanWidth-marginLeft-marginRight, cellHint.maxWidth));\n          var cellHeight = Math.max(cellHint.minHeight, Math.min(spanHeight-marginTop-marginBottom, cellHint.maxHeight));\n\n          var cellAlign = this.getCellAlign(row, col);\n          var cellLeft = left + Util.computeHorizontalAlignOffset(cellAlign.hAlign, cellWidth, spanWidth, marginLeft, marginRight);\n          var cellTop = top + Util.computeVerticalAlignOffset(cellAlign.vAlign, cellHeight, spanHeight, marginTop, marginBottom);\n\n          widget.renderLayout(\n            cellLeft + padding.left,\n            cellTop + padding.top,\n            cellWidth,\n            cellHeight\n          );\n\n          top += rowHeights[row] + vSpacing;\n        }\n\n        left += colWidths[col] + hSpacing;\n      }\n    },\n\n\n    // overridden\n    invalidateLayoutCache : function()\n    {\n      this.base(arguments);\n\n      this.__colWidths = null;\n      this.__rowHeights = null;\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      if (this._invalidChildrenCache) {\n        this.__buildGrid();\n      }\n\n      // calculate col widths\n      var colWidths = this._getColWidths();\n\n      var minWidth=0, width=0;\n\n      for (var i=0, l=colWidths.length; i<l; i++)\n      {\n        var col = colWidths[i];\n        if (this.getColumnFlex(i) > 0) {\n          minWidth += col.minWidth;\n        } else {\n          minWidth += col.width;\n        }\n\n        width += col.width;\n      }\n\n      // calculate row heights\n      var rowHeights = this._getRowHeights();\n\n      var minHeight=0, height=0;\n      for (var i=0, l=rowHeights.length; i<l; i++)\n      {\n        var row = rowHeights[i];\n\n        if (this.getRowFlex(i) > 0) {\n          minHeight += row.minHeight;\n        } else {\n          minHeight += row.height;\n        }\n\n        height += row.height;\n      }\n\n      var spacingX = this.getSpacingX() * (colWidths.length - 1);\n      var spacingY = this.getSpacingY() * (rowHeights.length - 1);\n\n      var hint = {\n        minWidth : minWidth + spacingX,\n        width : width + spacingX,\n        minHeight : minHeight + spacingY,\n        height : height + spacingY\n      };\n\n      return hint;\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this.__grid = this.__rowData = this.__colData = this.__colSpans =\n      this.__rowSpans = this.__colWidths = this.__rowHeights = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Martijn Evers, The Netherlands\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martijn Evers (mever)\n\n************************************************************************ */\n\n/**\n * Field interface.\n *\n * This interface allows any value to be set as long as the following constraint\n * is met: any value returned by {@link getValue} can be set by {@link setValue}.\n *\n * This specifies the interface for handling the model value of a field.\n * The model value is always in a consistent state (see duration example), and\n * should only handle model values of a type that correctly represents the\n * data available through its UI. E.g.: duration can ideally be modeled by a number\n * of time units, like seconds. When using a date the duration may be\n * unclear (since Unix time?). Type conversions should be handled by data binding.\n *\n * The model value is not necessary what is shown to the end-user\n * by implementing class. A good example is the {@link qx.ui.form.TextField}\n * which is able to operate with or without live updating the model value.\n *\n * Duration example: a field for duration may use two date pickers for begin\n * and end dates. When the end date is before the start date the model is in\n * inconsistent state. getValue should never return such state. And calling\n * it must result in either null or the last consistent value (depending\n * on implementation or setting).\n */\nqx.Interface.define(\"qx.ui.form.IField\",\n{\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the model value was modified */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      VALUE PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the field model value. Should also update the UI.\n     *\n     * @param value {var|null} Updates the field with the new model value.\n     * @return {null|Error} Should return an error when the type of\n     *  model value is not compatible with the implementing class (the concrete field).\n     */\n    setValue : function(value) {\n      return arguments.length == 1;\n    },\n\n\n    /**\n     * Resets the model value to its initial value. Should also update the UI.\n     */\n    resetValue : function() {},\n\n\n    /**\n     * Returns a consistent and up-to-date model value.\n     *\n     * Note: returned value can also be a promise of type <code>Promise&lt;*|null&gt;</code>.\n     *\n     * @return {var|null} The model value plain or as promise.\n     */\n    getValue : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Each object, which should support single selection have to\n * implement this interface.\n */\nqx.Interface.define(\"qx.ui.core.ISingleSelection\",\n{\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n\n  events :\n  {\n    /** Fires after the selection was modified */\n    \"changeSelection\" : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /**\n     * Returns an array of currently selected items.\n     *\n     * Note: The result is only a set of selected items, so the order can\n     * differ from the sequence in which the items were added.\n     *\n     * @return {qx.ui.core.Widget[]} List of items.\n     */\n    getSelection : function() {\n      return true;\n    },\n\n    /**\n     * Replaces current selection with the given items.\n     *\n     * @param items {qx.ui.core.Widget[]} Items to select.\n     * @throws {Error} if the item is not a child element.\n     */\n    setSelection : function(items) {\n      return arguments.length == 1;\n    },\n\n    /**\n     * Clears the whole selection at once.\n     */\n    resetSelection : function() {\n      return true;\n    },\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {qx.ui.core.Widget} Any valid selectable item\n     * @return {Boolean} Whether the item is selected.\n     * @throws {Error} if the item is not a child element.\n     */\n    isSelected : function(item) {\n      return arguments.length == 1;\n    },\n\n    /**\n     * Whether the selection is empty.\n     *\n     * @return {Boolean} Whether the selection is empty.\n     */\n    isSelectionEmpty : function() {\n      return true;\n    },\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @param all {Boolean} true for all selectables, false for the\n     *   selectables the user can interactively select\n     * @return {qx.ui.core.Widget[]} The contained items.\n     */\n    getSelectables: function(all) {\n      return arguments.length == 1;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This mixin links all methods to manage the single selection.\n *\n * The class which includes the mixin has to implements two methods:\n *\n * <ul>\n * <li><code>_getItems</code>, this method has to return a <code>Array</code>\n *    of <code>qx.ui.core.Widget</code> that should be managed from the manager.\n * </li>\n * <li><code>_isAllowEmptySelection</code>, this method has to return a\n *    <code>Boolean</code> value for allowing empty selection or not.\n * </li>\n * </ul>\n */\nqx.Mixin.define(\"qx.ui.core.MSingleSelectionHandling\",\n{\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fires after the value was modified */\n    \"changeValue\" : \"qx.event.type.Data\",\n\n    /** Fires after the selection was modified */\n    \"changeSelection\" : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /** @type {qx.ui.core.SingleSelectionManager} the single selection manager */\n    __manager : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * setValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @param item {null|qx.ui.core.Widget} Item to set as selected value.\n     * @returns {null|TypeError} The status of this operation.\n     */\n    setValue : function(item) {\n      if (null === item) {\n        this.resetSelection();\n        return null;\n      }\n\n      if (item instanceof qx.ui.core.Widget) {\n        this.__getManager().setSelected(item);\n        return null;\n\n      } else {\n        return new TypeError(\"Given argument is not null or a {qx.ui.core.Widget}.\");\n      }\n    },\n\n    /**\n     * getValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @returns {null|qx.ui.core.Widget} The currently selected widget or null if there is none.\n     */\n    getValue : function() {\n      return this.__getManager().getSelected() || null;\n    },\n\n    /**\n     * resetValue implements part of the {@link qx.ui.form.IField} interface.\n     */\n    resetValue : function() {\n      this.__getManager().resetSelected();\n    },\n\n    /**\n     * Returns an array of currently selected items.\n     *\n     * Note: The result is only a set of selected items, so the order can\n     * differ from the sequence in which the items were added.\n     *\n     * @return {qx.ui.core.Widget[]} List of items.\n     */\n    getSelection : function() {\n      var selected = this.__getManager().getSelected();\n\n      if (selected) {\n        return [selected];\n      } else {\n        return [];\n      }\n    },\n\n    /**\n     * Replaces current selection with the given items.\n     *\n     * @param items {qx.ui.core.Widget[]} Items to select.\n     * @throws {Error} if one of the items is not a child element and if\n     *    items contains more than one elements.\n     */\n    setSelection : function(items) {\n      switch(items.length)\n      {\n        case 0:\n          this.resetSelection();\n          break;\n        case 1:\n          this.__getManager().setSelected(items[0]);\n          break;\n        default:\n          throw new Error(\"Could only select one item, but the selection\" +\n            \" array contains \" + items.length + \" items!\");\n      }\n    },\n\n    /**\n     * Clears the whole selection at once.\n     */\n    resetSelection : function() {\n      this.__getManager().resetSelected();\n    },\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {qx.ui.core.Widget} Any valid selectable item.\n     * @return {Boolean} Whether the item is selected.\n     * @throws {Error} if one of the items is not a child element.\n     */\n    isSelected : function(item) {\n      return this.__getManager().isSelected(item);\n    },\n\n    /**\n     * Whether the selection is empty.\n     *\n     * @return {Boolean} Whether the selection is empty.\n     */\n    isSelectionEmpty : function() {\n      return this.__getManager().isSelectionEmpty();\n    },\n\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @param all {Boolean} true for all selectables, false for the\n     *   selectables the user can interactively select\n     * @return {qx.ui.core.Widget[]} The contained items.\n     */\n    getSelectables: function(all) {\n      return this.__getManager().getSelectables(all);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event listener for <code>changeSelected</code> event on single\n     * selection manager.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    _onChangeSelected : function(e) {\n      var newValue = e.getData();\n      var oldValue = e.getOldData();\n      this.fireDataEvent(\"changeValue\", newValue, oldValue);\n\n      newValue == null ? newValue = [] : newValue = [newValue];\n      oldValue == null ? oldValue = [] : oldValue = [oldValue];\n      this.fireDataEvent(\"changeSelection\", newValue, oldValue);\n    },\n\n    /**\n     * Return the selection manager if it is already exists, otherwise creates\n     * the manager.\n     *\n     * @return {qx.ui.core.SingleSelectionManager} Single selection manager.\n     */\n    __getManager : function()\n    {\n      if (this.__manager == null)\n      {\n        var that = this;\n        this.__manager = new qx.ui.core.SingleSelectionManager(\n        {\n          getItems : function() {\n            return that._getItems();\n          },\n\n          isItemSelectable : function(item) {\n            if (that._isItemSelectable) {\n              return that._isItemSelectable(item);\n            } else {\n              return item.isVisible();\n            }\n          }\n        });\n        this.__manager.addListener(\"changeSelected\", this._onChangeSelected, this);\n      }\n      this.__manager.setAllowEmptySelection(this._isAllowEmptySelection());\n\n      return this.__manager;\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  destruct : function() {\n    this._disposeObjects(\"__manager\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * The stack container puts its child widgets on top of each other and only the\n * topmost widget is visible.\n *\n * This is used e.g. in the tab view widget. Which widget is visible can be\n * controlled by using the {@link #getSelection} method.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   // create stack container\n *   var stack = new qx.ui.container.Stack();\n *\n *   // add some children\n *   stack.add(new qx.ui.core.Widget().set({\n *    backgroundColor: \"red\"\n *   }));\n *   stack.add(new qx.ui.core.Widget().set({\n *    backgroundColor: \"green\"\n *   }));\n *   stack.add(new qx.ui.core.Widget().set({\n *    backgroundColor: \"blue\"\n *   }));\n *\n *   // select green widget\n *   stack.setSelection([stack.getChildren()[1]]);\n *\n *   this.getRoot().add(stack);\n * </pre>\n *\n * This example creates an stack with three children. Only the selected \"green\"\n * widget is visible.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/stack.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.container.Stack\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [\n    qx.ui.form.IField,\n    qx.ui.core.ISingleSelection\n  ],\n  include : [\n    qx.ui.core.MSingleSelectionHandling,\n    qx.ui.core.MChildrenHandling\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this._setLayout(new qx.ui.layout.Grow);\n\n    this.addListener(\"changeSelection\", this.__onChangeSelection, this);\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Whether the size of the widget depends on the selected child. When\n     * disabled (default) the size is configured to the largest child.\n     */\n    dynamic :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyDynamic\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    // property apply\n    _applyDynamic : function(value)\n    {\n      var children = this._getChildren();\n      var selected = this.getSelection()[0];\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        if (child != selected)\n        {\n          if (value) {\n            children[i].exclude();\n          } else {\n            children[i].hide();\n          }\n        }\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS FOR SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the widget for the selection.\n     * @return {qx.ui.core.Widget[]} Widgets to select.\n     */\n    _getItems : function() {\n      return this.getChildren();\n    },\n\n    /**\n     * Returns if the selection could be empty or not.\n     *\n     * @return {Boolean} <code>true</code> If selection could be empty,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowEmptySelection : function() {\n      return true;\n    },\n\n    /**\n     * Returns whether the given item is selectable.\n     *\n     * @param item {qx.ui.core.Widget} The item to be checked\n     * @return {Boolean} Whether the given item is selectable\n     */\n    _isItemSelectable : function(item) {\n      return true;\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * Shows the new selected widget and hide the old one.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    __onChangeSelection : function(e)\n    {\n      var old = e.getOldData()[0];\n      var value = e.getData()[0];\n\n      if (old)\n      {\n        if (this.isDynamic()) {\n          old.exclude();\n        } else {\n          old.hide();\n        }\n      }\n\n      if (value) {\n        value.show();\n      }\n    },\n\n\n    //overridden\n    _afterAddChild : function(child) {\n      var selected = this.getSelection()[0];\n\n      if (!selected) {\n        this.setSelection([child]);\n      } else if (selected !== child) {\n        if (this.isDynamic()) {\n          child.exclude();\n        } else {\n          child.hide();\n        }\n      }\n    },\n\n\n    //overridden\n    _afterRemoveChild : function(child) {\n      if (this.getSelection()[0] === child) {\n        var first = this._getChildren()[0];\n\n        if (first) {\n          this.setSelection([first]);\n        } else {\n          this.resetSelection();\n        }\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Go to the previous child in the children list.\n     */\n    previous : function()\n    {\n      var selected = this.getSelection()[0];\n      var go = this._indexOf(selected)-1;\n      var children = this._getChildren();\n\n      if (go < 0) {\n        go = children.length - 1;\n      }\n\n      var prev = children[go];\n      this.setSelection([prev]);\n    },\n\n    /**\n     * Go to the next child in the children list.\n     */\n    next : function()\n    {\n      var selected = this.getSelection()[0];\n      var go = this._indexOf(selected)+1;\n      var children = this._getChildren();\n\n      var next = children[go] || children[0];\n\n      this.setSelection([next]);\n    }\n  }\n});\n"
  ]
}