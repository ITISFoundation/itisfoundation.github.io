{
  "version": 3,
  "sources": [
    "../transpiled/qx/util/Request.js",
    "../transpiled/qx/util/Serializer.js",
    "../transpiled/qx/bom/request/Xhr.js",
    "../transpiled/qx/util/ResponseParser.js",
    "../transpiled/qx/io/rest/Resource.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-16.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\n/**\n * Static helpers for handling HTTP requests.\n */\nqx.Bootstrap.define(\"qx.util.Request\",\n{\n  statics:\n  {\n    /**\n     * Whether URL given points to resource that is cross-domain,\n     * i.e. not of same origin.\n     *\n     * @param url {String} URL.\n     * @return {Boolean} Whether URL is cross domain.\n     */\n    isCrossDomain: function(url) {\n      var result = qx.util.Uri.parseUri(url),\n          location = window.location;\n\n      if (!location) {\n        return false;\n      }\n\n      var protocol = location.protocol;\n\n      // URL is relative in the sense that it points to origin host\n      if (!(url.indexOf(\"//\") !== -1)) {\n        return false;\n      }\n\n      if (protocol.substr(0, protocol.length-1) == result.protocol &&\n          location.host === result.authority &&\n          location.port === result.port) {\n        return false;\n      }\n\n      return true;\n    },\n\n    /**\n     * Determine if given HTTP status is considered successful.\n     *\n     * @param status {Number} HTTP status.\n     * @return {Boolean} Whether status is considered successful.\n     */\n    isSuccessful: function(status) {\n      return (status >= 200 && status < 300 || status === 304);\n    },\n\n    /**\n     * Determine if given HTTP method is valid.\n     *\n     * @param method {String} HTTP method.\n     * @return {Boolean} Whether method is a valid HTTP method.\n     */\n    isMethod: function(method) {\n      var knownMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"HEAD\", \"OPTIONS\", \"TRACE\", \"CONNECT\", \"PATCH\"];\n      return (knownMethods.indexOf(method) !== -1) ? true : false;\n    },\n\n    /**\n     * Request body is ignored for HTTP method GET and HEAD.\n     *\n     * See http://www.w3.org/TR/XMLHttpRequest2/#the-send-method.\n     *\n     * @param method {String} The HTTP method.\n     * @return {Boolean} Whether request may contain body.\n     */\n    methodAllowsRequestBody: function(method) {\n      return !((/^(GET|HEAD)$/).test(method));\n    }\n  }\n});\n",
    "/* ***********************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * This is an util class responsible for serializing qooxdoo objects.\n *\n * @ignore(qx.data, qx.data.IListData)\n * @ignore(qx.locale, qx.locale.LocalizedString)\n */\nqx.Class.define(\"qx.util.Serializer\",\n{\n  statics :\n  {\n\n    /**\n     * Serializes the properties of the given qooxdoo object. To get the\n     * serialization working, every property needs to have a string\n     * representation because the value of the property will be concatenated to the\n     * serialized string.\n     *\n     * @param object {qx.core.Object} Any qooxdoo object\n     * @param qxSerializer {Function?} Function used for serializing qooxdoo\n     *   objects stored in the properties of the object. Check for the type of\n     *   classes <ou want to serialize and return the serialized value. In all\n     *   other cases, just return nothing.\n     * @param dateFormat {qx.util.format.DateFormat?} If a date formater is given,\n     *   the format method of this given formater is used to convert date\n     *   objects into strings.\n     * @return {String} The serialized object.\n     */\n    toUriParameter : function(object, qxSerializer, dateFormat)\n    {\n      var result = \"\";\n      var properties = qx.util.PropertyUtil.getAllProperties(object.constructor);\n\n      for (var name in properties) {\n        // ignore property groups\n        if (properties[name].group != undefined) {\n          continue;\n        }\n        var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n\n        // handle arrays\n        if (qx.lang.Type.isArray(value)) {\n          var isdataArray = qx.data && qx.data.IListData &&\n            qx.Class.hasInterface(value && value.constructor, qx.data.IListData);\n          for (var i = 0; i < value.length; i++) {\n            var valueAtI = isdataArray ? value.getItem(i) : value[i];\n            result += this.__toUriParameter(name, valueAtI, qxSerializer);\n          }\n        } else if (qx.lang.Type.isDate(value) && dateFormat != null) {\n          result += this.__toUriParameter(\n            name, dateFormat.format(value), qxSerializer\n          );\n        } else {\n          result += this.__toUriParameter(name, value, qxSerializer);\n        }\n      }\n      return result.substring(0, result.length - 1);\n    },\n\n\n    /**\n     * Helper method for {@link #toUriParameter}. Check for qooxdoo objects\n     * and returns the serialized name value pair for the given parameter.\n     *\n     * @param name {String} The name of the value\n     * @param value {var} The value itself\n     * @param qxSerializer {Function?} The serializer for qooxdoo objects.\n     * @return {String} The serialized name value pair.\n     */\n    __toUriParameter : function(name, value, qxSerializer)\n    {\n\n      if (value && value.$$type == \"Class\") {\n        value = value.classname;\n      }\n\n      if (value && (value.$$type == \"Interface\" || value.$$type == \"Mixin\")) {\n        value = value.name;\n      }\n\n      if (value instanceof qx.core.Object && qxSerializer != null) {\n        var encValue = encodeURIComponent(qxSerializer(value));\n        if (encValue === undefined) {\n          var encValue = encodeURIComponent(value);\n        }\n      } else {\n        var encValue = encodeURIComponent(value);\n      }\n      return encodeURIComponent(name) + \"=\" + encValue + \"&\";\n    },\n\n\n    /**\n     * Serializes the properties of the given qooxdoo object into a native\n     * object.\n     *\n     * @param object {qx.core.Object}\n     *   Any qooxdoo object\n     *\n     * @param qxSerializer {Function?}\n     *   Function used for serializing qooxdoo objects stored in the properties\n     *   of the object. Check for the type of classes you want to serialize\n     *   and return the serialized value. In all other cases, just return\n     *   nothing.\n     * @param dateFormat {qx.util.format.DateFormat?} If a date formater is given,\n     *   the format method of this given formater is used to convert date\n     *   objects into strings.\n     * @return {null|Array|String|Object}\n     *   The serialized object. Depending on the input qooxdoo object, the returning\n     *   type will vary.\n     */\n    toNativeObject : function(object, qxSerializer, dateFormat)\n    {\n      var result;\n\n      // null or undefined\n      if (object == null)\n      {\n        return null;\n      }\n\n      // data array\n      if (qx.data && qx.data.IListData && qx.Class.hasInterface(object.constructor, qx.data.IListData))\n      {\n        result = [];\n        for (var i = 0; i < object.getLength(); i++)\n        {\n          result.push(qx.util.Serializer.toNativeObject(\n            object.getItem(i), qxSerializer, dateFormat)\n          );\n        }\n\n        return result;\n      }\n\n      // other arrays\n      if (qx.lang.Type.isArray(object))\n      {\n        result = [];\n        for (var i = 0; i < object.length; i++)\n        {\n          result.push(qx.util.Serializer.toNativeObject(\n            object[i], qxSerializer, dateFormat)\n          );\n        }\n\n        return result;\n      }\n\n      // return names for qooxdoo classes\n      if (object.$$type == \"Class\") {\n        return object.classname;\n      }\n\n      // return names for qooxdoo interfaces and mixins\n      if (object.$$type == \"Interface\" || object.$$type == \"Mixin\") {\n        return object.name;\n      }\n\n      // qooxdoo object\n      if (object instanceof qx.core.Object)\n      {\n        if (qxSerializer != null)\n        {\n          var returnValue = qxSerializer(object);\n\n          // if we have something returned, return that\n          if (returnValue != undefined)\n          {\n            return returnValue;\n          }\n\n          // continue otherwise\n        }\n\n        result = {};\n\n        var properties =\n          qx.util.PropertyUtil.getAllProperties(object.constructor);\n\n        for (var name in properties)\n        {\n          // ignore property groups\n          if (properties[name].group != undefined)\n          {\n            continue;\n          }\n\n          var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n          result[name] = qx.util.Serializer.toNativeObject(\n            value, qxSerializer, dateFormat\n          );\n        }\n\n        return result;\n      }\n\n      // date objects with date format\n      if (qx.lang.Type.isDate(object) && dateFormat != null) {\n        return dateFormat.format(object);\n      }\n\n      // localized strings\n      if (qx.locale && qx.locale.LocalizedString && object instanceof qx.locale.LocalizedString) {\n        return object.toString();\n      }\n\n      // JavaScript objects\n      if (qx.lang.Type.isObject(object))\n      {\n        result = {};\n\n        for (var key in object)\n        {\n          result[key] = qx.util.Serializer.toNativeObject(\n            object[key], qxSerializer, dateFormat\n          );\n        }\n\n        return result;\n      }\n\n      // all other stuff, including String, Date, RegExp\n      return object;\n    },\n\n\n    /**\n     * Serializes the properties of the given qooxdoo object into a json object.\n     *\n     * @param object {qx.core.Object} Any qooxdoo object\n     * @param qxSerializer {Function?} Function used for serializing qooxdoo\n     *   objects stored in the properties of the object. Check for the type of\n     *   classes <ou want to serialize and return the serialized value. In all\n     *   other cases, just return nothing.\n     * @param dateFormat {qx.util.format.DateFormat?} If a date formater is given,\n     *   the format method of this given formater is used to convert date\n     *   objects into strings.\n     * @return {String} The serialized object.\n     */\n    toJson : function(object, qxSerializer, dateFormat) {\n      var result = \"\";\n\n      // null or undefined\n      if (object == null) {\n        return \"null\";\n      }\n\n      // data array\n      if (qx.data && qx.data.IListData && qx.Class.hasInterface(object.constructor, qx.data.IListData)) {\n        result += \"[\";\n        for (var i = 0; i < object.getLength(); i++) {\n          result += qx.util.Serializer.toJson(object.getItem(i), qxSerializer, dateFormat) + \",\";\n        }\n        if (result != \"[\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"]\";\n      }\n\n      // other arrays\n      if (qx.lang.Type.isArray(object)) {\n        result += \"[\";\n        for (var i = 0; i < object.length; i++) {\n          result += qx.util.Serializer.toJson(object[i], qxSerializer, dateFormat) + \",\";\n        }\n        if (result != \"[\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"]\";\n      }\n\n      // return names for qooxdoo classes\n      if (object.$$type == \"Class\") {\n        return '\"' + object.classname + '\"';\n      }\n\n      // return names for qooxdoo interfaces and mixins\n      if (object.$$type == \"Interface\" || object.$$type == \"Mixin\") {\n        return '\"' + object.name + '\"';\n      }\n\n\n      // qooxdoo object\n      if (object instanceof qx.core.Object) {\n        if (qxSerializer != null) {\n          var returnValue = qxSerializer(object);\n          // if we have something returned, return that\n          if (returnValue != undefined) {\n            return '\"' + returnValue + '\"';\n          }\n          // continue otherwise\n        }\n        result += \"{\";\n        var properties = qx.util.PropertyUtil.getAllProperties(object.constructor);\n        for (var name in properties) {\n          // ignore property groups\n          if (properties[name].group != undefined) {\n            continue;\n          }\n          var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n          result += '\"' + name + '\":' + qx.util.Serializer.toJson(value, qxSerializer, dateFormat) + \",\";\n        }\n        if (result != \"{\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"}\";\n      }\n\n      // localized strings\n      if (qx.locale && qx.locale.LocalizedString && object instanceof qx.locale.LocalizedString) {\n        object = object.toString();\n        // no return here because we want to have the string checks as well!\n      }\n\n      // date objects with formater\n      if (qx.lang.Type.isDate(object) && dateFormat != null) {\n        return '\"' + dateFormat.format(object) + '\"';\n      }\n\n      // javascript objects\n      if (qx.lang.Type.isObject(object)) {\n        result += \"{\";\n        for (var key in object) {\n          result += '\"' + key + '\":' +\n                    qx.util.Serializer.toJson(object[key], qxSerializer, dateFormat) + \",\";\n        }\n        if (result != \"{\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"}\";\n      }\n\n      // strings\n      if (qx.lang.Type.isString(object)) {\n        // escape\n        object = object.replace(/([\\\\])/g, '\\\\\\\\');\n        object = object.replace(/([\"])/g, '\\\\\"');\n        object = object.replace(/([\\r])/g, '\\\\r');\n        object = object.replace(/([\\f])/g, '\\\\f');\n        object = object.replace(/([\\n])/g, '\\\\n');\n        object = object.replace(/([\\t])/g, '\\\\t');\n        object = object.replace(/([\\b])/g, '\\\\b');\n\n        return '\"' + object + '\"';\n      }\n\n      // Date and RegExp\n      if (qx.lang.Type.isDate(object) || qx.lang.Type.isRegExp(object)) {\n        return '\"' + object + '\"';\n      }\n\n      // all other stuff\n      return object + \"\";\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n * A wrapper of the XMLHttpRequest host object (or equivalent). The interface is\n * similar to <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XmlHttpRequest</a>.\n *\n * Hides browser inconsistencies and works around bugs found in popular\n * implementations.\n *\n * <div class=\"desktop\">\n * Example:\n *\n * <pre class=\"javascript\">\n *  var req = new qx.bom.request.Xhr();\n *  req.onload = function() {\n *    // Handle data received\n *    req.responseText;\n *  }\n *\n *  req.open(\"GET\", url);\n *  req.send();\n * </pre>\n *\n * Example for binary data:\n *\n * <pre class=\"javascript\">\n *  var req = new qx.bom.request.Xhr();\n *  req.onload = function() {\n *    // Handle data received\n *    var blob = req.response;\n *    img.src = URL.createObjectURL(blob);\n *  }\n *\n *  req.open(\"GET\", url);\n *  req.responseType = \"blob\";\n *  req.send();\n * </pre>\n \n * </div>\n *\n * @ignore(XDomainRequest)\n * @ignore(qx.event, qx.event.GlobalError.*)\n *\n * @require(qx.bom.request.Xhr#open)\n * @require(qx.bom.request.Xhr#send)\n * @require(qx.bom.request.Xhr#on)\n * @require(qx.bom.request.Xhr#onreadystatechange)\n * @require(qx.bom.request.Xhr#onload)\n * @require(qx.bom.request.Xhr#onloadend)\n * @require(qx.bom.request.Xhr#onerror)\n * @require(qx.bom.request.Xhr#onabort)\n * @require(qx.bom.request.Xhr#ontimeout)\n * @require(qx.bom.request.Xhr#setRequestHeader)\n * @require(qx.bom.request.Xhr#getAllResponseHeaders)\n * @require(qx.bom.request.Xhr#getRequest)\n * @require(qx.bom.request.Xhr#overrideMimeType)\n * @require(qx.bom.request.Xhr#dispose)\n * @require(qx.bom.request.Xhr#isDisposed)\n *\n * @group (IO)\n */\nqx.Bootstrap.define(\"qx.bom.request.Xhr\",\n{\n\n  extend: Object,\n  implement: [ qx.core.IDisposable ],\n\n  construct: function() {\n    var boundFunc = qx.Bootstrap.bind(this.__onNativeReadyStateChange, this);\n\n    // GlobalError shouldn't be included in qx.Website builds so use it\n    // if it's available but otherwise ignore it (see ignore stated above).\n    if (qx.event && qx.event.GlobalError && qx.event.GlobalError.observeMethod) {\n      this.__onNativeReadyStateChangeBound = qx.event.GlobalError.observeMethod(boundFunc);\n    } else {\n      this.__onNativeReadyStateChangeBound = boundFunc;\n    }\n\n    this.__onNativeAbortBound = qx.Bootstrap.bind(this.__onNativeAbort, this);\n    this.__onNativeProgressBound = qx.Bootstrap.bind(this.__onNativeProgress, this);\n    this.__onTimeoutBound = qx.Bootstrap.bind(this.__onTimeout, this);\n\n    this.__initNativeXhr();\n    this._emitter = new qx.event.Emitter();\n\n    // BUGFIX: IE\n    // IE keeps connections alive unless aborted on unload\n    if (window.attachEvent) {\n      this.__onUnloadBound = qx.Bootstrap.bind(this.__onUnload, this);\n      window.attachEvent(\"onunload\", this.__onUnloadBound);\n    }\n  },\n\n  statics :\n  {\n    UNSENT: 0,\n    OPENED: 1,\n    HEADERS_RECEIVED: 2,\n    LOADING: 3,\n    DONE: 4\n  },\n\n\n  events : {\n    /** Fired at ready state changes. */\n    \"readystatechange\" : \"qx.bom.request.Xhr\",\n\n    /** Fired on error. */\n    \"error\" : \"qx.bom.request.Xhr\",\n\n    /** Fired at loadend. */\n    \"loadend\" : \"qx.bom.request.Xhr\",\n\n    /** Fired on timeouts. */\n    \"timeout\" : \"qx.bom.request.Xhr\",\n\n    /** Fired when the request is aborted. */\n    \"abort\" : \"qx.bom.request.Xhr\",\n\n    /** Fired on successful retrieval. */\n    \"load\" : \"qx.bom.request.Xhr\",\n\n    /** Fired on progress. */\n    \"progress\" : \"qx.bom.request.Xhr\"\n  },\n\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Number} Ready state.\n     *\n     * States can be:\n     * UNSENT:           0,\n     * OPENED:           1,\n     * HEADERS_RECEIVED: 2,\n     * LOADING:          3,\n     * DONE:             4\n     */\n    readyState: 0,\n\n    /**\n     * @type {String} The response of the request as text.\n     */\n    responseText: \"\",\n\n    /**\n     * @type {Object} The response of the request as a Document object.\n     */\n    response: null,\n    \n    /**\n     * @type {Object} The response of the request as object.\n     */\n    responseXML: null,\n\n    /**\n     * @type {Number} The HTTP status code.\n     */\n    status: 0,\n\n    /**\n     * @type {String} The HTTP status text.\n     */\n    statusText: \"\",\n\n    /**\n     * @type {String} The response Type to use in the request\n     */\n    responseType: \"\",\n    /**\n     * @type {Number} Timeout limit in milliseconds.\n     *\n     * 0 (default) means no timeout. Not supported for synchronous requests.\n     */\n    timeout: 0,\n\n    /**\n     * @type {Object} Wrapper to store data of the progress event which contains the keys\n       <code>lengthComputable</code>, <code>loaded</code> and <code>total</code>\n     */\n    progress: null,\n\n\n    /**\n     * Initializes (prepares) request.\n     *\n     * @ignore(XDomainRequest)\n     *\n     * @param method {String?\"GET\"}\n     *  The HTTP method to use.\n     * @param url {String}\n     *  The URL to which to send the request.\n     * @param async {Boolean?true}\n     *  Whether or not to perform the operation asynchronously.\n     * @param user {String?null}\n     *  Optional user name to use for authentication purposes.\n     * @param password {String?null}\n     *  Optional password to use for authentication purposes.\n     */\n    open: function(method, url, async, user, password) {\n      this.__checkDisposed();\n\n      // Mimick native behavior\n      if (typeof url === \"undefined\") {\n        throw new Error(\"Not enough arguments\");\n      } else if (typeof method === \"undefined\") {\n        method = \"GET\";\n      }\n\n      // Reset flags that may have been set on previous request\n      this.__abort = false;\n      this.__send = false;\n      this.__conditional = false;\n\n      // Store URL for later checks\n      this.__url = url;\n\n      if (typeof async == \"undefined\") {\n        async = true;\n      }\n      this.__async = async;\n      // Default values according to spec.\n      this.status = 0;\n      this.statusText = this.responseText = \"\";\n      this.responseXML = null;\n      this.response = null;\n\n      // BUGFIX\n      // IE < 9 and FF < 3.5 cannot reuse the native XHR to issue many requests\n      if (!this.__supportsManyRequests() && this.readyState > qx.bom.request.Xhr.UNSENT) {\n        // XmlHttpRequest Level 1 requires open() to abort any pending requests\n        // associated to the object. Since we're dealing with a new object here,\n        // we have to emulate this behavior. Moreover, allow old native XHR to be garbage collected\n        //\n        // Dispose and abort.\n        //\n        this.dispose();\n\n        // Replace the underlying native XHR with a new one that can\n        // be used to issue new requests.\n        this.__initNativeXhr();\n      }\n\n      // Restore handler in case it was removed before\n      this.__nativeXhr.onreadystatechange = this.__onNativeReadyStateChangeBound;\n\n      try {\n        if (qx.core.Environment.get(\"qx.debug.io\")) {\n          qx.Bootstrap.debug(qx.bom.request.Xhr, \"Open native request with method: \" +\n            method + \", url: \" + url + \", async: \" + async);\n        }\n\n        this.__nativeXhr.open(method, url, async, user, password);\n\n      // BUGFIX: IE, Firefox < 3.5\n      // Some browsers do not support Cross-Origin Resource Sharing (CORS)\n      // for XMLHttpRequest. Instead, an exception is thrown even for async requests\n      // if URL is cross-origin (as per XHR level 1). Use the proprietary XDomainRequest\n      // if available (supports CORS) and handle error (if there is one) this\n      // way. Otherwise just assume network error.\n      //\n      // Basically, this allows to detect network errors.\n      } catch(OpenError) {\n\n        // Only work around exceptions caused by cross domain request attempts\n        if (!qx.util.Request.isCrossDomain(url)) {\n          // Is same origin\n          throw OpenError;\n        }\n\n        if (!this.__async) {\n          this.__openError = OpenError;\n        }\n\n        if (this.__async) {\n          // Try again with XDomainRequest\n          // (Success case not handled on purpose)\n          // - IE 9\n          if (window.XDomainRequest) {\n            this.readyState = 4;\n            this.__nativeXhr = new XDomainRequest();\n            this.__nativeXhr.onerror = qx.Bootstrap.bind(function() {\n              this._emit(\"readystatechange\");\n              this._emit(\"error\");\n              this._emit(\"loadend\");\n            }, this);\n\n            if (qx.core.Environment.get(\"qx.debug.io\")) {\n              qx.Bootstrap.debug(qx.bom.request.Xhr, \"Retry open native request with method: \" +\n                method + \", url: \" + url + \", async: \" + async);\n            }\n            this.__nativeXhr.open(method, url, async, user, password);\n            return;\n          }\n\n          // Access denied\n          // - IE 6: -2146828218\n          // - IE 7: -2147024891\n          // - Legacy Firefox\n          window.setTimeout(qx.Bootstrap.bind(function() {\n            if (this.__disposed) {\n              return;\n            }\n            this.readyState = 4;\n            this._emit(\"readystatechange\");\n            this._emit(\"error\");\n            this._emit(\"loadend\");\n          }, this));\n        }\n\n      }\n\n      // BUGFIX: IE < 9\n      // IE < 9 tends to cache overly aggressive. This may result in stale\n      // representations. Force validating freshness of cached representation.\n      if (qx.core.Environment.get(\"engine.name\") === \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9 &&\n        this.__nativeXhr.readyState > 0) {\n          this.__nativeXhr.setRequestHeader(\"If-Modified-Since\", \"-1\");\n        }\n\n      // BUGFIX: Firefox\n      // Firefox < 4 fails to trigger onreadystatechange OPENED for sync requests\n      if (qx.core.Environment.get(\"engine.name\") === \"gecko\" &&\n          parseInt(qx.core.Environment.get(\"engine.version\"), 10) < 2 &&\n          !this.__async) {\n        // Native XHR is already set to readyState DONE. Fake readyState\n        // and call onreadystatechange manually.\n        this.readyState = qx.bom.request.Xhr.OPENED;\n        this._emit(\"readystatechange\");\n      }\n\n    },\n\n    /**\n     * Sets an HTTP request header to be used by the request.\n     *\n     * Note: The request must be initialized before using this method.\n     *\n     * @param key {String}\n     *  The name of the header whose value is to be set.\n     * @param value {String}\n     *  The value to set as the body of the header.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    setRequestHeader: function(key, value) {\n      this.__checkDisposed();\n\n      // Detect conditional requests\n      if (key == \"If-Match\" || key == \"If-Modified-Since\" ||\n        key == \"If-None-Match\" || key == \"If-Range\") {\n        this.__conditional = true;\n      }\n\n      this.__nativeXhr.setRequestHeader(key, value);\n      return this;\n    },\n\n    /**\n     * Sends request.\n     *\n     * @param data {String|Document?null}\n     *  Optional data to send.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    send: function(data) {\n      this.__checkDisposed();\n\n      // BUGFIX: IE & Firefox < 3.5\n      // For sync requests, some browsers throw error on open()\n      // while it should be on send()\n      //\n      if (!this.__async && this.__openError) {\n        throw this.__openError;\n      }\n\n      // BUGFIX: Opera\n      // On network error, Opera stalls at readyState HEADERS_RECEIVED\n      // This violates the spec. See here http://www.w3.org/TR/XMLHttpRequest2/#send\n      // (Section: If there is a network error)\n      //\n      // To fix, assume a default timeout of 10 seconds. Note: The \"error\"\n      // event will be fired correctly, because the error flag is inferred\n      // from the statusText property. Of course, compared to other\n      // browsers there is an additional call to ontimeout(), but this call\n      // should not harm.\n      //\n      if (qx.core.Environment.get(\"engine.name\") === \"opera\" &&\n          this.timeout === 0) {\n        this.timeout = 10000;\n      }\n\n      // Timeout\n      if (this.timeout > 0) {\n        this.__timerId = window.setTimeout(this.__onTimeoutBound, this.timeout);\n      }\n\n      // BUGFIX: Firefox 2\n      // \"NS_ERROR_XPC_NOT_ENOUGH_ARGS\" when calling send() without arguments\n      data = typeof data == \"undefined\" ? null : data;\n\n      // Whitelisting the allowed data types regarding the spec\n      // -> http://www.w3.org/TR/XMLHttpRequest2/#the-send-method\n      // All other data input will be transformed to a string to e.g. prevent\n      // an SendError in Firefox (at least <= 31) and to harmonize it with the\n      // behaviour of all other browsers (Chrome, IE and Safari)\n      var dataType = qx.Bootstrap.getClass(data);\n      data = (data !== null && this.__dataTypeWhiteList.indexOf(dataType) === -1) ? data.toString() : data;\n\n      // Some browsers may throw an error when sending of async request fails.\n      // This violates the spec which states only sync requests should.\n      try {\n        if (qx.core.Environment.get(\"qx.debug.io\")) {\n          qx.Bootstrap.debug(qx.bom.request.Xhr, \"Send native request\");\n        }\n        if (this.__async) {\n          this.__nativeXhr.responseType = this.responseType;\n        }\n        this.__nativeXhr.send(data);\n      } catch(SendError) {\n        if (!this.__async) {\n          throw SendError;\n        }\n\n        // BUGFIX\n        // Some browsers throws error when file not found via file:// protocol.\n        // Synthesize readyState changes.\n        if (this._getProtocol() === \"file:\") {\n          this.readyState = 2;\n          this.__readyStateChange();\n\n          var that = this;\n          window.setTimeout(function() {\n            if (that.__disposed) {\n              return;\n            }\n            that.readyState = 3;\n            that.__readyStateChange();\n\n            that.readyState = 4;\n            that.__readyStateChange();\n          });\n\n        }\n\n      }\n\n      // BUGFIX: Firefox\n      // Firefox fails to trigger onreadystatechange DONE for sync requests\n      if (qx.core.Environment.get(\"engine.name\") === \"gecko\" && !this.__async) {\n        // Properties all set, only missing native readystatechange event\n        this.__onNativeReadyStateChange();\n      }\n\n      // Set send flag\n      this.__send = true;\n      return this;\n    },\n\n    /**\n     * Abort request - i.e. cancels any network activity.\n     *\n     * Note:\n     *  On Windows 7 every browser strangely skips the loading phase\n     *  when this method is called (because readyState never gets 3).\n     *\n     *  So keep this in mind if you rely on the phases which are\n     *  passed through. They will be \"opened\", \"sent\", \"abort\"\n     *  instead of normally \"opened\", \"sent\", \"loading\", \"abort\".\n     *\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    abort: function() {\n      this.__checkDisposed();\n\n      this.__abort = true;\n      this.__nativeXhr.abort();\n\n      if (this.__nativeXhr && this.readyState !== qx.bom.request.Xhr.DONE) {\n        this.readyState = this.__nativeXhr.readyState;\n      }\n      return this;\n    },\n\n\n    /**\n     * Helper to emit events and call the callback methods.\n     * @param event {String} The name of the event.\n     */\n    _emit: function(event) {\n      if (this[\"on\" + event]) {\n        this[\"on\" + event]();\n      }\n      this._emitter.emit(event, this);\n    },\n\n    /**\n     * Event handler for XHR event that fires at every state change.\n     *\n     * Replace with custom method to get informed about the communication progress.\n     */\n    onreadystatechange: function() {},\n\n    /**\n     * Event handler for XHR event \"load\" that is fired on successful retrieval.\n     *\n     * Note: This handler is called even when the HTTP status indicates an error.\n     *\n     * Replace with custom method to listen to the \"load\" event.\n     */\n    onload: function() {},\n\n    /**\n     * Event handler for XHR event \"loadend\" that is fired on retrieval.\n     *\n     * Note: This handler is called even when a network error (or similar)\n     * occurred.\n     *\n     * Replace with custom method to listen to the \"loadend\" event.\n     */\n    onloadend: function() {},\n\n    /**\n     * Event handler for XHR event \"error\" that is fired on a network error.\n     *\n     * Replace with custom method to listen to the \"error\" event.\n     */\n    onerror: function() {},\n\n    /**\n    * Event handler for XHR event \"abort\" that is fired when request\n    * is aborted.\n    *\n    * Replace with custom method to listen to the \"abort\" event.\n    */\n    onabort: function() {},\n\n    /**\n    * Event handler for XHR event \"timeout\" that is fired when timeout\n    * interval has passed.\n    *\n    * Replace with custom method to listen to the \"timeout\" event.\n    */\n    ontimeout: function() {},\n\n    /**\n    * Event handler for XHR event \"progress\".\n    *\n    * Replace with custom method to listen to the \"progress\" event.\n    */\n    onprogress: function() {},\n\n\n    /**\n     * Add an event listener for the given event name.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function to execute when the event is fired\n     * @param ctx {var?} The context of the listener.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    on: function(name, listener, ctx) {\n      this._emitter.on(name, listener, ctx);\n      return this;\n    },\n\n\n    /**\n     * Get a single response header from response.\n     *\n     * @param header {String}\n     *  Key of the header to get the value from.\n     * @return {String}\n     *  Response header.\n     */\n    getResponseHeader: function(header) {\n      this.__checkDisposed();\n\n      if (qx.core.Environment.get(\"browser.documentmode\") === 9 &&\n        this.__nativeXhr.aborted)\n      {\n        return \"\";\n      }\n\n      return this.__nativeXhr.getResponseHeader(header);\n    },\n\n    /**\n     * Get all response headers from response.\n     *\n     * @return {String} All response headers.\n     */\n    getAllResponseHeaders: function() {\n      this.__checkDisposed();\n\n      if (qx.core.Environment.get(\"browser.documentmode\") === 9 &&\n        this.__nativeXhr.aborted)\n      {\n        return \"\";\n      }\n\n      return this.__nativeXhr.getAllResponseHeaders();\n    },\n\n    /**\n     * Overrides the MIME type returned by the server\n     * and must be called before @send()@.\n     *\n     * Note:\n     *\n     * * IE doesn't support this method so in this case an Error is thrown.\n     * * after calling this method @getResponseHeader(\"Content-Type\")@\n     *   may return the original (Firefox 23, IE 10, Safari 6) or\n     *   the overridden content type (Chrome 28+, Opera 15+).\n     *\n     *\n     * @param mimeType {String} The mimeType for overriding.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    overrideMimeType: function(mimeType) {\n      this.__checkDisposed();\n\n      if (this.__nativeXhr.overrideMimeType) {\n        this.__nativeXhr.overrideMimeType(mimeType);\n      } else {\n        throw new Error(\"Native XHR object doesn't support overrideMimeType.\");\n      }\n\n      return this;\n    },\n\n    /**\n     * Get wrapped native XMLHttpRequest (or equivalent).\n     *\n     * Can be XMLHttpRequest or ActiveX.\n     *\n     * @return {Object} XMLHttpRequest or equivalent.\n     */\n    getRequest: function() {\n      return this.__nativeXhr;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Dispose object and wrapped native XHR.\n     * @return {Boolean} <code>true</code> if the object was successfully disposed\n     */\n    dispose: function() {\n      if (this.__disposed) {\n        return false;\n      }\n\n      window.clearTimeout(this.__timerId);\n\n      // Remove unload listener in IE. Aborting on unload is no longer required\n      // for this instance.\n      if (window.detachEvent) {\n        window.detachEvent(\"onunload\", this.__onUnloadBound);\n      }\n\n      // May fail in IE\n      try {\n        this.__nativeXhr.onreadystatechange;\n      } catch(PropertiesNotAccessable) {\n        return false;\n      }\n\n      // Clear out listeners\n      var noop = function() {};\n      this.__nativeXhr.onreadystatechange = noop;\n      this.__nativeXhr.onload = noop;\n      this.__nativeXhr.onerror = noop;\n      this.__nativeXhr.onprogress = noop;\n\n      // Abort any network activity\n      this.abort();\n\n      // Remove reference to native XHR\n      this.__nativeXhr = null;\n\n      this.__disposed = true;\n      return true;\n    },\n\n\n    /**\n     * Check if the request has already beed disposed.\n     * @return {Boolean} <code>true</code>, if the request has been disposed.\n     */\n    isDisposed : function() {\n      return !!this.__disposed;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Create XMLHttpRequest (or equivalent).\n     *\n     * @return {Object} XMLHttpRequest or equivalent.\n     */\n    _createNativeXhr: function() {\n      var xhr = qx.core.Environment.get(\"io.xhr\");\n\n      if (xhr === \"xhr\") {\n        return new XMLHttpRequest();\n      }\n\n      if (xhr == \"activex\") {\n        return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n      }\n\n      qx.Bootstrap.error(this, \"No XHR support available.\");\n    },\n\n    /**\n     * Get protocol of requested URL.\n     *\n     * @return {String} The used protocol.\n     */\n    _getProtocol: function() {\n      var url = this.__url;\n      var protocolRe = /^(\\w+:)\\/\\//;\n\n      // Could be http:// from file://\n      if (url !== null && url.match) {\n        var match = url.match(protocolRe);\n        if (match && match[1]) {\n          return match[1];\n        }\n      }\n\n      return window.location.protocol;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Object} XMLHttpRequest or equivalent.\n     */\n    __nativeXhr: null,\n\n    /**\n     * @type {Boolean} Whether request is async.\n     */\n    __async: null,\n\n    /**\n     * @type {Function} Bound __onNativeReadyStateChange handler.\n     */\n    __onNativeReadyStateChangeBound: null,\n\n    /**\n     * @type {Function} Bound __onNativeAbort handler.\n     */\n    __onNativeAbortBound: null,\n\n    /**\n     * @type {Function} Bound __onNativeProgress handler.\n     */\n    __onNativeProgressBound: null,\n\n    /**\n     * @type {Function} Bound __onUnload handler.\n     */\n    __onUnloadBound: null,\n\n    /**\n     * @type {Function} Bound __onTimeout handler.\n     */\n    __onTimeoutBound: null,\n\n    /**\n     * @type {Boolean} Send flag\n     */\n    __send: null,\n\n    /**\n     * @type {String} Requested URL\n     */\n    __url: null,\n\n    /**\n     * @type {Boolean} Abort flag\n     */\n    __abort: null,\n\n    /**\n     * @type {Boolean} Timeout flag\n     */\n    __timeout: null,\n\n    /**\n     * @type {Boolean} Whether object has been disposed.\n     */\n    __disposed: null,\n\n    /**\n     * @type {Number} ID of timeout timer.\n     */\n    __timerId: null,\n\n    /**\n     * @type {Error} Error thrown on open, if any.\n     */\n    __openError: null,\n\n    /**\n     * @type {Boolean} Conditional get flag\n     */\n     __conditional: null,\n\n    /**\n     * @type {Array} Whitelist with all allowed data types for the request payload\n     */\n    __dataTypeWhiteList: null,\n\n    /**\n     * Init native XHR.\n     */\n    __initNativeXhr: function() {\n      // Create native XHR or equivalent and hold reference\n      this.__nativeXhr = this._createNativeXhr();\n\n      // Track native ready state changes\n      this.__nativeXhr.onreadystatechange = this.__onNativeReadyStateChangeBound;\n\n      // Track native abort, when supported\n      if (qx.Bootstrap.getClass(this.__nativeXhr.onabort) !== \"Undefined\") {\n        this.__nativeXhr.onabort = this.__onNativeAbortBound;\n      }\n\n      // Track native progress, when supported\n      if (qx.Bootstrap.getClass(this.__nativeXhr.onprogress) !== \"Undefined\") {\n        this.__nativeXhr.onprogress = this.__onNativeProgressBound;\n\n        this.progress = {\n          lengthComputable: false,\n          loaded: 0,\n          total: 0\n        };\n      }\n\n      // Reset flags\n      this.__disposed = this.__send = this.__abort = false;\n\n      // Initialize data white list\n      this.__dataTypeWhiteList = [ \"ArrayBuffer\", \"Blob\", \"File\", \"HTMLDocument\", \"String\", \"FormData\" ];\n    },\n\n    /**\n     * Track native abort.\n     *\n     * In case the end user cancels the request by other\n     * means than calling abort().\n     */\n    __onNativeAbort: function() {\n      // When the abort that triggered this method was not a result from\n      // calling abort()\n      if (!this.__abort) {\n        this.abort();\n      }\n    },\n\n    /**\n     * Track native progress event.\n     @param e {Event} The native progress event.\n     */\n    __onNativeProgress: function(e) {\n      this.progress.lengthComputable = e.lengthComputable;\n      this.progress.loaded = e.loaded;\n      this.progress.total = e.total;\n      this._emit(\"progress\");\n    },\n\n    /**\n     * Handle native onreadystatechange.\n     *\n     * Calls user-defined function onreadystatechange on each\n     * state change and syncs the XHR status properties.\n     */\n    __onNativeReadyStateChange: function() {\n      var nxhr = this.__nativeXhr,\n          propertiesReadable = true;\n\n      if (qx.core.Environment.get(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(qx.bom.request.Xhr, \"Received native readyState: \" + nxhr.readyState);\n      }\n\n      // BUGFIX: IE, Firefox\n      // onreadystatechange() is called twice for readyState OPENED.\n      //\n      // Call onreadystatechange only when readyState has changed.\n      if (this.readyState == nxhr.readyState) {\n        return;\n      }\n\n      // Sync current readyState\n      this.readyState = nxhr.readyState;\n\n      // BUGFIX: IE\n      // Superfluous onreadystatechange DONE when aborting OPENED\n      // without send flag\n      if (this.readyState === qx.bom.request.Xhr.DONE &&\n          this.__abort && !this.__send) {\n        return;\n      }\n\n      // BUGFIX: IE\n      // IE fires onreadystatechange HEADERS_RECEIVED and LOADING when sync\n      //\n      // According to spec, only onreadystatechange OPENED and DONE should\n      // be fired.\n      if (!this.__async && (nxhr.readyState == 2 || nxhr.readyState == 3)) {\n        return;\n      }\n\n      // Default values according to spec.\n      this.status = 0;\n      this.statusText = this.responseText = \"\";\n      this.responseXML = null;\n      this.response = null;\n\n      if (this.readyState >= qx.bom.request.Xhr.HEADERS_RECEIVED) {\n        // In some browsers, XHR properties are not readable\n        // while request is in progress.\n        try {\n          this.status = nxhr.status;\n          this.statusText = nxhr.statusText;\n          this.response = nxhr.response;\n          if ((this.responseType === \"\") || (this.responseType === \"text\")) {\n           this.responseText = nxhr.responseText;\n          }\n          if ((this.responseType === \"\") || (this.responseType === \"document\")) {\n           this.responseXML = nxhr.responseXML;\n          }\n        } catch(XhrPropertiesNotReadable) {\n          propertiesReadable = false;\n        }\n\n        if (propertiesReadable) {\n          this.__normalizeStatus();\n          this.__normalizeResponseXML();\n        }\n      }\n\n      this.__readyStateChange();\n\n      // BUGFIX: IE\n      // Memory leak in XMLHttpRequest (on-page)\n      if (this.readyState == qx.bom.request.Xhr.DONE) {\n        // Allow garbage collecting of native XHR\n        if (nxhr) {\n          nxhr.onreadystatechange = function() {};\n        }\n      }\n\n    },\n\n    /**\n     * Handle readystatechange. Called internally when readyState is changed.\n     */\n    __readyStateChange: function() {\n      // Cancel timeout before invoking handlers because they may throw\n      if (this.readyState === qx.bom.request.Xhr.DONE) {\n        // Request determined DONE. Cancel timeout.\n        window.clearTimeout(this.__timerId);\n      }\n\n      // Always fire \"readystatechange\"\n      this._emit(\"readystatechange\");\n      if (this.readyState === qx.bom.request.Xhr.DONE) {\n        this.__readyStateChangeDone();\n      }\n    },\n\n    /**\n     * Handle readystatechange. Called internally by\n     * {@link #__readyStateChange} when readyState is DONE.\n     */\n    __readyStateChangeDone: function() {\n      // Fire \"timeout\" if timeout flag is set\n      if (this.__timeout) {\n        this._emit(\"timeout\");\n\n        // BUGFIX: Opera\n        // Since Opera does not fire \"error\" on network error, fire additional\n        // \"error\" on timeout (may well be related to network error)\n        if (qx.core.Environment.get(\"engine.name\") === \"opera\") {\n          this._emit(\"error\");\n        }\n\n        this.__timeout = false;\n\n      // Fire either \"abort\", \"load\" or \"error\"\n      } else {\n        if (this.__abort) {\n          this._emit(\"abort\");\n        } else{\n          if (this.__isNetworkError()) {\n            this._emit(\"error\");\n          } else {\n            this._emit(\"load\");\n          }\n        }\n      }\n\n      // Always fire \"onloadend\" when DONE\n      this._emit(\"loadend\");\n    },\n\n    /**\n     * Check for network error.\n     *\n     * @return {Boolean} Whether a network error occurred.\n     */\n    __isNetworkError: function() {\n      var error;\n\n      // Infer the XHR internal error flag from statusText when not aborted.\n      // See http://www.w3.org/TR/XMLHttpRequest2/#error-flag and\n      // http://www.w3.org/TR/XMLHttpRequest2/#the-statustext-attribute\n      //\n      // With file://, statusText is always falsy. Assume network error when\n      // response is empty.\n      if (this._getProtocol() === \"file:\") {\n        error = !this.responseText;\n      } else {\n        error = this.status === 0;\n      }\n\n      return error;\n    },\n\n    /**\n     * Handle faked timeout.\n     */\n    __onTimeout: function() {\n      // Basically, mimick http://www.w3.org/TR/XMLHttpRequest2/#timeout-error\n      var nxhr = this.__nativeXhr;\n      this.readyState = qx.bom.request.Xhr.DONE;\n\n      // Set timeout flag\n      this.__timeout = true;\n\n      // No longer consider request. Abort.\n      nxhr.aborted = true;\n      nxhr.abort();\n      this.responseText = \"\";\n      this.responseXML = null;\n\n      // Signal readystatechange\n      this.__readyStateChange();\n    },\n\n    /**\n     * Normalize status property across browsers.\n     */\n    __normalizeStatus: function() {\n      var isDone = this.readyState === qx.bom.request.Xhr.DONE;\n\n      // BUGFIX: Most browsers\n      // Most browsers tell status 0 when it should be 200 for local files\n      if (this._getProtocol() === \"file:\" && this.status === 0 && isDone) {\n        if (!this.__isNetworkError()) {\n          this.status = 200;\n        }\n      }\n\n      // BUGFIX: IE\n      // IE sometimes tells 1223 when it should be 204\n      if (this.status === 1223) {\n        this.status = 204;\n      }\n\n      // BUGFIX: Opera\n      // Opera tells 0 for conditional requests when it should be 304\n      //\n      // Detect response to conditional request that signals fresh cache.\n      if (qx.core.Environment.get(\"engine.name\") === \"opera\") {\n        if (\n          isDone &&                 // Done\n          this.__conditional &&     // Conditional request\n          !this.__abort &&          // Not aborted\n          this.status === 0         // But status 0!\n        ) {\n          this.status = 304;\n        }\n      }\n    },\n\n    /**\n     * Normalize responseXML property across browsers.\n     */\n    __normalizeResponseXML: function() {\n      // BUGFIX: IE\n      // IE does not recognize +xml extension, resulting in empty responseXML.\n      //\n      // Check if Content-Type is +xml, verify missing responseXML then parse\n      // responseText as XML.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n          (this.getResponseHeader(\"Content-Type\") || \"\").match(/[^\\/]+\\/[^\\+]+\\+xml/) &&\n           this.responseXML && !this.responseXML.documentElement) {\n        var dom = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n        dom.async = false;\n        dom.validateOnParse = false;\n        dom.loadXML(this.responseText);\n        this.responseXML = dom;\n      }\n    },\n\n    /**\n     * Handler for native unload event.\n     */\n    __onUnload: function() {\n      try {\n        // Abort and dispose\n        if (this) {\n          this.dispose();\n        }\n      } catch(e) {}\n    },\n\n    /**\n     * Helper method to determine whether browser supports reusing the\n     * same native XHR to send more requests.\n     * @return {Boolean} <code>true</code> if request object reuse is supported\n     */\n    __supportsManyRequests: function() {\n      var name = qx.core.Environment.get(\"engine.name\");\n      var version = qx.core.Environment.get(\"browser.version\");\n\n      return !(name == \"mshtml\" && version < 9 ||\n               name == \"gecko\" && version < 3.5);\n    },\n\n    /**\n     * Throw when already disposed.\n     */\n    __checkDisposed: function() {\n      if (this.__disposed) {\n        throw new Error(\"Already disposed\");\n      }\n    }\n  },\n\n  defer: function() {\n    qx.core.Environment.add(\"qx.debug.io\", false);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\n/**\n * Parsers for parsing response strings (especially for XHR).\n *\n * Known parsers are: <code>\"json\"</code> and <code>\"xml\"</code>.\n *\n * @require(qx.util.ResponseParser#parse)\n */\nqx.Bootstrap.define(\"qx.util.ResponseParser\",\n{\n\n  /**\n   * @param parser {String|Function} See {@link #setParser}.\n   */\n  construct: function(parser) {\n    if (parser !== undefined) {\n      this.setParser(parser);\n    }\n  },\n\n  statics:\n  {\n    /**\n     * @type {Map} Map of parser functions. Parsers defined here can be\n     * referenced symbolically, e.g. with {@link #setParser}.\n     *\n     * Known parsers are: <code>\"json\"</code> and <code>\"xml\"</code>.\n     */\n    PARSER: {\n      json: qx.lang.Json.parse,\n      xml: qx.xml.Document.fromString\n    }\n  },\n\n  members :\n  {\n    __parser: null,\n\n    /**\n     * Returns given response parsed with parser\n     * determined by {@link #_getParser}.\n     *\n     * @param response {String} response (e.g JSON/XML string)\n     * @param contentType {String} contentType (e.g. 'application/json')\n     * @return {String|Object} The parsed response of the request.\n     */\n    parse: function(response, contentType) {\n      var parser = this._getParser(contentType);\n\n      if (typeof parser === \"function\") {\n        if (response !== \"\") {\n          return parser.call(this, response);\n        }\n      }\n\n      return response;\n    },\n\n\n    /**\n     * Set parser used to parse response once request has\n     * completed successfully.\n     *\n     * Usually, the parser is correctly inferred from the\n     * content type of the response. This method allows to force the\n     * parser being used, e.g. if the content type returned from\n     * the backend is wrong or the response needs special parsing.\n     *\n     * Parser most typically used can be referenced symbolically.\n     * To cover edge cases, a function can be given. When parsing\n     * the response, this function is called with the raw response as\n     * first argument.\n     *\n     * @param parser {String|Function}\n     *\n     * Can be:\n     *\n     * <ul>\n     *   <li>A parser defined in {@link qx.util.ResponseParser#PARSER},\n     *       referenced by string.</li>\n     *   <li>The function to invoke.\n     *       Receives the raw response as argument.</li>\n     * </ul>\n     *\n     * @return {Function} The parser function\n     */\n    setParser: function(parser) {\n      // Symbolically given known parser\n      if (typeof qx.util.ResponseParser.PARSER[parser] === \"function\") {\n        return this.__parser = qx.util.ResponseParser.PARSER[parser];\n      }\n\n      // If parser is not a symbol, it must be a function\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertFunction(parser);\n      }\n\n      return this.__parser = parser;\n    },\n\n\n    /**\n     * Gets the parser.\n     *\n     * If not defined explicitly using {@link #setParser},\n     * the parser is inferred from the content type.\n     *\n     * Override this method to extend the list of content types\n     * being handled.\n     *\n     * @param contentType {String}\n     * @return {Function|null} The parser function or <code>null</code> if the\n     * content type is undetermined.\n     *\n     */\n    _getParser: function(contentType) {\n      var parser = this.__parser,\n          contentTypeOrig = \"\",\n          contentTypeNormalized = \"\";\n\n      // Use user-provided parser, if any\n      if (parser) {\n        return parser;\n      }\n\n      // See http://restpatterns.org/Glossary/MIME_Type\n\n      contentTypeOrig = contentType || \"\";\n\n      // Ignore parameters (e.g. the character set)\n      contentTypeNormalized = contentTypeOrig.replace(/;.*$/, \"\");\n\n      if ((/^application\\/(\\w|\\.)*\\+?json$/).test(contentTypeNormalized)) {\n        parser = qx.util.ResponseParser.PARSER.json;\n      }\n\n      if ((/^application\\/xml$/).test(contentTypeNormalized)) {\n        parser = qx.util.ResponseParser.PARSER.xml;\n      }\n\n      // Deprecated\n      if ((/[^\\/]+\\/[^\\+]+\\+xml$/).test(contentTypeOrig)) {\n        parser = qx.util.ResponseParser.PARSER.xml;\n      }\n\n      return parser;\n    }\n  }\n});\n\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\n/**\n * Client-side wrapper of a REST resource.\n *\n * Each instance represents a resource in terms of REST. A number of actions\n * (usually HTTP methods) unique to the resource can be defined and invoked.\n * A resource with its actions is configured declaratively by passing a resource\n * description to the constructor, or programmatically using {@link #map}.\n *\n * Each action is associated to a route. A route is a combination of method,\n * URL pattern and optional parameter constraints.\n *\n * An action is invoked by calling a method with the same name. When a URL\n * pattern of a route contains positional parameters, those parameters must be\n * passed when invoking the associated action. Also, constraints defined in the\n * route must be satisfied.\n *\n * When an action is invoked, a request is configured according to the associated\n * route, is passed the URL parameters, request body data, and finally send.\n * What kind of request is send can be configured by overwriting {@link #_getRequest}.\n *\n * No constraints on the action's name or the scope of the URLs are imposed. However,\n * if you want to follow RESTful design patterns it is recommended to name actions\n * the same as the HTTP action.\n *\n * <pre class=\"javascript\">\n * var description = {\n *  \"get\": { method: \"GET\", url: \"/photo/{id}\" },\n *  \"put\": { method: \"PUT\", url: \"/photo/{id}\"},\n *  \"post\": { method: \"POST\", url: \"/photos/\"}\n * };\n * var photo = new qx.io.rest.Resource(description);\n * // Can also be written: photo.invoke(\"get\", {id: 1});\n * photo.get({id: 1});\n *\n * // Additionally sets request data (provide it as string or set the content type)\n * // In a RESTful environment this creates a new resource with the given 'id'\n * photo.configureRequest(function(req) {\n *  req.setRequestHeader(\"Content-Type\", \"application/json\");\n * });\n * photo.put({id: 1}, {title: \"Monkey\"});\n *\n * // Additionally sets request data (provide it as string or set the content type)\n * // In a RESTful environment this adds a new resource to the resource collection 'photos'\n * photo.configureRequest(function(req) {\n *  req.setRequestHeader(\"Content-Type\", \"application/json\");\n * });\n * photo.post(null, {title: \"Monkey\"});\n * </pre>\n *\n * To check for existence of URL parameters or constrain them to a certain format, you\n * can add a <code>check</code> property to the description. See {@link #map} for details.\n *\n * <pre class=\"javascript\">\n * var description = {\n *  \"get\": { method: \"GET\", url: \"/photo/{id}\", check: { id: /\\d+/ } }\n * };\n * var photo = new qx.io.rest.Resource(description);\n * // photo.get({id: \"FAIL\"});\n * // -- Error: \"Parameter 'id' is invalid\"\n * </pre>\n *\n * If your description happens to use the same action more than once, consider\n * defining another resource.\n *\n * <pre class=\"javascript\">\n * var description = {\n *  \"get\": { method: \"GET\", url: \"/photos\"},\n * };\n * // Distinguish \"photo\" (singular) and \"photos\" (plural) resource\n * var photos = new qx.io.rest.Resource(description);\n * photos.get();\n * </pre>\n *\n * Basically, all routes of a resource should point to the same URL (resource in\n * terms of HTTP). One acceptable exception of this constraint are resources where\n * required parameters are part of the URL (<code>/photos/1/</code>) or filter\n * resources. For instance:\n *\n * <pre class=\"javascript\">\n * var description = {\n *  \"get\": { method: \"GET\", url: \"/photos/{tag}\" }\n * };\n * var photos = new qx.io.rest.Resource(description);\n * photos.get();\n * photos.get({tag: \"wildlife\"})\n * </pre>\n *\n * Strictly speaking, the <code>photos</code> instance represents two distinct resources\n * and could therefore just as well mapped to two distinct resources (for instance,\n * named photos and photosTagged). What style to choose depends on the kind of data\n * returned. For instance, it seems sensible to stick with one resource if the filter\n * only limits the result set (i.e. the individual results have the same properties).\n *\n * In order to respond to successful (or erroneous) invocations of actions,\n * either listen to the generic \"success\" or \"error\" event and get the action\n * from the event data, or listen to action specific events defined at runtime.\n * Action specific events follow the pattern \"&lt;action&gt;Success\" and\n * \"&lt;action&gt;Error\", e.g. \"indexSuccess\".\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.io.rest.Resource\",\n{\n  extend: qx.core.Object,\n  implement : [ qx.core.IDisposable ],\n\n  /**\n   * @param description {Map?} Each key of the map is interpreted as\n   *  <code>action</code> name. The value associated to the key must be a map\n   *  with the properties <code>method</code> and <code>url</code>.\n   *  <code>check</code> is optional. Also see {@link #map}.\n   *\n   * For example:\n   *\n   * <pre class=\"javascript\">\n   * { get: {method: \"GET\", url: \"/photos/{id}\", check: { id: /\\d+/ }} }\n   * </pre>\n   *\n   * @see qx.bom.rest\n   * @see qx.io.rest\n   */\n  construct: function(description)\n  {\n    this.base(arguments);\n\n    this.__longPollHandlers = {};\n    this.__pollTimers = {};\n    this.__routes = {};\n\n    this._resource = this._tailorResource(this._getResource());\n\n    try {\n      if (typeof description !== \"undefined\") {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.core.Assert.assertMap(description);\n        }\n        this.__mapFromDescription(description);\n      }\n    } catch(e) {\n      this.dispose();\n      throw e;\n    }\n  },\n\n  events:\n  {\n    /**\n     * Fired when any request was successful.\n     *\n     * The action the successful request is associated to, as well as the\n     * request itself, can be retrieved from the event’s properties.\n     * Additionally, an action specific event is fired that follows the pattern\n     * \"<action>Success\", e.g. \"indexSuccess\".\n     */\n    \"success\": \"qx.event.type.Rest\",\n\n    /**\n     * Fired when request associated to action given in prefix was successful.\n     *\n     * For example, \"indexSuccess\" is fired when <code>index()</code> was\n     * successful.\n     */\n    \"actionSuccess\": \"qx.event.type.Rest\",\n\n    /**\n     * Fired when any request fails.\n     *\n     * The action the failed request is associated to, as well as the\n     * request itself, can be retrieved from the event’s properties.\n     * Additionally, an action specific event is fired that follows the pattern\n     * \"<action>Error\", e.g. \"indexError\".\n     */\n    \"error\": \"qx.event.type.Rest\",\n\n    /**\n     * Fired when any request associated to action given in prefix fails.\n     *\n     * For example, \"indexError\" is fired when <code>index()</code> failed.\n     */\n    \"actionError\": \"qx.event.type.Rest\"\n  },\n\n  statics:\n  {\n    /**\n     * Number of milliseconds below a long-poll request is considered immediate and\n     * subject to throttling checks.\n     */\n    POLL_THROTTLE_LIMIT: 100,\n\n    /**\n     * Number of immediate long-poll responses accepted before throttling takes place.\n     */\n    POLL_THROTTLE_COUNT: 30,\n\n    /**\n     * A symbol used in checks to declare required parameter.\n     */\n    REQUIRED: true,\n\n    /**\n     * Get placeholders from URL.\n     *\n     * @param url {String} The URL to parse for placeholders.\n     * @return {Array} Array of placeholders without the placeholder prefix.\n     */\n    placeholdersFromUrl: function(url) {\n      return qx.bom.rest.Resource.placeholdersFromUrl(url);\n    }\n  },\n\n  members:\n  {\n    _resource: null,\n    __longPollHandlers: null,\n    __pollTimers: null,\n    __routes: null,\n\n    /**\n     * Get resource.\n     *\n     * May be overridden to change type of resource.\n     * @param description {Map?} See construct.\n     * @return {qx.bom.rest.Resource} Resource implementation which does the heavy lifting.\n     */\n    _getResource: function(description) {\n      return new qx.bom.rest.Resource(description);\n    },\n\n    /**\n     * Tailors (apply dependency injection) the given resource to fit our needs.\n     *\n     * @param resource {qx.bom.rest.Resource} Resource.\n     * @return {qx.bom.rest.Resource} Tailored resource.\n     */\n    _tailorResource: function(resource) {\n      // inject different request implementation\n      resource.setRequestFactory(this._getRequest);\n\n      // inject different request handling\n      resource.setRequestHandler({\n          onsuccess: {\n            callback: function(req, action) {\n              return function() {\n                var props = [req.getResponse(), null, false, req, action, req.getPhase()];\n                this.fireEvent(action + \"Success\", qx.event.type.Rest, props);\n                this.fireEvent(\"success\", qx.event.type.Rest, props);\n              };\n            },\n            context: this\n          },\n          onfail: {\n            callback: function(req, action) {\n              return function() {\n                var props = [req.getResponse(), null, false, req, action, req.getPhase()];\n                this.fireEvent(action + \"Error\", qx.event.type.Rest, props);\n                this.fireEvent(\"error\", qx.event.type.Rest, props);\n              };\n            },\n            context: this\n          },\n          onloadend: {\n            callback: function(req, action) {\n              return function() {\n                req.dispose();\n              };\n            },\n            context: this\n          }\n      });\n\n      return resource;\n    },\n\n    //\n    // Request\n    //\n\n    /**\n     * Configure request.\n     *\n     * @param callback {Function} Function called before request is send.\n     *   Receives request, action, params and data.\n     *\n     * <pre class=\"javascript\">\n     * res.configureRequest(function(req, action, params, data) {\n     *   if (action === \"index\") {\n     *     req.setAccept(\"application/json\");\n     *   }\n     * });\n     * </pre>\n     */\n    configureRequest: function(callback) {\n      this._resource.configureRequest(callback);\n    },\n\n    /**\n     * Get request.\n     *\n     * May be overridden to change type of request.\n     * @return {qx.io.request.Xhr} Xhr object\n     */\n    _getRequest: function() {\n      return new qx.io.request.Xhr();\n    },\n\n    //\n    // Routes and actions\n    //\n\n    /**\n     * Map action to combination of method and URL pattern.\n     *\n     * <pre class=\"javascript\">\n     *   res.map(\"get\", \"GET\", \"/photos/{id}\", {id: /\\d+/});\n     *\n     *   // GET /photos/123\n     *   res.get({id: \"123\"});\n     * </pre>\n     *\n     * @param action {String} Action to associate to request.\n     * @param method {String} Method to configure request with.\n     * @param url {String} URL to configure request with. May contain positional\n     *   parameters (<code>{param}</code>) that are replaced by values given when the action\n     *   is invoked. Parameters are optional, unless a check is defined. A default\n     *   value can be provided (<code>{param=default}</code>).\n     * @param check {Map?} Map defining parameter constraints, where the key is\n     *   the URL parameter and the value a regular expression (to match string) or\n     *   <code>qx.io.rest.Resource.REQUIRED</code> (to verify existence).\n     */\n    map: function(action, method, url, check) {\n      // add dynamic methods also on ourself to allow 'invoke()' delegation\n      this.__addAction(action, method, url, check);\n\n      this._resource.map(action, method, url, check);\n    },\n\n    /**\n     * Map actions to members.\n     *\n     * @param action {String} Action to associate to request.\n     * @param method {String} Method to configure request with.\n     * @param url {String} URL to configure request with. May contain positional\n     *   parameters (<code>{param}</code>) that are replaced by values given when the action\n     *   is invoked. Parameters are optional, unless a check is defined. A default\n     *   value can be provided (<code>{param=default}</code>).\n     * @param check {Map?} Map defining parameter constraints, where the key is\n     *   the URL parameter and the value a regular expression (to match string) or\n     *   <code>qx.io.rest.Resource.REQUIRED</code> (to verify existence).\n     */\n    __addAction: function(action, method, url, check) {\n      this.__routes[action] = [method, url, check];\n\n      // Undefine generic getter when action is named \"get\"\n      if (action == \"get\") {\n        this[action] = undefined;\n      }\n\n      // Do not overwrite existing \"non-action\" methods unless the method is\n      // null (i.e. because it exists as a stub for documentation)\n      if (typeof this[action] !== \"undefined\" && this[action] !== null &&\n          this[action].action !== true)\n      {\n        throw new Error(\"Method with name of action (\"+action+\") already exists\");\n      }\n\n      this.__declareEvent(action + \"Success\");\n      this.__declareEvent(action + \"Error\");\n\n      this[action] = qx.lang.Function.bind(function() {\n        Array.prototype.unshift.call(arguments, action);\n        return this.invoke.apply(this, arguments);\n      }, this);\n\n      // Method is safe to overwrite\n      this[action].action = true;\n\n    },\n\n    /**\n     * Invoke action with parameters.\n     *\n     * Internally called by actions dynamically created.\n     *\n     * May be overridden to customize action and parameter handling.\n     *\n     * @lint ignoreUnused(successHandler, failHandler, loadEndHandler)\n     *\n     * @param action {String} Action to invoke.\n     * @param params {Map} Map of parameters inserted into URL when a matching\n     *  positional parameter is found.\n     * @param data {Map|String} Data to be send as part of the request.\n     *  See {@link qx.io.request.AbstractRequest#requestData}.\n     * @return {Number} Id of the action's invocation.\n     */\n    invoke: function(action, params, data) {\n      var params = (params == null) ? {} : params;\n\n      // Cache parameters\n      this.__routes[action].params = params;\n\n      return this._resource.invoke(action, params, data);\n    },\n\n    /**\n     * Set base URL.\n     *\n     * The base URL is prepended to the URLs given in the description.\n     * Changes affect all future invocations.\n     *\n     * @param baseUrl {String} Base URL.\n     */\n    setBaseUrl: function(baseUrl) {\n      this._resource.setBaseUrl(baseUrl);\n    },\n\n    /**\n     * Abort action.\n     *\n     * Example:\n     *\n     * <pre class=\"javascript\">\n     *   // Abort all invocations of action\n     *   res.get({id: 1});\n     *   res.get({id: 2});\n     *   res.abort(\"get\");\n     *\n     *   // Abort specific invocation of action (by id)\n     *   var actionId = res.get({id: 1});\n     *   res.abort(actionId);\n     * </pre>\n     *\n     * @param varargs {String|Number} Action of which all invocations to abort\n     *  (when string), or a single invocation of an action to abort (when number)\n     */\n    abort: function(varargs) {\n      this._resource.abort(varargs);\n    },\n\n    /**\n     * Resend request associated to action.\n     *\n     * Replays parameters given when action was invoked originally.\n     *\n     * @param action {String} Action to refresh.\n     */\n    refresh: function(action) {\n      this._resource.refresh(action);\n    },\n\n    /**\n     * Periodically invoke action.\n     *\n     * Replays parameters given when action was invoked originally. When the\n     * action was not yet invoked and requires parameters, parameters must be\n     * given.\n     *\n     * Please note that IE tends to cache overly aggressive. One work-around is\n     * to disable caching on the client side by configuring the request with\n     * <code>setCache(false)</code>. If you control the server, a better\n     * work-around is to include appropriate headers to explicitly control\n     * caching. This way you still avoid requests that can be correctly answered\n     * from cache (e.g. when nothing has changed since the last poll). Please\n     * refer to <a href=\"http://www.mnot.net/javascript/xmlhttprequest/cache.html\">\n     * XMLHttpRequest Caching Test</a> for available options.\n     *\n     * @lint ignoreUnused(intervalListener)\n     *\n     * @param action {String} Action to poll.\n     * @param interval {Number} Interval in ms.\n     * @param params {Map?} Map of parameters. See {@link #invoke}.\n     * @param immediately {Boolean?false} <code>true</code>, if the poll should\n     *   invoke a call immediately.\n     * @return {qx.event.Timer} Timer that periodically invokes action. Use to\n     *   stop or resume. Is automatically disposed on disposal of object.\n     */\n    poll: function(action, interval, params, immediately) {\n      // Dispose timer previously created for action\n      if (this.__pollTimers[action]) {\n        this.__pollTimers[action].dispose();\n      }\n\n      // Fallback to previous params\n      if (typeof params == \"undefined\") {\n        params = this.__routes[action].params;\n      }\n\n      // Invoke immediately\n      if (immediately) {\n        this.invoke(action, params);\n      }\n\n      var intervalListener = function() {\n        var reqs = this.getRequestsByAction(action),\n            req = (reqs) ? reqs[0] : null;\n\n        if (!immediately && !req) {\n          this.invoke(action, params);\n          return;\n        }\n        if (req && (req.isDone() || req.isDisposed())) {\n          this.refresh(action);\n        }\n      };\n\n      var timer = this.__pollTimers[action] = new qx.event.Timer(interval);\n      timer.addListener(\"interval\", intervalListener, this._resource);\n      timer.start();\n      return timer;\n    },\n\n    /**\n     * Long-poll action.\n     *\n     * Use Ajax long-polling to continuously fetch a resource as soon as the\n     * server signals new data. The server determines when new data is available,\n     * while the client keeps open a request. Requires configuration on the\n     * server side. Basically, the server must not close a connection until\n     * new data is available. For a high level introduction to long-polling,\n     * refer to <a href=\"http://en.wikipedia.org/wiki/Comet_(programming)#Ajax_with_long_polling\">\n     * Ajax with long polling</a>.\n     *\n     * Uses {@link #refresh} internally. Make sure you understand the\n     * implications of IE's tendency to cache overly aggressive.\n     *\n     * Note no interval is given on the client side.\n     *\n     * @lint ignoreUnused(longPollHandler)\n     *\n     * @param action {String} Action to poll.\n     * @return {String} Id of handler responsible for long-polling. To stop\n     *  polling, remove handler using {@link qx.core.Object#removeListenerById}.\n     */\n    longPoll: function(action) {\n      var res = this,\n          lastResponse,               // Keep track of last response\n          immediateResponseCount = 0; // Count immediate responses\n\n      // Throttle to prevent high load on server and client\n      function throttle() {\n        var isImmediateResponse =\n          lastResponse &&\n          ((new Date()) - lastResponse) < res._getThrottleLimit();\n\n        if (isImmediateResponse) {\n          immediateResponseCount += 1;\n          if (immediateResponseCount > res._getThrottleCount()) {\n            if (qx.core.Environment.get(\"qx.debug\")) {\n              res.debug(\"Received successful response more than \" +\n                res._getThrottleCount() + \" times subsequently, each within \" +\n                res._getThrottleLimit() + \" ms. Throttling.\");\n            }\n            return true;\n          }\n        }\n\n        // Reset counter on delayed response\n        if (!isImmediateResponse) {\n          immediateResponseCount = 0;\n        }\n\n        return false;\n      }\n\n      var handlerId = this.__longPollHandlers[action] =\n        this.addListener(action + \"Success\", function longPollHandler() {\n          if (res.isDisposed()) {\n            return;\n          }\n\n          if (!throttle()) {\n            lastResponse = new Date();\n            res.refresh(action);\n          }\n        });\n\n      this.invoke(action);\n      return handlerId;\n    },\n\n    /**\n     * Get request configuration for action and parameters.\n     *\n     * This is were placeholders are replaced with parameters.\n     *\n     * @param action {String} Action associated to request.\n     * @param params {Map} Parameters to embed in request.\n     * @return {Map} Map of configuration settings. Has the properties\n     *   <code>method</code>, <code>url</code> and <code>check</code>.\n     */\n    _getRequestConfig: function(action, params) {\n      return this._resource._getRequestConfig(action, params);\n    },\n\n    /**\n     * Override to adjust the throttle limit.\n     * @return {Integer} Throttle limit in milliseconds\n     */\n    _getThrottleLimit: function() {\n      return qx.io.rest.Resource.POLL_THROTTLE_LIMIT;\n    },\n\n    /**\n     * Override to adjust the throttle count.\n     * @return {Integer} Throttle count\n     */\n    _getThrottleCount: function() {\n      return qx.io.rest.Resource.POLL_THROTTLE_COUNT;\n    },\n\n    /**\n     * Map actions from description.\n     *\n     * Allows to decoratively define routes.\n     *\n     * @param description {Map} Map that defines the routes.\n     */\n    __mapFromDescription: function(description) {\n      Object.keys(description).forEach(function(action) {\n        var route = description[action],\n            method = route.method,\n            url = route.url,\n            check = route.check;\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.core.Assert.assertString(method, \"Method must be string for route '\" + action + \"'\");\n          qx.core.Assert.assertString(url, \"URL must be string for route '\" + action + \"'\");\n        }\n\n        this.map(action, method, url, check);\n      }, this);\n    },\n\n    /**\n     * Declare event at runtime.\n     *\n     * @param type {String} Type of event.\n     */\n    __declareEvent: function(type) {\n      if (!this.constructor.$$events) {\n        this.constructor.$$events = {};\n      }\n\n      if (!this.constructor.$$events[type]) {\n        this.constructor.$$events[type] = \"qx.event.type.Rest\";\n      }\n    }\n  },\n\n  /**\n   * Destructs the Resource.\n   *\n   * All created requests, routes and pollTimers will be disposed.\n   */\n  destruct: function() {\n    var action;\n\n    if (this.__pollTimers) {\n      for (action in this.__pollTimers) {\n        var timer = this.__pollTimers[action];\n        timer.stop();\n        timer.dispose();\n      }\n    }\n\n    if (this.__longPollHandlers) {\n      for (action in this.__longPollHandlers) {\n        var id = this.__longPollHandlers[action];\n        this.removeListenerById(id);\n      }\n    }\n\n    this._resource.destruct();\n    this._resource = this.__routes = this.__pollTimers = this.__longPollHandlers = null;\n  }\n});\n"
  ]
}