{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/form/IStringForm.js",
    "../transpiled/qx/ui/basic/Label.js"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;AAAC,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;AAIA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,wBAAnB,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;;AAIC;;;;;AAMA,IAAA,MAAM,EACN;AACE;AACA,qBAAgB;AAFlB,KAXD;;AAkBC;;;;;AAMA,IAAA,OAAO,EACP;AACE;;;;;;AAMA;;;;;AAKA,MAAA,QAAQ,EAAG,kBAAS,KAAT,EAAgB;AACzB,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD,OAdH;;AAiBE;;;AAGA,MAAA,UAAU,EAAG,sBAAW,CAAE,CApB5B;;AAuBE;;;;;AAKA,MAAA,QAAQ,EAAG,oBAAW,CAAE;AA5B1B;AAzBD,GADA;AAtBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,WAAV,CAAsB,aAAtB,GAAsC,aAAtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,mBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;AAEC,IAAA,SAAS,EAAG,CAAC,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,WAAZ,CAFb;;AAMC;;;;;;AAMA;;;AAGA,IAAA,SAAS,EAAG,mBAAS,KAAT,EACZ;AACE;;AAEA,UAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAK,QAAL,CAAc,KAAd;AACD;;AAE4C;AAC3C,QAAA,EAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,WAAlB,GAAgC,WAAhC,CAA4C,cAA5C,EAA4D,KAAK,eAAjE,EAAkF,IAAlF;AACD;AACF,KA1BF;;AA6BC;;;;;AAMA,IAAA,UAAU,EACV;AACE;;;;;;AAMA,MAAA,IAAI,EACJ;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,KAFT;AAGE,QAAA,KAAK,EAAG,YAHV;AAIE,QAAA,KAAK,EAAG;AAJV,OARF;;AAgBE;;;;;;AAMA,MAAA,IAAI,EACJ;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,IAFT;AAGE,QAAA,KAAK,EAAG;AAHV,OAvBF;;AA8BE;;;;;;AAMA,MAAA,KAAK,EACL;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,KAAK,EAAG,aAFV;AAGE,QAAA,KAAK,EAAG,aAHV;AAIE,QAAA,QAAQ,EAAG;AAJb,OArCF;;AA6CE;;;;;;;;;;;;AAYA,MAAA,KAAK,EACL;AACE,QAAA,KAAK,EAAG,mBADV;AAEE,QAAA,KAAK,EAAG,aAFV;AAGE,QAAA,QAAQ,EAAG,IAHb;AAIE,QAAA,IAAI,EAAG,IAJT;AAKE,QAAA,WAAW,EAAG;AALhB,OA1DF;;AAmEE;AACA,MAAA,SAAS,EACT;AACE,QAAA,KAAK,EAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,CADV;AAEE,QAAA,QAAQ,EAAG,IAFb;AAGE,QAAA,SAAS,EAAG,IAHd;AAIE,QAAA,KAAK,EAAG,iBAJV;AAKE,QAAA,KAAK,EAAG;AALV,OArEF;AA8EE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAE,IADV;AAEE,QAAA,IAAI,EAAE;AAFR,OAhFF;AAsFE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAxFF;AA8FE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAhGF;AAsGE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAxGF;AA6GE;AACA,MAAA,YAAY,EACZ;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT;AA/GF,KApCD;;AA6JC;;;;;AAMA,IAAA,OAAO,EACP;AACE,MAAA,MAAM,EAAG,IADX;AAEE,MAAA,oBAAoB,EAAG,IAFzB;AAGE,MAAA,eAAe,EAAG,IAHpB;AAIE,MAAA,mBAAmB,EAAG,IAJxB;;AAQE;;;;;AAMA;AACA,MAAA,eAAe,EAAG,2BAClB;AACE,YAAI,KAAK,oBAAT,EACA;AACE,eAAK,aAAL,GAAqB,KAAK,oBAAL,EAArB;AACA,iBAAO,KAAK,oBAAZ;AACD;;AAED,eAAO;AACL,UAAA,KAAK,EAAG,KAAK,aAAL,CAAmB,KADtB;AAEL,UAAA,MAAM,EAAG,KAAK,aAAL,CAAmB;AAFvB,SAAP;AAID,OA3BH;AA8BE;AACA,MAAA,kBAAkB,EAAG,8BAAW;AAC9B,eAAO,KAAK,OAAL,MAAkB,KAAK,OAAL,EAAzB;AACD,OAjCH;AAoCE;AACA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EACnB;AAEE;AACA;AACA;AACA,YAAI,CAAC,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,kBAAxB,CAAD,IACF,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,UAAxB,CADF,EAEA;AACE,cAAI,KAAK,IAAI,CAAC,KAAK,MAAL,EAAd,EACA;AAC2C;AACvC,mBAAK,IAAL,CAAU,gEAAV;AACD;AACD;AACD;AACF;;AAED,qEAAqB,KAArB;AACD,OAxDH;AA2DE;AACA,MAAA,yBAAyB,EAAG,mCAAS,KAAT,EAC5B;AACE,YAAI,CAAC,KAAK,OAAL,EAAD,IAAmB,CAAC,KAAK,OAAL,EAAxB,EAAwC;AACtC,iBAAO,IAAP;AACD;;AACD,eAAO,KAAK,oBAAL,CAA0B,KAA1B,EAAiC,MAAxC;AACD,OAlEH;AAqEE;AACA,MAAA,qBAAqB,EAAG,iCAAW;AACjC,eAAO,IAAI,EAAE,CAAC,IAAH,CAAQ,KAAZ,EAAP;AACD,OAxEH;AA2EE;AACA,MAAA,eAAe,EAAG,yBAAS,KAAT,EAAgB,GAAhB,EAAqB;AACrC,aAAK,iBAAL,GAAyB,QAAzB,CAAkC,WAAlC,EAA+C,KAA/C;AACD,OA9EH;AAiFE;AACA,MAAA,eAAe,EAAG,yBAAS,KAAT,EAAgB,GAAhB,EAClB;AACE,YAAI,KAAJ,EAAW;AACT,eAAK,iBAAL,GAAyB,QAAzB,CAAkC,OAAlC,EAA2C,EAAE,CAAC,KAAH,CAAS,OAAT,CAAiB,KAAjB,CAAuB,WAAvB,GAAqC,OAArC,CAA6C,KAA7C,CAA3C;AACD,SAFD,MAEO;AACL,eAAK,iBAAL,GAAyB,WAAzB,CAAqC,OAArC;AACD;AACF,OAzFH;;AA8FE;;;;;;AAMA;;;;;AAKA,MAAA,aAAa,EACb;AACE,QAAA,KAAK,EAAG,CADV;AAEE,QAAA,MAAM,EAAG;AAFX,OA1GF;AAgHE;AACA,MAAA,UAAU,EAAG,oBAAS,KAAT,EAAgB,GAAhB,EACb;AACE,YAAI,GAAG,IAAI,KAAK,MAAZ,IAAsB,KAAK,mBAA/B,EAAoD;AAClD,eAAK,MAAL,CAAY,kBAAZ,CAA+B,KAAK,mBAApC;;AACA,eAAK,mBAAL,GAA2B,IAA3B;AACD,SAJH,CAKE;;;AACA,YAAI,MAAJ;;AACA,YAAI,KAAJ,EACA;AACE,eAAK,MAAL,GAAc,EAAE,CAAC,KAAH,CAAS,OAAT,CAAiB,IAAjB,CAAsB,WAAtB,GAAoC,OAApC,CAA4C,KAA5C,CAAd;;AACA,cAAI,KAAK,MAAL,YAAuB,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,OAA3C,EAAoD;AAClD,iBAAK,mBAAL,GAA2B,KAAK,MAAL,CAAY,WAAZ,CAAwB,cAAxB,EAAwC,KAAK,sBAA7C,EAAqE,IAArE,CAA3B;AACD;;AACD,UAAA,MAAM,GAAG,KAAK,MAAL,CAAY,SAAZ,EAAT;AACD,SAPD,MASA;AACE,eAAK,MAAL,GAAc,IAAd;AACA,UAAA,MAAM,GAAG,EAAE,CAAC,GAAH,CAAO,IAAP,CAAY,gBAAZ,EAAT;AACD,SAnBH,CAqBE;;;AACA,YAAI,KAAK,YAAL,MAAuB,IAA3B,EAAiC;AAC/B,iBAAO,MAAM,CAAC,OAAD,CAAb;AACD;;AAED,aAAK,iBAAL,GAAyB,SAAzB,CAAmC,MAAnC,EA1BF,CA4BE;;AACA,aAAK,oBAAL,GAA4B,IAA5B,CA7BF,CA+BE;;AACA,QAAA,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAX,CAAiB,MAAjB,CAAwB,GAAxB,CAA4B,IAA5B;AACD,OAnJH;;AAsJE;;;;;;AAMA,MAAA,oBAAoB,EAAG,8BAAS,KAAT,EACvB;AACE,YAAI,KAAK,GAAG,EAAE,CAAC,GAAH,CAAO,KAAnB;AACA,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;AAEA,YAAI,MAAM,GAAG,IAAI,GAAG,KAAK,MAAL,CAAY,SAAZ,EAAH,GAA6B,EAAE,CAAC,GAAH,CAAO,IAAP,CAAY,gBAAZ,EAA9C;AACA,YAAI,OAAO,GAAG,KAAK,QAAL,MAAmB,GAAjC;AACA,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AAEA,YAAI,KAAK,mBAAT,EAA8B;AAC5B,eAAK,aAAL;AACD;;AAED,eAAO,IAAI,GACT,KAAK,CAAC,WAAN,CAAkB,OAAlB,EAA2B,MAA3B,EAAmC,KAAnC,CADS,GAET,KAAK,CAAC,WAAN,CAAkB,OAAlB,EAA2B,MAA3B,CAFF;AAGD,OA5KH;;AAgLE;;;;;AAKA,MAAA,aAAa,EAAG,yBAChB;AACE,YAAI,CAAC,KAAK,iBAAL,EAAL,EAA+B;AAC7B;AACD;;AACD,YAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,SAAxB,KAAsC,KAAtC,IACF,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,aAAxB,KAA0C,OADxC,IAEF,QAAQ,CAAC,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,gBAAxB,CAAD,EAA4C,EAA5C,CAAR,GAA0D,EAFxD,IAGF,QAAQ,CAAC,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,gBAAxB,CAAD,EAA4C,EAA5C,CAAR,GAA0D,CAH5D,EAIA;AACE,cAAI,KAAK,GAAG,KAAK,iBAAL,GAAyB,aAAzB,EAAZ;;AACA,cAAI,KAAJ,EAAW;AACT,YAAA,KAAK,CAAC,SAAN,GAAkB,KAAK,CAAC,SAAxB;AACD;AACF;AACF,OApMH;;AAwME;;;;;AAMA;AACA,MAAA,WAAW,EAAG,qBAAS,KAAT,EAAgB,GAAhB,EACd;AACE,YAAI,GAAG,IAAI,IAAX,EACA;AACE,eAAK,qBAAL,CAA2B,GAA3B;AACA,eAAK,kBAAL,CAAwB,KAAK,eAA7B;AACA,eAAK,eAAL,GAAuB,IAAvB;AACD;;AAED,YAAI,KAAK,IAAI,IAAb,EACA;AACE,UAAA,KAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,IAAtB,EAA4B,SAA5B;AACA,eAAK,eAAL,GAAuB,KAAK,WAAL,CAAiB,KAAjB,EAAwB,YAAW;AACxD;AACA,gBAAI,KAAK,CAAC,WAAN,EAAJ,EAAyB;AACvB,cAAA,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,KAAlB;AACD,aAJuD,CAKxD;;;AACA,gBAAI,iBAAiB,KAAjB,IAA0B,OAAO,KAAK,CAAC,WAAb,KAA6B,UAA3D,EAAuE;AACrE,cAAA,KAAK,CAAC,WAAN;AACD;AACF,WATsB,EASpB,IAToB,CAAvB;AAUD;AACF,OAtOH;AAyOE;AACA,MAAA,UAAU,EAAG,oBAAS,KAAT,EACb;AACE;AACA,aAAK,iBAAL,GAAyB,OAAzB,CAAiC,KAAjC,EAFF,CAIE;;AACA,aAAK,oBAAL,GAA4B,IAA5B,CALF,CAOE;;AACA,QAAA,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAX,CAAiB,MAAjB,CAAwB,GAAxB,CAA4B,IAA5B;AACD,OApPH;AAuPE;AACC,MAAA,UAAU,EAAG,oBAAS,KAAT,EAAgB,GAAhB,EACd;AACE,YAAI,KAAK,IAAI,CAAC,KAAK,MAAL,EAAd,EACA;AAC2C;AACvC,iBAAK,IAAL,CAAU,gCAAV;AACD;AACF;;AAED,YAAI,KAAK,MAAL,EAAJ,EAAmB;AACjB;AACA;AACA,cAAI,UAAU,GAAG,KAAK,GAAG,QAAH,GAAc,QAApC;AACA,eAAK,iBAAL,GAAyB,QAAzB,CAAkC,YAAlC,EAAgD,UAAhD;AACD;AACF,OAvQH;;AA0QE;;;;;;AAMA,MAAA,eAAe,EAEJ,yBAAS,CAAT,EACT;AACE,YAAI,OAAO,GAAG,KAAK,QAAL,EAAd;;AACA,YAAI,OAAO,IAAI,OAAO,CAAC,SAAvB,EAAkC;AAChC,eAAK,QAAL,CAAc,OAAO,CAAC,SAAR,EAAd;AACD;AACF,OAxRL;;AA8RE;;;;;AAKA,MAAA,sBAAsB,EAAG,gCAAS,EAAT,EACzB;AACE,YAAI,EAAE,CAAC,OAAH,GAAa,KAAb,KAAuB,IAA3B,EAAiC;AAE/B;AACA,cAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,cAAxB,KAA2C,QAA3C,IACF,UAAU,CAAC,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,iBAAxB,CAAD,CAAV,IAA0D,CAD5D,EAC+D;AAC3D,YAAA,MAAM,CAAC,UAAP,CAAkB,YAAW;AAC3B,mBAAK,oBAAL,GAA4B,IAA5B;AACA,cAAA,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAX,CAAiB,MAAjB,CAAwB,GAAxB,CAA4B,IAA5B;AACD,aAHiB,CAGhB,IAHgB,CAGX,IAHW,CAAlB,EAGc,CAHd;AAIH;;AAED,eAAK,oBAAL,GAA4B,IAA5B;AACA,UAAA,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAX,CAAiB,MAAjB,CAAwB,GAAxB,CAA4B,IAA5B;AACD;AACF,OAnTH;AAsTE;AACA,MAAA,WAAW,EACA,qBAAS,KAAT,EAAgB,GAAhB,EACT;AACE;AACA,YAAI,KAAK,IAAI,KAAK,CAAC,SAAnB,EAA8B;AAC5B,eAAK,iBAAL,GAAyB,QAAzB,CAAkC,KAAK,CAAC,SAAN,EAAlC;AACD,SAFD,MAGK;AACH,eAAK,iBAAL,GAAyB,QAAzB,CAAkC,KAAlC;AACD,SAPH,CASE;;;AACA,aAAK,oBAAL,GAA4B,IAA5B,CAVF,CAYE;;AACA,QAAA,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAX,CAAiB,MAAjB,CAAwB,GAAxB,CAA4B,IAA5B;AACD;AAvUL,KApKD;;AA4fC;;;;;AAMA,IAAA,QAAQ,EAAG,oBACX;AAC+C;AAC3C,QAAA,EAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,WAAlB,GAAgC,cAAhC,CAA+C,cAA/C,EAA+D,KAAK,eAApE,EAAqF,IAArF;AACD;;AAED,UAAI,KAAK,MAAL,IAAe,KAAK,mBAAxB,EAA6C;AAC3C,aAAK,MAAL,CAAY,kBAAZ,CAA+B,KAAK,mBAApC;AACD;;AAED,WAAK,MAAL,GAAc,IAAd;AACD;AA7gBF,GADA;AA5DA,EAAA,EAAC,CAAC,EAAF,CAAK,KAAL,CAAW,KAAX,CAAiB,aAAjB,GAAiC,aAAjC",
  "file": "build-output/qxapp/part-boot-bundle-13.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Form interface for all form widgets which have strings as their primary\n * data type like textfield's.\n */\nqx.Interface.define(\"qx.ui.form.IStringForm\",\n{\n  extend : qx.ui.form.IField,\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the value was modified */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      VALUE PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the element's value.\n     *\n     * @param value {String|null} The new value of the element.\n     */\n    setValue : function(value) {\n      return arguments.length == 1;\n    },\n\n\n    /**\n     * Resets the element's value to its initial value.\n     */\n    resetValue : function() {},\n\n\n    /**\n     * The element's user set value.\n     *\n     * @return {String|null} The value.\n     */\n    getValue : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The label class brings typical text content to the widget system.\n *\n * It supports simple text nodes and complex HTML (rich). The default\n * content mode is for text only. The mode is changeable through the property\n * {@link #rich}.\n *\n * The label supports heightForWidth when used in HTML mode. This means\n * that multi line HTML automatically computes the correct preferred height.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   // a simple text label without wrapping and markup support\n *   var label1 = new qx.ui.basic.Label(\"Simple text label\");\n *   this.getRoot().add(label1, {left:20, top:10});\n *\n *   // a HTML label with automatic line wrapping\n *   var label2 = new qx.ui.basic.Label().set({\n *     value: \"A <b>long label</b> text with auto-wrapping. This also may contain <b style='color:red'>rich HTML</b> markup.\",\n *     rich : true,\n *     width: 120\n *   });\n *   this.getRoot().add(label2, {left:20, top:50});\n * </pre>\n *\n * The first label in this example is a basic text only label. As such no\n * automatic wrapping is supported. The second label is a long label containing\n * HTML markup with automatic line wrapping.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/label.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.ui.basic.Label\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [qx.ui.form.IStringForm],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String} Text or HTML content to use\n   */\n  construct : function(value)\n  {\n    this.base(arguments);\n\n    if (value != null) {\n      this.setValue(value);\n    }\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Switches between rich HTML and text content. The text mode (<code>false</code>) supports\n     * advanced features like ellipsis when the available space is not\n     * enough. HTML mode (<code>true</code>) supports multi-line content and all the\n     * markup features of HTML content.\n     */\n    rich :\n    {\n      check : \"Boolean\",\n      init : false,\n      event : \"changeRich\",\n      apply : \"_applyRich\"\n    },\n\n\n    /**\n     * Controls whether text wrap is activated or not. But please note, that\n     * this property works only in combination with the property {@link #rich}.\n     * The {@link #wrap} has only an effect if the {@link #rich} property is\n     * set to <code>true</code>, otherwise {@link #wrap} has no effect.\n     */\n    wrap :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyWrap\"\n    },\n\n\n    /**\n     * Contains the HTML or text content. Interpretation depends on the value\n     * of {@link #rich}. In text mode entities and other HTML special content\n     * is not supported. But it is possible to use unicode escape sequences\n     * to insert symbols and other non ASCII characters.\n     */\n    value :\n    {\n      check : \"String\",\n      apply : \"_applyValue\",\n      event : \"changeValue\",\n      nullable : true\n    },\n\n\n    /**\n     * The buddy property can be used to connect the label to another widget.\n     * That causes two things:\n     * <ul>\n     *   <li>The label will always take the same enabled state as the buddy\n     *       widget.\n     *   </li>\n     *   <li>A tap on the label will focus the buddy widget.</li>\n     * </ul>\n     * This is the behavior of the for attribute of HTML:\n     * http://www.w3.org/TR/html401/interact/forms.html#adef-for\n     */\n    buddy :\n    {\n      check : \"qx.ui.core.Widget\",\n      apply : \"_applyBuddy\",\n      nullable : true,\n      init : null,\n      dereference : true\n    },\n\n\n    /** Control the text alignment */\n    textAlign :\n    {\n      check : [\"left\", \"center\", \"right\", \"justify\"],\n      nullable : true,\n      themeable : true,\n      apply : \"_applyTextAlign\",\n      event : \"changeTextAlign\"\n    },\n\n\n    // overridden\n    appearance :\n    {\n      refine: true,\n      init: \"label\"\n    },\n\n\n    // overridden\n    selectable :\n    {\n      refine : true,\n      init : false\n    },\n\n\n    // overridden\n    allowGrowX :\n    {\n      refine : true,\n      init : false\n    },\n\n\n    // overridden\n    allowGrowY :\n    {\n      refine : true,\n      init : false\n    },\n\n    // overridden\n    allowShrinkY :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __font : null,\n    __invalidContentSize : null,\n    __tapListenerId : null,\n    __webfontListenerId : null,\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getContentHint : function()\n    {\n      if (this.__invalidContentSize)\n      {\n        this.__contentSize = this.__computeContentSize();\n        delete this.__invalidContentSize;\n      }\n\n      return {\n        width : this.__contentSize.width,\n        height : this.__contentSize.height\n      };\n    },\n\n\n    // overridden\n    _hasHeightForWidth : function() {\n      return this.getRich() && this.getWrap();\n    },\n\n\n    // overridden\n    _applySelectable : function(value)\n    {\n\n      // This is needed for all browsers not having text-overflow:ellipsis\n      // but supporting XUL (firefox < 4)\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=312156\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\"))\n      {\n        if (value && !this.isRich())\n        {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.warn(\"Only rich labels are selectable in browsers with Gecko engine!\");\n          }\n          return;\n        }\n      }\n\n      this.base(arguments, value);\n    },\n\n\n    // overridden\n    _getContentHeightForWidth : function(width)\n    {\n      if (!this.getRich() && !this.getWrap()) {\n        return null;\n      }\n      return this.__computeContentSize(width).height;\n    },\n\n\n    // overridden\n    _createContentElement : function() {\n      return new qx.html.Label;\n    },\n\n\n    // property apply\n    _applyTextAlign : function(value, old) {\n      this.getContentElement().setStyle(\"textAlign\", value);\n    },\n\n\n    // overridden\n    _applyTextColor : function(value, old)\n    {\n      if (value) {\n        this.getContentElement().setStyle(\"color\", qx.theme.manager.Color.getInstance().resolve(value));\n      } else {\n        this.getContentElement().removeStyle(\"color\");\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LABEL ADDONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} Internal fallback of label size when no font is defined\n     *\n     * @lint ignoreReferenceField(__contentSize)\n     */\n    __contentSize :\n    {\n      width : 0,\n      height : 0\n    },\n\n\n    // property apply\n    _applyFont : function(value, old)\n    {\n      if (old && this.__font && this.__webfontListenerId) {\n        this.__font.removeListenerById(this.__webfontListenerId);\n        this.__webfontListenerId = null;\n      }\n      // Apply\n      var styles;\n      if (value)\n      {\n        this.__font = qx.theme.manager.Font.getInstance().resolve(value);\n        if (this.__font instanceof qx.bom.webfonts.WebFont) {\n          this.__webfontListenerId = this.__font.addListener(\"changeStatus\", this._onWebFontStatusChange, this);\n        }\n        styles = this.__font.getStyles();\n      }\n      else\n      {\n        this.__font = null;\n        styles = qx.bom.Font.getDefaultStyles();\n      }\n\n      // check if text color already set - if so this local value has higher priority\n      if (this.getTextColor() != null) {\n        delete styles[\"color\"];\n      }\n\n      this.getContentElement().setStyles(styles);\n\n      // Invalidate text size\n      this.__invalidContentSize = true;\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    /**\n     * Internal utility to compute the content dimensions.\n     *\n     * @param width {Integer?null} Optional width constraint\n     * @return {Map} Map with <code>width</code> and <code>height</code> keys\n     */\n    __computeContentSize : function(width)\n    {\n      var Label = qx.bom.Label;\n      var font = this.getFont();\n\n      var styles = font ? this.__font.getStyles() : qx.bom.Font.getDefaultStyles();\n      var content = this.getValue() || \"A\";\n      var rich = this.getRich();\n\n      if (this.__webfontListenerId) {\n        this.__fixEllipsis();\n      }\n\n      return rich ?\n        Label.getHtmlSize(content, styles, width) :\n        Label.getTextSize(content, styles);\n    },\n\n\n\n    /**\n    * Firefox > 9 on OS X will draw an ellipsis on top of the label content even\n    * though there is enough space for the text. Re-applying the content forces\n    * a recalculation and fixes the problem. See qx bug #6293\n    */\n    __fixEllipsis : function()\n    {\n      if (!this.getContentElement()) {\n        return;\n      }\n      if (qx.core.Environment.get(\"os.name\") == \"osx\" &&\n        qx.core.Environment.get(\"engine.name\") == \"gecko\" &&\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) < 16 &&\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) > 9)\n      {\n        var domEl = this.getContentElement().getDomElement();\n        if (domEl) {\n          domEl.innerHTML = domEl.innerHTML;\n        }\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLIER\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyBuddy : function(value, old)\n    {\n      if (old != null)\n      {\n        this.removeRelatedBindings(old);\n        this.removeListenerById(this.__tapListenerId);\n        this.__tapListenerId = null;\n      }\n\n      if (value != null)\n      {\n        value.bind(\"enabled\", this, \"enabled\");\n        this.__tapListenerId = this.addListener(\"tap\", function() {\n          // only focus focusable elements [BUG #3555]\n          if (value.isFocusable()) {\n            value.focus.apply(value);\n          }\n          // furthermore toggle if possible [BUG #6881]\n          if (\"toggleValue\" in value && typeof value.toggleValue === \"function\") {\n            value.toggleValue();\n          }\n        }, this);\n      }\n    },\n\n\n    // property apply\n    _applyRich : function(value)\n    {\n      // Sync with content element\n      this.getContentElement().setRich(value);\n\n      // Mark text size cache as invalid\n      this.__invalidContentSize = true;\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    // property apply\n     _applyWrap : function(value, old)\n    {\n      if (value && !this.isRich())\n      {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.warn(\"Only rich labels support wrap.\");\n        }\n      }\n\n      if (this.isRich()) {\n        // apply the white space style to the label to force it not\n        // to wrap if wrap is set to false [BUG #3732]\n        var whiteSpace = value ? \"normal\" : \"nowrap\";\n        this.getContentElement().setStyle(\"whiteSpace\", whiteSpace);\n      }\n    },\n\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale : qx.core.Environment.select(\"qx.dynlocale\",\n    {\n      \"true\" : function(e)\n      {\n        var content = this.getValue();\n        if (content && content.translate) {\n          this.setValue(content.translate());\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    /**\n     * Triggers layout recalculation after a web font was loaded\n     *\n     * @param ev {qx.event.type.Data} \"changeStatus\" event\n     */\n    _onWebFontStatusChange : function(ev)\n    {\n      if (ev.getData().valid === true) {\n\n        // safari has trouble resizing, adding it again fixed the issue [BUG #8786]\n        if (qx.core.Environment.get(\"browser.name\") == \"safari\" &&\n          parseFloat(qx.core.Environment.get(\"browser.version\")) >= 8) {\n            window.setTimeout(function() {\n              this.__invalidContentSize = true;\n              qx.ui.core.queue.Layout.add(this);\n            }.bind(this), 0);\n        }\n\n        this.__invalidContentSize = true;\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n\n    // property apply\n    _applyValue : qx.core.Environment.select(\"qx.dynlocale\", {\n      \"true\" : function(value, old)\n      {\n        // Sync with content element\n        if (value && value.translate) {\n          this.getContentElement().setValue(value.translate());\n        }\n        else {\n          this.getContentElement().setValue(value);\n        }\n\n        // Mark text size cache as invalid\n        this.__invalidContentSize = true;\n\n        // Update layout\n        qx.ui.core.queue.Layout.add(this);\n      },\n\n      \"false\" : function(value, old)\n      {\n        this.getContentElement().setValue(value);\n\n        // Mark text size cache as invalid\n        this.__invalidContentSize = true;\n\n        // Update layout\n        qx.ui.core.queue.Layout.add(this);\n      }\n    })\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n\n    if (this.__font && this.__webfontListenerId) {\n      this.__font.removeListenerById(this.__webfontListenerId);\n    }\n\n    this.__font = null;\n  }\n});\n"
  ]
}