{
  "version": 3,
  "sources": [
    "../transpiled/qx/bom/webfonts/Validator.js",
    "../transpiled/qx/bom/request/SimpleXhr.js",
    "../transpiled/qx/bom/Input.js",
    "../transpiled/qx/ui/menubar/Button.js",
    "../transpiled/qx/ui/form/HoverButton.js",
    "../transpiled/qx/ui/groupbox/GroupBox.js",
    "../transpiled/qx/ui/form/renderer/IFormRenderer.js",
    "../transpiled/qx/ui/form/renderer/AbstractRenderer.js",
    "../transpiled/qx/ui/form/renderer/Single.js",
    "../transpiled/qx/data/controller/Object.js",
    "../transpiled/qx/event/AcceleratingTimer.js",
    "../transpiled/qx/ui/form/INumberForm.js",
    "../transpiled/qx/ui/form/IRange.js",
    "../transpiled/qx/ui/form/Slider.js",
    "../transpiled/qx/ui/core/scroll/ScrollSlider.js"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;;AAAC,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;AAeA;;;;;;;AAOA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,2BAAf,EAA4C;AAE3C,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MAF0B;;AAK3C;;;;;;AAMA;;;;;AAKA,IAAA,SAAS,EAAG,mBAAS,UAAT,EAAqB,gBAArB,EACZ;AACE;;AAEA,UAAI,gBAAJ,EAAsB;AACpB,aAAK,mBAAL,CAAyB,gBAAzB;AACD;;AAED,UAAI,UAAJ,EAAgB;AACd,aAAK,aAAL,CAAmB,UAAnB;AACA,aAAK,kBAAL,GAA0B,KAAK,oBAAL,EAA1B;AACD;AACF,KA5B0C;;AAgC3C;;;;;AAMA,IAAA,OAAO,EACP;AACE;;;;AAIA,MAAA,gBAAgB,EAAG;AACjB,QAAA,IAAI,EAAG,CAAC,OAAD,EAAU,WAAV,EAAuB,YAAvB,CADU;AAEjB,QAAA,KAAK,EAAG,CAAC,iBAAD,EAAoB,SAApB,EAA+B,OAA/B;AAFS,OALrB;;AAWE;;;AAGA,MAAA,UAAU,EAAG;AACX,QAAA,QAAQ,EAAE,UADC;AAEX,QAAA,MAAM,EAAE,GAFG;AAGX,QAAA,OAAO,EAAE,GAHE;AAIX,QAAA,GAAG,EAAE,SAJM;AAKX,QAAA,IAAI,EAAE,SALK;AAMX,QAAA,QAAQ,EAAE,OANC;AAOX,QAAA,KAAK,EAAE,MAPI;AAQX,QAAA,MAAM,EAAE,MARG;AASX,QAAA,UAAU,EAAE,QATD;AAUX,QAAA,WAAW,EAAE,QAVF;AAWX,QAAA,UAAU,EAAE;AAXD,OAdf;;AA6BE;;;;;;AAMA,MAAA,iBAAiB,EAAG,MAnCtB;AAoCE,MAAA,cAAc,EAAG,IApCnB;AAqCE,MAAA,gBAAgB,EAAG,IArCrB;;AAwCE;;;;AAIA,MAAA,2BAA2B,EAAG,uCAC9B;AACE,YAAI,cAAc,GAAG,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,SAAhB,CAA0B,gBAA/C;;AACA,YAAI,cAAJ,EAAoB;AAClB,eAAK,IAAI,IAAT,IAAiB,cAAjB,EAAiC;AAC/B,YAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,cAAc,CAAC,IAAD,CAAxC;AACD;AACF;;AACD,eAAO,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,SAAhB,CAA0B,gBAAjC;AACD;AArDH,KAvC2C;;AAiG3C;;;;;AAMA,IAAA,UAAU,EACV;AACE;;;AAGA,MAAA,UAAU,EACV;AACE,QAAA,QAAQ,EAAG,IADb;AAEE,QAAA,IAAI,EAAG,IAFT;AAGE,QAAA,KAAK,EAAG;AAHV,OALF;;AAWE;;;AAGA,MAAA,gBAAgB,EAChB;AACE,QAAA,QAAQ,EAAG,IADb;AAEE,QAAA,IAAI,EAAG;AAFT,OAfF;;AAoBE;;;;AAIA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT;AAzBF,KAxG2C;;AAyI3C;;;;;AAMA,IAAA,MAAM,EACN;AACE;;;;;AAKA,sBAAiB;AANnB,KAhJ2C;;AA2J3C;;;;;AAMA,IAAA,OAAO,EACP;AACE,MAAA,kBAAkB,EAAG,IADvB;AAEE,MAAA,YAAY,EAAG,IAFjB;AAGE,MAAA,cAAc,EAAG,IAHnB;;AAOE;;;;;;AAMA;;;AAGA,MAAA,QAAQ,EAAG,oBACX;AACE,aAAK,cAAL,GAAsB,IAAI,IAAJ,GAAW,OAAX,EAAtB;;AAEA,YAAI,KAAK,YAAT,EAAuB;AACrB,eAAK,YAAL,CAAkB,OAAlB;AACD,SAFD,MAGK;AACH,eAAK,YAAL,GAAoB,IAAI,EAAE,CAAC,KAAH,CAAS,KAAb,CAAmB,GAAnB,CAApB;;AACA,eAAK,YAAL,CAAkB,WAAlB,CAA8B,UAA9B,EAA0C,KAAK,iBAA/C,EAAkE,IAAlE,EAFG,CAGH;;;AACA,UAAA,EAAE,CAAC,KAAH,CAAS,KAAT,CAAe,IAAf,CAAoB,YAAW;AAC7B,iBAAK,YAAL,CAAkB,KAAlB;AACD,WAFD,EAEG,IAFH,EAES,CAFT;AAGD;AACF,OA/BH;;AAmCE;;;;;;AAMA;;;AAGA,MAAA,MAAM,EAAG,kBACT;AACE,YAAI,KAAK,kBAAT,EAA6B;AAC3B,eAAK,IAAI,IAAT,IAAiB,KAAK,kBAAtB,EAA0C;AACxC,gBAAI,IAAI,GAAG,KAAK,kBAAL,CAAwB,IAAxB,CAAX;AACA,YAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,IAA1B;AACD;;AACD,eAAK,kBAAL,GAA0B,IAA1B;AACD;AACF,OArDH;;AAwDE;;;;;;;;AAQA,MAAA,YAAY,EAAG,wBACf;AACE,YAAI,CAAC,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,SAAhB,CAA0B,cAA/B,EAA+C;AAC7C,eAAK,MAAL;AACD;;AAED,YAAI,CAAC,KAAK,kBAAV,EAA8B;AAC5B,eAAK,kBAAL,GAA0B,KAAK,oBAAL,EAA1B;AACD,SAPH,CASE;;;AACA,aAAK,kBAAL,CAAwB,IAAxB,CAA6B,KAA7B,CAAmC,UAAnC,GAAgD,SAAhD;AACA,aAAK,kBAAL,CAAwB,IAAxB,CAA6B,KAA7B,CAAmC,UAAnC,GAAgD,QAAhD;AACA,aAAK,kBAAL,CAAwB,KAAxB,CAA8B,KAA9B,CAAoC,UAApC,GAAiD,SAAjD;AACA,aAAK,kBAAL,CAAwB,KAAxB,CAA8B,KAA9B,CAAoC,UAApC,GAAiD,QAAjD;AAEA,YAAI,aAAa,GAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,SAAf,CAAyB,QAAzB,CAAkC,KAAK,kBAAL,CAAwB,IAA1D,CAApB;AACA,YAAI,cAAc,GAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,SAAf,CAAyB,QAAzB,CAAkC,KAAK,kBAAL,CAAwB,KAA1D,CAArB;AAEA,YAAI,GAAG,GAAG,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,SAA1B;;AACA,YAAI,aAAa,KAAK,GAAG,CAAC,cAAJ,CAAmB,IAArC,IACA,cAAc,KAAK,GAAG,CAAC,cAAJ,CAAmB,KAD1C,EAEA;AACE,iBAAO,IAAP;AACD;;AACD,eAAO,KAAP;AACD,OA1FH;;AA6FE;;;;;;AAMA,MAAA,oBAAoB,EAAG,gCACvB;AACE,YAAI,SAAS,GAAG,CAAC,KAAK,aAAL,EAAD,EAAuB,MAAvB,CAA8B,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,SAAhB,CAA0B,gBAA1B,CAA2C,IAAzE,CAAhB;AACA,YAAI,UAAU,GAAG,CAAC,KAAK,aAAL,EAAD,EAAuB,MAAvB,CAA8B,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,SAAhB,CAA0B,gBAA1B,CAA2C,KAAzE,CAAjB;AACA,eAAO;AACL,UAAA,IAAI,EAAG,KAAK,iBAAL,CAAuB,SAAvB,EAAkC,KAAK,mBAAL,EAAlC,CADF;AAEL,UAAA,KAAK,EAAG,KAAK,iBAAL,CAAuB,UAAvB,EAAmC,KAAK,mBAAL,EAAnC;AAFH,SAAP;AAID,OA3GH;;AA8GE;;;;;;;;;AASA,MAAA,iBAAiB,EAAG,2BAAS,UAAT,EAAqB,gBAArB,EACpB;AACE,YAAI,QAAQ,GAAG,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,KAAf,CAAqB,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,SAAhB,CAA0B,UAA/C,CAAf;;AACA,YAAI,UAAJ,EAAgB;AACd,cAAI,QAAQ,CAAC,UAAb,EAAyB;AACvB,YAAA,QAAQ,CAAC,UAAT,IAAuB,MAAM,UAAU,CAAC,IAAX,CAAgB,GAAhB,CAA7B;AACD,WAFD,MAGK;AACH,YAAA,QAAQ,CAAC,UAAT,GAAsB,UAAU,CAAC,IAAX,CAAgB,GAAhB,CAAtB;AACD;AACF;;AAED,YAAI,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAX;AACA,QAAA,IAAI,CAAC,SAAL,GAAiB,gBAAgB,IAAI,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,SAAhB,CAA0B,iBAA/D;AACA,QAAA,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,KAAf,CAAqB,SAArB,CAA+B,IAA/B,EAAqC,QAArC;AACA,QAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,IAA1B;AACA,eAAO,IAAP;AACD,OAxIH;AA2IE;AACA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EAAgB,GAAhB,EACnB;AACE,YAAI,KAAK,KAAK,GAAd,EAAmB;AACjB,eAAK,MAAL;AACD;AACF,OAjJH;;AAqJE;;;;;;AAMA;;;AAGA,MAAA,MAAM,EAAG,kBACT;AACE,YAAI,GAAG,GAAG,EAAE,CAAC,GAAH,CAAO,QAAP,CAAgB,SAA1B;;AACA,YAAI,CAAC,GAAG,CAAC,gBAAT,EAA2B;AACzB,UAAA,GAAG,CAAC,gBAAJ,GAAuB;AACrB,YAAA,IAAI,EAAG,KAAK,iBAAL,CAAuB,GAAG,CAAC,gBAAJ,CAAqB,IAA5C,CADc;AAErB,YAAA,KAAK,EAAG,KAAK,iBAAL,CAAuB,GAAG,CAAC,gBAAJ,CAAqB,KAA5C;AAFa,WAAvB;AAID;;AAED,QAAA,GAAG,CAAC,cAAJ,GAAqB;AACnB,UAAA,IAAI,EAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,SAAf,CAAyB,QAAzB,CAAkC,GAAG,CAAC,gBAAJ,CAAqB,IAAvD,CADY;AAEnB,UAAA,KAAK,EAAE,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,SAAf,CAAyB,QAAzB,CAAkC,GAAG,CAAC,gBAAJ,CAAqB,KAAvD;AAFY,SAArB;AAID,OA5KH;;AA+KE;;;;AAIA,MAAA,iBAAiB,EAAG,6BACpB;AACE,YAAI,KAAK,YAAL,EAAJ,EAAyB;AACvB,eAAK,YAAL,CAAkB,IAAlB;;AACA,eAAK,MAAL;;AACA,eAAK,aAAL,CAAmB,cAAnB,EAAmC;AACjC,YAAA,MAAM,EAAG,KAAK,aAAL,EADwB;AAEjC,YAAA,KAAK,EAAG;AAFyB,WAAnC;AAID,SAPD,MASA;AACE,cAAI,GAAG,GAAG,IAAI,IAAJ,GAAW,OAAX,EAAV;;AACA,cAAI,GAAG,GAAG,KAAK,cAAX,IAA6B,KAAK,UAAL,EAAjC,EAAoD;AAClD,iBAAK,YAAL,CAAkB,IAAlB;;AACA,iBAAK,MAAL;;AACA,iBAAK,aAAL,CAAmB,cAAnB,EAAmC;AACjC,cAAA,MAAM,EAAG,KAAK,aAAL,EADwB;AAEjC,cAAA,KAAK,EAAG;AAFyB,aAAnC;AAID;AACF;AACF;AAzMH,KAlK2C;;AAiX3C;;;;;AAMA,IAAA,QAAQ,EAAG,oBACX;AACE,WAAK,MAAL;;AACA,WAAK,YAAL,CAAkB,IAAlB;;AACA,WAAK,YAAL,CAAkB,cAAlB,CAAiC,UAAjC,EAA6C,KAAK,iBAAlD,EAAqE,IAArE;;AACA,WAAK,eAAL,CAAqB,cAArB;AACD;AA7X0C,GAA5C;AAtBA,EAAA,EAAC,CAAC,GAAF,CAAM,QAAN,CAAe,SAAf,CAAyB,aAAzB,GAAyC,aAAzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,0BAAnB,EACA;AAEC,IAAA,MAAM,EAAE,EAAE,CAAC,KAAH,CAAS,OAFlB;AAGC,IAAA,SAAS,EAAE,CAAE,EAAE,CAAC,IAAH,CAAQ,WAAV,CAHZ;;AAKC;;;;AAIA,IAAA,SAAS,EAAE,mBAAS,GAAT,EAAc,MAAd,EAAsB;AAC/B,UAAI,GAAG,KAAK,SAAZ,EAAuB;AACrB,aAAK,MAAL,CAAY,GAAZ;AACD;;AAED,WAAK,UAAL,CAAgB,IAAhB;AACA,WAAK,SAAL,CAAgB,MAAM,KAAK,SAAZ,GAAyB,MAAzB,GAAkC,KAAjD;AACA,WAAK,UAAL,GAAkB,KAAK,0BAAL,CAAgC,KAAK,gBAAL,EAAhC,CAAlB;AAEA,MAAA,EAAE,CAAC,IAAH,CAAQ,cAAR,CAAuB,QAAvB,CAAgC,IAAhC;AAEA,WAAK,gBAAL,GAAwB,EAAxB;AACA,WAAK,QAAL,GAAgB,KAAK,qBAAL,EAAhB;AACD,KAtBF;AAwBC,IAAA,OAAO,EACP;AACE;;;;;;AAMA;;;;;;;AAOA,MAAA,gBAAgB,EAAE,0BAAS,GAAT,EAAc,KAAd,EAAqB;AACrC,aAAK,gBAAL,CAAsB,GAAtB,IAA6B,KAA7B;AACA,eAAO,IAAP;AACD,OAjBH;;AAmBE;;;;;;AAMA,MAAA,gBAAgB,EAAE,0BAAS,GAAT,EAAc;AAC9B,eAAO,KAAK,gBAAL,CAAsB,GAAtB,CAAP;AACD,OA3BH;;AA8BE;;;;;;AAMA,MAAA,iBAAiB,EAAE,2BAAS,MAAT,EAAiB;AAClC,eAAO,KAAK,UAAL,CAAgB,iBAAhB,CAAkC,MAAlC,CAAP;AACD,OAtCH;;AAyCE;;;;AAIA,MAAA,qBAAqB,EAAE,iCAAW;AAChC,eAAO,KAAK,UAAL,CAAgB,qBAAhB,EAAP;AACD,OA/CH;;AAiDE;;;;;;AAMA,MAAA,MAAM,EAAE,gBAAS,GAAT,EAAc;AACpB,YAAI,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,QAAb,CAAsB,GAAtB,CAAJ,EAAgC;AAC9B,eAAK,KAAL,GAAa,GAAb;AACD;;AACD,eAAO,IAAP;AACD,OA5DH;;AA8DE;;;;;AAKA,MAAA,MAAM,EAAE,kBAAW;AACjB,eAAO,KAAK,KAAZ;AACD,OArEH;;AAuEE;;;;;;AAMA,MAAA,SAAS,EAAE,mBAAS,MAAT,EAAiB;AAC1B,YAAI,EAAE,CAAC,IAAH,CAAQ,OAAR,CAAgB,QAAhB,CAAyB,MAAzB,CAAJ,EAAsC;AACpC,eAAK,QAAL,GAAgB,MAAhB;AACD;;AACD,eAAO,IAAP;AACD,OAlFH;;AAoFE;;;;;AAKA,MAAA,SAAS,EAAE,qBAAW;AACpB,eAAO,KAAK,QAAZ;AACD,OA3FH;;AA6FE;;;;;;;;;AASA,MAAA,cAAc,EAAE,wBAAS,IAAT,EAAe;AAC7B,YAAI,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,QAAb,CAAsB,IAAtB,KAA+B,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,QAAb,CAAsB,IAAtB,CAA/B,IACD,CAAC,aAAD,EAAgB,MAAhB,EAAwB,UAAxB,EAAoC,OAApC,CAA4C,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,QAAb,CAAsB,IAAtB,CAA5C,MAA6E,CAAC,CADjF,EACoF;AAClF,eAAK,aAAL,GAAqB,IAArB;AACD;;AACD,eAAO,IAAP;AACD,OA5GH;;AA8GE;;;;;AAKA,MAAA,cAAc,EAAE,0BAAW;AACzB,eAAO,KAAK,aAAZ;AACD,OArHH;;AAuHE;;;;;;;AAOA,MAAA,WAAW,EAAE,uBAAW;AACtB,YAAI,KAAK,UAAL,KAAoB,IAAxB,EAA8B;AAC5B,iBAAO,KAAK,UAAZ;AACD,SAFD,MAEO;AACL,iBAAQ,KAAK,UAAL,CAAgB,WAAhB,KAAgC,IAAjC,GAAyC,KAAK,UAAL,CAAgB,WAAzD,GAAuE,KAAK,UAAL,CAAgB,YAA9F;AACD;;AAED,eAAO,IAAP;AACD,OAtIH;;AAwIE;;;;;;;;;;;;;AAaC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,MAAA,YAAY,EAAE,wBAAW;AACvB,eAAO,KAAK,UAAZ;AACD,OA/JH;;AAiKE;;;;;;;;AAQA,MAAA,SAAS,EAAE,mBAAS,MAAT,EAAiB;AAC1B,eAAO,KAAK,QAAL,CAAc,SAAd,CAAwB,MAAxB,CAAP;AACD,OA3KH;;AA6KE;;;;;;AAMA,MAAA,UAAU,EAAE,oBAAS,MAAT,EAAiB;AAC3B,YAAI,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,QAAb,CAAsB,MAAtB,CAAJ,EAAmC;AACjC,eAAK,SAAL,GAAiB,MAAjB;AACD;;AACD,eAAO,IAAP;AACD,OAxLH;;AA0LE;;;;;AAKA,MAAA,UAAU,EAAE,sBAAW;AACrB,eAAO,KAAK,SAAZ;AACD,OAjMH;;AAmME;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,MAAA,UAAU,EAAE,oBAAS,KAAT,EAAgB;AAC1B,YAAI,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,SAAb,CAAuB,KAAvB,CAAJ,EAAmC;AACjC,eAAK,OAAL,GAAe,KAAf;AACD;;AACD,eAAO,IAAP;AACD,OA1OH;;AA4OE;;;;;AAKA,MAAA,SAAS,EAAE,qBAAW;AACpB,eAAO,KAAK,OAAZ;AACD,OAnPH;;AAqPE;;;;AAKA,MAAA,MAAM,EAAE,kBAAW;AACjB,eAAQ,KAAK,UAAL,CAAgB,UAAhB,KAA+B,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,GAAf,CAAmB,IAA1D;AACD,OA5PH;;AA8PE;;;;;AAKA,MAAA,UAAU,EAAG,sBAAW;AACtB,eAAO,KAAK,MAAZ;AACD,OArQH;;AAuQE;;;;;AAKA,MAAA,UAAU,EAAE,sBAAW;AACrB,eAAO,CAAC,CAAC,KAAK,UAAd;AACD,OA9QH;;AAgRE;;;;;;;;;AASA,MAAA,IAAI,EAAE,gBAAW;AACf,YAAI,UAAU,GAAG,KAAK,UAAL,EAAjB;AAAA,YACI,cAAc,GAAI,KAAK,cAAL,OAA0B,IADhD;AAAA,YAEI,qBAAqB,GAAG,KAAK,gBAAL,CAAsB,cAAtB,CAAqC,eAArC,CAF5B;AAAA,YAGI,sBAAsB,GAAG,EAAE,CAAC,IAAH,CAAQ,OAAR,CAAgB,uBAAhB,CAAwC,KAAK,SAAL,EAAxC,CAH7B;AAAA,YAII,cAAc,GAAG,KAAK,gBAAL,CAAsB,cAAtB,CAJrB;AAAA,YAKI,cAAc,GAAG,KAAK,cAAL,CAAoB,KAAK,cAAL,EAApB,EAA2C,cAA3C,CALrB,CADe,CAQf;;;AACA,YAAI,KAAK,SAAL,OAAqB,KAArB,IAA8B,cAAlC,EAAkD;AAChD,eAAK,MAAL,CAAY,EAAE,CAAC,IAAH,CAAQ,GAAR,CAAY,iBAAZ,CAA8B,KAAK,MAAL,EAA9B,EAA6C,cAA7C,CAAZ;AACD,SAXc,CAaf;;;AACA,YAAI,KAAK,SAAL,OAAqB,KAArB,IAA8B,CAAC,qBAAnC,EAA0D;AACxD;AACA,eAAK,MAAL,CAAY,EAAE,CAAC,IAAH,CAAQ,GAAR,CAAY,iBAAZ,CAA8B,KAAK,MAAL,EAA9B,EAA6C;AAAC,YAAA,OAAO,EAAE,IAAI,IAAJ,GAAW,OAAX;AAAV,WAA7C,CAAZ;AACD,SAjBc,CAmBf;;;AACA,YAAI,UAAJ,EAAgB;AACd,eAAK,UAAL,CAAgB,OAAhB,GAA0B,UAA1B;AACD,SAtBc,CAwBf;;;AACA,aAAK,UAAL,CAAgB,IAAhB,CAAqB,KAAK,SAAL,EAArB,EAAuC,KAAK,MAAL,EAAvC,EAAsD,IAAtD,EAzBe,CA2Bf;;;AACA,aAAK,IAAI,GAAT,IAAgB,KAAK,gBAArB,EAAuC;AACrC,eAAK,UAAL,CAAgB,gBAAhB,CAAiC,GAAjC,EAAsC,KAAK,gBAAL,CAAsB,GAAtB,CAAtC;AACD,SA9Bc,CAgCf;;;AACA,YAAI,CAAC,sBAAL,EAA6B;AAC3B;AACA,eAAK,UAAL,CAAgB,IAAhB;AACD,SAHD,MAGO;AACL;AACA,cAAI,OAAO,cAAP,KAA0B,WAA1B,IAAyC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,UAAxB,EAAoC,OAApC,CAA4C,EAAE,CAAC,SAAH,CAAa,QAAb,CAAsB,cAAtB,CAA5C,MAAuF,CAAC,CAArI,EAAwI;AACtI;AACA,iBAAK,UAAL,CAAgB,gBAAhB,CAAiC,cAAjC,EAAiD,mCAAjD;AACD;;AAED,eAAK,UAAL,CAAgB,IAAhB,CAAqB,cAArB;AACD;AACF,OAtUH;;AAwUE;;;;;;AAMA,MAAA,KAAK,EAAE,iBAAW;AAChB,aAAK,UAAL,CAAgB,KAAhB;;AACA,eAAO,IAAP;AACD,OAjVH;;AAmVE;;;;AAIA,MAAA,OAAO,EAAE,mBAAW;AAClB,YAAI,KAAK,UAAL,CAAgB,OAAhB,EAAJ,EAA+B;AAC7B,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,UAAL,GAAkB,IAAlB;AACA,iBAAO,IAAP;AACD;;AACD,eAAO,KAAP;AACD,OA9VH;;AAgWE;;;;;;AAMA;;;AAGA,MAAA,UAAU,EAAE,IAzWd;;AA2WE;;;;;;AAMA,MAAA,gBAAgB,EAAE,4BAAW;AAC3B,eAAO,IAAI,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,GAAnB,EAAP;AACD,OAnXH;;AAqXE;;;;;;AAMA,MAAA,0BAA0B,EAAE,oCAAS,SAAT,EAAoB;AAC9C,QAAA,SAAS,CAAC,kBAAV,GAA+B,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,IAAjB,CAAsB,KAAK,mBAA3B,EAAgD,IAAhD,CAA/B;AACA,QAAA,SAAS,CAAC,SAAV,GAAsB,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,IAAjB,CAAsB,KAAK,UAA3B,EAAuC,IAAvC,CAAtB;AACA,QAAA,SAAS,CAAC,SAAV,GAAsB,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,IAAjB,CAAsB,KAAK,UAA3B,EAAuC,IAAvC,CAAtB;AACA,QAAA,SAAS,CAAC,OAAV,GAAoB,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,IAAjB,CAAsB,KAAK,QAA3B,EAAqC,IAArC,CAApB;AACA,QAAA,SAAS,CAAC,OAAV,GAAoB,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,IAAjB,CAAsB,KAAK,QAA3B,EAAqC,IAArC,CAApB;AACA,QAAA,SAAS,CAAC,UAAV,GAAuB,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAiB,IAAjB,CAAsB,KAAK,WAA3B,EAAwC,IAAxC,CAAvB;AACA,eAAO,SAAP;AACD,OAnYH;;AAqYE;;;;;AAKA,MAAA,qBAAqB,EAAE,iCAAW;AAC9B,eAAO,IAAI,EAAE,CAAC,IAAH,CAAQ,cAAZ,EAAP;AACH,OA5YH;;AA8YE;;;;;AAKA,MAAA,YAAY,EAAE,sBAAS,QAAT,EAAmB;AAC/B,aAAK,UAAL,GAAkB,QAAlB;AACD,OArZH;;AAuZE;;;;;;;AAOA,MAAA,cAAc,EAAE,wBAAS,IAAT,EAAe,WAAf,EAA4B;AAC1C,YAAI,MAAM,GAAG,KAAK,SAAL,OAAqB,MAAlC;AAAA,YACI,MAAM,GAAI,wBAAD,CAA2B,IAA3B,CAAgC,WAAhC,CADb;;AAGA,YAAI,CAAC,IAAL,EAAW;AACT,iBAAO,IAAP;AACD;;AAED,YAAI,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,QAAb,CAAsB,IAAtB,CAAJ,EAAiC;AAC/B,iBAAO,IAAP;AACD;;AAED,YAAI,MAAM,KAAK,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,QAAb,CAAsB,IAAtB,KAA+B,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,OAAb,CAAqB,IAArB,CAApC,CAAV,EAA2E;AACzE,iBAAO,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,SAAb,CAAuB,IAAvB,CAAP;AACD;;AAED,YAAI,EAAE,CAAC,IAAH,CAAQ,IAAR,CAAa,QAAb,CAAsB,IAAtB,CAAJ,EAAiC;AAC/B,iBAAO,EAAE,CAAC,IAAH,CAAQ,GAAR,CAAY,WAAZ,CAAwB,IAAxB,EAA8B,MAA9B,CAAP;AACD;;AAED,YAAI,CAAC,aAAD,EAAgB,MAAhB,EAAwB,UAAxB,EAAoC,OAApC,CAA4C,EAAE,CAAC,SAAH,CAAa,QAAb,CAAsB,IAAtB,CAA5C,MAA6E,CAAC,CAAlF,EAAqF;AACnF,iBAAO,IAAP;AACD;;AAED,eAAO,IAAP;AACD,OAvbH;;AAybE;;;;;;AAMA;;;AAGA,MAAA,gBAAgB,EAAE,IAlcpB;;AAmcE;;;AAGA,MAAA,aAAa,EAAE,IAtcjB;;AAucE;;;AAGA,MAAA,QAAQ,EAAE,EA1cZ;;AA2cE;;;AAGA,MAAA,KAAK,EAAE,EA9cT;;AA+cE;;;AAGA,MAAA,UAAU,EAAE,IAldd;;AAmdE;;;AAGA,MAAA,QAAQ,EAAE,IAtdZ;;AAudE;;;AAGA,MAAA,OAAO,EAAE,IA1dX;;AA2dE;;;AAGA,MAAA,SAAS,EAAE,IA9db;;AA+dE;;;AAGA,MAAA,UAAU,EAAE,IAled;;AAoeE;;;;;;AAMA;;;;;;;;AAQA,MAAA,eAAe,EAAE,yBAAS,IAAT,EAAe,QAAf,EAAyB,GAAzB,EAA8B;AAC7C,aAAK,IAAL,CAAU,IAAV,EAAgB,QAAhB,EAA0B,GAA1B;AACA,eAAO,IAAP;AACD,OArfH;;AAufE;;;;;;;;AAQA,MAAA,WAAW,EAAE,qBAAS,IAAT,EAAe,QAAf,EAAyB,GAAzB,EAA8B;AACzC,aAAK,UAAL,CAAgB,QAAhB,CAAyB,EAAzB,CAA4B,IAA5B,EAAkC,QAAlC,EAA4C,GAA5C;;AACA,eAAO,IAAP;AACD,OAlgBH;;AAogBE;;;AAGA,MAAA,mBAAmB,EAAE,+BAAW;AAC9B,YAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,aAAxB,CAAJ,EAA4C;AAC1C,UAAA,EAAE,CAAC,SAAH,CAAa,KAAb,CAAmB,sBAAsB,KAAK,UAAL,CAAgB,UAAzD;AACD;;AAED,YAAI,KAAK,MAAL,EAAJ,EAAmB;AACjB,eAAK,kBAAL;AACD;AACF,OA/gBH;;AAihBE;;;AAGA,MAAA,kBAAkB,EAAE,8BAAW;AAC7B,YAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,aAAxB,CAAJ,EAA4C;AAC1C,UAAA,EAAE,CAAC,SAAH,CAAa,KAAb,CAAmB,yCAAyC,KAAK,UAAL,CAAgB,MAA5E;AACD;;AAED,YAAI,QAAQ,GAAG,KAAK,UAAL,CAAgB,YAA/B;;AACA,YAAI,WAAW,GAAG,KAAK,UAAL,CAAgB,iBAAhB,CAAkC,cAAlC,CAAlB,CAN6B,CAQ7B;;;AACA,YAAI,EAAE,CAAC,IAAH,CAAQ,OAAR,CAAgB,YAAhB,CAA6B,KAAK,UAAL,CAAgB,MAA7C,CAAJ,EAA0D;AAExD;AACA,cAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,aAAxB,CAAJ,EAA4C;AAC1C,YAAA,EAAE,CAAC,SAAH,CAAa,KAAb,CAAmB,2BAA2B,WAA3B,GAAyC,GAA5D;AACD;;AAED,eAAK,YAAL,CAAkB,KAAK,QAAL,CAAc,KAAd,CAAoB,QAApB,EAA8B,WAA9B,CAAlB;;AAEA,eAAK,IAAL,CAAU,SAAV,EATwD,CAW1D;AACC,SAZD,MAYO;AAEL,cAAI;AACF,iBAAK,YAAL,CAAkB,KAAK,QAAL,CAAc,KAAd,CAAoB,QAApB,EAA8B,WAA9B,CAAlB;AACD,WAFD,CAEE,OAAO,CAAP,EAAU,CAEX,CAFC,CACA;AAGF;;;AACA,cAAI,KAAK,UAAL,CAAgB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,iBAAK,IAAL,CAAU,MAAV;AACD;AACF;AACF,OAtjBH;;AAwjBE;;;AAGA,MAAA,UAAU,EAAE,sBAAW;AACrB,aAAK,IAAL,CAAU,SAAV;AACD,OA7jBH;;AA+jBE;;;AAGA,MAAA,QAAQ,EAAE,oBAAW;AACnB,aAAK,IAAL,CAAU,OAAV;AACD,OApkBH;;AAskBE;;;AAGA,MAAA,UAAU,EAAE,sBAAW;AACrB,aAAK,IAAL,CAAU,SAAV,EADqB,CAGrB;;AACA,aAAK,IAAL,CAAU,MAAV;AACD,OA9kBH;;AAglBE;;;AAGA,MAAA,QAAQ,EAAE,oBAAW;AACnB,aAAK,IAAL,CAAU,OAAV,EADmB,CAGnB;;AACA,aAAK,IAAL,CAAU,MAAV;AACD,OAxlBH;;AA0lBE;;;AAGA,MAAA,WAAW,EAAE,uBAAW;AACtB,aAAK,IAAL,CAAU,UAAV;AACD;AA/lBH;AAzBD,GADA;AAvDA,EAAA,EAAC,CAAC,GAAF,CAAM,OAAN,CAAc,SAAd,CAAwB,aAAxB,GAAwC,aAAxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;;AAGA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,cAAnB,EACA;AACC;;;;;AAMA,IAAA,OAAO,EACP;AACE;AACA,MAAA,OAAO,EACP;AACE,QAAA,IAAI,EAAG,CADT;AAEE,QAAA,QAAQ,EAAG,CAFb;AAGE,QAAA,MAAM,EAAG,CAHX;AAIE,QAAA,QAAQ,EAAG,CAJb;AAKE,QAAA,KAAK,EAAG,CALV;AAME,QAAA,QAAQ,EAAG,CANb;AAOE,QAAA,MAAM,EAAG,CAPX;AAQE,QAAA,MAAM,EAAG,CARX;AASE,QAAA,KAAK,EAAG,CATV;AAUE,QAAA,IAAI,EAAG,CAVT;AAWE,QAAA,MAAM,EAAG,CAXX;AAYE,QAAA,KAAK,EAAG,CAZV;AAaE,QAAA,MAAM,EAAG;AAbX,OAHF;;AAoBE;;;;;;;;;;;;;;;AAeA,MAAA,MAAM,EAAG,gBAAS,IAAT,EAAe,UAAf,EAA2B,GAA3B,EACT;AAC2C;AACvC,UAAA,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,cAAf,CAA8B,IAA9B,EAAoC,KAAK,OAAzC,EAAkD,yBAAlD;AACD,SAHH,CAKE;;AACA,YAAI,UAAU,GAAG,UAAU,GAAG,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,KAAf,CAAqB,UAArB,CAAH,GAAsC,EAAjE;AAEA,YAAI,GAAJ;;AAEA,YAAI,IAAI,KAAK,UAAT,IAAuB,IAAI,KAAK,QAApC,EACA;AACE,UAAA,GAAG,GAAG,IAAN;AACD,SAHD,MAKA;AACE,UAAA,GAAG,GAAG,OAAN;AACA,UAAA,UAAU,CAAC,IAAX,GAAkB,IAAlB;AACD;;AAED,eAAO,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,MAAf,CAAsB,GAAtB,EAA2B,UAA3B,EAAuC,GAAvC,CAAP;AACD,OAzDH;;AA4DE;;;;;;;;;;;;;;;;AAgBA,MAAA,QAAQ,EAAG,kBAAS,OAAT,EAAkB,KAAlB,EACX;AACE,YAAI,GAAG,GAAG,OAAO,CAAC,QAAR,CAAiB,WAAjB,EAAV;AACA,YAAI,IAAI,GAAG,OAAO,CAAC,IAAnB;AACA,YAAI,IAAI,GAAG,EAAE,CAAC,IAAH,CAAQ,IAAnB;;AAEA,YAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAA,KAAK,IAAI,EAAT;AACD;;AAED,YAAK,IAAI,KAAK,UAAT,IAAuB,IAAI,KAAK,OAArC,EACA;AACE,cAAI,IAAI,CAAC,OAAL,CAAa,KAAb,CAAJ,EAAyB;AACvB,YAAA,OAAO,CAAC,OAAR,GAAkB,KAAK,CAAC,QAAN,CAAe,OAAO,CAAC,KAAvB,CAAlB;AACD,WAFD,MAEO;AACL,YAAA,OAAO,CAAC,OAAR,GAAkB,OAAO,CAAC,KAAR,IAAiB,KAAnC;AACD;AACF,SAPD,MAQK,IAAI,GAAG,KAAK,QAAZ,EACL;AACE,cAAI,OAAO,GAAG,IAAI,CAAC,OAAL,CAAa,KAAb,CAAd;AACA,cAAI,OAAO,GAAG,OAAO,CAAC,OAAtB;AACA,cAAI,KAAJ,EAAW,MAAX;;AAEA,eAAK,IAAI,CAAC,GAAC,CAAN,EAAS,CAAC,GAAC,OAAO,CAAC,MAAxB,EAAgC,CAAC,GAAC,CAAlC,EAAqC,CAAC,EAAtC,EACA;AACE,YAAA,KAAK,GAAG,OAAO,CAAC,CAAD,CAAf;AACA,YAAA,MAAM,GAAG,KAAK,CAAC,YAAN,CAAmB,OAAnB,CAAT;;AACA,gBAAI,MAAM,IAAI,IAAd,EAAoB;AAClB,cAAA,MAAM,GAAG,KAAK,CAAC,IAAf;AACD;;AAED,YAAA,KAAK,CAAC,QAAN,GAAiB,OAAO,GACtB,KAAK,CAAC,QAAN,CAAe,MAAf,CADsB,GACG,KAAK,IAAI,MADpC;AAED;;AAED,cAAI,OAAO,IAAI,KAAK,CAAC,MAAN,IAAgB,CAA/B,EAAkC;AAChC,YAAA,OAAO,CAAC,aAAR,GAAwB,CAAC,CAAzB;AACD;AACF,SArBI,MAsBA,IAAI,CAAC,IAAI,KAAK,MAAT,IAAmB,IAAI,KAAK,UAA7B,KACN,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,aAAxB,KAA0C,QADxC,EAEL;AACE;AACA;AACA;AACA,UAAA,OAAO,CAAC,YAAR,GAAuB,IAAvB;AACA,UAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AACA,UAAA,OAAO,CAAC,YAAR,GAAuB,IAAvB;AACD,SATI,MASE;AACL,UAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AACD;AACF,OAhIH;;AAmIE;;;;;;;;;;;;AAYA,MAAA,QAAQ,EAAG,kBAAS,OAAT,EACX;AACE,YAAI,GAAG,GAAG,OAAO,CAAC,QAAR,CAAiB,WAAjB,EAAV;;AAEA,YAAI,GAAG,KAAK,QAAZ,EAAsB;AACpB,iBAAO,CAAC,OAAO,CAAC,UAAR,CAAmB,KAAnB,IAA4B,EAA7B,EAAiC,SAAjC,GAA6C,OAAO,CAAC,KAArD,GAA6D,OAAO,CAAC,IAA5E;AACD;;AAED,YAAI,GAAG,KAAK,QAAZ,EACA;AACE,cAAI,KAAK,GAAG,OAAO,CAAC,aAApB,CADF,CAGE;;AACA,cAAI,KAAK,GAAG,CAAZ,EAAe;AACb,mBAAO,IAAP;AACD;;AAED,cAAI,MAAM,GAAG,EAAb;AACA,cAAI,OAAO,GAAG,OAAO,CAAC,OAAtB;AACA,cAAI,GAAG,GAAG,OAAO,CAAC,IAAR,IAAgB,YAA1B;AACA,cAAI,KAAK,GAAG,EAAE,CAAC,GAAH,CAAO,KAAnB;AACA,cAAI,KAAJ,CAZF,CAcE;;AACA,eAAK,IAAI,CAAC,GAAC,GAAG,GAAG,KAAH,GAAW,CAApB,EAAuB,GAAG,GAAC,GAAG,GAAG,KAAK,GAAC,CAAT,GAAa,OAAO,CAAC,MAAxD,EAAgE,CAAC,GAAC,GAAlE,EAAuE,CAAC,EAAxE,EACA;AACE,gBAAI,MAAM,GAAG,OAAO,CAAC,CAAD,CAApB;;AAEA,gBAAI,MAAM,CAAC,QAAX,EACA;AACE;AACA,cAAA,KAAK,GAAG,KAAK,CAAC,QAAN,CAAe,MAAf,CAAR,CAFF,CAIE;;AACA,kBAAI,GAAJ,EAAS;AACP,uBAAO,KAAP;AACD,eAPH,CASE;;;AACA,cAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACD;AACF;;AAED,iBAAO,MAAP;AACD,SApCD,MAsCA;AACE,iBAAO,CAAC,OAAO,CAAC,KAAR,IAAiB,EAAlB,EAAsB,OAAtB,CAA8B,KAA9B,EAAqC,EAArC,CAAP;AACD;AACF,OAhMH;;AAmME;;;;;;;;;AASA,MAAA,OAAO,EAAG,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,MAApB,CAA2B,aAA3B,EACV;AACE,kBAAW,gBAAS,OAAT,EAAkB,IAAlB,EAAwB;AACjC,cAAI,SAAS,GAAG,IAAI,GAAG,MAAH,GAAY,KAAhC,CADiC,CAGjC;AACA;;AACA,cAAI,UAAU,GAAG,IAAI,GAAG,MAAH,GAAY,EAAjC;AAEA,UAAA,OAAO,CAAC,IAAR,GAAe,SAAf;AACA,UAAA,OAAO,CAAC,KAAR,CAAc,SAAd,GAA0B,UAA1B;AACD,SAVH;AAYE,iBAAU,eAAS,OAAT,EAAkB,IAAlB,EACV;AACE,cAAI,SAAS,GAAG,IAAI,GAAG,MAAH,GAAY,KAAhC;AACA,cAAI,UAAU,GAAG,IAAI,GAAG,EAAH,GAAQ,MAA7B;AAEA,UAAA,OAAO,CAAC,YAAR,CAAqB,MAArB,EAA6B,SAA7B;AACA,UAAA,OAAO,CAAC,KAAR,CAAc,QAAd,GAAyB,UAAzB;AACD,SAnBH;AAqBE,kBAAW,gBAAS,OAAT,EAAkB,IAAlB,EACX;AACE,cAAI,SAAS,GAAG,IAAI,GAAG,MAAH,GAAY,KAAhC;AACA,cAAI,UAAU,GAAG,IAAI,GAAG,EAAH,GAAQ,MAA7B;AAEA,UAAA,OAAO,CAAC,YAAR,CAAqB,MAArB,EAA6B,SAA7B;AACA,UAAA,OAAO,CAAC,KAAR,CAAc,QAAd,GAAyB,UAAzB;AACD,SA5BH;AA8BE,mBAAY,kBAAS,OAAT,EAAkB,IAAlB,EAAwB;AAClC,UAAA,OAAO,CAAC,KAAR,CAAc,UAAd,GAA2B,IAAI,GAAG,QAAH,GAAc,QAA7C;AACD;AAhCH,OADU;AA5MZ;AARD,GADA;AApCA,EAAA,EAAC,CAAC,GAAF,CAAM,KAAN,CAAY,aAAZ,GAA4B,aAA5B;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;AAGA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,sBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,UADrB;;AAKC;;;;;AAMA,IAAA,SAAS,EAAG,mBAAS,KAAT,EAAgB,IAAhB,EAAsB,IAAtB,EACZ;AACE,mDAAqB,KAArB,EAA4B,IAA5B,EAAkC,IAAlC;AAEA,WAAK,cAAL,CAAoB,SAApB,EAA+B,KAAK,UAApC;AACA,WAAK,cAAL,CAAoB,OAApB,EAA6B,KAAK,QAAlC;AACD,KAjBF;;AAsBC;;;;;AAMA,IAAA,UAAU,EACV;AACE,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAFF;AAOE,MAAA,IAAI,EACJ;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OARF;AAaE,MAAA,SAAS,EACT;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT;AAdF,KA7BD;;AAoDC;;;;;AAMA,IAAA,OAAO,EACP;AACE;;;;;;AAMA;;;;;AAKA,MAAA,UAAU,EAAG,sBACb;AACE,YAAI,MAAM,GAAG,IAAb;;AACA,eAAO,MAAP,EACA;AACE;;AAEA,cAAI,MAAM,YAAY,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,OAApC,EAA6C;AAC3C,mBAAO,MAAP;AACD;;AAED,UAAA,MAAM,GAAG,MAAM,CAAC,eAAP,EAAT;AACD;;AAED,eAAO,IAAP;AACD,OA3BH;AA8BE;AACA,MAAA,IAAI,EAAG,cAAS,WAAT,EAAsB;AAC3B,4DAAqB,WAArB;AAEA,YAAI,OAAO,GAAG,KAAK,UAAL,EAAd;;AACA,YAAI,OAAJ,EAAa;AACX,UAAA,OAAO,CAAC,sBAAR,CAA+B,IAA/B;AACD;AACF,OAtCH;;AAyCE;;;;;;AAMA;;;;;AAKA,MAAA,aAAa,EAAG,uBAAS,CAAT,EAChB;AACE,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;AACA,YAAI,OAAO,GAAG,KAAK,UAAL,EAAd;;AAEA,YAAI,IAAI,CAAC,SAAL,EAAJ,EACA;AACE,eAAK,QAAL,CAAc,SAAd,EADF,CAGE;;AACA,cAAI,OAAJ,EAAa;AACX,YAAA,OAAO,CAAC,WAAR,CAAoB,IAApB;AACD;AACF,SARD,MAUA;AACE,eAAK,WAAL,CAAiB,SAAjB,EADF,CAGE;;AACA,cAAI,OAAO,IAAI,OAAO,CAAC,WAAR,MAAyB,IAAxC,EAA8C;AAC5C,YAAA,OAAO,CAAC,aAAR;;AACA,YAAA,OAAO,CAAC,sBAAR,CAA+B,KAA/B;AACD;AACF;AACF,OA5EH;AA8EE;AACA,MAAA,YAAY,EAAG,sBAAS,CAAT,EACf;AACE,oEAAqB,CAArB,EADF,CAGE;;;AACA,YAAI,IAAI,GAAG,KAAK,OAAL,EAAX;;AACA,YAAI,IAAI,IAAI,IAAI,CAAC,SAAL,EAAR,IAA4B,CAAC,KAAK,QAAL,CAAc,SAAd,CAAjC,EAA2D;AACzD,eAAK,QAAL,CAAc,SAAd;AACD;AACF,OAxFH;;AA0FE;;;;;AAKA,MAAA,cAAc,EAAG,wBAAS,CAAT,EACjB;AACE;AACA,aAAK,QAAL,CAAc,SAAd,EAFF,CAIE;;AACA,YAAI,KAAK,OAAL,MAAkB,CAAC,CAAC,cAAF,MAAsB,OAA5C,EACA;AACE,cAAI,OAAO,GAAG,KAAK,UAAL,EAAd;;AAEA,cAAI,OAAO,IAAI,OAAO,CAAC,qBAAR,EAAf,EACA;AACE;AACA,YAAA,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,OAAX,CAAmB,WAAnB,GAAiC,OAAjC,GAFF,CAIE;;AACA,YAAA,OAAO,CAAC,sBAAR,CAA+B,IAA/B,EALF,CAOE;;;AACA,gBAAI,KAAK,SAAL,EAAJ,EAAsB;AACpB,mBAAK,IAAL;AACD;AACF;AACF;AACF;AAvHH;AA3DD,GADA;AAtBA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,MAAb,CAAoB,aAApB,GAAoC,aAApC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,wBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,KAAN,CAAY,IADtB;AAEC,IAAA,OAAO,EAAG,CAAC,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,WAAZ,CAFX;AAGC,IAAA,SAAS,EAAG,CAAC,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,WAAZ,CAHb;;AAKC;;;;AAIA,IAAA,SAAS,EAAG,mBAAS,KAAT,EAAgB,IAAhB,EACZ;AACE,8CAAqB,KAArB,EAA4B,IAA5B;AAEA,WAAK,WAAL,CAAiB,aAAjB,EAAgC,KAAK,cAArC,EAAqD,IAArD;AACA,WAAK,WAAL,CAAiB,YAAjB,EAA+B,KAAK,aAApC,EAAmD,IAAnD;AAEA,WAAK,OAAL,GAAe,IAAI,EAAE,CAAC,KAAH,CAAS,iBAAb,EAAf;;AACA,WAAK,OAAL,CAAa,WAAb,CAAyB,UAAzB,EAAqC,KAAK,WAA1C,EAAuD,IAAvD;AACD,KAlBF;AAqBC,IAAA,UAAU,EACV;AACE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAHF;;AAQE;;;;AAIA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV,OAbF;;AAkBE;;;;;AAKA,MAAA,aAAa,EACb;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV,OAxBF;;AA6BE;AACA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV,OA/BF;;AAoCE;AACA,MAAA,aAAa,EACb;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV;AAtCF,KAtBD;AAmEC,IAAA,OAAO,EACP;AACE,MAAA,OAAO,EAAG,IADZ;;AAIE;;;;;AAKA,MAAA,cAAc,EAAG,wBAAS,CAAT,EACjB;AACE,YAAI,CAAC,KAAK,SAAL,EAAD,IAAqB,CAAC,CAAC,SAAF,OAAkB,IAA3C,EAAiD;AAC/C;AACD;;AAED,aAAK,OAAL,CAAa,GAAb,CAAiB;AACf,UAAA,QAAQ,EAAE,KAAK,WAAL,EADK;AAEf,UAAA,aAAa,EAAE,KAAK,gBAAL,EAFA;AAGf,UAAA,OAAO,EAAE,KAAK,WAAL,EAHM;AAIf,UAAA,QAAQ,EAAE,KAAK,gBAAL;AAJK,SAAjB,EAKG,KALH;;AAOA,aAAK,QAAL,CAAc,SAAd;AACD,OAvBH;;AA0BE;;;;;AAKA,MAAA,aAAa,EAAG,uBAAS,CAAT,EAChB;AACE,aAAK,OAAL,CAAa,IAAb;;AACA,aAAK,WAAL,CAAiB,SAAjB;;AAEA,YAAI,CAAC,KAAK,SAAL,EAAD,IAAqB,CAAC,CAAC,SAAF,OAAkB,IAA3C,EAAiD;AAC/C;AACD;AACF,OAvCH;;AA0CE;;;AAGA,MAAA,WAAW,EAAG,uBACd;AACE,YAAI,KAAK,SAAL,EAAJ,EACA;AACE,eAAK,OAAL;AACD,SAHD,MAGO;AACL,eAAK,OAAL,CAAa,IAAb;AACD;AACF;AArDH,KApED;AA6HC,IAAA,QAAQ,EAAG,oBAAW;AACpB,WAAK,eAAL,CAAqB,SAArB;AACD;AA/HF,GADA;AApDA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,WAAV,CAAsB,aAAtB,GAAsC,aAAtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;AAMA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,yBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;AAEC,IAAA,OAAO,EAAG,CACR,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,uBADH,EAER,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,qBAFH,EAGR,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,eAHH,EAIR,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAJH,CAFX;AAQC,IAAA,SAAS,EAAG,CAAC,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAZ,CARb;;AAYC;;;;;;AAMA;;;;AAIA,IAAA,SAAS,EAAG,mBAAS,MAAT,EAAiB,IAAjB,EACZ;AACE;;AAEA,WAAK,UAAL,CAAgB,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,MAAjB,EAAhB,EAHF,CAKE;;;AACA,WAAK,mBAAL,CAAyB,OAAzB;;AACA,WAAK,mBAAL,CAAyB,QAAzB,EAPF,CASE;;;AACA,UAAI,MAAM,IAAI,IAAd,EAAoB;AAClB,aAAK,SAAL,CAAe,MAAf;AACD;;AAED,UAAI,IAAI,IAAI,IAAZ,EAAkB;AAChB,aAAK,OAAL,CAAa,IAAb;AACD;AACF,KAxCF;;AA6CC;;;;;AAKA,IAAA,UAAU,EACV;AACE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAK;AAFX,OAHF;;AAQE;;;;AAIA,MAAA,MAAM,EACN;AACE,QAAA,KAAK,EAAE,QADT;AAEE,QAAA,KAAK,EAAE,cAFT;AAGE,QAAA,KAAK,EAAE,cAHT;AAIE,QAAA,QAAQ,EAAE;AAJZ,OAbF;;AAoBE;;;AAGA,MAAA,cAAc,EACd;AACE,QAAA,KAAK,EAAO,CAAC,KAAD,EAAQ,QAAR,CADd;AAEE,QAAA,IAAI,EAAQ,QAFd;AAGE,QAAA,KAAK,EAAO,sBAHd;AAIE,QAAA,SAAS,EAAG;AAJd;AAxBF,KAnDD;;AAuFC;;;;;AAMA,IAAA,OAAO,EACP;AACE;;AACA;;;AAGA,MAAA,cAAc,EACd;AACE,QAAA,OAAO,EAAG;AADZ,OANF;AAWE;AACA,MAAA,uBAAuB,EAAG,iCAAS,EAAT,EAAa,IAAb,EAC1B;AACE,YAAI,OAAJ;;AAEA,gBAAO,EAAP;AAEE,eAAK,OAAL;AACE,YAAA,OAAO,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,SAAN,CAAgB,SAApB,EAAV;;AACA,iBAAK,IAAL,CAAU,OAAV,EAAmB;AAAC,cAAA,IAAI,EAAE,CAAP;AAAU,cAAA,GAAG,EAAE,CAAf;AAAkB,cAAA,KAAK,EAAE,CAAzB;AAA4B,cAAA,MAAM,EAAE;AAApC,aAAnB;;AACA;;AAEF,eAAK,QAAL;AACE,YAAA,OAAO,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,KAAN,CAAY,IAAhB,EAAV;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,QAApB,EAA8B,KAAK,gBAAnC,EAAqD,IAArD;;AACA,iBAAK,IAAL,CAAU,OAAV,EAAmB;AAAC,cAAA,IAAI,EAAE,CAAP;AAAU,cAAA,KAAK,EAAE;AAAjB,aAAnB;;AACA;AAXJ;;AAcA,eAAO,OAAO,8EAAyB,EAAzB,CAAd;AACD,OA/BH;;AAkCE;;;;;AAKA,MAAA,wBAAwB,EAAG,oCAAW;AACpC,eAAO,KAAK,eAAL,CAAqB,OAArB,CAAP;AACD,OAzCH;;AA4CE;;;;;AAMA;AACA,MAAA,YAAY,EAAG,sBAAS,KAAT,EAAgB,GAAhB,EACf;AACE,YAAI,OAAO,GAAG,KAAK,eAAL,CAAqB,QAArB,CAAd;;AAEA,YAAI,KAAK,KAAK,IAAd,EACA;AACE,UAAA,OAAO,CAAC,QAAR,CAAiB,KAAjB;AACA,UAAA,OAAO,CAAC,IAAR;AACD,SAJD,MAMA;AACE,UAAA,OAAO,CAAC,OAAR;AACD;AACF,OAhEH;;AAmEE;;;;AAIA,MAAA,oBAAoB,EAAE,8BAAS,CAAT,EACtB;AACE,YAAI,KAAK,eAAL,CAAqB,QAArB,EAA+B,SAA/B,EAAJ,EAAgD;AAC9C,eAAK,gBAAL;AACD;AACF,OA5EH;;AA+EE;;;;AAIA,MAAA,gBAAgB,EAAE,4BAClB;AACE,YAAI,MAAM,GAAG,KAAK,eAAL,CAAqB,QAArB,CAAb;AACA,YAAI,KAAK,GAAG,KAAK,eAAL,CAAqB,OAArB,CAAZ,CAFF,CAIE;;AACA,YAAI,MAAM,GAAG,MAAM,CAAC,SAAP,GAAmB,MAAhC,CALF,CAOE;;AACA,YAAI,KAAK,iBAAL,MAA4B,QAAhC,EAA0C;AACxC,UAAA,KAAK,CAAC,mBAAN,CAA0B;AAAC,mBAAO,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,CAApB;AAAR,WAA1B;AACD,SAFD,MAEO,IAAI,KAAK,iBAAL,MAA4B,KAAhC,EAAuC;AAC5C,UAAA,KAAK,CAAC,mBAAN,CAA0B;AAAC,mBAAO;AAAR,WAA1B;AACD;AACF,OAjGH;;AAuGE;;;;;;AAOA;;;;;;AAMA,MAAA,oBAAoB,EAAG,gCAAW;AAChC,eAAO,KAAK,eAAL,CAAqB,OAArB,CAAP;AACD,OAtHH;;AA4HE;;;;;;AAMA;;;;;AAKA,MAAA,OAAO,EAAG,iBAAS,IAAT,EAAe;AACvB,aAAK,eAAL,CAAqB,QAArB,EAA+B,OAA/B,CAAuC,IAAvC;AACD,OAzIH;;AA4IE;;;;;AAKA,MAAA,OAAO,EAAG,mBAAW;AACnB,eAAO,KAAK,eAAL,CAAqB,QAArB,EAA+B,OAA/B,EAAP;AACD;AAnJH;AA9FD,GADA;AA3BA,EAAA,EAAC,CAAC,EAAF,CAAK,QAAL,CAAc,QAAd,CAAuB,aAAvB,GAAuC,aAAvC;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAiBA;;;;AAIA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,mCAAnB,EACA;AACC,IAAA,OAAO,EACP;AACE;;;;;;;;;;;;;AAaA,MAAA,QAAQ,EAAG,kBAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,YAA9B,EAA4C,aAA5C,EAA2D,CAAE,CAd1E;;AAiBE;;;;;;;AAOA,MAAA,SAAS,EAAG,mBAAS,MAAT,EAAiB,OAAjB,EAA0B,CAAE;AAxB1C;AAFD,GADA;AArBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,QAAV,CAAmB,aAAnB,CAAiC,aAAjC,GAAiD,aAAjD;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;AAOA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,sCAAf,EACA;AACC,IAAA,IAAI,EAAG,UADR;AAEC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAFrB;AAGC,IAAA,SAAS,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,QAAX,CAAoB,aAHjC;;AAKC;;;AAGA,IAAA,SAAS,EAAG,mBAAS,IAAT,EACZ;AACE;AAEA,WAAK,OAAL,GAAe,EAAf,CAHF,CAKE;;AAC6C;AAC3C,QAAA,EAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,WAAlB,GAAgC,WAAhC,CACE,cADF,EACkB,KAAK,eADvB,EACwC,IADxC;AAGA,aAAK,MAAL,GAAc,EAAd;AACD;AACD,WAAK,KAAL,GAAa,IAAb;;AACA,WAAK,OAAL;;AAEA,MAAA,IAAI,CAAC,WAAL,CAAiB,QAAjB,EAA2B,KAAK,aAAhC,EAA+C,IAA/C;AACD,KAzBF;AA2BC,IAAA,UAAU,EACV;AACE;;;;AAIA,MAAA,WAAW,EACX;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,IAAI,EAAG,IAFT;AAGE,QAAA,KAAK,EAAG,mBAHV;AAIE,QAAA,QAAQ,EAAG;AAJb,OANF;;AAaE;;;;AAIA,MAAA,cAAc,EACd;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,IAAI,EAAG,oCAFT;AAGE,QAAA,KAAK,EAAG,sBAHV;AAIE,QAAA,QAAQ,EAAG;AAJb;AAlBF,KA5BD;AAuDC,IAAA,OAAO,EACP;AACE,MAAA,MAAM,EAAG,IADX;AAEE,MAAA,KAAK,EAAG,IAFV;AAGE,MAAA,OAAO,EAAG,IAHZ;;AAME;;;AAGA,MAAA,OAAO,EAAG,mBAAW;AACnB;AACA,YAAI,MAAM,GAAG,KAAK,KAAL,CAAW,SAAX,EAAb;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,cAAI,KAAK,GAAG,MAAM,CAAC,CAAD,CAAlB;AACA,eAAK,QAAL,CACE,KAAK,CAAC,KADR,EACe,KAAK,CAAC,MADrB,EAC6B,KAAK,CAAC,KADnC,EAC0C,KAAK,CAAC,OADhD,EACyD,KAAK,CAAC,aAD/D;AAGD,SARkB,CAUnB;;;AACA,YAAI,OAAO,GAAG,KAAK,KAAL,CAAW,UAAX,EAAd;;AACA,YAAI,aAAa,GAAG,KAAK,KAAL,CAAW,gBAAX,EAApB;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,eAAK,SAAL,CAAe,OAAO,CAAC,CAAD,CAAtB,EAA2B,aAAa,CAAC,CAAD,CAAxC;AACD;AACF,OAzBH;;AA4BE;;;;AAIA,MAAA,aAAa,EAAG,yBAAW;AACzB,aAAK,UAAL,GADyB,CAEzB;;;AACA,aAAK,IAAI,CAAC,GAAC,CAAX,EAAc,CAAC,GAAG,KAAK,OAAL,CAAa,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,eAAK,OAAL,CAAa,CAAb,EAAgB,OAAhB;AACD;;AACD,aAAK,OAAL,GAAe,EAAf;;AAEA,aAAK,OAAL;AACD,OAzCH;;AA4CE;;;;;AAKA,MAAA,kBAAkB,EAAG,4BAAS,IAAT,EAAe,KAAf,EAAsB;AACzC;AACA,QAAA,IAAI,CAAC,IAAL,CAAU,YAAV,EAAwB,KAAxB,EAA+B,YAA/B;AACD,OApDH;;AAuDE;;;;;;AAMA,MAAA,eAAe,EAEJ,yBAAS,CAAT,EAAY;AACnB,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,MAAL,CAAY,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,cAAI,KAAK,GAAG,KAAK,MAAL,CAAY,CAAZ,CAAZ;;AACA,cAAI,KAAK,CAAC,IAAN,IAAc,KAAK,CAAC,IAAN,CAAW,SAA7B,EAAwC;AACtC,YAAA,KAAK,CAAC,IAAN,GAAa,KAAK,CAAC,IAAN,CAAW,SAAX,EAAb;AACD;;AACD,cAAI,OAAO,GAAG,KAAK,gBAAL,CAAsB,KAAK,CAAC,IAA5B,EAAkC,KAAK,CAAC,IAAxC,CAAd;;AACA,UAAA,KAAK,CAAC,KAAN,CAAY,QAAZ,CAAqB,OAArB;AACD;AACF,OAxEL;;AA8EE;;;;;;;;AAQA,MAAA,gBAAgB,EAAG,0BAAS,IAAT,EAAe,IAAf,EACnB;AACE,YAAI,cAAc,GAAG,EAArB;;AACA,YAAI,IAAI,CAAC,WAAL,EAAJ,EAAwB;AACtB,UAAA,cAAc,GAAG,KAAK,iBAAL,EAAjB;AACD,SAJH,CAME;;;AACA,YAAI,WAAW,GAAG,IAAI,CAAC,MAAL,GAAc,CAAd,IAAmB,IAAI,CAAC,WAAL,EAAnB,GAAwC,KAAK,cAAL,EAAxC,GAAgE,EAAlF;AACA,eAAO,IAAI,GAAG,cAAP,GAAwB,WAA/B;AACD,OAhGH;AAmGE;AACA,MAAA,QAAQ,EAAG,kBAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B;AACvC,cAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACD,OAtGH;AAyGE;AACA,MAAA,SAAS,EAAG,mBAAS,MAAT,EAAiB;AAC3B,cAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACD;AA5GH,KAxDD;;AAyKC;;;;;AAMA,IAAA,QAAQ,EAAG,oBACX;AAC+C;AAC3C,QAAA,EAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,WAAlB,GAAgC,cAAhC,CAA+C,cAA/C,EAA+D,KAAK,eAApE,EAAqF,IAArF;AACD;AACD,WAAK,MAAL,GAAc,IAAd;;AAEA,WAAK,KAAL,CAAW,cAAX,CAA0B,QAA1B,EAAoC,KAAK,aAAzC,EAAwD,IAAxD;;AACA,WAAK,KAAL,GAAa,IAAb;AACD;AAxLF,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,QAAV,CAAmB,gBAAnB,CAAoC,aAApC,GAAoD,aAApD;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AAGA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,4BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,QAAX,CAAoB,gBAD9B;AAIC,IAAA,SAAS,EAAG,mBAAS,IAAT,EACZ;AACE,UAAI,MAAM,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAjB,EAAb;AACA,MAAA,MAAM,CAAC,UAAP,CAAkB,CAAlB;AACA,MAAA,MAAM,CAAC,aAAP,CAAqB,CAArB,EAAwB,CAAxB;AACA,MAAA,MAAM,CAAC,cAAP,CAAsB,CAAtB,EAAyB,OAAzB,EAAkC,KAAlC;;AACA,WAAK,UAAL,CAAgB,MAAhB;;AAEA,kEAAqB,IAArB;AACD,KAbF;AAgBC,IAAA,OAAO,EACP;AACE,MAAA,IAAI,EAAG,CADT;AAEE,MAAA,UAAU,EAAG,IAFf;AAKE;AACA,MAAA,aAAa,EAAG,yBAAW;AACzB,YAAI,KAAK,UAAT,EAAqB;AACnB,eAAK,UAAL,CAAgB,OAAhB;;AACA,eAAK,UAAL,GAAkB,IAAlB;AACD;;AACD,aAAK,IAAL,GAAY,CAAZ;;AACA;AACD,OAbH;;AAgBE;;;;;;;;;;AAUA,MAAA,QAAQ,EAAG,kBAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B;AACvC;AACA,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,eAAK,IAAL,CACE,KAAK,aAAL,CAAmB,KAAnB,CADF,EAC6B;AAAC,YAAA,GAAG,EAAE,KAAK,IAAX;AAAiB,YAAA,MAAM,EAAE,CAAzB;AAA4B,YAAA,OAAO,EAAE;AAArC,WAD7B;;AAGA,eAAK,IAAL;AACD,SAPsC,CASvC;;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,cAAI,KAAK,GAAG,KAAK,YAAL,CAAkB,KAAK,CAAC,CAAD,CAAvB,EAA4B,KAAK,CAAC,CAAD,CAAjC,CAAZ;;AACA,eAAK,IAAL,CAAU,KAAV,EAAiB;AAAC,YAAA,GAAG,EAAE,KAAK,IAAX;AAAiB,YAAA,MAAM,EAAE;AAAzB,WAAjB;;AACA,cAAI,IAAI,GAAG,KAAK,CAAC,CAAD,CAAhB;AACA,UAAA,KAAK,CAAC,QAAN,CAAe,IAAf;;AACA,eAAK,IAAL,CAAU,IAAV,EAAgB;AAAC,YAAA,GAAG,EAAE,KAAK,IAAX;AAAiB,YAAA,MAAM,EAAE;AAAzB,WAAhB;;AACA,eAAK,IAAL;;AAEA,eAAK,kBAAL,CAAwB,IAAxB,EAA8B,KAA9B,EARqC,CAUrC;;;AAC6C;AAC3C,iBAAK,MAAL,CAAY,IAAZ,CAAiB;AAAC,cAAA,IAAI,EAAE,KAAK,CAAC,CAAD,CAAZ;AAAiB,cAAA,KAAK,EAAE,KAAxB;AAA+B,cAAA,IAAI,EAAE,KAAK,CAAC,CAAD;AAA1C,aAAjB;AACD;AACF;AACF,OAnDH;;AAsDE;;;;;;AAMA,MAAA,SAAS,EAAG,mBAAS,MAAT,EAAiB;AAC3B,YAAI,KAAK,UAAL,IAAmB,IAAvB,EAA6B;AAC3B;AACA,eAAK,UAAL,GAAkB,IAAI,EAAE,CAAC,EAAH,CAAM,SAAN,CAAgB,SAApB,EAAlB;;AACA,eAAK,UAAL,CAAgB,YAAhB,CAA6B,CAA7B;;AACA,cAAI,IAAI,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,IAAjB,EAAX;AACA,UAAA,IAAI,CAAC,SAAL,CAAe,OAAf;AACA,UAAA,IAAI,CAAC,UAAL,CAAgB,CAAhB;;AACA,eAAK,UAAL,CAAgB,SAAhB,CAA0B,IAA1B,EAP2B,CAQ3B;;;AACA,eAAK,IAAL,CAAU,KAAK,UAAf,EAA2B;AAAC,YAAA,GAAG,EAAE,KAAK,IAAX;AAAiB,YAAA,MAAM,EAAE,CAAzB;AAA4B,YAAA,OAAO,EAAE;AAArC,WAA3B,EAT2B,CAU3B;;;AACA,eAAK,IAAL;AACD,SAb0B,CAe3B;;;AACA,aAAK,UAAL,CAAgB,GAAhB,CAAoB,MAApB;AACD,OA7EH;;AAgFE;;;;;AAKA,MAAA,SAAS,EAAG,qBAAW;AACrB,eAAO,KAAK,UAAL,EAAP;AACD,OAvFH;;AA0FE;;;;;;;;AAQA,MAAA,YAAY,EAAG,sBAAS,IAAT,EAAe,IAAf,EAAqB;AAClC,YAAI,KAAK,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,KAAN,CAAY,KAAhB,CAAsB,KAAK,gBAAL,CAAsB,IAAtB,EAA4B,IAA5B,CAAtB,CAAZ,CADkC,CAElC;;AACA,aAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB;;AACA,QAAA,KAAK,CAAC,OAAN,CAAc,IAAd;AACA,QAAA,KAAK,CAAC,aAAN,CAAoB,qBAApB;AACA,eAAO,KAAP;AACD,OAzGH;;AA4GE;;;;;;AAMA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB;AAC9B,YAAI,MAAM,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,KAAN,CAAY,KAAhB,CAAsB,KAAtB,CAAb,CAD8B,CAE9B;;AACA,aAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB;;AACA,QAAA,MAAM,CAAC,OAAP,CAAe,MAAf;;AACA,YAAI,KAAK,IAAL,IAAa,CAAjB,EAAoB;AAClB,UAAA,MAAM,CAAC,YAAP,CAAoB,EAApB;AACD;;AACD,QAAA,MAAM,CAAC,SAAP,CAAiB,MAAjB;AACA,eAAO,MAAP;AACD;AA5HH,KAjBD;;AAiJC;;;;;AAKA,IAAA,QAAQ,EAAG,oBACX;AACE;AACA;AACA,UAAI,KAAK,UAAT,EAAqB;AACnB,aAAK,UAAL,CAAgB,SAAhB;;AACA,aAAK,eAAL,CAAqB,YAArB;AACD;AACF;AA9JF,GADA;AArBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,QAAV,CAAmB,MAAnB,CAA0B,aAA1B,GAA0C,aAA1C;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,2BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MADlB;;AAIC;;;;;;AAMA;;;AAGA,IAAA,SAAS,EAAG,mBAAS,KAAT,EACZ;AACE,4CADF,CAGE;;AACA,WAAK,UAAL,GAAkB,EAAlB,CAJF,CAKE;;AACA,WAAK,SAAL,GAAiB,EAAjB;;AAEA,UAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAK,QAAL,CAAc,KAAd;AACD;AACF,KAzBF;;AA6BC;;;;;AAMA,IAAA,UAAU,EACV;AACE;AACA,MAAA,KAAK,EACL;AACE,QAAA,KAAK,EAAE,gBADT;AAEE,QAAA,KAAK,EAAE,aAFT;AAGE,QAAA,KAAK,EAAE,aAHT;AAIE,QAAA,QAAQ,EAAE,IAJZ;AAKE,QAAA,WAAW,EAAE;AALf;AAHF,KApCD;;AAkDC;;;;;AAMA,IAAA,OAAO,EACP;AACE;AACA,MAAA,SAAS,EAAG,IAFd;AAGE,MAAA,UAAU,EAAG,IAHf;;AAKE;;;;;;;AAOA,MAAA,WAAW,EAAE,qBAAS,KAAT,EAAgB,GAAhB,EAAqB;AAChC;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,SAAL,CAAe,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C;AACA,cAAI,YAAY,GAAG,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAnB;AACA,cAAI,cAAc,GAAG,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAArB;AACA,cAAI,cAAc,GAAG,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAArB;AACA,cAAI,aAAa,GAAG,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAApB;AACA,cAAI,OAAO,GAAG,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAd;AACA,cAAI,cAAc,GAAG,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAArB,CAP8C,CAS9C;;AACA,cAAI,GAAG,IAAI,SAAP,IAAoB,CAAC,GAAG,CAAC,UAAJ,EAAzB,EAA2C;AACzC,iBAAK,kBAAL,CAAwB,YAAxB,EAAsC,cAAtC,EAAsD,cAAtD,EAAsE,GAAtE;AACD,WAZ6C,CAc9C;;;AACA,cAAI,KAAK,IAAI,SAAb,EAAwB;AACtB,iBAAK,WAAL,CACE,YADF,EACgB,cADhB,EACgC,cADhC,EACgD,aADhD,EAEE,OAFF,EAEW,cAFX;AAID,WALD,MAKO;AACL;AACA;AACA,gBAAI,YAAY,CAAC,UAAb,MAA6B,EAAE,CAAC,IAAH,CAAQ,cAAR,CAAuB,UAAxD,EAAoE;AAClE;AACD,aALI,CAML;;;AACA,gBAAI,cAAc,CAAC,OAAf,CAAuB,GAAvB,KAA+B,CAAC,CAApC,EAAuC;AACrC,cAAA,YAAY,CAAC,UAAU,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,OAAf,CAAuB,cAAvB,CAAX,CAAZ;AACD,aAFD,MAEO;AACL,kBAAI,IAAI,GAAG,cAAc,CAAC,OAAf,CAAuB,GAAvB,CAAX;AACA,kBAAI,KAAK,GAAG,QAAQ,CAClB,cAAc,CAAC,SAAf,CAAyB,IAAI,GAAG,CAAhC,EAAmC,cAAc,CAAC,MAAf,GAAwB,CAA3D,CADkB,EAC6C,EAD7C,CAApB;AAGA,cAAA,cAAc,GAAG,cAAc,CAAC,SAAf,CAAyB,CAAzB,EAA4B,IAA5B,CAAjB;AACA,kBAAI,WAAW,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC,IAAH,CAAQ,MAAR,CAAe,OAAf,CAAuB,cAAvB,CAAT,CAAZ,EAAlB;;AACA,kBAAI,KAAK,IAAI,MAAb,EAAqB;AACnB,gBAAA,KAAK,GAAG,WAAW,CAAC,MAApB;AACD;;AACD,kBAAI,WAAJ,EAAiB;AACf,gBAAA,WAAW,CAAC,OAAZ,CAAoB,KAApB,EAA2B,IAA3B;AACD;AACF;AACF;AACF;AACF,OA3DH;;AA8DE;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAA,SAAS,EAAE,mBACT,YADS,EACK,cADL,EACqB,cADrB,EAET,aAFS,EAEM,OAFN,EAEe,cAFf,EAGT;AAEA;AACA,aAAK,SAAL,CAAe,IAAf,CAAoB,CAClB,YADkB,EACJ,cADI,EACY,cADZ,EAElB,aAFkB,EAEH,OAFG,EAEM,cAFN,CAApB,EAHA,CAQA;;;AACA,aAAK,WAAL,CACE,YADF,EACgB,cADhB,EACgC,cADhC,EAEE,aAFF,EAEiB,OAFjB,EAE0B,cAF1B;AAID,OArGH;;AAwGE;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAA,WAAW,EAAE,qBACX,YADW,EACG,cADH,EACmB,cADnB,EAEX,aAFW,EAEI,OAFJ,EAEa,cAFb,EAGX;AAEA;AACA,YAAI,KAAK,QAAL,MAAmB,IAAvB,EAA6B;AAC3B;AACD,SALD,CAOA;;;AACA,YAAI,EAAE,GAAG,KAAK,QAAL,GAAgB,IAAhB,CACP,cADO,EACS,YADT,EACuB,cADvB,EACuC,OADvC,CAAT,CARA,CAWA;;AACA,YAAI,SAAS,GAAG,IAAhB;;AACA,YAAI,aAAJ,EAAmB;AACjB,UAAA,SAAS,GAAG,YAAY,CAAC,IAAb,CACV,cADU,EACM,KAAK,QAAL,EADN,EACuB,cADvB,EACuC,cADvC,CAAZ;AAGD,SAjBD,CAmBA;;;AACA,YAAI,UAAU,GAAG,YAAY,CAAC,UAAb,EAAjB;;AACA,YAAI,KAAK,UAAL,CAAgB,UAAhB,KAA+B,SAAnC,EAA8C;AAC5C,eAAK,UAAL,CAAgB,UAAhB,IAA8B,EAA9B;AACD;;AACD,aAAK,UAAL,CAAgB,UAAhB,EAA4B,IAA5B,CACE,CAAC,EAAD,EAAK,SAAL,EAAgB,cAAhB,EAAgC,cAAhC,EAAgD,OAAhD,EAAyD,cAAzD,CADF;AAGD,OA7JH;;AA+JE;;;;;;;;;;;AAWA,MAAA,YAAY,EAAE,sBAAS,YAAT,EAAuB,cAAvB,EAAuC,cAAvC,EAAuD;AACnE,aAAK,kBAAL,CACE,YADF,EACgB,cADhB,EACgC,cADhC,EACgD,KAAK,QAAL,EADhD,EADmE,CAKnE;;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,SAAL,CAAe,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C,cACE,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,KAAwB,YAAxB,IACG,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,KAAwB,cAD3B,IAEG,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,KAAwB,cAH7B,EAIE;AACA,iBAAK,SAAL,CAAe,MAAf,CAAsB,CAAtB,EAAyB,CAAzB;AACD;AACF;AACF,OAzLH;;AA4LE;;;;;;;;;;;;;;;AAeA,MAAA,kBAAkB,EAAE,4BAClB,YADkB,EACJ,cADI,EACY,cADZ,EAC4B,YAD5B,EAElB;AACA;AACA,YAAI,EAAE,YAAY,YAAY,EAAE,CAAC,IAAH,CAAQ,MAAlC,CAAJ,EAA+C;AAC7C;AACA;AACD;;AAED,YAAI,cAAc,GAAG,KAAK,UAAL,CAAgB,YAAY,CAAC,UAAb,EAAhB,CAArB,CAPA,CAQA;;;AACA,YAAI,cAAc,IAAI,SAAlB,IAA+B,cAAc,CAAC,MAAf,IAAyB,CAA5D,EAA+D;AAC7D;AACD,SAXD,CAaA;;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,cAAc,CAAC,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C;AACA,cACE,cAAc,CAAC,CAAD,CAAd,CAAkB,CAAlB,KAAwB,cAAxB,IACA,cAAc,CAAC,CAAD,CAAd,CAAkB,CAAlB,KAAwB,cAF1B,EAGE;AACA;AACA,gBAAI,EAAE,GAAG,cAAc,CAAC,CAAD,CAAd,CAAkB,CAAlB,CAAT;AACA,YAAA,YAAY,CAAC,aAAb,CAA2B,EAA3B,EAHA,CAIA;;AACA,gBAAI,cAAc,CAAC,CAAD,CAAd,CAAkB,CAAlB,KAAwB,IAA5B,EAAkC;AAChC,cAAA,YAAY,CAAC,aAAb,CAA2B,cAAc,CAAC,CAAD,CAAd,CAAkB,CAAlB,CAA3B;AACD,aAPD,CAQA;;;AACA,YAAA,cAAc,CAAC,MAAf,CAAsB,CAAtB,EAAyB,CAAzB;AACA;AACD;AACF;AACF;AA7OH,KAzDD;;AA0SC;;;;;AAMA,IAAA,QAAQ,EAAG,oBAAW;AACpB;AACA,UAAI,KAAK,QAAL,MAAmB,IAAnB,IAA2B,CAAC,KAAK,QAAL,GAAgB,UAAhB,EAAhC,EAA8D;AAC5D,aAAK,QAAL,CAAc,IAAd;AACD;AACF;AArTF,GADA;AAhDA,EAAA,EAAC,CAAC,IAAF,CAAO,UAAP,CAAkB,MAAlB,CAAyB,aAAzB,GAAyC,aAAzC;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;AAcA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,4BAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MADlB;AAEC,IAAA,SAAS,EAAG,CAAE,EAAE,CAAC,IAAH,CAAQ,WAAV,CAFb;AAIC,IAAA,SAAS,EAAG,qBACZ;AACE;AAEA,WAAK,OAAL,GAAe,IAAI,EAAE,CAAC,KAAH,CAAS,KAAb,CAAmB,KAAK,WAAL,EAAnB,CAAf;;AACA,WAAK,OAAL,CAAa,WAAb,CAAyB,UAAzB,EAAqC,KAAK,WAA1C,EAAuD,IAAvD;AACD,KAVF;AAaC,IAAA,MAAM,EACN;AACE;AACA,kBAAa;AAFf,KAdD;AAoBC,IAAA,UAAU,EACV;AACE;;;;AAIA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV,OANF;;AAWE;;;;;AAKA,MAAA,aAAa,EACb;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV,OAjBF;;AAsBE;AACA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV,OAxBF;;AA6BE;AACA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAI;AAFV;AA/BF,KArBD;AA2DC,IAAA,OAAO,EACP;AACE,MAAA,OAAO,EAAG,IADZ;AAEE,MAAA,iBAAiB,EAAG,IAFtB;;AAIE;;;AAGA,MAAA,KAAK,EAAG,iBACR;AACE,aAAK,OAAL,CAAa,WAAb,CAAyB,KAAK,gBAAL,EAAzB;;AACA,aAAK,OAAL,CAAa,KAAb;AACD,OAXH;;AAcE;;;AAGA,MAAA,IAAI,EAAG,gBACP;AACE,aAAK,OAAL,CAAa,IAAb;;AACA,aAAK,iBAAL,GAAyB,IAAzB;AACD,OArBH;;AAwBE;;;AAGA,MAAA,WAAW,EAAG,uBACd;AACE,aAAK,OAAL,CAAa,IAAb;;AAEA,YAAI,KAAK,iBAAL,IAA0B,IAA9B,EAAoC;AAClC,eAAK,iBAAL,GAAyB,KAAK,WAAL,EAAzB;AACD;;AAED,aAAK,iBAAL,GAAyB,IAAI,CAAC,GAAL,CACvB,KAAK,UAAL,EADuB,EAEvB,KAAK,iBAAL,GAAyB,KAAK,WAAL,EAFF,CAAzB;;AAKA,aAAK,OAAL,CAAa,WAAb,CAAyB,KAAK,iBAA9B;;AACA,aAAK,OAAL,CAAa,KAAb;;AAEA,aAAK,SAAL,CAAe,UAAf;AACD;AA5CH,KA5DD;AA4GC,IAAA,QAAQ,EAAG,oBAAW;AACpB,WAAK,eAAL,CAAqB,SAArB;AACD;AA9GF,GADA;AAhCA,EAAA,EAAC,CAAC,KAAF,CAAQ,iBAAR,CAA0B,aAA1B,GAA0C,aAA1C;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;AAIA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,wBAAnB,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;;AAGC;;;;;AAMA,IAAA,MAAM,EACN;AACE;AACA,qBAAgB;AAFlB,KAVD;;AAiBC;;;;;AAMA,IAAA,OAAO,EACP;AACE;;;;;;AAMA;;;;;AAKA,MAAA,QAAQ,EAAG,kBAAS,KAAT,EAAgB;AACzB,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD,OAdH;;AAiBE;;;AAGA,MAAA,UAAU,EAAG,sBAAW,CAAE,CApB5B;;AAuBE;;;;;AAKA,MAAA,QAAQ,EAAG,oBAAW,CAAE;AA5B1B;AAxBD,GADA;AAtBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,WAAV,CAAsB,aAAtB,GAAsC,aAAtC;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;AAIA,EAAA,EAAC,CAAC,SAAF,CAAY,MAAZ,CAAmB,mBAAnB,EACA;AAEC;;;;;AAMA,IAAA,OAAO,EACP;AACE;;;;;;AAMA;;;;;AAKA,MAAA,UAAU,EAAG,oBAAS,GAAT,EAAc;AACzB,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD,OAdH;;AAiBE;;;;;AAKA,MAAA,UAAU,EAAG,sBAAW,CAAE,CAtB5B;;AAyBE;;;;;;AAMA;;;;;AAKA,MAAA,UAAU,EAAG,oBAAS,GAAT,EAAc;AACzB,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD,OAtCH;;AAyCE;;;;;AAKA,MAAA,UAAU,EAAG,sBAAW,CAAE,CA9C5B;;AAiDE;;;;;;AAMA;;;;;AAKA,MAAA,aAAa,EAAG,uBAAS,IAAT,EAAe;AAC7B,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD,OA9DH;;AAiEE;;;;;AAKA,MAAA,aAAa,EAAG,yBAAW,CAAE,CAtE/B;;AAyEE;;;;;;AAMA;;;;;AAKA,MAAA,WAAW,EAAG,qBAAS,IAAT,EAAe;AAC3B,eAAO,SAAS,CAAC,MAAV,IAAoB,CAA3B;AACD,OAtFH;;AAyFE;;;;;AAKA,MAAA,WAAW,EAAG,uBAAW,CAAE;AA9F7B;AATD,GADA;AAtBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,MAAV,CAAiB,aAAjB,GAAiC,aAAjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,mBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;AAEC,IAAA,SAAS,EAAG,CACV,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KADD,EAEV,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,WAFD,EAGV,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAHD,CAFb;AAOC,IAAA,OAAO,EAAG,CAAC,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAZ,CAPX;;AAUC;;;;;;AAMA;;;;AAIA,IAAA,SAAS,EAAG,mBAAS,WAAT,EACZ;AACE,+CADF,CAGE;;AACA,WAAK,UAAL,CAAgB,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,MAAjB,EAAhB,EAJF,CAME;;;AACA,WAAK,WAAL,CAAiB,UAAjB,EAA6B,KAAK,WAAlC;AACA,WAAK,WAAL,CAAiB,MAAjB,EAAyB,KAAK,OAA9B;AACA,WAAK,WAAL,CAAiB,aAAjB,EAAgC,KAAK,cAArC;AACA,WAAK,WAAL,CAAiB,WAAjB,EAA8B,KAAK,YAAnC;AACA,WAAK,WAAL,CAAiB,aAAjB,EAAgC,KAAK,YAArC;AACA,WAAK,WAAL,CAAiB,QAAjB,EAA2B,KAAK,SAAhC,EAZF,CAcE;;AACA,WAAK,WAAL,CAAiB,aAAjB,EAAgC,KAAK,YAArC;AACA,WAAK,WAAL,CAAiB,KAAjB,EAAwB,KAAK,YAA7B;AACA,WAAK,WAAL,CAAiB,QAAjB,EAA2B,KAAK,YAAhC,EAjBF,CAmBE;;AACA,UAAI,WAAW,IAAI,IAAnB,EAAyB;AACvB,aAAK,cAAL,CAAoB,WAApB;AACD,OAFD,MAEO;AACL,aAAK,eAAL;AACD;AACF,KA9CF;;AAiDC;;;;;AAMA,IAAA,MAAM,EAAG;AACP;;;AAGA,MAAA,WAAW,EAAE,oBAJN;;AAMP;AACA,MAAA,iBAAiB,EAAE;AAPZ,KAvDV;;AAkEC;;;;;AAMA,IAAA,UAAU,EACV;AACE;AACA,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAHF;AASE;AACA,MAAA,SAAS,EACT;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAXF;;AAiBE;AACA,MAAA,WAAW,EACX;AACE,QAAA,KAAK,EAAG,CAAE,YAAF,EAAgB,UAAhB,CADV;AAEE,QAAA,IAAI,EAAG,YAFT;AAGE,QAAA,KAAK,EAAG;AAHV,OAnBF;;AA0BE;;;;;;;AAOA,MAAA,KAAK,EACL;AACE,QAAA,KAAK,EAAG,6EADV;AAEE,QAAA,IAAI,EAAG,CAFT;AAGE,QAAA,KAAK,EAAG,aAHV;AAIE,QAAA,QAAQ,EAAE;AAJZ,OAlCF;;AA0CE;;;;AAIA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,CAFT;AAGE,QAAA,KAAK,EAAG,eAHV;AAIE,QAAA,KAAK,EAAE;AAJT,OA/CF;;AAuDE;;;;AAIA,MAAA,OAAO,EACP;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,GAFT;AAGE,QAAA,KAAK,EAAG,eAHV;AAIE,QAAA,KAAK,EAAG;AAJV,OA5DF;;AAoEE;;;;AAIA,MAAA,UAAU,EACV;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT,OAzEF;;AA+EE;;;;AAIA,MAAA,QAAQ,EACR;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT,OApFF;;AA0FE;;;;AAIA,MAAA,UAAU,EACV;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,KAAK,EAAG,kBAFV;AAGE,QAAA,QAAQ,EAAG;AAHb;AA/FF,KAzED;;AAgLC;;;;;AAMA,IAAA,OAAO,EACP;AAEE,MAAA,gBAAgB,EAAG,IAFrB;AAGE,MAAA,cAAc,EAAG,IAHnB;AAIE,MAAA,UAAU,EAAG,IAJf;AAKE,MAAA,UAAU,EAAG,IALf;AAME,MAAA,YAAY,EAAG,IANjB;AAOE,MAAA,cAAc,EAAG,IAPnB;AAQE,MAAA,mBAAmB,EAAG,IARxB;AASE,MAAA,aAAa,EAAG,IATlB;AAUE,MAAA,OAAO,EAAG,IAVZ;AAYE;AACA,MAAA,WAAW,EAAE,IAbf;AAcE,MAAA,gBAAgB,EAAE,IAdpB;AAeE,MAAA,WAAW,EAAE,IAff;AAiBE,MAAA,sBAAsB,EAAG,IAjB3B;AAoBE;;AACA;;;AAGA,MAAA,cAAc,EAAG;AACf,QAAA,OAAO,EAAG;AADK,OAxBnB;AA6BE;AACA,MAAA,YAAY,EAAG,sBAAS,IAAT,EAAe,GAAf,EAAoB,KAApB,EAA2B,MAA3B,EAAmC;AAChD,iEAAqB,IAArB,EAA2B,GAA3B,EAAgC,KAAhC,EAAuC,MAAvC,EADgD,CAEhD;;AACA,aAAK,mBAAL;AACD,OAlCH;AAqCE;AACA,MAAA,uBAAuB,EAAG,iCAAS,EAAT,EAAa,IAAb,EAC1B;AACE,YAAI,OAAJ;;AAEA,gBAAO,EAAP;AAEE,eAAK,MAAL;AACE,YAAA,OAAO,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MAAf,EAAV;AAEA,YAAA,OAAO,CAAC,WAAR,CAAoB,QAApB,EAA8B,KAAK,SAAnC,EAA8C,IAA9C;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,aAApB,EAAmC,KAAK,cAAxC;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,YAApB,EAAkC,KAAK,aAAvC;;AACA,iBAAK,IAAL,CAAU,OAAV;;AACA;AATJ;;AAYA,eAAO,OAAO,wEAAyB,EAAzB,CAAd;AACD,OAvDH;;AA0DE;;;;;;AAOA;;;;;;;AAOA,MAAA,cAAc,EAAG,wBAAS,CAAT,EAAY;AAC3B,aAAK,QAAL,CAAc,SAAd;AACD,OA1EH;;AA6EE;;;;;;;AAOA,MAAA,aAAa,EAAG,uBAAS,CAAT,EAAY;AAC1B,aAAK,WAAL,CAAiB,SAAjB;AACD,OAtFH;;AAyFE;;;;;AAKA,MAAA,OAAO,EAAG,iBAAS,CAAT,EACV;AACE;AACA,YAAI,CAAC,CAAC,cAAF,MAAsB,OAA1B,EAAmC;AACjC;AACD;;AAED,YAAI,IAAI,GAAG,KAAK,cAAL,OAA0B,YAA1B,GAAyC,GAAzC,GAA+C,GAA1D;AACA,YAAI,KAAK,GAAG,CAAC,CAAC,QAAF,GAAa,IAAb,CAAZ;AAEA,YAAI,SAAS,GAAI,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgB,KAAK,GAAG,CAAR,GAAY,CAAC,CAAb,GAAiB,CAAlD;AACA,aAAK,OAAL,CAAa,SAAS,GAAG,KAAK,aAAL,EAAzB;AAEA,QAAA,CAAC,CAAC,IAAF;AACD,OA5GH;;AA+GE;;;;;;;AAOA,MAAA,WAAW,EAAG,qBAAS,CAAT,EACd;AACE,YAAI,YAAY,GAAG,KAAK,cAAL,OAA0B,YAA7C;AACA,YAAI,QAAQ,GAAG,YAAY,GAAG,MAAH,GAAY,IAAvC;AACA,YAAI,OAAO,GAAG,YAAY,GAAG,OAAH,GAAa,MAAvC;;AAEA,gBAAO,CAAC,CAAC,gBAAF,EAAP;AAEE,eAAK,OAAL;AACE,iBAAK,YAAL;AACA;;AAEF,eAAK,QAAL;AACE,iBAAK,SAAL;AACA;;AAEF,eAAK,UAAL;AACE,iBAAK,gBAAL,CAAsB,GAAtB;AACA;;AAEF,eAAK,QAAL;AACE,iBAAK,aAAL,CAAmB,GAAnB;AACA;;AAEF,eAAK,MAAL;AACE,iBAAK,YAAL,CAAkB,GAAlB;AACA;;AAEF,eAAK,KAAL;AACE,iBAAK,UAAL,CAAgB,GAAhB;AACA;;AAEF;AACE;AA3BJ,SALF,CAmCE;;;AACA,QAAA,CAAC,CAAC,IAAF;AACD,OA5JH;;AA+JE;;;;;AAKA,MAAA,cAAc,EAAG,wBAAS,CAAT,EACjB;AACE;AACA;AACA,YAAI,KAAK,UAAT,EAAqB;AACnB;AACD;;AAED,YAAI,YAAY,GAAG,KAAK,cAAxB;AACA,YAAI,IAAI,GAAG,KAAK,eAAL,CAAqB,MAArB,CAAX;AAEA,YAAI,gBAAgB,GAAG,YAAY,GAAG,MAAH,GAAY,KAA/C;AAEA,YAAI,cAAc,GAAG,YAAY,GAAG,CAAC,CAAC,eAAF,EAAH,GAAyB,CAAC,CAAC,cAAF,EAA1D;AAEA,YAAI,SAAS,GAAG,KAAK,YAAL,EAAhB;AACA,QAAA,SAAS,GAAG,EAAE,CAAC,KAAH,CAAS,OAAT,CAAiB,UAAjB,CAA4B,WAA5B,GAA0C,OAA1C,CAAkD,SAAlD,CAAZ;;AACA,YAAI,YAAJ,EAAkB;AAChB,cAAI,gBAAgB,GAAG,SAAS,GAAG,SAAS,CAAC,SAAV,GAAsB,IAAzB,GAAgC,CAAhE;AACA,cAAI,OAAO,GAAG,CAAC,KAAK,cAAL,MAAyB,CAA1B,IAA+B,gBAA7C;AACD,SAHD,MAGO;AACL,cAAI,gBAAgB,GAAG,SAAS,GAAG,SAAS,CAAC,SAAV,GAAsB,GAAzB,GAA+B,CAA/D;AACA,cAAI,OAAO,GAAG,CAAC,KAAK,aAAL,MAAwB,CAAzB,IAA8B,gBAA5C;AACD;;AAED,YAAI,cAAc,GAAG,KAAK,gBAAL,GAAwB,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,QAAf,CAAwB,GAAxB,CAA4B,KAAK,iBAAL,GAAyB,aAAzB,EAA5B,EAAsE,gBAAtE,CAA7C;AACA,QAAA,cAAc,IAAI,OAAlB;AAEA,YAAI,YAAY,GAAG,KAAK,cAAL,GAAsB,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,QAAf,CAAwB,GAAxB,CAA4B,IAAI,CAAC,iBAAL,GAAyB,aAAzB,EAA5B,EAAsE,gBAAtE,CAAzC;;AAEA,YAAI,CAAC,CAAC,SAAF,OAAkB,IAAtB,EACA;AACE;AACA,eAAK,UAAL,GAAkB,IAAlB;;AACA,cAAI,CAAC,KAAK,WAAV,EAAsB;AACpB;AACA,iBAAK,WAAL,GAAmB,IAAI,EAAE,CAAC,KAAH,CAAS,KAAb,CAAmB,GAAnB,CAAnB;;AACA,iBAAK,WAAL,CAAiB,WAAjB,CAA6B,UAA7B,EAAyC,KAAK,UAA9C,EAA0D,IAA1D;AACD;;AACD,eAAK,WAAL,CAAiB,KAAjB,GARF,CASE;AACA;;;AACA,eAAK,YAAL,GAAoB,cAAc,GAAG,cAAjB,GAAkC,YAAtD,CAXF,CAaE;;AACA,UAAA,IAAI,CAAC,QAAL,CAAc,SAAd;AACD,SAhBD,MAkBA;AACE;AACA,eAAK,cAAL,GAAsB,IAAtB,CAFF,CAIE;;AACA,eAAK,mBAAL,GAA2B,cAAc,IAAI,YAAlB,GAAiC,CAAC,CAAlC,GAAsC,CAAjE,CALF,CAOE;;AACA,eAAK,oBAAL,CAA0B,CAA1B,EARF,CAUE;;;AACA,eAAK,WAAL,GAXF,CAaE;;;AACA,cAAI,CAAC,KAAK,OAAV,EACA;AACE,iBAAK,OAAL,GAAe,IAAI,EAAE,CAAC,KAAH,CAAS,KAAb,CAAmB,GAAnB,CAAf;;AACA,iBAAK,OAAL,CAAa,WAAb,CAAyB,UAAzB,EAAqC,KAAK,WAA1C,EAAuD,IAAvD;AACD,WAlBH,CAoBE;;;AACA,eAAK,OAAL,CAAa,KAAb;AACD,SArEH,CAuEE;;;AACA,aAAK,WAAL,CAAiB,aAAjB,EAAgC,KAAK,cAArC,EAxEF,CA0EE;;AACA,aAAK,OAAL,GA3EF,CA6EE;;AACA,QAAA,CAAC,CAAC,eAAF;AACD,OApPH;;AAuPE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,CAAT,EACf;AACE,YAAI,KAAK,UAAT,EACA;AACE;AACA,eAAK,cAAL,GAFF,CAIE;;AACA,iBAAO,KAAK,UAAZ,CALF,CAOE;AACA;;AACA,eAAK,WAAL,CAAiB,IAAjB;;AACA,eAAK,UAAL;;AAEA,iBAAO,KAAK,YAAZ,CAZF,CAcE;;AACA,eAAK,eAAL,CAAqB,MAArB,EAA6B,WAA7B,CAAyC,SAAzC,EAfF,CAiBE;AACA;;AACA,cAAI,CAAC,CAAC,OAAF,OAAgB,WAApB,EACA;AACE,gBAAI,WAAJ;AACA,gBAAI,aAAJ;AACA,gBAAI,cAAJ;;AAEA,gBAAI,KAAK,cAAT,EACA;AACE,cAAA,WAAW,GAAG,CAAC,CAAC,eAAF,MAAuB,KAAK,gBAAL,CAAsB,KAAK,QAAL,EAAtB,IAAyC,KAAK,gBAArE,CAAd;AAEA,cAAA,cAAc,GAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,QAAf,CAAwB,GAAxB,CAA4B,KAAK,iBAAL,GAAyB,aAAzB,EAA5B,EAAsE,KAAtE,CAAjB;AACA,cAAA,aAAa,GAAG,CAAC,CAAC,cAAF,MAAsB,cAAc,GAAG,KAAK,eAAL,CAAqB,MAArB,EAA6B,SAA7B,GAAyC,GAAhF,CAAhB;AACD,aAND,MAQA;AACE,cAAA,WAAW,GAAG,CAAC,CAAC,cAAF,MAAsB,KAAK,gBAAL,CAAsB,KAAK,QAAL,EAAtB,IAAyC,KAAK,gBAApE,CAAd;AAEA,cAAA,cAAc,GAAG,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,QAAf,CAAwB,GAAxB,CAA4B,KAAK,iBAAL,GAAyB,aAAzB,EAA5B,EAAsE,MAAtE,CAAjB;AACA,cAAA,aAAa,GAAG,CAAC,CAAC,eAAF,MAAuB,cAAc,GAAG,KAAK,eAAL,CAAqB,MAArB,EAA6B,SAA7B,GAAyC,IAAjF,CAAhB;AACD;;AAED,gBAAI,aAAa,GAAG,CAAhB,IAAqB,aAAa,GAAG,KAAK,UAA1C,IACA,WAAW,GAAG,CADd,IACmB,WAAW,GAAG,KAAK,UAD1C,EACsD;AACpD,mBAAK,eAAL,CAAqB,MAArB,EAA6B,WAA7B,CAAyC,SAAzC;AACD;AACF;AAEF,SA/CD,MAgDK,IAAI,KAAK,cAAT,EACL;AACE;AACA,eAAK,OAAL,CAAa,IAAb,GAFF,CAIE;;;AACA,eAAK,cAAL,GALF,CAOE;;AACA,iBAAO,KAAK,cAAZ;AACA,iBAAO,KAAK,mBAAZ;AACA,iBAAO,KAAK,aAAZ;AACD,SA7DH,CA+DE;;;AACA,aAAK,cAAL,CAAoB,aAApB,EAAmC,KAAK,cAAxC,EAhEF,CAkEE;;AACA,YAAI,CAAC,CAAC,OAAF,OAAgB,WAApB,EAAiC;AAC/B,UAAA,CAAC,CAAC,eAAF;AACD;AACF,OApUH;;AAuUE;;;;;AAKA,MAAA,cAAc,EAAG,wBAAS,CAAT,EACjB;AACE,YAAI,KAAK,UAAT,EACA;AACE,cAAI,QAAQ,GAAG,KAAK,cAAL,GACb,CAAC,CAAC,eAAF,EADa,GACS,CAAC,CAAC,cAAF,EADxB;AAEA,cAAI,QAAQ,GAAG,QAAQ,GAAG,KAAK,YAA/B;AAEA,eAAK,OAAL,CAAa,KAAK,gBAAL,CAAsB,QAAtB,CAAb;AACD,SAPD,MAQK,IAAI,KAAK,cAAT,EACL;AACE;AACA,eAAK,oBAAL,CAA0B,CAA1B;AACD,SAbH,CAeE;;;AACA,QAAA,CAAC,CAAC,eAAF;AACD,OA9VH;;AAiWE;;;;;;AAMA,MAAA,WAAW,EAAG,qBAAS,CAAT,EACd;AACE;AACA,YAAI,KAAK,GAAG,KAAK,QAAL,KAAmB,KAAK,mBAAL,GAA2B,KAAK,WAAL,EAA1D,CAFF,CAIE;;AACA,YAAI,KAAK,GAAG,KAAK,UAAL,EAAZ,EAA+B;AAC7B,UAAA,KAAK,GAAG,KAAK,UAAL,EAAR;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,KAAK,UAAL,EAAZ,EAA+B;AACpC,UAAA,KAAK,GAAG,KAAK,UAAL,EAAR;AACD,SATH,CAWE;;;AACA,YAAI,SAAS,GAAG,KAAK,mBAAL,IAA4B,CAAC,CAA7C;;AACA,YAAK,SAAS,IAAI,KAAK,IAAI,KAAK,aAA5B,IAA+C,CAAC,SAAD,IAAc,KAAK,IAAI,KAAK,aAA/E,EAA+F;AAC7F,UAAA,KAAK,GAAG,KAAK,aAAb;AACD,SAfH,CAiBE;;;AACA,aAAK,OAAL,CAAa,KAAb;AACD,OA3XH;;AA8XE;;;;;AAKA,MAAA,SAAS,EAAG,mBAAS,CAAT,EACZ;AACE;AACA,YAAI,SAAS,GAAG,KAAK,YAAL,EAAhB;AACA,YAAI,QAAQ,GAAG,KAAK,eAAL,CAAqB,MAArB,EAA6B,SAA7B,EAAf;AACA,YAAI,YAAY,GAAG,KAAK,cAAL,GAAsB,OAAtB,GAAgC,QAAnD,CAJF,CAME;;AACA,aAAK,eAAL,GAPF,CASE;;;AACA,aAAK,cAAL,GAAsB,SAAS,CAAC,YAAD,CAAT,GAA0B,QAAQ,CAAC,YAAD,CAAxD;AACA,aAAK,UAAL,GAAkB,QAAQ,CAAC,YAAD,CAA1B,CAXF,CAaE;;AACA,aAAK,mBAAL;AACD,OAnZH;;AA0ZE;;;;;;AAMA;AACA,MAAA,cAAc,EAAG,KAjanB;;AAoaE;;;;AAIA,MAAA,cAAc,EAAG,CAxanB;;AA2aE;;;;;;AAMA,MAAA,oBAAoB,EAAG,8BAAS,CAAT,EACvB;AACE,YAAI,YAAY,GAAG,KAAK,cAAxB;AACA,YAAI,cAAc,GAAG,YAAY,GAAG,CAAC,CAAC,eAAF,EAAH,GAAyB,CAAC,CAAC,cAAF,EAA1D;AACA,YAAI,cAAc,GAAG,KAAK,gBAA1B;AACA,YAAI,YAAY,GAAG,KAAK,cAAxB;AACA,YAAI,QAAQ,GAAG,KAAK,UAApB,CALF,CAOE;;AACA,YAAI,QAAQ,GAAG,cAAc,GAAG,cAAhC;;AACA,YAAI,cAAc,IAAI,YAAtB,EAAoC;AAClC,UAAA,QAAQ,IAAI,QAAZ;AACD,SAXH,CAaE;;;AACA,YAAI,KAAK,GAAG,KAAK,gBAAL,CAAsB,QAAtB,CAAZ;;AAEA,YAAI,GAAG,GAAG,KAAK,UAAL,EAAV;AACA,YAAI,GAAG,GAAG,KAAK,UAAL,EAAV;;AAEA,YAAI,KAAK,GAAG,GAAZ,EAAiB;AACf,UAAA,KAAK,GAAG,GAAR;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,GAAZ,EAAiB;AACtB,UAAA,KAAK,GAAG,GAAR;AACD,SAFM,MAEA;AACL,cAAI,GAAG,GAAG,KAAK,QAAL,EAAV;AACA,cAAI,IAAI,GAAG,KAAK,WAAL,EAAX;AACA,cAAI,MAAM,GAAG,KAAK,mBAAL,GAA2B,CAA3B,GAA+B,OAA/B,GAAyC,MAAtD,CAHK,CAKL;;AACA,UAAA,KAAK,GAAG,GAAG,GAAI,IAAI,CAAC,MAAD,CAAJ,CAAa,CAAC,KAAK,GAAG,GAAT,IAAgB,IAA7B,IAAqC,IAApD;AACD,SA9BH,CAgCE;AACA;;;AACA,YAAI,KAAK,aAAL,IAAsB,IAAtB,IAA+B,KAAK,mBAAL,IAA4B,CAAC,CAA7B,IAAkC,KAAK,IAAI,KAAK,aAA/E,IAAkG,KAAK,mBAAL,IAA4B,CAA5B,IAAiC,KAAK,IAAI,KAAK,aAArJ,EAAqK;AACnK,eAAK,aAAL,GAAqB,KAArB;AACD;AACF,OAvdH;;AA0dE;;;;;;;;AAQA,MAAA,gBAAgB,EAAG,0BAAS,QAAT,EACnB;AACE;AACA,YAAI,KAAK,GAAG,KAAK,cAAjB,CAFF,CAIE;;AACA,YAAI,KAAK,IAAI,IAAT,IAAiB,KAAK,IAAI,CAA9B,EAAiC;AAC/B,iBAAO,CAAP;AACD,SAPH,CASE;;;AACA,YAAI,OAAO,GAAG,QAAQ,GAAG,KAAzB;;AACA,YAAI,OAAO,GAAG,CAAd,EAAiB;AACf,UAAA,OAAO,GAAG,CAAV;AACD,SAFD,MAEO,IAAI,OAAO,GAAG,CAAd,EAAiB;AACtB,UAAA,OAAO,GAAG,CAAV;AACD,SAfH,CAiBE;;;AACA,YAAI,KAAK,GAAG,KAAK,UAAL,KAAoB,KAAK,UAAL,EAAhC,CAlBF,CAoBE;;AACA,eAAO,KAAK,UAAL,KAAoB,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,OAAnB,CAA3B;AACD,OAzfH;;AA4fE;;;;;;;AAOA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EACnB;AACE;AACA,YAAI,KAAK,GAAG,KAAK,cAAjB;;AACA,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,iBAAO,CAAP;AACD,SALH,CAOE;;;AACA,YAAI,KAAK,GAAG,KAAK,UAAL,KAAoB,KAAK,UAAL,EAAhC,CARF,CAUE;;AACA,YAAI,KAAK,IAAI,CAAb,EAAgB;AACd,iBAAO,CAAP;AACD,SAbH,CAeE;;;AACA,YAAI,KAAK,GAAG,KAAK,GAAG,KAAK,UAAL,EAApB,CAhBF,CAkBE;;AACA,YAAI,OAAO,GAAG,KAAK,GAAG,KAAtB;;AACA,YAAI,OAAO,GAAG,CAAd,EAAiB;AACf,UAAA,OAAO,GAAG,CAAV;AACD,SAFD,MAEO,IAAI,OAAO,GAAG,CAAd,EAAiB;AACtB,UAAA,OAAO,GAAG,CAAV;AACD,SAxBH,CA0BE;;;AACA,eAAO,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,OAAnB,CAAP;AACD,OAhiBH;;AAmiBE;;;;;;AAMA,MAAA,mBAAmB,EAAG,+BAAW;AAC/B,aAAK,gBAAL,CAAsB,KAAK,gBAAL,CAAsB,KAAK,QAAL,EAAtB,CAAtB;AACD,OA3iBH;;AA8iBE;;;;;;AAMA,MAAA,gBAAgB,EAAG,0BAAS,QAAT,EACnB;AACE;AACA,YAAI,IAAI,GAAG,KAAK,eAAL,CAAqB,MAArB,CAAX;AACA,YAAI,GAAG,GAAG,KAAK,YAAL,EAAV;AACA,QAAA,GAAG,GAAG,EAAE,CAAC,KAAH,CAAS,OAAT,CAAiB,UAAjB,CAA4B,WAA5B,GAA0C,OAA1C,CAAkD,GAAlD,CAAN;AACA,YAAI,OAAO,GAAG,IAAI,CAAC,iBAAL,EAAd;;AACA,YAAI,KAAK,cAAT,EAAyB;AACvB,cAAI,GAAG,IAAI,GAAG,CAAC,UAAJ,EAAX,EAA6B;AAC3B,YAAA,QAAQ,IAAI,GAAG,CAAC,UAAJ,GAAiB,IAA7B;AACD;;AACD,UAAA,QAAQ,IAAI,KAAK,cAAL,MAAyB,CAArC;AACA,UAAA,OAAO,CAAC,QAAR,CAAiB,MAAjB,EAAyB,QAAQ,GAAC,IAAlC,EAAwC,IAAxC;AACD,SAND,MAMO;AACL,cAAI,GAAG,IAAI,GAAG,CAAC,UAAJ,EAAX,EAA6B;AAC3B,YAAA,QAAQ,IAAI,GAAG,CAAC,UAAJ,GAAiB,GAA7B;AACD;;AACD,UAAA,QAAQ,IAAI,KAAK,aAAL,MAAwB,CAApC;AACA,UAAA,OAAO,CAAC,QAAR,CAAiB,KAAjB,EAAwB,QAAQ,GAAC,IAAjC,EAAuC,IAAvC;AACD;AACF,OAxkBH;;AA2kBE;;;;;AAKA,MAAA,eAAe,EAAG,2BAClB;AACE;AACA,YAAI,UAAU,GAAG,KAAK,aAAL,EAAjB;;AACA,YAAI,UAAU,IAAI,IAAlB,EAAwB;AACtB;AACD,SALH,CAOE;;;AACA,YAAI,KAAK,GAAG,KAAK,YAAL,EAAZ;;AACA,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB;AACD,SAXH,CAaE;;;AACA,YAAI,KAAK,cAAT,EAAyB;AACvB,eAAK,eAAL,CAAqB,MAArB,EAA6B,QAA7B,CAAsC,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,KAAK,CAAC,KAA9B,CAAtC;AACD,SAFD,MAEO;AACL,eAAK,eAAL,CAAqB,MAArB,EAA6B,SAA7B,CAAuC,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,KAAK,CAAC,MAA9B,CAAvC;AACD;AACF,OApmBH;;AA0mBE;;;;;;AAMA;;;;AAIA,MAAA,YAAY,EAAG,sBAAS,QAAT,EAAmB;AAChC,aAAK,OAAL,CAAa,KAAK,UAAL,EAAb,EAAgC,QAAhC;AACD,OAtnBH;;AAynBE;;;;AAIA,MAAA,UAAU,EAAG,oBAAS,QAAT,EAAmB;AAC9B,aAAK,OAAL,CAAa,KAAK,UAAL,EAAb,EAAgC,QAAhC;AACD,OA/nBH;;AAkoBE;;;;AAIA,MAAA,YAAY,EAAG,wBAAW;AACxB,aAAK,OAAL,CAAa,KAAK,aAAL,EAAb;AACD,OAxoBH;;AA2oBE;;;;AAIA,MAAA,SAAS,EAAG,qBAAW;AACrB,aAAK,OAAL,CAAa,CAAC,KAAK,aAAL,EAAd;AACD,OAjpBH;;AAopBE;;;;AAIA,MAAA,gBAAgB,EAAG,0BAAS,QAAT,EAAmB;AACpC,aAAK,OAAL,CAAa,KAAK,WAAL,EAAb,EAAiC,QAAjC;AACD,OA1pBH;;AA6pBE;;;;AAIA,MAAA,aAAa,EAAG,uBAAS,QAAT,EAAmB;AACjC,aAAK,OAAL,CAAa,CAAC,KAAK,WAAL,EAAd,EAAkC,QAAlC;AACD,OAnqBH;;AAsqBE;;;;;;;;AAQA,MAAA,OAAO,EAAG,iBAAS,MAAT,EAAiB,QAAjB,EAA2B;AACnC,aAAK,OAAL,CAAa,KAAK,QAAL,KAAkB,MAA/B,EAAuC,QAAvC;AACD,OAhrBH;;AAmrBE;;;;;;;;;AASA,MAAA,OAAO,EAAG,iBAAS,KAAT,EAAgB,QAAhB,EACV;AACE,aAAK,kBAAL;;AAEA,YAAI,QAAJ,EAAc;AACZ,eAAK,WAAL,CAAiB,KAAjB,EAAwB,QAAxB;AACD,SAFD,MAEO;AACL,eAAK,cAAL,CAAoB,KAApB;AACD;AACF,OArsBH;;AAwsBE;;;;AAIA,MAAA,cAAc,EAAG,wBAAS,KAAT,EAAgB;AAC/B,aAAK,QAAL,CAAc,KAAK,gBAAL,CAAsB,KAAtB,CAAd;AACD,OA9sBH;;AAitBE;;;;AAIA,MAAA,kBAAkB,EAAG,8BAAW;AAC9B,YAAI,KAAK,sBAAT,EAAiC;AAC/B,eAAK,sBAAL,CAA4B,cAA5B;;AACA,eAAK,sBAAL,GAA8B,IAA9B;AACD;AACF,OA1tBH;;AA6tBE;;;;;;AAMA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EAAgB;AACjC;AACA,YAAI,KAAK,GAAG,KAAK,UAAL,EAAZ,EAA+B;AAC7B,UAAA,KAAK,GAAG,KAAK,UAAL,EAAR;AACD,SAFD,MAEO,IAAI,KAAK,GAAG,KAAK,UAAL,EAAZ,EAA+B;AACpC,UAAA,KAAK,GAAG,KAAK,UAAL,EAAR;AACD,SAFM,MAEA;AACL,UAAA,KAAK,GAAG,KAAK,UAAL,KAAoB,IAAI,CAAC,KAAL,CAAW,CAAC,KAAK,GAAG,KAAK,UAAL,EAAT,IAA8B,KAAK,aAAL,EAAzC,IAAiE,KAAK,aAAL,EAA7F;AACD;;AACD,eAAO,KAAP;AACD,OA7uBH;;AAgvBE;;;;;AAKA,MAAA,WAAW,EAAG,qBAAS,EAAT,EAAa,QAAb,EAAuB;AACnC,QAAA,EAAE,GAAG,KAAK,gBAAL,CAAsB,EAAtB,CAAL;AACA,YAAI,IAAI,GAAG,KAAK,QAAL,EAAX;AAEA,aAAK,sBAAL,GAA8B,IAAI,EAAE,CAAC,GAAH,CAAO,cAAX,EAA9B;;AAEA,aAAK,sBAAL,CAA4B,EAA5B,CAA+B,OAA/B,EAAwC,UAAS,UAAT,EAAqB;AAC3D,eAAK,QAAL,CAAc,QAAQ,CAAC,UAAU,GAAC,QAAX,IAAuB,EAAE,GAAG,IAA5B,IAAoC,IAArC,CAAtB;AACD,SAFD,EAEG,IAFH;;AAIA,aAAK,sBAAL,CAA4B,EAA5B,CAA+B,KAA/B,EAAsC,YAAW;AAC/C,eAAK,QAAL,CAAc,EAAd;AACA,eAAK,sBAAL,GAA8B,IAA9B;AACA,eAAK,SAAL,CAAe,mBAAf;AACD,SAJD,EAIG,IAJH;;AAMA,aAAK,sBAAL,CAA4B,aAA5B,CAA0C,QAA1C;AACD,OAtwBH;;AAywBE;;;;;AAMA;AACA,MAAA,iBAAiB,EAAG,2BAAS,KAAT,EAAgB,GAAhB,EACpB;AACE,YAAI,IAAI,GAAG,KAAK,eAAL,CAAqB,MAArB,CAAX,CADF,CAGE;;AACA,aAAK,cAAL,GAAsB,KAAK,KAAK,YAAhC,CAJF,CAME;;AACA,YAAI,KAAK,cAAT,EACA;AACE,eAAK,WAAL,CAAiB,UAAjB;AACA,UAAA,IAAI,CAAC,WAAL,CAAiB,UAAjB;AAEA,eAAK,QAAL,CAAc,YAAd;AACA,UAAA,IAAI,CAAC,QAAL,CAAc,YAAd;AAEA,UAAA,IAAI,CAAC,mBAAL,CAAyB;AAAC,YAAA,GAAG,EAAC,CAAL;AAAQ,YAAA,KAAK,EAAC,IAAd;AAAoB,YAAA,MAAM,EAAC;AAA3B,WAAzB;AACD,SATD,MAWA;AACE,eAAK,WAAL,CAAiB,YAAjB;AACA,UAAA,IAAI,CAAC,WAAL,CAAiB,YAAjB;AAEA,eAAK,QAAL,CAAc,UAAd;AACA,UAAA,IAAI,CAAC,QAAL,CAAc,UAAd;AAEA,UAAA,IAAI,CAAC,mBAAL,CAAyB;AAAC,YAAA,KAAK,EAAC,CAAP;AAAU,YAAA,MAAM,EAAC,IAAjB;AAAuB,YAAA,IAAI,EAAC;AAA5B,WAAzB;AACD,SA1BH,CA4BE;;;AACA,aAAK,mBAAL;AACD,OA/yBH;AAkzBE;AACA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EAAgB,GAAhB,EACnB;AACE,YAAI,KAAK,IAAI,IAAb,EACA;AACE,eAAK,eAAL;AACD,SAHD,MAKA;AACE,cAAI,KAAK,cAAT,EAAyB;AACvB,iBAAK,eAAL,CAAqB,MAArB,EAA6B,UAA7B;AACD,WAFD,MAEO;AACL,iBAAK,eAAL,CAAqB,MAArB,EAA6B,WAA7B;AACD;AACF;AACF,OAj0BH;AAo0BE;AACA,MAAA,WAAW,EAAG,qBAAS,KAAT,EAAgB,GAAhB,EAAqB;AACjC,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,eAAK,mBAAL;;AACA,cAAI,KAAK,UAAT,EAAqB;AACnB,iBAAK,WAAL,GAAmB,CAAC,KAAD,EAAO,GAAP,CAAnB;AACD,WAFD,MAEO;AACL,iBAAK,SAAL,CAAe,aAAf,EAA8B,EAAE,CAAC,KAAH,CAAS,IAAT,CAAc,IAA5C,EAAkD,CAAC,KAAD,EAAO,GAAP,CAAlD;AACD;AACF,SAPD,MAOO;AACL,eAAK,UAAL;AACD;AACF,OAh1BH;;AAm1BE;;;AAGA,MAAA,UAAU,EAAE,sBAAU;AACpB,YAAI,CAAC,KAAK,WAAV,EAAsB;AACpB;AACD;;AACD,YAAI,GAAG,GAAG,KAAK,WAAf;AACA,aAAK,WAAL,GAAmB,IAAnB;AACA,aAAK,SAAL,CAAe,aAAf,EAA8B,EAAE,CAAC,KAAH,CAAS,IAAT,CAAc,IAA5C,EAAkD,GAAlD;AACD,OA71BH;AAg2BE;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB,GAAhB,EAChB;AACE,YAAI,KAAK,QAAL,KAAkB,KAAtB,EAA6B;AAC3B,eAAK,QAAL,CAAc,KAAd;AACD;;AAED,aAAK,mBAAL;AACD,OAx2BH;AA22BE;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB,GAAhB,EAChB;AACE,YAAI,KAAK,QAAL,KAAkB,KAAtB,EAA6B;AAC3B,eAAK,QAAL,CAAc,KAAd;AACD;;AAED,aAAK,mBAAL;AACD;AAn3BH;AAvLD,GADA;AAxDA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,MAAV,CAAiB,aAAjB,GAAiC,aAAjC;;;;;;;;;;;;;;;;;ACAA,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAMA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,gCAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;AAGC;AACA,IAAA,SAAS,EAAG,mBAAS,WAAT,EACZ;AACE,+CAAqB,WAArB,EADF,CAGE;;AACA,WAAK,cAAL,CAAoB,UAApB,EAAgC,KAAK,WAArC;AACA,WAAK,cAAL,CAAoB,MAApB,EAA4B,KAAK,OAAjC;AACD,KAXF;AAcC,IAAA,OAAO,EAAG;AAER;AACA,MAAA,uBAAuB,EAAG,iCAAS,EAAT,EAAa,IAAb,EAC1B;AACE,YAAI,OAAJ;;AAEA,gBAAO,EAAP;AAEE,eAAK,MAAL;AACE,YAAA,OAAO,oFAAwB,EAAxB,CAAP;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,UAApB,EAAgC,UAAS,CAAT,EAAY;AAC1C,cAAA,CAAC,CAAC,eAAF;AACD,aAFD;AAJJ;;AASA,eAAO,OAAO,qFAAyB,EAAzB,CAAd;AACD,OAjBO;AAmBR;AACA,MAAA,WAAW,EAAG,qBAAS,OAAT,EAAkB;AAC9B;AACA,YAAI,IAAI,uEAAR,CAF8B,CAG9B;AACA;AACA;AACA;;AACA,YAAI,KAAK,cAAL,OAA0B,YAA9B,EAA4C;AAC1C,UAAA,IAAI,CAAC,KAAL,GAAa,CAAb;AACD,SAFD,MAEO;AACL,UAAA,IAAI,CAAC,MAAL,GAAc,CAAd;AACD;;AACD,eAAO,IAAP;AACD;AAjCO;AAdX,GADA;AAzBA,EAAA,EAAC,CAAC,EAAF,CAAK,IAAL,CAAU,MAAV,CAAiB,YAAjB,CAA8B,aAA9B,GAA8C,aAA9C",
  "file": "build-output/qxapp/part-boot-bundle-39.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\n/**\n * Checks whether a given font is available on the document and fires events\n * accordingly.\n * \n * This class does not need to be disposed, unless you want to abort the validation\n * early\n */\nqx.Class.define(\"qx.bom.webfonts.Validator\", {\n\n  extend : qx.core.Object,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param fontFamily {String} The name of the font to be verified\n   * @param comparisonString {String?} String to be used to detect whether a font was loaded or not\n   * whether the font has loaded properly\n   */\n  construct : function(fontFamily, comparisonString)\n  {\n    this.base(arguments);\n\n    if (comparisonString) {\n      this.setComparisonString(comparisonString);\n    }\n\n    if (fontFamily) {\n      this.setFontFamily(fontFamily);\n      this.__requestedHelpers = this._getRequestedHelpers();\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * Sets of serif and sans-serif fonts to be used for size comparisons.\n     * At least one of these fonts should be present on any system.\n     */\n    COMPARISON_FONTS : {\n      sans : [\"Arial\", \"Helvetica\", \"sans-serif\"],\n      serif : [\"Times New Roman\", \"Georgia\", \"serif\"]\n    },\n\n\n    /**\n     * Map of common CSS attributes to be used for all  size comparison elements\n     */\n    HELPER_CSS : {\n      position: \"absolute\",\n      margin: \"0\",\n      padding: \"0\",\n      top: \"-1000px\",\n      left: \"-1000px\",\n      fontSize: \"350px\",\n      width: \"auto\",\n      height: \"auto\",\n      lineHeight: \"normal\",\n      fontVariant: \"normal\",\n      visibility: \"hidden\"\n    },\n\n\n    /**\n     * The string to be used in the size comparison elements. This is the default string\n     * which is used for the {@link #COMPARISON_FONTS} and the font to be validated. It\n     * can be overridden for the font to be validated using the {@link #comparisonString}\n     * property.\n     */\n    COMPARISON_STRING : \"WEei\",\n    __defaultSizes : null,\n    __defaultHelpers : null,\n\n\n    /**\n     * Removes the two common helper elements used for all size comparisons from\n     * the DOM\n     */\n    removeDefaultHelperElements : function()\n    {\n      var defaultHelpers = qx.bom.webfonts.Validator.__defaultHelpers;\n      if (defaultHelpers) {\n        for (var prop in defaultHelpers) {\n          document.body.removeChild(defaultHelpers[prop]);\n        }\n      }\n      delete qx.bom.webfonts.Validator.__defaultHelpers;\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * The font-family this validator should check\n     */\n    fontFamily :\n    {\n      nullable : true,\n      init : null,\n      apply : \"_applyFontFamily\"\n    },\n\n    /**\n     * Comparison string used to check whether the font has loaded or not.\n     */\n    comparisonString :\n    {\n      nullable : true,\n      init : null\n    },\n\n    /**\n     * Time in milliseconds from the beginning of the check until it is assumed\n     * that a font is not available\n     */\n    timeout :\n    {\n      check : \"Integer\",\n      init : 5000\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * Fired when the status of a web font has been determined. The event data\n     * is a map with the keys \"family\" (the font-family name) and \"valid\"\n     * (Boolean).\n     */\n    \"changeStatus\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __requestedHelpers : null,\n    __checkTimer : null,\n    __checkStarted : null,\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Validates the font\n     */\n    validate : function()\n    {\n      this.__checkStarted = new Date().getTime();\n\n      if (this.__checkTimer) {\n        this.__checkTimer.restart();\n      }\n      else {\n        this.__checkTimer = new qx.event.Timer(100);\n        this.__checkTimer.addListener(\"interval\", this.__onTimerInterval, this);\n        // Give the browser a chance to render the new elements\n        qx.event.Timer.once(function() {\n          this.__checkTimer.start();\n        }, this, 0);\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Removes the helper elements from the DOM\n     */\n    _reset : function()\n    {\n      if (this.__requestedHelpers) {\n        for (var prop in this.__requestedHelpers) {\n          var elem = this.__requestedHelpers[prop];\n          document.body.removeChild(elem);\n        }\n        this.__requestedHelpers = null;\n      }\n    },\n\n\n    /**\n     * Checks if the font is available by comparing the widths of the elements\n     * using the generic fonts to the widths of the elements using the font to\n     * be validated\n     *\n     * @return {Boolean} Whether or not the font caused the elements to differ\n     * in size\n     */\n    _isFontValid : function()\n    {\n      if (!qx.bom.webfonts.Validator.__defaultSizes) {\n        this.__init();\n      }\n\n      if (!this.__requestedHelpers) {\n        this.__requestedHelpers = this._getRequestedHelpers();\n      }\n\n      // force rerendering for chrome\n      this.__requestedHelpers.sans.style.visibility = \"visible\";\n      this.__requestedHelpers.sans.style.visibility = \"hidden\";\n      this.__requestedHelpers.serif.style.visibility = \"visible\";\n      this.__requestedHelpers.serif.style.visibility = \"hidden\";\n\n      var requestedSans = qx.bom.element.Dimension.getWidth(this.__requestedHelpers.sans);\n      var requestedSerif = qx.bom.element.Dimension.getWidth(this.__requestedHelpers.serif);\n\n      var cls = qx.bom.webfonts.Validator;\n      if (requestedSans !== cls.__defaultSizes.sans ||\n          requestedSerif !== cls.__defaultSizes.serif)\n      {\n        return true;\n      }\n      return false;\n    },\n\n\n    /**\n     * Creates the two helper elements styled with the font to be checked\n     *\n     * @return {Map} A map with the keys <pre>sans</pre> and <pre>serif</pre>\n     * and the created span elements as values\n     */\n    _getRequestedHelpers : function()\n    {\n      var fontsSans = [this.getFontFamily()].concat(qx.bom.webfonts.Validator.COMPARISON_FONTS.sans);\n      var fontsSerif = [this.getFontFamily()].concat(qx.bom.webfonts.Validator.COMPARISON_FONTS.serif);\n      return {\n        sans : this._getHelperElement(fontsSans, this.getComparisonString()),\n        serif : this._getHelperElement(fontsSerif, this.getComparisonString())\n      };\n    },\n\n\n    /**\n     * Creates a span element with the comparison text (either {@link #COMPARISON_STRING} or\n     * {@link #comparisonString}) and styled with the default CSS ({@link #HELPER_CSS}) plus\n     * the given font-family value and appends it to the DOM\n     *\n     * @param fontFamily {String} font-family string\n     * @param comparisonString {String?} String to be used to detect whether a font was loaded or not\n     * @return {Element} the created DOM element\n     */\n    _getHelperElement : function(fontFamily, comparisonString)\n    {\n      var styleMap = qx.lang.Object.clone(qx.bom.webfonts.Validator.HELPER_CSS);\n      if (fontFamily) {\n        if (styleMap.fontFamily) {\n          styleMap.fontFamily += \",\" + fontFamily.join(\",\");\n        }\n        else {\n          styleMap.fontFamily = fontFamily.join(\",\");\n        }\n      }\n\n      var elem = document.createElement(\"span\");\n      elem.innerHTML = comparisonString || qx.bom.webfonts.Validator.COMPARISON_STRING;\n      qx.bom.element.Style.setStyles(elem, styleMap);\n      document.body.appendChild(elem);\n      return elem;\n    },\n\n\n    // property apply\n    _applyFontFamily : function(value, old)\n    {\n      if (value !== old) {\n        this._reset();\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Creates the default helper elements and gets their widths\n     */\n    __init : function()\n    {\n      var cls = qx.bom.webfonts.Validator;\n      if (!cls.__defaultHelpers) {\n        cls.__defaultHelpers = {\n          sans : this._getHelperElement(cls.COMPARISON_FONTS.sans),\n          serif : this._getHelperElement(cls.COMPARISON_FONTS.serif)\n        };\n      }\n\n      cls.__defaultSizes = {\n        sans : qx.bom.element.Dimension.getWidth(cls.__defaultHelpers.sans),\n        serif: qx.bom.element.Dimension.getWidth(cls.__defaultHelpers.serif)\n      };\n    },\n\n\n    /**\n     * Triggers helper element size comparison and fires a ({@link #changeStatus})\n     * event with the result.\n     */\n    __onTimerInterval : function()\n    {\n      if (this._isFontValid()) {\n        this.__checkTimer.stop();\n        this._reset();\n        this.fireDataEvent(\"changeStatus\", {\n          family : this.getFontFamily(),\n          valid : true\n        });\n      }\n      else\n      {\n        var now = new Date().getTime();\n        if (now - this.__checkStarted >= this.getTimeout()) {\n          this.__checkTimer.stop();\n          this._reset();\n          this.fireDataEvent(\"changeStatus\", {\n            family : this.getFontFamily(),\n            valid : false\n          });\n        }\n      }\n    }\n\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this._reset();\n    this.__checkTimer.stop();\n    this.__checkTimer.removeListener(\"interval\", this.__onTimerInterval, this);\n    this._disposeObjects(\"__checkTimer\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\n/**\n * This class is internal because it's tailored to {@link qx.io.rest.Resource}\n * which needs more functionality than {@link qx.bom.request.Xhr} provides.\n * The usage of {@link qx.io.request.Xhr} isn't possible either due to it's qx.Class nature.\n *\n * For alternatives to this class have a look at:\n *\n * * \"qx.bom.request.Xhr\" (low level, cross-browser XHR abstraction compatible with spec)\n * * \"qx.io.request.Xhr\" (high level XHR abstraction)\n *\n * A wrapper of {@link qx.bom.request.Xhr} which offers:\n *\n * * set/get HTTP method, URL, request data and headers\n * * retrieve the parsed response as object (content-type recognition)\n * * more fine-grained events such as success, fail, ...\n * * supports hash code for request identification\n *\n * It does *not* comply the interface defined by {@link qx.bom.request.IRequest}.\n *\n * <div class=\"desktop\">\n * Example:\n *\n * <pre class=\"javascript\">\n *  var req = new qx.bom.request.SimpleXhr(\"/some/path/file.json\");\n *  req.setRequestData({\"a\":\"b\"});\n *  req.once(\"success\", function successHandler() {\n *    var response = req.getResponse();\n *  }, this);\n *  req.once(\"fail\", function successHandler() {\n *    var response = req.getResponse();\n *  }, this);\n *  req.send();\n * </pre>\n * </div>\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.request.SimpleXhr\",\n{\n\n  extend: qx.event.Emitter,\n  implement: [ qx.core.IDisposable ],\n\n  /**\n   * @param url {String?} The URL of the resource to request.\n   * @param method {String?\"GET\"} The HTTP method.\n   */\n  construct: function(url, method) {\n    if (url !== undefined) {\n      this.setUrl(url);\n    }\n\n    this.useCaching(true);\n    this.setMethod((method !== undefined) ? method : \"GET\");\n    this._transport = this._registerTransportListener(this._createTransport());\n\n    qx.core.ObjectRegistry.register(this);\n\n    this.__requestHeaders = {};\n    this.__parser = this._createResponseParser();\n  },\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets a request header.\n     *\n     * @param key {String} Key of the header.\n     * @param value {String} Value of the header.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setRequestHeader: function(key, value) {\n      this.__requestHeaders[key] = value;\n      return this;\n    },\n\n    /**\n     * Gets a request header.\n     *\n     * @param key {String} Key of the header.\n     * @return {String} The value of the header.\n     */\n    getRequestHeader: function(key) {\n      return this.__requestHeaders[key];\n    },\n\n\n    /**\n     * Returns a single response header\n     *\n     * @param header {String} Name of the header to get.\n     * @return {String} Response header\n     */\n    getResponseHeader: function(header) {\n      return this._transport.getResponseHeader(header);\n    },\n\n\n    /**\n     * Returns all response headers\n     * @return {String} String of response headers\n     */\n    getAllResponseHeaders: function() {\n      return this._transport.getAllResponseHeaders();\n    },\n\n    /**\n     * Sets the URL.\n     *\n     * @param url {String} URL to be requested.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setUrl: function(url) {\n      if (qx.lang.Type.isString(url)) {\n        this.__url = url;\n      }\n      return this;\n    },\n\n    /**\n     * Gets the URL.\n     *\n     * @return {String} URL to be requested.\n     */\n    getUrl: function() {\n      return this.__url;\n    },\n\n    /**\n     * Sets the HTTP-Method.\n     *\n     * @param method {String} The method.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setMethod: function(method) {\n      if (qx.util.Request.isMethod(method)) {\n        this.__method = method;\n      }\n      return this;\n    },\n\n    /**\n     * Gets the HTTP-Method.\n     *\n     * @return {String} The method.\n     */\n    getMethod: function() {\n      return this.__method;\n    },\n\n    /**\n     * Sets the request data to be send as part of the request.\n     *\n     * The request data is transparently included as URL query parameters or embedded in the\n     * request body as form data.\n     *\n     * @param data {String|Object} The request data.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setRequestData: function(data) {\n      if (qx.lang.Type.isString(data) || qx.lang.Type.isObject(data) ||\n         [\"ArrayBuffer\", \"Blob\", \"FormData\"].indexOf(qx.lang.Type.getClass(data)) !== -1) {\n        this.__requestData = data;\n      }\n      return this;\n    },\n\n    /**\n     * Gets the request data.\n     *\n     * @return {String} The request data.\n     */\n    getRequestData: function() {\n      return this.__requestData;\n    },\n\n    /**\n     * Gets parsed response.\n     *\n     * If problems occurred an empty string (\"\") is more likely to be returned (instead of null).\n     *\n     * @return {String|null} The parsed response of the request.\n     */\n    getResponse: function() {\n      if (this.__response !== null) {\n        return this.__response;\n      } else {\n        return (this._transport.responseXML !== null) ? this._transport.responseXML : this._transport.responseText;\n      }\n\n      return null;\n    },\n\n    /**\n     * Gets low-level transport.\n     *\n     * Note: To be used with caution!\n     *\n     * This method can be used to query the transport directly,\n     * but should be used with caution. Especially, it\n     * is not advisable to call any destructive methods\n     * such as <code>open</code> or <code>send</code>.\n     *\n     * @return {Object} An instance of a class found in\n     *  <code>qx.bom.request.*</code>\n     */\n     // This method mainly exists so that some methods found in the\n     // low-level transport can be deliberately omitted here,\n     // but still be accessed should it be absolutely necessary.\n     //\n     // Valid use cases include to query the transport’s responseXML\n     // property if performance is critical and any extra parsing\n     // should be avoided at all costs.\n     //\n    getTransport: function() {\n      return this._transport;\n    },\n\n    /**\n     * Sets (i.e. override) the parser for the response parsing.\n     *\n     * @see qx.util.ResponseParser#setParser\n     *\n     * @param parser {String|Function}\n     * @return {Function} The parser function\n     */\n    setParser: function(parser) {\n      return this.__parser.setParser(parser);\n    },\n\n    /**\n     * Sets the timout limit in milliseconds.\n     *\n     * @param millis {Number} limit in milliseconds.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setTimeout: function(millis) {\n      if (qx.lang.Type.isNumber(millis)) {\n        this.__timeout = millis;\n      }\n      return this;\n    },\n\n    /**\n     * The current timeout in milliseconds.\n     *\n     * @return {Number} The current timeout in milliseconds.\n     */\n    getTimeout: function() {\n      return this.__timeout;\n    },\n\n    /**\n     * Whether to allow request to be answered from cache.\n     *\n     * Allowed values:\n     *\n     * * <code>true</code>: Allow caching (Default)\n     * * <code>false</code>: Prohibit caching. Appends 'nocache' parameter to URL.\n     *\n     * Consider setting a Cache-Control header instead. A request’s Cache-Control\n     * header may contain a number of directives controlling the behavior of\n     * any caches in between client and origin server and allows therefore a more\n     * fine grained control over caching. If such a header is provided, the setting\n     * of setCache() will be ignored.\n     *\n     * * <code>\"no-cache\"</code>: Force caches to submit request in order to\n     * validate the freshness of the representation. Note that the requested\n     * resource may still be served from cache if the representation is\n     * considered fresh. Use this directive to ensure freshness but save\n     * bandwidth when possible.\n     * * <code>\"no-store\"</code>: Do not keep a copy of the representation under\n     * any conditions.\n     *\n     * See <a href=\"http://www.mnot.net/cache_docs/#CACHE-CONTROL\">\n     * Caching tutorial</a> for an excellent introduction to Caching in general.\n     * Refer to the corresponding section in the\n     * <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">\n     * HTTP 1.1 specification</a> for more details and advanced directives.\n     *\n     * It is recommended to choose an appropriate Cache-Control directive rather\n     * than prohibit caching using the nocache parameter.\n     *\n     * @param value {Boolean}\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    useCaching: function(value) {\n      if (qx.lang.Type.isBoolean(value)) {\n        this.__cache = value;\n      }\n      return this;\n    },\n\n    /**\n     * Whether requests are cached.\n     *\n     * @return {Boolean} Whether requests are cached.\n     */\n    isCaching: function() {\n      return this.__cache;\n    },\n\n    /**\n     * Whether request completed (is done).\n\n     * @return {Boolean} Whether request is completed.\n     */\n    isDone: function() {\n      return (this._transport.readyState === qx.bom.request.Xhr.DONE);\n    },\n\n    /**\n     * Returns unique hash code of object.\n     *\n     * @return {Integer} unique hash code of the object\n     */\n    toHashCode : function() {\n      return this.$$hash;\n    },\n\n    /**\n     * Returns true if the object is disposed.\n     *\n     * @return {Boolean} Whether the object has been disposed\n     */\n    isDisposed: function() {\n      return !!this.__disposed;\n    },\n\n    /**\n     * Sends request.\n     *\n     * Relies on set before:\n     * * a HTTP method\n     * * an URL\n     * * optional request headers\n     * * optional request data\n     */\n    send: function() {\n      var curTimeout = this.getTimeout(),\n          hasRequestData = (this.getRequestData() !== null),\n          hasCacheControlHeader = this.__requestHeaders.hasOwnProperty(\"Cache-Control\"),\n          isBodyForMethodAllowed = qx.util.Request.methodAllowsRequestBody(this.getMethod()),\n          curContentType = this.getRequestHeader(\"Content-Type\"),\n          serializedData = this._serializeData(this.getRequestData(), curContentType);\n\n      // add GET params if needed\n      if (this.getMethod() === \"GET\" && hasRequestData) {\n        this.setUrl(qx.util.Uri.appendParamsToUrl(this.getUrl(), serializedData));\n      }\n\n      // cache prevention\n      if (this.isCaching() === false && !hasCacheControlHeader) {\n        // Make sure URL cannot be served from cache and new request is made\n        this.setUrl(qx.util.Uri.appendParamsToUrl(this.getUrl(), {nocache: new Date().valueOf()}));\n      }\n\n      // set timeout\n      if (curTimeout) {\n        this._transport.timeout = curTimeout;\n      }\n\n      // initialize request\n      this._transport.open(this.getMethod(), this.getUrl(), true);\n\n      // set all previously stored headers on initialized request\n      for (var key in this.__requestHeaders) {\n        this._transport.setRequestHeader(key, this.__requestHeaders[key]);\n      }\n\n      // send\n      if (!isBodyForMethodAllowed) {\n        // GET & HEAD\n        this._transport.send();\n      } else {\n        // POST & PUT ...\n        if (typeof curContentType === \"undefined\" && [\"ArrayBuffer\", \"Blob\", \"FormData\"].indexOf(qx.Bootstrap.getClass(serializedData)) === -1) {\n          // by default, set content-type urlencoded for requests with body\n          this._transport.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        }\n\n        this._transport.send(serializedData);\n      }\n    },\n\n    /**\n     * Aborts request.\n     *\n     * Cancels any network activity.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    abort: function() {\n      this._transport.abort();\n      return this;\n    },\n\n    /**\n     * Disposes object and wrapped transport.\n     * @return {Boolean} <code>true</code> if the object was successfully disposed\n     */\n    dispose: function() {\n      if (this._transport.dispose()) {\n        this.__parser = null;\n        this.__disposed = true;\n        return true;\n      }\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Holds transport.\n     */\n    _transport: null,\n\n    /**\n     * Creates XHR transport.\n     *\n     * May be overridden to change type of resource.\n     * @return {qx.bom.request.IRequest} Transport.\n     */\n    _createTransport: function() {\n      return new qx.bom.request.Xhr();\n    },\n\n    /**\n     * Registers common listeners on given transport.\n     *\n     * @param transport {qx.bom.request.IRequest} Transport.\n     * @return {qx.bom.request.IRequest} Transport.\n     */\n    _registerTransportListener: function(transport) {\n      transport.onreadystatechange = qx.lang.Function.bind(this._onReadyStateChange, this);\n      transport.onloadend = qx.lang.Function.bind(this._onLoadEnd, this);\n      transport.ontimeout = qx.lang.Function.bind(this._onTimeout, this);\n      transport.onerror = qx.lang.Function.bind(this._onError, this);\n      transport.onabort = qx.lang.Function.bind(this._onAbort, this);\n      transport.onprogress = qx.lang.Function.bind(this._onProgress, this);\n      return transport;\n    },\n\n    /**\n     * Creates response parser.\n     *\n     * @return {qx.util.ResponseParser} parser.\n     */\n    _createResponseParser: function() {\n        return new qx.util.ResponseParser();\n    },\n\n    /**\n     * Sets the response.\n     *\n     * @param response {String} The parsed response of the request.\n     */\n    _setResponse: function(response) {\n      this.__response = response;\n    },\n\n    /**\n     * Serializes data.\n     *\n     * @param data {String|Map} Data to serialize.\n     * @param contentType {String?} Content-Type which influences the serialization.\n     * @return {String|null} Serialized data.\n     */\n    _serializeData: function(data, contentType) {\n      var isPost = this.getMethod() === \"POST\",\n          isJson = (/application\\/.*\\+?json/).test(contentType);\n\n      if (!data) {\n        return null;\n      }\n\n      if (qx.lang.Type.isString(data)) {\n        return data;\n      }\n\n      if (isJson && (qx.lang.Type.isObject(data) || qx.lang.Type.isArray(data))) {\n        return qx.lang.Json.stringify(data);\n      }\n\n      if (qx.lang.Type.isObject(data)) {\n        return qx.util.Uri.toParameter(data, isPost);\n      }\n\n      if ([\"ArrayBuffer\", \"Blob\", \"FormData\"].indexOf(qx.Bootstrap.getClass(data)) !== -1) {\n        return data;\n      }\n\n      return null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * {Array} Request headers.\n     */\n    __requestHeaders: null,\n    /**\n     * {Object} Request data (i.e. body).\n     */\n    __requestData: null,\n    /**\n     * {String} HTTP method to use for request.\n     */\n    __method: \"\",\n    /**\n     * {String} Requested URL.\n     */\n    __url: \"\",\n    /**\n     * {Object} Response data.\n     */\n    __response: null,\n    /**\n     * {Function} Parser.\n     */\n    __parser: null,\n    /**\n     * {Boolean} Whether caching will be enabled.\n     */\n    __cache: null,\n    /**\n     * {Number} The current timeout in milliseconds.\n     */\n    __timeout: null,\n    /**\n     * {Boolean} Whether object has been disposed.\n     */\n    __disposed: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds an event listener for the given event name which is executed only once.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function to execute when the event is fired\n     * @param ctx {var?} The context of the listener.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    addListenerOnce: function(name, listener, ctx) {\n      this.once(name, listener, ctx);\n      return this;\n    },\n\n    /**\n     * Adds an event listener for the given event name.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function to execute when the event is fired\n     * @param ctx {var?} The context of the listener.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    addListener: function(name, listener, ctx) {\n      this._transport._emitter.on(name, listener, ctx);\n      return this;\n    },\n\n    /**\n     * Handles \"readyStateChange\" event.\n     */\n    _onReadyStateChange: function() {\n      if (qx.core.Environment.get(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(\"Fire readyState: \" + this._transport.readyState);\n      }\n\n      if (this.isDone()) {\n        this.__onReadyStateDone();\n      }\n    },\n\n    /**\n     * Called internally when readyState is DONE.\n     */\n    __onReadyStateDone: function() {\n      if (qx.core.Environment.get(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(\"Request completed with HTTP status: \" + this._transport.status);\n      }\n\n      var response = this._transport.responseText;\n      var contentType = this._transport.getResponseHeader(\"Content-Type\");\n\n      // Successful HTTP status\n      if (qx.util.Request.isSuccessful(this._transport.status)) {\n\n        // Parse response\n        if (qx.core.Environment.get(\"qx.debug.io\")) {\n          qx.Bootstrap.debug(\"Response is of type: '\" + contentType + \"'\");\n        }\n\n        this._setResponse(this.__parser.parse(response, contentType));\n\n        this.emit(\"success\");\n\n      // Erroneous HTTP status\n      } else {\n\n        try {\n          this._setResponse(this.__parser.parse(response, contentType));\n        } catch (e) {\n          // ignore if it does not work\n        }\n\n        // A remote error failure\n        if (this._transport.status !== 0) {\n          this.emit(\"fail\");\n        }\n      }\n    },\n\n    /**\n     * Handles \"loadEnd\" event.\n     */\n    _onLoadEnd: function() {\n      this.emit(\"loadEnd\");\n    },\n\n    /**\n     * Handles \"abort\" event.\n     */\n    _onAbort: function() {\n      this.emit(\"abort\");\n    },\n\n    /**\n     * Handles \"timeout\" event.\n     */\n    _onTimeout: function() {\n      this.emit(\"timeout\");\n\n      // A network error failure\n      this.emit(\"fail\");\n    },\n\n    /**\n     * Handles \"error\" event.\n     */\n    _onError: function() {\n      this.emit(\"error\");\n\n      // A network error failure\n      this.emit(\"fail\");\n    },\n\n    /**\n     * Handles \"error\" event.\n     */\n    _onProgress: function() {\n      this.emit(\"progress\");\n    }\n\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * jQuery\n     http://jquery.com\n     Version 1.3.1\n\n     Copyright:\n       2009 John Resig\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n************************************************************************ */\n\n/**\n * Cross browser abstractions to work with input elements.\n */\nqx.Bootstrap.define(\"qx.bom.Input\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Map} Internal data structures with all supported input types */\n    __types :\n    {\n      text : 1,\n      textarea : 1,\n      select : 1,\n      checkbox : 1,\n      radio : 1,\n      password : 1,\n      hidden : 1,\n      submit : 1,\n      image : 1,\n      file : 1,\n      search : 1,\n      reset : 1,\n      button : 1\n    },\n\n\n    /**\n     * Creates an DOM input/textarea/select element.\n     *\n     * Attributes may be given directly with this call. This is critical\n     * for some attributes e.g. name, type, ... in many clients.\n     *\n     * Note: <code>select</code> and <code>textarea</code> elements are created\n     * using the identically named <code>type</code>.\n     *\n     * @param type {String} Any valid type for HTML, <code>select</code>\n     *   and <code>textarea</code>\n     * @param attributes {Map} Map of attributes to apply\n     * @param win {Window} Window to create the element for\n     * @return {Element} The created input node\n     */\n    create : function(type, attributes, win)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertKeyInMap(type, this.__types, \"Unsupported input type.\");\n      }\n\n      // Work on a copy to not modify given attributes map\n      var attributes = attributes ? qx.lang.Object.clone(attributes) : {};\n\n      var tag;\n\n      if (type === \"textarea\" || type === \"select\")\n      {\n        tag = type;\n      }\n      else\n      {\n        tag = \"input\";\n        attributes.type = type;\n      }\n\n      return qx.dom.Element.create(tag, attributes, win);\n    },\n\n\n    /**\n     * Applies the given value to the element.\n     *\n     * Normally the value is given as a string/number value and applied\n     * to the field content (textfield, textarea) or used to\n     * detect whether the field is checked (checkbox, radiobutton).\n     *\n     * Supports array values for selectboxes (multiple-selection)\n     * and checkboxes or radiobuttons (for convenience).\n     *\n     * Please note: To modify the value attribute of a checkbox or\n     * radiobutton use {@link qx.bom.element.Attribute#set} instead.\n     *\n     * @param element {Element} element to update\n     * @param value {String|Number|Array} the value to apply\n     */\n    setValue : function(element, value)\n    {\n      var tag = element.nodeName.toLowerCase();\n      var type = element.type;\n      var Type = qx.lang.Type;\n\n      if (typeof value === \"number\") {\n        value += \"\";\n      }\n\n      if ((type === \"checkbox\" || type === \"radio\"))\n      {\n        if (Type.isArray(value)) {\n          element.checked = value.includes(element.value);\n        } else {\n          element.checked = element.value == value;\n        }\n      }\n      else if (tag === \"select\")\n      {\n        var isArray = Type.isArray(value);\n        var options = element.options;\n        var subel, subval;\n\n        for (var i=0, l=options.length; i<l; i++)\n        {\n          subel = options[i];\n          subval = subel.getAttribute(\"value\");\n          if (subval == null) {\n            subval = subel.text;\n          }\n\n          subel.selected = isArray ?\n            value.includes(subval) : value == subval;\n        }\n\n        if (isArray && value.length == 0) {\n          element.selectedIndex = -1;\n        }\n      }\n      else if ((type === \"text\" || type === \"textarea\") &&\n        (qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n      {\n        // These flags are required to detect self-made property-change\n        // events during value modification. They are used by the Input\n        // event handler to filter events.\n        element.$$inValueSet = true;\n        element.value = value;\n        element.$$inValueSet = null;\n      } else {\n        element.value = value;\n      }\n    },\n\n\n    /**\n     * Returns the currently configured value.\n     *\n     * Works with simple input fields as well as with\n     * select boxes or option elements.\n     *\n     * Returns an array in cases of multi-selection in\n     * select boxes but in all other cases a string.\n     *\n     * @param element {Element} DOM element to query\n     * @return {String|Array} The value of the given element\n     */\n    getValue : function(element)\n    {\n      var tag = element.nodeName.toLowerCase();\n\n      if (tag === \"option\") {\n        return (element.attributes.value || {}).specified ? element.value : element.text;\n      }\n\n      if (tag === \"select\")\n      {\n        var index = element.selectedIndex;\n\n        // Nothing was selected\n        if (index < 0) {\n          return null;\n        }\n\n        var values = [];\n        var options = element.options;\n        var one = element.type == \"select-one\";\n        var clazz = qx.bom.Input;\n        var value;\n\n        // Loop through all the selected options\n        for (var i=one ? index : 0, max=one ? index+1 : options.length; i<max; i++)\n        {\n          var option = options[i];\n\n          if (option.selected)\n          {\n            // Get the specific value for the option\n            value = clazz.getValue(option);\n\n            // We don't need an array for one selects\n            if (one) {\n              return value;\n            }\n\n            // Multi-Selects return an array\n            values.push(value);\n          }\n        }\n\n        return values;\n      }\n      else\n      {\n        return (element.value || \"\").replace(/\\r/g, \"\");\n      }\n    },\n\n\n    /**\n     * Sets the text wrap behaviour of a text area element.\n     * This property uses the attribute \"wrap\" respectively\n     * the style property \"whiteSpace\"\n     *\n     * @signature function(element, wrap)\n     * @param element {Element} DOM element to modify\n     * @param wrap {Boolean} Whether to turn text wrap on or off.\n     */\n    setWrap : qx.core.Environment.select(\"engine.name\",\n    {\n      \"mshtml\" : function(element, wrap) {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n\n        // Explicitly set overflow-y CSS property to auto when wrapped,\n        // allowing the vertical scroll-bar to appear if necessary\n        var styleValue = wrap ? \"auto\" : \"\";\n\n        element.wrap = wrapValue;\n        element.style.overflowY = styleValue;\n      },\n\n      \"gecko\" : function(element, wrap)\n      {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n        var styleValue = wrap ? \"\" : \"auto\";\n\n        element.setAttribute(\"wrap\", wrapValue);\n        element.style.overflow = styleValue;\n      },\n\n      \"webkit\" : function(element, wrap)\n      {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n        var styleValue = wrap ? \"\" : \"auto\";\n\n        element.setAttribute(\"wrap\", wrapValue);\n        element.style.overflow = styleValue;\n      },\n\n      \"default\" : function(element, wrap) {\n        element.style.whiteSpace = wrap ? \"normal\" : \"nowrap\";\n      }\n    })\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A menubar button\n */\nqx.Class.define(\"qx.ui.menubar.Button\",\n{\n  extend : qx.ui.form.MenuButton,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function(label, icon, menu)\n  {\n    this.base(arguments, label, icon, menu);\n\n    this.removeListener(\"keydown\", this._onKeyDown);\n    this.removeListener(\"keyup\", this._onKeyUp);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    appearance :\n    {\n      refine : true,\n      init : \"menubar-button\"\n    },\n\n    show :\n    {\n      refine : true,\n      init : \"inherit\"\n    },\n\n    focusable :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Inspects the parent chain to find the MenuBar\n     *\n     * @return {qx.ui.menubar.MenuBar} MenuBar instance or <code>null</code>.\n     */\n    getMenuBar : function()\n    {\n      var parent = this;\n      while (parent)\n      {\n        /* this method is also used by toolbar.MenuButton, so we need to check\n           for a ToolBar instance. */\n        if (parent instanceof qx.ui.toolbar.ToolBar) {\n          return parent;\n        }\n\n        parent = parent.getLayoutParent();\n      }\n\n      return null;\n    },\n\n\n    // overridden\n    open : function(selectFirst) {\n      this.base(arguments, selectFirst);\n\n      var menubar = this.getMenuBar();\n      if (menubar) {\n        menubar._setAllowMenuOpenHover(true);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener for visibility property changes of the attached menu\n     *\n     * @param e {qx.event.type.Data} Property change event\n     */\n    _onMenuChange : function(e)\n    {\n      var menu = this.getMenu();\n      var menubar = this.getMenuBar();\n\n      if (menu.isVisible())\n      {\n        this.addState(\"pressed\");\n\n        // Sync with open menu property\n        if (menubar) {\n          menubar.setOpenMenu(menu);\n        }\n      }\n      else\n      {\n        this.removeState(\"pressed\");\n\n        // Sync with open menu property\n        if (menubar && menubar.getOpenMenu() == menu) {\n          menubar.resetOpenMenu();\n          menubar._setAllowMenuOpenHover(false);\n        }\n      }\n    },\n\n    // overridden\n    _onPointerUp : function(e)\n    {\n      this.base(arguments, e);\n\n      // Set state 'pressed' to visualize that the menu is open.\n      var menu = this.getMenu();\n      if (menu && menu.isVisible() && !this.hasState(\"pressed\")) {\n        this.addState(\"pressed\");\n      }\n    },\n\n    /**\n     * Event listener for pointerover event\n     *\n     * @param e {qx.event.type.Pointer} pointerover event object\n     */\n    _onPointerOver : function(e)\n    {\n      // Add hovered state\n      this.addState(\"hovered\");\n\n      // Open submenu\n      if (this.getMenu() && e.getPointerType() == \"mouse\")\n      {\n        var menubar = this.getMenuBar();\n\n        if (menubar && menubar._isAllowMenuOpenHover())\n        {\n          // Hide all open menus\n          qx.ui.menu.Manager.getInstance().hideAll();\n\n          // Set it again, because hideAll remove it.\n          menubar._setAllowMenuOpenHover(true);\n\n          // Then show the attached menu\n          if (this.isEnabled()) {\n            this.open();\n          }\n        }\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The HoverButton is an {@link qx.ui.basic.Atom}, which fires repeatedly\n * execute events while the pointer is over the widget.\n *\n * The rate at which the execute event is fired accelerates is the pointer keeps\n * inside of the widget. The initial delay and the interval time can be set using\n * the properties {@link #firstInterval} and {@link #interval}. The\n * {@link #execute} events will be fired in a shorter amount of time if the pointer\n * remains over the widget, until the min {@link #minTimer} is reached.\n * The {@link #timerDecrease} property sets the amount of milliseconds which will\n * decreased after every firing.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var button = new qx.ui.form.HoverButton(\"Hello World\");\n *\n *   button.addListener(\"execute\", function(e) {\n *     alert(\"Button is hovered\");\n *   }, this);\n *\n *   this.getRoot.add(button);\n * </pre>\n *\n * This example creates a button with the label \"Hello World\" and attaches an\n * event listener to the {@link #execute} event.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/hoverbutton.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.form.HoverButton\",\n{\n  extend : qx.ui.basic.Atom,\n  include : [qx.ui.core.MExecutable],\n  implement : [qx.ui.form.IExecutable],\n\n  /**\n   * @param label {String} Label to use\n   * @param icon {String?null} Icon to use\n   */\n  construct : function(label, icon)\n  {\n    this.base(arguments, label, icon);\n\n    this.addListener(\"pointerover\", this._onPointerOver, this);\n    this.addListener(\"pointerout\", this._onPointerOut, this);\n\n    this.__timer = new qx.event.AcceleratingTimer();\n    this.__timer.addListener(\"interval\", this._onInterval, this);\n  },\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"hover-button\"\n    },\n\n    /**\n     * Interval used after the first run of the timer. Usually a smaller value\n     * than the \"firstInterval\" property value to get a faster reaction.\n     */\n    interval :\n    {\n      check : \"Integer\",\n      init  : 80\n    },\n\n    /**\n     * Interval used for the first run of the timer. Usually a greater value\n     * than the \"interval\" property value to a little delayed reaction at the first\n     * time.\n     */\n    firstInterval :\n    {\n      check : \"Integer\",\n      init  : 200\n    },\n\n    /** This configures the minimum value for the timer interval. */\n    minTimer :\n    {\n      check : \"Integer\",\n      init  : 20\n    },\n\n    /** Decrease of the timer on each interval (for the next interval) until minTimer reached. */\n    timerDecrease :\n    {\n      check : \"Integer\",\n      init  : 2\n    }\n  },\n\n\n  members :\n  {\n    __timer : null,\n\n\n    /**\n     * Start timer on pointer over\n     *\n     * @param e {qx.event.type.Pointer} The pointer event\n     */\n    _onPointerOver : function(e)\n    {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      this.__timer.set({\n        interval: this.getInterval(),\n        firstInterval: this.getFirstInterval(),\n        minimum: this.getMinTimer(),\n        decrease: this.getTimerDecrease()\n      }).start();\n\n      this.addState(\"hovered\");\n    },\n\n\n    /**\n     * Stop timer on pointer out\n     *\n     * @param e {qx.event.type.Pointer} The pointer event\n     */\n    _onPointerOut : function(e)\n    {\n      this.__timer.stop();\n      this.removeState(\"hovered\");\n\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n    },\n\n\n    /**\n     * Fire execute event on timer interval event\n     */\n    _onInterval : function()\n    {\n      if (this.isEnabled())\n      {\n        this.execute();\n      } else {\n        this.__timer.stop();\n      }\n    }\n  },\n\n\n  destruct : function() {\n    this._disposeObjects(\"__timer\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Group boxes are used to group a set of form elements.\n *\n * @childControl frame {qx.ui.container.Composite} frame for the content widgets\n * @childControl legend {qx.ui.basic.Atom} legend to show at top of the groupbox\n */\nqx.Class.define(\"qx.ui.groupbox.GroupBox\",\n{\n  extend : qx.ui.core.Widget,\n  include : [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MRemoteLayoutHandling,\n    qx.ui.core.MContentPadding,\n    qx.ui.form.MForm\n  ],\n  implement : [qx.ui.form.IForm],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param legend {String?\"\"} The group boxes legend\n   * @param icon {String?\"\"} The icon of the legend\n   */\n  construct : function(legend, icon)\n  {\n    this.base(arguments);\n\n    this._setLayout(new qx.ui.layout.Canvas);\n\n    // Sub widgets\n    this._createChildControl(\"frame\");\n    this._createChildControl(\"legend\");\n\n    // Processing parameters\n    if (legend != null) {\n      this.setLegend(legend);\n    }\n\n    if (icon != null) {\n      this.setIcon(icon);\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init   : \"groupbox\"\n    },\n\n    /**\n     * Label of the legend sub widget. Set if the given string is\n     * valid. Otherwise the legend sub widget is not being displayed.\n     */\n    legend:\n    {\n      check: \"String\",\n      apply: \"_applyLegend\",\n      event: \"changeLegend\",\n      nullable: true\n    },\n\n    /**\n     * Property for setting the position of the legend.\n     */\n    legendPosition :\n    {\n      check     : [\"top\", \"middle\"],\n      init      : \"middle\",\n      apply     : \"_applyLegendPosition\",\n      themeable : true\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      invalid : true\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"frame\":\n          control = new qx.ui.container.Composite();\n          this._add(control, {left: 0, top: 6, right: 0, bottom: 0});\n          break;\n\n        case \"legend\":\n          control = new qx.ui.basic.Atom();\n          control.addListener(\"resize\", this._repositionFrame, this);\n          this._add(control, {left: 0, right: 0});\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget : function() {\n      return this.getChildControl(\"frame\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LEGEND HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyLegend : function(value, old)\n    {\n      var control = this.getChildControl(\"legend\");\n\n      if (value !== null)\n      {\n        control.setLabel(value);\n        control.show();\n      }\n      else\n      {\n        control.exclude();\n      }\n    },\n\n\n    /**\n     * Apply method for applying the legend position. It calls the\n     * {@link #_repositionFrame} method.\n     */\n    _applyLegendPosition: function(e)\n    {\n      if (this.getChildControl(\"legend\").getBounds()) {\n        this._repositionFrame();\n      }\n    },\n\n\n    /**\n     * Repositions the frame of the group box dependent on the\n     * {@link #legendPosition} property.\n     */\n    _repositionFrame: function()\n    {\n      var legend = this.getChildControl(\"legend\");\n      var frame = this.getChildControl(\"frame\");\n\n      // get the current height of the legend\n      var height = legend.getBounds().height;\n\n      // check for the property legend position\n      if (this.getLegendPosition() == \"middle\") {\n        frame.setLayoutProperties({\"top\": Math.round(height / 2)});\n      } else if (this.getLegendPosition() == \"top\") {\n        frame.setLayoutProperties({\"top\": height});\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      GETTER FOR SUB WIDGETS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * The children container needed by the {@link qx.ui.core.MRemoteChildrenHandling}\n     * mixin\n     *\n     * @return {qx.ui.container.Composite} pane sub widget\n     */\n    getChildrenContainer : function() {\n      return this.getChildControl(\"frame\");\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SETTER/GETTER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the icon of the legend sub widget.\n     *\n     * @param icon {String} source of the new icon of the legend sub widget\n     */\n    setIcon : function(icon) {\n      this.getChildControl(\"legend\").setIcon(icon);\n    },\n\n\n    /**\n     * Accessor method for the icon of the legend sub widget\n     *\n     * @return {String} source of the new icon of the legend sub widget\n     */\n    getIcon : function() {\n      return this.getChildControl(\"legend\").getIcon();\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * This interface defines the necessary features a form renderer should have.\n * Keep in mind that all renderes has to be widgets.\n */\nqx.Interface.define(\"qx.ui.form.renderer.IFormRenderer\",\n{\n  members :\n  {\n    /**\n     * Add a group of form items with the corresponding names. The names should\n     * be displayed as hint for the user what to do with the form item.\n     * The title is optional and can be used as grouping for the given form\n     * items.\n     *\n     * @param items {qx.ui.core.Widget[]} An array of form items to render.\n     * @param names {String[]} An array of names for the form items.\n     * @param title {String?} A title of the group you are adding.\n     * @param itemsOptions {Array?null} The added additional data.\n     * @param headerOptions {Map?null} The options map as defined by the form\n     *   for the current group header.\n     */\n    addItems : function(items, names, title, itemsOptions, headerOptions) {},\n\n\n    /**\n     * Adds a button the form renderer.\n     *\n     * @param button {qx.ui.form.Button} A button which should be added to\n     *   the form.\n     * @param options {Map?null} The added additional data.\n     */\n    addButton : function(button, options) {}\n\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Abstract renderer for {@link qx.ui.form.Form}. This abstract renderer should\n * be the superclass of all form renderer. It takes the form, which is\n * supplied as constructor parameter and configures itself. So if you need to\n * set some additional information on your renderer before adding the widgets,\n * be sure to do that before calling this.base(arguments, form).\n */\nqx.Class.define(\"qx.ui.form.renderer.AbstractRenderer\",\n{\n  type : \"abstract\",\n  extend : qx.ui.core.Widget,\n  implement : qx.ui.form.renderer.IFormRenderer,\n\n  /**\n   * @param form {qx.ui.form.Form} The form to render.\n   */\n  construct : function(form)\n  {\n    this.base(arguments);\n\n    this._labels = [];\n\n    // translation support\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\", this._onChangeLocale, this\n      );\n      this._names = [];\n    }\n    this._form = form;\n    this._render();\n\n    form.addListener(\"change\", this._onFormChange, this);\n  },\n\n  properties :\n  {\n    /**\n     * A string that is appended to the label if it is not empty.\n     * Defaults to \" :\"\n     */\n    labelSuffix :\n    {\n      check : \"String\",\n      init : \" :\",\n      event : \"changeLabelSuffix\",\n      nullable : true\n    },\n\n    /**\n     * A string that is appended to the label and the label suffix if the corresponding\n     * form field is mandatory. Defaults to space plus a red asterisk.\n     */\n    requiredSuffix :\n    {\n      check : \"String\",\n      init : \" <span style='color:red'>*</span> \",\n      event : \"changeRequiredSuffix\",\n      nullable : false\n    }\n  },\n\n\n  members :\n  {\n    _names : null,\n    _form : null,\n    _labels : null,\n\n\n    /**\n     * Renders the form: adds the items and buttons.\n     */\n    _render : function() {\n      // add the groups\n      var groups = this._form.getGroups();\n      for (var i = 0; i < groups.length; i++) {\n        var group = groups[i];\n        this.addItems(\n          group.items, group.labels, group.title, group.options, group.headerOptions\n        );\n      }\n\n      // add the buttons\n      var buttons = this._form.getButtons();\n      var buttonOptions = this._form.getButtonOptions();\n      for (var i = 0; i < buttons.length; i++) {\n        this.addButton(buttons[i], buttonOptions[i]);\n      }\n    },\n\n\n    /**\n     * Handler responsible for updating the rendered widget as soon as the\n     * form changes.\n     */\n    _onFormChange : function() {\n      this._removeAll();\n      // remove all created labels\n      for (var i=0; i < this._labels.length; i++) {\n        this._labels[i].dispose();\n      }\n      this._labels = [];\n\n      this._render();\n    },\n\n\n    /**\n     * Helper to bind the item's visibility to the label's visibility.\n     * @param item {qx.ui.core.Widget} The form element.\n     * @param label {qx.ui.basic.Label} The label for the form element.\n     */\n    _connectVisibility : function(item, label) {\n      // map the items visibility to the label\n      item.bind(\"visibility\", label, \"visibility\");\n    },\n\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale : qx.core.Environment.select(\"qx.dynlocale\",\n    {\n      \"true\" : function(e) {\n        for (var i = 0; i < this._names.length; i++) {\n          var entry = this._names[i];\n          if (entry.name && entry.name.translate) {\n            entry.name = entry.name.translate();\n          }\n          var newText = this._createLabelText(entry.name, entry.item);\n          entry.label.setValue(newText);\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    /**\n     * Creates the label text for the given form item.\n     *\n     * @param name {String} The content of the label without the\n     *   trailing * and :\n     * @param item {qx.ui.form.IForm} The item, which has the required state.\n     * @return {String} The text for the given item.\n     */\n    _createLabelText : function(name, item)\n    {\n      var requiredSuffix = \"\";\n      if (item.getRequired()) {\n        requiredSuffix = this.getRequiredSuffix();\n      }\n\n      // Create the label. Append a suffix only if there's text to display.\n      var labelSuffix = name.length > 0 || item.getRequired() ? this.getLabelSuffix() : \"\";\n      return name + requiredSuffix + labelSuffix;\n    },\n\n\n    // interface implementation\n    addItems : function(items, names, title) {\n      throw new Error(\"Abstract method call\");\n    },\n\n\n    // interface implementation\n    addButton : function(button) {\n      throw new Error(\"Abstract method call\");\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n    this._names = null;\n\n    this._form.removeListener(\"change\", this._onFormChange, this);\n    this._form = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Single column renderer for {@link qx.ui.form.Form}.\n */\nqx.Class.define(\"qx.ui.form.renderer.Single\",\n{\n  extend : qx.ui.form.renderer.AbstractRenderer,\n\n\n  construct : function(form)\n  {\n    var layout = new qx.ui.layout.Grid();\n    layout.setSpacing(6);\n    layout.setColumnFlex(1, 1);\n    layout.setColumnAlign(0, \"right\", \"top\");\n    this._setLayout(layout);\n\n    this.base(arguments, form);\n  },\n\n\n  members :\n  {\n    _row : 0,\n    _buttonRow : null,\n\n\n    // overridden\n    _onFormChange : function() {\n      if (this._buttonRow) {\n        this._buttonRow.destroy();\n        this._buttonRow = null;\n      }\n      this._row = 0;\n      this.base(arguments);\n    },\n\n\n    /**\n     * Add a group of form items with the corresponding names. The names are\n     * displayed as label.\n     * The title is optional and is used as grouping for the given form\n     * items.\n     *\n     * @param items {qx.ui.core.Widget[]} An array of form items to render.\n     * @param names {String[]} An array of names for the form items.\n     * @param title {String?} A title of the group you are adding.\n     */\n    addItems : function(items, names, title) {\n      // add the header\n      if (title != null) {\n        this._add(\n          this._createHeader(title), {row: this._row, column: 0, colSpan: 2}\n        );\n        this._row++;\n      }\n\n      // add the items\n      for (var i = 0; i < items.length; i++) {\n        var label = this._createLabel(names[i], items[i]);\n        this._add(label, {row: this._row, column: 0});\n        var item = items[i];\n        label.setBuddy(item);\n        this._add(item, {row: this._row, column: 1});\n        this._row++;\n\n        this._connectVisibility(item, label);\n\n        // store the names for translation\n        if (qx.core.Environment.get(\"qx.dynlocale\")) {\n          this._names.push({name: names[i], label: label, item: items[i]});\n        }\n      }\n    },\n\n\n    /**\n     * Adds a button the form renderer. All buttons will be added in a\n     * single row at the bottom of the form.\n     *\n     * @param button {qx.ui.form.Button} The button to add.\n     */\n    addButton : function(button) {\n      if (this._buttonRow == null) {\n        // create button row\n        this._buttonRow = new qx.ui.container.Composite();\n        this._buttonRow.setMarginTop(5);\n        var hbox = new qx.ui.layout.HBox();\n        hbox.setAlignX(\"right\");\n        hbox.setSpacing(5);\n        this._buttonRow.setLayout(hbox);\n        // add the button row\n        this._add(this._buttonRow, {row: this._row, column: 0, colSpan: 2});\n        // increase the row\n        this._row++;\n      }\n\n      // add the button\n      this._buttonRow.add(button);\n    },\n\n\n    /**\n     * Returns the set layout for configuration.\n     *\n     * @return {qx.ui.layout.Grid} The grid layout of the widget.\n     */\n    getLayout : function() {\n      return this._getLayout();\n    },\n\n\n    /**\n     * Creates a label for the given form item.\n     *\n     * @param name {String} The content of the label without the\n     *   trailing * and :\n     * @param item {qx.ui.core.Widget} The item, which has the required state.\n     * @return {qx.ui.basic.Label} The label for the given item.\n     */\n    _createLabel : function(name, item) {\n      var label = new qx.ui.basic.Label(this._createLabelText(name, item));\n      // store labels for disposal\n      this._labels.push(label);\n      label.setRich(true);\n      label.setAppearance(\"form-renderer-label\");\n      return label;\n    },\n\n\n    /**\n     * Creates a header label for the form groups.\n     *\n     * @param title {String} Creates a header label.\n     * @return {qx.ui.basic.Label} The header for the form groups.\n     */\n    _createHeader : function(title) {\n      var header = new qx.ui.basic.Label(title);\n      // store labels for disposal\n      this._labels.push(header);\n      header.setFont(\"bold\");\n      if (this._row != 0) {\n        header.setMarginTop(10);\n      }\n      header.setAlignX(\"left\");\n      return header;\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n  destruct : function()\n  {\n    // first, remove all buttons from the button row because they\n    // should not be disposed\n    if (this._buttonRow) {\n      this._buttonRow.removeAll();\n      this._disposeObjects(\"_buttonRow\");\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n\n/**\n * <h2>Object Controller</h2>\n *\n * *General idea*\n *\n * The idea of the object controller is to make the binding of one model object\n * containing one or more properties as easy as possible. Therefore the\n * controller can take a model as property. Every property in that model can be\n * bound to one or more target properties. The binding will be for\n * atomic types only like Numbers, Strings, ...\n *\n * *Features*\n *\n * * Manages the bindings between the model properties and the different targets\n * * No need for the user to take care of the binding ids\n * * Can create an bidirectional binding (read- / write-binding)\n * * Handles the change of the model which means adding the old targets\n *\n * *Usage*\n *\n * The controller only can work if a model is set. If the model property is\n * null, the controller is not working. But it can be null on any time.\n *\n * *Cross reference*\n *\n * * If you want to bind a list like widget, use {@link qx.data.controller.List}\n * * If you want to bind a tree widget, use {@link qx.data.controller.Tree}\n * * If you want to bind a form widget, use {@link qx.data.controller.Form}\n */\nqx.Class.define(\"qx.data.controller.Object\",\n{\n  extend : qx.core.Object,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param model {qx.core.Object?null} The model for the model property.\n   */\n  construct : function(model)\n  {\n    this.base(arguments);\n\n    // create a map for all created binding ids\n    this.__bindings = {};\n    // create an array to store all current targets\n    this.__targets = [];\n\n    if (model != null) {\n      this.setModel(model);\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The model object which does have the properties for the binding. */\n    model :\n    {\n      check: \"qx.core.Object\",\n      event: \"changeModel\",\n      apply: \"_applyModel\",\n      nullable: true,\n      dereference: true\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // private members\n    __targets : null,\n    __bindings : null,\n\n    /**\n     * Apply-method which will be called if a new model has been set.\n     * All bindings will be moved to the new model.\n     *\n     * @param value {qx.core.Object|null} The new model.\n     * @param old {qx.core.Object|null} The old model.\n     */\n    _applyModel: function(value, old) {\n      // for every target\n      for (var i = 0; i < this.__targets.length; i++) {\n        // get the properties\n        var targetObject = this.__targets[i][0];\n        var targetProperty = this.__targets[i][1];\n        var sourceProperty = this.__targets[i][2];\n        var bidirectional = this.__targets[i][3];\n        var options = this.__targets[i][4];\n        var reverseOptions = this.__targets[i][5];\n\n        // remove it from the old if possible\n        if (old != undefined && !old.isDisposed()) {\n          this.__removeTargetFrom(targetObject, targetProperty, sourceProperty, old);\n        }\n\n        // add it to the new if available\n        if (value != undefined) {\n          this.__addTarget(\n            targetObject, targetProperty, sourceProperty, bidirectional,\n            options, reverseOptions\n          );\n        } else {\n          // in shutdown situations, it may be that something is already\n          // disposed [BUG #4343]\n          if (targetObject.isDisposed() || qx.core.ObjectRegistry.inShutDown) {\n            continue;\n          }\n          // if the model is null, reset the current target\n          if (targetProperty.indexOf(\"[\") == -1) {\n            targetObject[\"reset\" + qx.lang.String.firstUp(targetProperty)]();\n          } else {\n            var open = targetProperty.indexOf(\"[\");\n            var index = parseInt(\n              targetProperty.substring(open + 1, targetProperty.length - 1), 10\n            );\n            targetProperty = targetProperty.substring(0, open);\n            var targetArray = targetObject[\"get\" + qx.lang.String.firstUp(targetProperty)]();\n            if (index == \"last\") {\n              index = targetArray.length;\n            }\n            if (targetArray) {\n              targetArray.setItem(index, null);\n            }\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Adds a new target to the controller. After adding the target, the given\n     * property of the model will be bound to the targets property.\n     *\n     * @param targetObject {qx.core.Object} The object on which the property\n     *   should be bound.\n     *\n     * @param targetProperty {String} The property to which the binding should\n     *   go.\n     *\n     * @param sourceProperty {String} The name of the property in the model.\n     *\n     * @param bidirectional {Boolean?false} Signals if the binding should also work\n     *   in the reverse direction, from the target to source.\n     *\n     * @param options {Map?null} The options Map used by the binding from source\n     *   to target. The possible options can be found in the\n     *   {@link qx.data.SingleValueBinding} class.\n     *\n     * @param reverseOptions {Map?null} The options used by the binding in the\n     *   reverse direction. The possible options can be found in the\n     *   {@link qx.data.SingleValueBinding} class.\n     */\n    addTarget: function(\n      targetObject, targetProperty, sourceProperty,\n      bidirectional, options, reverseOptions\n    ) {\n\n      // store the added target\n      this.__targets.push([\n        targetObject, targetProperty, sourceProperty,\n        bidirectional, options, reverseOptions\n      ]);\n\n      // delegate the adding\n      this.__addTarget(\n        targetObject, targetProperty, sourceProperty,\n        bidirectional, options, reverseOptions\n      );\n    },\n\n\n    /**\n    * Does the work for {@link #addTarget} but without saving the target\n    * to the internal target registry.\n    *\n    * @param targetObject {qx.core.Object} The object on which the property\n    *   should be bound.\n    *\n    * @param targetProperty {String} The property to which the binding should\n    *   go.\n    *\n    * @param sourceProperty {String} The name of the property in the model.\n    *\n    * @param bidirectional {Boolean?false} Signals if the binding should also work\n    *   in the reverse direction, from the target to source.\n    *\n    * @param options {Map?null} The options Map used by the binding from source\n    *   to target. The possible options can be found in the\n    *   {@link qx.data.SingleValueBinding} class.\n    *\n    * @param reverseOptions {Map?null} The options used by the binding in the\n    *   reverse direction. The possible options can be found in the\n    *   {@link qx.data.SingleValueBinding} class.\n    */\n    __addTarget: function(\n      targetObject, targetProperty, sourceProperty,\n      bidirectional, options, reverseOptions\n    ) {\n\n      // do nothing if no model is set\n      if (this.getModel() == null) {\n        return;\n      }\n\n      // create the binding\n      var id = this.getModel().bind(\n        sourceProperty, targetObject, targetProperty, options\n      );\n      // create the reverse binding if necessary\n      var idReverse = null;\n      if (bidirectional) {\n        idReverse = targetObject.bind(\n          targetProperty, this.getModel(), sourceProperty, reverseOptions\n        );\n      }\n\n      // save the binding\n      var targetHash = targetObject.toHashCode();\n      if (this.__bindings[targetHash] == undefined) {\n        this.__bindings[targetHash] = [];\n      }\n      this.__bindings[targetHash].push(\n        [id, idReverse, targetProperty, sourceProperty, options, reverseOptions]\n      );\n    },\n\n    /**\n     * Removes the target identified by the three properties.\n     *\n     * @param targetObject {qx.core.Object} The target object on which the\n     *   binding exist.\n     *\n     * @param targetProperty {String} The targets property name used by the\n     *   adding of the target.\n     *\n     * @param sourceProperty {String} The name of the property of the model.\n     */\n    removeTarget: function(targetObject, targetProperty, sourceProperty) {\n      this.__removeTargetFrom(\n        targetObject, targetProperty, sourceProperty, this.getModel()\n      );\n\n      // delete the target in the targets reference\n      for (var i = 0; i < this.__targets.length; i++) {\n        if (\n          this.__targets[i][0] == targetObject\n          && this.__targets[i][1] == targetProperty\n          && this.__targets[i][2] == sourceProperty\n        ) {\n          this.__targets.splice(i, 1);\n        }\n      }\n    },\n\n\n    /**\n     * Does the work for {@link #removeTarget} but without removing the target\n     * from the internal registry.\n     *\n     * @param targetObject {qx.core.Object} The target object on which the\n     *   binding exist.\n     *\n     * @param targetProperty {String} The targets property name used by the\n     *   adding of the target.\n     *\n     * @param sourceProperty {String} The name of the property of the model.\n     *\n     * @param sourceObject {String} The source object from which the binding\n     *   comes.\n     */\n    __removeTargetFrom: function(\n      targetObject, targetProperty, sourceProperty, sourceObject\n    ) {\n      // check for not fitting targetObjects\n      if (!(targetObject instanceof qx.core.Object)) {\n        // just do nothing\n        return;\n      }\n\n      var currentListing = this.__bindings[targetObject.toHashCode()];\n      // if no binding is stored\n      if (currentListing == undefined || currentListing.length == 0) {\n        return;\n      }\n\n      // go threw all listings for the object\n      for (var i = 0; i < currentListing.length; i++) {\n        // if it is the listing\n        if (\n          currentListing[i][2] == targetProperty &&\n          currentListing[i][3] == sourceProperty\n        ) {\n          // remove the binding\n          var id = currentListing[i][0];\n          sourceObject.removeBinding(id);\n          // check for the reverse binding\n          if (currentListing[i][1] != null) {\n            targetObject.removeBinding(currentListing[i][1]);\n          }\n          // delete the entry and return\n          currentListing.splice(i, 1);\n          return;\n        }\n      }\n    }\n  },\n\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct : function() {\n    // set the model to null to get the bindings removed\n    if (this.getModel() != null && !this.getModel().isDisposed()) {\n      this.setModel(null);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Timer, which accelerates after each interval. The initial delay and the\n * interval time can be set using the properties {@link #firstInterval}\n * and {@link #interval}. The {@link #interval} events will be fired with\n * decreasing interval times while the timer is running, until the {@link #minimum}\n * is reached. The {@link #decrease} property sets the amount of milliseconds\n * which will decreased after every firing.\n *\n * This class is e.g. used in the {@link qx.ui.form.RepeatButton} and\n * {@link qx.ui.form.HoverButton} widgets.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.AcceleratingTimer\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.core.IDisposable ],\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__timer = new qx.event.Timer(this.getInterval());\n    this.__timer.addListener(\"interval\", this._onInterval, this);\n  },\n\n\n  events :\n  {\n    /** This event if fired each time the interval time has elapsed */\n    \"interval\" : \"qx.event.type.Event\"\n  },\n\n\n  properties :\n  {\n    /**\n     * Interval used after the first run of the timer. Usually a smaller value\n     * than the \"firstInterval\" property value to get a faster reaction.\n     */\n    interval :\n    {\n      check : \"Integer\",\n      init  : 100\n    },\n\n    /**\n     * Interval used for the first run of the timer. Usually a greater value\n     * than the \"interval\" property value to a little delayed reaction at the first\n     * time.\n     */\n    firstInterval :\n    {\n      check : \"Integer\",\n      init  : 500\n    },\n\n    /** This configures the minimum value for the timer interval. */\n    minimum :\n    {\n      check : \"Integer\",\n      init  : 20\n    },\n\n    /** Decrease of the timer on each interval (for the next interval) until minTimer reached. */\n    decrease :\n    {\n      check : \"Integer\",\n      init  : 2\n    }\n  },\n\n\n  members :\n  {\n    __timer : null,\n    __currentInterval : null,\n\n    /**\n     * Reset and start the timer.\n     */\n    start : function()\n    {\n      this.__timer.setInterval(this.getFirstInterval());\n      this.__timer.start();\n    },\n\n\n    /**\n     * Stop the timer\n     */\n    stop : function()\n    {\n      this.__timer.stop();\n      this.__currentInterval = null;\n    },\n\n\n    /**\n     * Interval event handler\n     */\n    _onInterval : function()\n    {\n      this.__timer.stop();\n\n      if (this.__currentInterval == null) {\n        this.__currentInterval = this.getInterval();\n      }\n\n      this.__currentInterval = Math.max(\n        this.getMinimum(),\n        this.__currentInterval - this.getDecrease()\n      );\n\n      this.__timer.setInterval(this.__currentInterval);\n      this.__timer.start();\n\n      this.fireEvent(\"interval\");\n    }\n  },\n\n\n  destruct : function() {\n    this._disposeObjects(\"__timer\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Form interface for all form widgets which use a numeric value as their\n * primary data type like a spinner.\n */\nqx.Interface.define(\"qx.ui.form.INumberForm\",\n{\n  extend : qx.ui.form.IField,\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the value was modified */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      VALUE PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the element's value.\n     *\n     * @param value {Number|null} The new value of the element.\n     */\n    setValue : function(value) {\n      return arguments.length == 1;\n    },\n\n\n    /**\n     * Resets the element's value to its initial value.\n     */\n    resetValue : function() {},\n\n\n    /**\n     * The element's user set value.\n     *\n     * @return {Number|null} The value.\n     */\n    getValue : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Form interface for all widgets which deal with ranges. The spinner is a good\n * example for a range using widget.\n */\nqx.Interface.define(\"qx.ui.form.IRange\",\n{\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      MINIMUM PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set the minimum value of the range.\n     *\n     * @param min {Number} The minimum.\n     */\n    setMinimum : function(min) {\n      return arguments.length == 1;\n    },\n\n\n    /**\n     * Return the current set minimum of the range.\n     *\n     * @return {Number} The current set minimum.\n     */\n    getMinimum : function() {},\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MAXIMUM PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set the maximum value of the range.\n     *\n     * @param max {Number} The maximum.\n     */\n    setMaximum : function(max) {\n      return arguments.length == 1;\n    },\n\n\n    /**\n     * Return the current set maximum of the range.\n     *\n     * @return {Number} The current set maximum.\n     */\n    getMaximum : function() {},\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SINGLESTEP PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the value for single steps in the range.\n     *\n     * @param step {Number} The value of the step.\n     */\n    setSingleStep : function(step) {\n      return arguments.length == 1;\n    },\n\n\n    /**\n     * Returns the value which will be stepped in a single step in the range.\n     *\n     * @return {Number} The current value for single steps.\n     */\n    getSingleStep : function() {},\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PAGESTEP PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the value for page steps in the range.\n     *\n     * @param step {Number} The value of the step.\n     */\n    setPageStep : function(step) {\n      return arguments.length == 1;\n    },\n\n\n    /**\n     * Returns the value which will be stepped in a page step in the range.\n     *\n     * @return {Number} The current value for page steps.\n     */\n    getPageStep : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The Slider widget provides a vertical or horizontal slider.\n *\n * The Slider is the classic widget for controlling a bounded value.\n * It lets the user move a slider handle along a horizontal or vertical\n * groove and translates the handle's position into an integer value\n * within the defined range.\n *\n * The Slider has very few of its own functions.\n * The most useful functions are slideTo() to set the slider directly to some\n * value; setSingleStep(), setPageStep() to set the steps; and setMinimum()\n * and setMaximum() to define the range of the slider.\n *\n * A slider accepts focus on Tab and provides both a mouse wheel and\n * a keyboard interface. The keyboard interface is the following:\n *\n * * Left/Right move a horizontal slider by one single step.\n * * Up/Down move a vertical slider by one single step.\n * * PageUp moves up one page.\n * * PageDown moves down one page.\n * * Home moves to the start (minimum).\n * * End moves to the end (maximum).\n *\n * Here are the main properties of the class:\n *\n * # <code>value</code>: The bounded integer that {@link qx.ui.form.INumberForm}\n * maintains.\n * # <code>minimum</code>: The lowest possible value.\n * # <code>maximum</code>: The highest possible value.\n * # <code>singleStep</code>: The smaller of two natural steps that an abstract\n * sliders provides and typically corresponds to the user pressing an arrow key.\n * # <code>pageStep</code>: The larger of two natural steps that an abstract\n * slider provides and typically corresponds to the user pressing PageUp or\n * PageDown.\n *\n * @childControl knob {qx.ui.core.Widget} knob to set the value of the slider\n */\nqx.Class.define(\"qx.ui.form.Slider\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [\n    qx.ui.form.IForm,\n    qx.ui.form.INumberForm,\n    qx.ui.form.IRange\n  ],\n  include : [qx.ui.form.MForm],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param orientation {String?\"horizontal\"} Configure the\n   * {@link #orientation} property\n   */\n  construct : function(orientation)\n  {\n    this.base(arguments);\n\n    // Force canvas layout\n    this._setLayout(new qx.ui.layout.Canvas());\n\n    // Add listeners\n    this.addListener(\"keypress\", this._onKeyPress);\n    this.addListener(\"roll\", this._onRoll);\n    this.addListener(\"pointerdown\", this._onPointerDown);\n    this.addListener(\"pointerup\", this._onPointerUp);\n    this.addListener(\"losecapture\", this._onPointerUp);\n    this.addListener(\"resize\", this._onUpdate);\n\n    // Stop events\n    this.addListener(\"contextmenu\", this._onStopEvent);\n    this.addListener(\"tap\", this._onStopEvent);\n    this.addListener(\"dbltap\", this._onStopEvent);\n\n    // Initialize orientation\n    if (orientation != null) {\n      this.setOrientation(orientation);\n    } else {\n      this.initOrientation();\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events : {\n    /**\n     * Change event for the value.\n     */\n    changeValue: 'qx.event.type.Data',\n\n    /** Fired as soon as the slide animation ended. */\n    slideAnimationEnd: 'qx.event.type.Event'\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"slider\"\n    },\n\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    /** Whether the slider is horizontal or vertical. */\n    orientation :\n    {\n      check : [ \"horizontal\", \"vertical\" ],\n      init : \"horizontal\",\n      apply : \"_applyOrientation\"\n    },\n\n\n    /**\n     * The current slider value.\n     *\n     * Strictly validates according to {@link #minimum} and {@link #maximum}.\n     * Do not apply any value correction to the incoming value. If you depend\n     * on this, please use {@link #slideTo} instead.\n     */\n    value :\n    {\n      check : \"typeof value==='number'&&value>=this.getMinimum()&&value<=this.getMaximum()\",\n      init : 0,\n      apply : \"_applyValue\",\n      nullable: true\n    },\n\n\n    /**\n     * The minimum slider value (may be negative). This value must be smaller\n     * than {@link #maximum}.\n     */\n    minimum :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyMinimum\",\n      event: \"changeMinimum\"\n    },\n\n\n    /**\n     * The maximum slider value (may be negative). This value must be larger\n     * than {@link #minimum}.\n     */\n    maximum :\n    {\n      check : \"Integer\",\n      init : 100,\n      apply : \"_applyMaximum\",\n      event : \"changeMaximum\"\n    },\n\n\n    /**\n     * The amount to increment on each event. Typically corresponds\n     * to the user pressing an arrow key.\n     */\n    singleStep :\n    {\n      check : \"Integer\",\n      init : 1\n    },\n\n\n    /**\n     * The amount to increment on each event. Typically corresponds\n     * to the user pressing <code>PageUp</code> or <code>PageDown</code>.\n     */\n    pageStep :\n    {\n      check : \"Integer\",\n      init : 10\n    },\n\n\n    /**\n     * Factor to apply to the width/height of the knob in relation\n     * to the dimension of the underlying area.\n     */\n    knobFactor :\n    {\n      check : \"Number\",\n      apply : \"_applyKnobFactor\",\n      nullable : true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __sliderLocation : null,\n    __knobLocation : null,\n    __knobSize : null,\n    __dragMode : null,\n    __dragOffset : null,\n    __trackingMode : null,\n    __trackingDirection : null,\n    __trackingEnd : null,\n    __timer : null,\n\n    // event delay stuff during drag\n    __dragTimer: null,\n    __lastValueEvent: null,\n    __dragValue: null,\n\n    __scrollAnimationframe : null,\n\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      invalid : true\n    },\n\n\n    // overridden\n    renderLayout : function(left, top, width, height) {\n      this.base(arguments, left, top, width, height);\n      // make sure the layout engine does not override the knob position\n      this._updateKnobPosition();\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"knob\":\n          control = new qx.ui.core.Widget();\n\n          control.addListener(\"resize\", this._onUpdate, this);\n          control.addListener(\"pointerover\", this._onPointerOver);\n          control.addListener(\"pointerout\", this._onPointerOut);\n          this._add(control);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for pointerover events at the knob child control.\n     *\n     * Adds the 'hovered' state\n     *\n     * @param e {qx.event.type.Pointer} Incoming pointer event\n     */\n    _onPointerOver : function(e) {\n      this.addState(\"hovered\");\n    },\n\n\n    /**\n     * Event handler for pointerout events at the knob child control.\n     *\n     * Removes the 'hovered' state\n     *\n     * @param e {qx.event.type.Pointer} Incoming pointer event\n     */\n    _onPointerOut : function(e) {\n      this.removeState(\"hovered\");\n    },\n\n\n    /**\n     * Listener of roll event\n     *\n     * @param e {qx.event.type.Roll} Incoming event object\n     */\n    _onRoll : function(e)\n    {\n      // only wheel\n      if (e.getPointerType() != \"wheel\") {\n        return;\n      }\n\n      var axis = this.getOrientation() === \"horizontal\" ? \"x\" : \"y\";\n      var delta = e.getDelta()[axis];\n\n      var direction =  delta > 0 ? 1 : delta < 0 ? -1 : 0;\n      this.slideBy(direction * this.getSingleStep());\n\n      e.stop();\n    },\n\n\n    /**\n     * Event handler for keypress events.\n     *\n     * Adds support for arrow keys, page up, page down, home and end keys.\n     *\n     * @param e {qx.event.type.KeySequence} Incoming keypress event\n     */\n    _onKeyPress : function(e)\n    {\n      var isHorizontal = this.getOrientation() === \"horizontal\";\n      var backward = isHorizontal ? \"Left\" : \"Up\";\n      var forward = isHorizontal ? \"Right\" : \"Down\";\n\n      switch(e.getKeyIdentifier())\n      {\n        case forward:\n          this.slideForward();\n          break;\n\n        case backward:\n          this.slideBack();\n          break;\n\n        case \"PageDown\":\n          this.slidePageForward(100);\n          break;\n\n        case \"PageUp\":\n          this.slidePageBack(100);\n          break;\n\n        case \"Home\":\n          this.slideToBegin(200);\n          break;\n\n        case \"End\":\n          this.slideToEnd(200);\n          break;\n\n        default:\n          return;\n      }\n\n      // Stop processed events\n      e.stop();\n    },\n\n\n    /**\n     * Listener of pointerdown event. Initializes drag or tracking mode.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onPointerDown : function(e)\n    {\n      // this can happen if the user releases the button while dragging outside\n      // of the browser viewport\n      if (this.__dragMode) {\n        return;\n      }\n\n      var isHorizontal = this.__isHorizontal;\n      var knob = this.getChildControl(\"knob\");\n\n      var locationProperty = isHorizontal ? \"left\" : \"top\";\n\n      var cursorLocation = isHorizontal ? e.getDocumentLeft() : e.getDocumentTop();\n\n      var decorator = this.getDecorator();\n      decorator = qx.theme.manager.Decoration.getInstance().resolve(decorator);\n      if (isHorizontal) {\n        var decoratorPadding = decorator ? decorator.getInsets().left : 0;\n        var padding = (this.getPaddingLeft() || 0) + decoratorPadding;\n      } else {\n        var decoratorPadding = decorator ? decorator.getInsets().top : 0;\n        var padding = (this.getPaddingTop() || 0) + decoratorPadding;\n      }\n\n      var sliderLocation = this.__sliderLocation = qx.bom.element.Location.get(this.getContentElement().getDomElement())[locationProperty];\n      sliderLocation += padding;\n\n      var knobLocation = this.__knobLocation = qx.bom.element.Location.get(knob.getContentElement().getDomElement())[locationProperty];\n\n      if (e.getTarget() === knob)\n      {\n        // Switch into drag mode\n        this.__dragMode = true;\n        if (!this.__dragTimer){\n          // create a timer to fire delayed dragging events if dragging stops.\n          this.__dragTimer = new qx.event.Timer(100);\n          this.__dragTimer.addListener(\"interval\", this._fireValue, this);\n        }\n        this.__dragTimer.start();\n        // Compute dragOffset (includes both: inner position of the widget and\n        // cursor position on knob)\n        this.__dragOffset = cursorLocation + sliderLocation - knobLocation;\n\n        // add state\n        knob.addState(\"pressed\");\n      }\n      else\n      {\n        // Switch into tracking mode\n        this.__trackingMode = true;\n\n        // Detect tracking direction\n        this.__trackingDirection = cursorLocation <= knobLocation ? -1 : 1;\n\n        // Compute end value\n        this.__computeTrackingEnd(e);\n\n        // Directly call interval method once\n        this._onInterval();\n\n        // Initialize timer (when needed)\n        if (!this.__timer)\n        {\n          this.__timer = new qx.event.Timer(100);\n          this.__timer.addListener(\"interval\", this._onInterval, this);\n        }\n\n        // Start timer\n        this.__timer.start();\n      }\n\n      // Register move listener\n      this.addListener(\"pointermove\", this._onPointerMove);\n\n      // Activate capturing\n      this.capture();\n\n      // Stop event\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener of pointerup event. Used for cleanup of previously\n     * initialized modes.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onPointerUp : function(e)\n    {\n      if (this.__dragMode)\n      {\n        // Release capture mode\n        this.releaseCapture();\n\n        // Cleanup status flags\n        delete this.__dragMode;\n\n        // as we come out of drag mode, make\n        // sure content gets synced\n        this.__dragTimer.stop();\n        this._fireValue();\n\n        delete this.__dragOffset;\n\n        // remove state\n        this.getChildControl(\"knob\").removeState(\"pressed\");\n\n        // it's necessary to check whether the cursor is over the knob widget to be able to\n        // to decide whether to remove the 'hovered' state.\n        if (e.getType() === \"pointerup\")\n        {\n          var deltaSlider;\n          var deltaPosition;\n          var positionSlider;\n\n          if (this.__isHorizontal)\n          {\n            deltaSlider = e.getDocumentLeft() - (this._valueToPosition(this.getValue()) + this.__sliderLocation);\n\n            positionSlider = qx.bom.element.Location.get(this.getContentElement().getDomElement())[\"top\"];\n            deltaPosition = e.getDocumentTop() - (positionSlider + this.getChildControl(\"knob\").getBounds().top);\n          }\n          else\n          {\n            deltaSlider = e.getDocumentTop() - (this._valueToPosition(this.getValue()) + this.__sliderLocation);\n\n            positionSlider = qx.bom.element.Location.get(this.getContentElement().getDomElement())[\"left\"];\n            deltaPosition = e.getDocumentLeft() - (positionSlider + this.getChildControl(\"knob\").getBounds().left);\n          }\n\n          if (deltaPosition < 0 || deltaPosition > this.__knobSize ||\n              deltaSlider < 0 || deltaSlider > this.__knobSize) {\n            this.getChildControl(\"knob\").removeState(\"hovered\");\n          }\n        }\n\n      }\n      else if (this.__trackingMode)\n      {\n        // Stop timer interval\n        this.__timer.stop();\n\n        // Release capture mode\n        this.releaseCapture();\n\n        // Cleanup status flags\n        delete this.__trackingMode;\n        delete this.__trackingDirection;\n        delete this.__trackingEnd;\n      }\n\n      // Remove move listener again\n      this.removeListener(\"pointermove\", this._onPointerMove);\n\n      // Stop event\n      if (e.getType() === \"pointerup\") {\n        e.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Listener of pointermove event for the knob. Only used in drag mode.\n     *\n     * @param e {qx.event.type.Pointer} Incoming event object\n     */\n    _onPointerMove : function(e)\n    {\n      if (this.__dragMode)\n      {\n        var dragStop = this.__isHorizontal ?\n          e.getDocumentLeft() : e.getDocumentTop();\n        var position = dragStop - this.__dragOffset;\n\n        this.slideTo(this._positionToValue(position));\n      }\n      else if (this.__trackingMode)\n      {\n        // Update tracking end on pointermove\n        this.__computeTrackingEnd(e);\n      }\n\n      // Stop event\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener of interval event by the internal timer. Only used\n     * in tracking sequences.\n     *\n     * @param e {qx.event.type.Event} Incoming event object\n     */\n    _onInterval : function(e)\n    {\n      // Compute new value\n      var value = this.getValue() + (this.__trackingDirection * this.getPageStep());\n\n      // Limit value\n      if (value < this.getMinimum()) {\n        value = this.getMinimum();\n      } else if (value > this.getMaximum()) {\n        value = this.getMaximum();\n      }\n\n      // Stop at tracking position (where the pointer is pressed down)\n      var slideBack = this.__trackingDirection == -1;\n      if ((slideBack && value <= this.__trackingEnd) || (!slideBack && value >= this.__trackingEnd)) {\n        value = this.__trackingEnd;\n      }\n\n      // Finally slide to the desired position\n      this.slideTo(value);\n    },\n\n\n    /**\n     * Listener of resize event for both the slider itself and the knob.\n     *\n     * @param e {qx.event.type.Data} Incoming event object\n     */\n    _onUpdate : function(e)\n    {\n      // Update sliding space\n      var availSize = this.getInnerSize();\n      var knobSize = this.getChildControl(\"knob\").getBounds();\n      var sizeProperty = this.__isHorizontal ? \"width\" : \"height\";\n\n      // Sync knob size\n      this._updateKnobSize();\n\n      // Store knob size\n      this.__slidingSpace = availSize[sizeProperty] - knobSize[sizeProperty];\n      this.__knobSize = knobSize[sizeProperty];\n\n      // Update knob position (sliding space must be updated first)\n      this._updateKnobPosition();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILS\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Boolean} Whether the slider is laid out horizontally */\n    __isHorizontal : false,\n\n\n    /**\n     * @type {Integer} Available space for knob to slide on, computed on resize of\n     * the widget\n     */\n    __slidingSpace : 0,\n\n\n    /**\n     * Computes the value where the tracking should end depending on\n     * the current pointer position.\n     *\n     * @param e {qx.event.type.Pointer} Incoming pointer event\n     */\n    __computeTrackingEnd : function(e)\n    {\n      var isHorizontal = this.__isHorizontal;\n      var cursorLocation = isHorizontal ? e.getDocumentLeft() : e.getDocumentTop();\n      var sliderLocation = this.__sliderLocation;\n      var knobLocation = this.__knobLocation;\n      var knobSize = this.__knobSize;\n\n      // Compute relative position\n      var position = cursorLocation - sliderLocation;\n      if (cursorLocation >= knobLocation) {\n        position -= knobSize;\n      }\n\n      // Compute stop value\n      var value = this._positionToValue(position);\n\n      var min = this.getMinimum();\n      var max = this.getMaximum();\n\n      if (value < min) {\n        value = min;\n      } else if (value > max) {\n        value = max;\n      } else {\n        var old = this.getValue();\n        var step = this.getPageStep();\n        var method = this.__trackingDirection < 0 ? \"floor\" : \"ceil\";\n\n        // Fix to page step\n        value = old + (Math[method]((value - old) / step) * step);\n      }\n\n      // Store value when undefined, otherwise only when it follows the\n      // current direction e.g. goes up or down\n      if (this.__trackingEnd == null || (this.__trackingDirection == -1 && value <= this.__trackingEnd) || (this.__trackingDirection == 1 && value >= this.__trackingEnd)) {\n        this.__trackingEnd = value;\n      }\n    },\n\n\n    /**\n     * Converts the given position to a value.\n     *\n     * Does not respect single or page step.\n     *\n     * @param position {Integer} Position to use\n     * @return {Integer} Resulting value (rounded)\n     */\n    _positionToValue : function(position)\n    {\n      // Reading available space\n      var avail = this.__slidingSpace;\n\n      // Protect undefined value (before initial resize) and division by zero\n      if (avail == null || avail == 0) {\n        return 0;\n      }\n\n      // Compute and limit percent\n      var percent = position / avail;\n      if (percent < 0) {\n        percent = 0;\n      } else if (percent > 1) {\n        percent = 1;\n      }\n\n      // Compute range\n      var range = this.getMaximum() - this.getMinimum();\n\n      // Compute value\n      return this.getMinimum() + Math.round(range * percent);\n    },\n\n\n    /**\n     * Converts the given value to a position to place\n     * the knob to.\n     *\n     * @param value {Integer} Value to use\n     * @return {Integer} Computed position (rounded)\n     */\n    _valueToPosition : function(value)\n    {\n      // Reading available space\n      var avail = this.__slidingSpace;\n      if (avail == null) {\n        return 0;\n      }\n\n      // Computing range\n      var range = this.getMaximum() - this.getMinimum();\n\n      // Protect division by zero\n      if (range == 0) {\n        return 0;\n      }\n\n      // Translating value to distance from minimum\n      var value = value - this.getMinimum();\n\n      // Compute and limit percent\n      var percent = value / range;\n      if (percent < 0) {\n        percent = 0;\n      } else if (percent > 1) {\n        percent = 1;\n      }\n\n      // Compute position from available space and percent\n      return Math.round(avail * percent);\n    },\n\n\n    /**\n     * Updates the knob position following the currently configured\n     * value. Useful on reflows where the dimensions of the slider\n     * itself have been modified.\n     *\n     */\n    _updateKnobPosition : function() {\n      this._setKnobPosition(this._valueToPosition(this.getValue()));\n    },\n\n\n    /**\n     * Moves the knob to the given position.\n     *\n     * @param position {Integer} Any valid position (needs to be\n     *   greater or equal than zero)\n     */\n    _setKnobPosition : function(position)\n    {\n      // Use the DOM Element to prevent unnecessary layout recalculations\n      var knob = this.getChildControl(\"knob\");\n      var dec = this.getDecorator();\n      dec = qx.theme.manager.Decoration.getInstance().resolve(dec);\n      var content = knob.getContentElement();\n      if (this.__isHorizontal) {\n        if (dec && dec.getPadding()) {\n          position += dec.getPadding().left;\n        }\n        position += this.getPaddingLeft() || 0;\n        content.setStyle(\"left\", position+\"px\", true);\n      } else {\n        if (dec && dec.getPadding()) {\n          position += dec.getPadding().top;\n        }\n        position += this.getPaddingTop() || 0;\n        content.setStyle(\"top\", position+\"px\", true);\n      }\n    },\n\n\n    /**\n     * Reconfigures the size of the knob depending on\n     * the optionally defined {@link #knobFactor}.\n     *\n     */\n    _updateKnobSize : function()\n    {\n      // Compute knob size\n      var knobFactor = this.getKnobFactor();\n      if (knobFactor == null) {\n        return;\n      }\n\n      // Ignore when not rendered yet\n      var avail = this.getInnerSize();\n      if (avail == null) {\n        return;\n      }\n\n      // Read size property\n      if (this.__isHorizontal) {\n        this.getChildControl(\"knob\").setWidth(Math.round(knobFactor * avail.width));\n      } else {\n        this.getChildControl(\"knob\").setHeight(Math.round(knobFactor * avail.height));\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SLIDE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Slides backward to the minimum value\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slideToBegin : function(duration) {\n      this.slideTo(this.getMinimum(), duration);\n    },\n\n\n    /**\n     * Slides forward to the maximum value\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slideToEnd : function(duration) {\n      this.slideTo(this.getMaximum(), duration);\n    },\n\n\n    /**\n     * Slides forward (right or bottom depending on orientation)\n     *\n     */\n    slideForward : function() {\n      this.slideBy(this.getSingleStep());\n    },\n\n\n    /**\n     * Slides backward (to left or top depending on orientation)\n     *\n     */\n    slideBack : function() {\n      this.slideBy(-this.getSingleStep());\n    },\n\n\n    /**\n     * Slides a page forward (to right or bottom depending on orientation)\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slidePageForward : function(duration) {\n      this.slideBy(this.getPageStep(), duration);\n    },\n\n\n    /**\n     * Slides a page backward (to left or top depending on orientation)\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slidePageBack : function(duration) {\n      this.slideBy(-this.getPageStep(), duration);\n    },\n\n\n    /**\n     * Slides by the given offset.\n     *\n     * This method works with the value, not with the coordinate.\n     *\n     * @param offset {Integer} Offset to scroll by\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slideBy : function(offset, duration) {\n      this.slideTo(this.getValue() + offset, duration);\n    },\n\n\n    /**\n     * Slides to the given value\n     *\n     * This method works with the value, not with the coordinate.\n     *\n     * @param value {Integer} Scroll to a value between the defined\n     *   minimum and maximum.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    slideTo : function(value, duration)\n    {\n      this.stopSlideAnimation();\n\n      if (duration) {\n        this.__animateTo(value, duration);\n      } else {\n        this.updatePosition(value);\n      }\n    },\n\n\n    /**\n     * Updates the position property considering the minimum and maximum values.\n     * @param value {Number} The new position.\n     */\n    updatePosition : function(value) {\n      this.setValue(this.__normalizeValue(value));\n    },\n\n\n    /**\n     * In case a slide animation is currently running, it will be stopped.\n     * If not, the method does nothing.\n     */\n    stopSlideAnimation : function() {\n      if (this.__scrollAnimationframe) {\n        this.__scrollAnimationframe.cancelSequence();\n        this.__scrollAnimationframe = null;\n      }\n    },\n\n\n    /**\n     * Internal helper to normalize the given value concerning the minimum\n     * and maximum value.\n     * @param value {Number} The value to normalize.\n     * @return {Number} The normalized value.\n     */\n    __normalizeValue : function(value) {\n      // Bring into allowed range or fix to single step grid\n      if (value < this.getMinimum()) {\n        value = this.getMinimum();\n      } else if (value > this.getMaximum()) {\n        value = this.getMaximum();\n      } else {\n        value = this.getMinimum() + Math.round((value - this.getMinimum()) / this.getSingleStep()) * this.getSingleStep();\n      }\n      return value;\n    },\n\n\n    /**\n     * Animation helper which takes care of the animated slide.\n     * @param to {Number} The target value.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    __animateTo : function(to, duration) {\n      to = this.__normalizeValue(to);\n      var from = this.getValue();\n\n      this.__scrollAnimationframe = new qx.bom.AnimationFrame();\n\n      this.__scrollAnimationframe.on(\"frame\", function(timePassed) {\n        this.setValue(parseInt(timePassed/duration * (to - from) + from));\n      }, this);\n\n      this.__scrollAnimationframe.on(\"end\", function() {\n        this.setValue(to);\n        this.__scrollAnimationframe = null;\n        this.fireEvent(\"slideAnimationEnd\");\n      }, this);\n\n      this.__scrollAnimationframe.startSequence(duration);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyOrientation : function(value, old)\n    {\n      var knob = this.getChildControl(\"knob\");\n\n      // Update private flag for faster access\n      this.__isHorizontal = value === \"horizontal\";\n\n      // Toggle states and knob layout\n      if (this.__isHorizontal)\n      {\n        this.removeState(\"vertical\");\n        knob.removeState(\"vertical\");\n\n        this.addState(\"horizontal\");\n        knob.addState(\"horizontal\");\n\n        knob.setLayoutProperties({top:0, right:null, bottom:0});\n      }\n      else\n      {\n        this.removeState(\"horizontal\");\n        knob.removeState(\"horizontal\");\n\n        this.addState(\"vertical\");\n        knob.addState(\"vertical\");\n\n        knob.setLayoutProperties({right:0, bottom:null, left:0});\n      }\n\n      // Sync knob position\n      this._updateKnobPosition();\n    },\n\n\n    // property apply\n    _applyKnobFactor : function(value, old)\n    {\n      if (value != null)\n      {\n        this._updateKnobSize();\n      }\n      else\n      {\n        if (this.__isHorizontal) {\n          this.getChildControl(\"knob\").resetWidth();\n        } else {\n          this.getChildControl(\"knob\").resetHeight();\n        }\n      }\n    },\n\n\n    // property apply\n    _applyValue : function(value, old) {\n      if (value != null) {\n        this._updateKnobPosition();\n        if (this.__dragMode) {\n          this.__dragValue = [value,old];\n        } else {\n          this.fireEvent(\"changeValue\", qx.event.type.Data, [value,old]);\n        }\n      } else {\n        this.resetValue();\n      }\n    },\n\n\n    /**\n     * Helper for applyValue which fires the changeValue event.\n     */\n    _fireValue: function(){\n      if (!this.__dragValue){\n        return;\n      }\n      var tmp = this.__dragValue;\n      this.__dragValue = null;\n      this.fireEvent(\"changeValue\", qx.event.type.Data, tmp);\n    },\n\n\n    // property apply\n    _applyMinimum : function(value, old)\n    {\n      if (this.getValue() < value) {\n        this.setValue(value);\n      }\n\n      this._updateKnobPosition();\n    },\n\n\n    // property apply\n    _applyMaximum : function(value, old)\n    {\n      if (this.getValue() > value) {\n        this.setValue(value);\n      }\n\n      this._updateKnobPosition();\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Minimal modified version of the {@link qx.ui.form.Slider} to be\n * used by {@link qx.ui.core.scroll.ScrollBar}.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.core.scroll.ScrollSlider\",\n{\n  extend : qx.ui.form.Slider,\n\n  // overridden\n  construct : function(orientation)\n  {\n    this.base(arguments, orientation);\n\n    // Remove roll/keypress events\n    this.removeListener(\"keypress\", this._onKeyPress);\n    this.removeListener(\"roll\", this._onRoll);\n  },\n\n\n  members : {\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"knob\":\n          control = this.base(arguments, id);\n          control.addListener(\"dblclick\", function(e) {\n            e.stopPropagation();\n          });\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    // overridden\n    getSizeHint : function(compute) {\n      // get the original size hint\n      var hint = this.base(arguments);\n      // set the width or height to 0 depending on the orientation.\n      // this is necessary to prevent the ScrollSlider to change the size\n      // hint of its parent, which can cause errors on outer flex layouts\n      // [BUG #3279]\n      if (this.getOrientation() === \"horizontal\") {\n        hint.width = 0;\n      } else {\n        hint.height = 0;\n      }\n      return hint;\n    }\n  }\n});"
  ]
}