{
  "version": 3,
  "sources": [
    "../transpiled/qx/bom/Label.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-20.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Cross browser abstractions to work with labels.\n */\nqx.Bootstrap.define(\"qx.bom.Label\",\n{\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Map} Contains all supported styles */\n    __styles :\n    {\n      fontFamily : 1,\n      fontSize : 1,\n      fontWeight : 1,\n      fontStyle : 1,\n      lineHeight : 1\n    },\n\n\n    /**\n     * Generates the helper DOM element for text measuring\n     *\n     * @return {Element} Helper DOM element\n     */\n    __prepareText : function()\n    {\n      var el = this.__createMeasureElement(false);\n      document.body.insertBefore(el, document.body.firstChild);\n\n      return this._textElement = el;\n    },\n\n\n    /**\n     * Generates the helper DOM element for HTML measuring\n     *\n     * @return {Element} Helper DOM element\n     */\n    __prepareHtml : function()\n    {\n      var el = this.__createMeasureElement(true);\n      document.body.insertBefore(el, document.body.firstChild);\n\n      return this._htmlElement = el;\n    },\n\n\n    /**\n     * Creates the measure element\n     *\n     * @param html {Boolean?false} Whether HTML markup should be used.\n     * @return {Element} The measure element\n     */\n    __createMeasureElement : function(html)\n    {\n      var el = qx.dom.Element.create(\"div\");\n      var style = el.style;\n\n      style.width = style.height = \"auto\";\n      style.left = style.top = \"-1000px\";\n      style.visibility = \"hidden\";\n      style.position = \"absolute\";\n      style.overflow = \"visible\";\n      style.display = \"block\";\n\n      if (html)\n      {\n        style.whiteSpace = \"normal\";\n      }\n      else\n      {\n        style.whiteSpace = \"nowrap\";\n\n        if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\"))\n        {\n          var inner = document.createElementNS(\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\", \"label\");\n\n          // Force style inheritance for font styles to omit usage of\n          // CSS \"label\" selector, See bug #1349 for details.\n          var style = inner.style;\n          style.padding = \"0\";\n          style.margin = \"0\";\n          style.width = \"auto\";\n\n          for (var key in this.__styles) {\n            style[key] = \"inherit\";\n          }\n\n          el.appendChild(inner);\n        }\n      }\n\n      return el;\n    },\n\n\n    /**\n     * Returns a map of all styles which should be applied as\n     * a basic set.\n     *\n     * @param html {Boolean?false} Whether HTML markup should be used.\n     * @return {Map} Initial styles which should be applied to a label element.\n     */\n    __getStyles : function(html)\n    {\n      var styles = {};\n\n      styles.overflow = \"hidden\";\n      if (html)\n      {\n        styles.whiteSpace = \"normal\";\n      }\n      else if (!qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\"))\n      {\n        styles.display = \"block\";\n      }\n      else\n      {\n        styles.whiteSpace = \"nowrap\";\n        styles[qx.core.Environment.get(\"css.textoverflow\")] = \"ellipsis\";\n      }\n\n      return styles;\n    },\n\n\n    /**\n     * Creates a label.\n     *\n     * The default mode is 'text' which means that the overlapping text is cut off\n     * using ellipsis automatically. Text wrapping is disabled in this mode\n     * as well. Spaces are normalized. Umlauts and other special symbols are only\n     * allowed in unicode mode as normal characters.\n     *\n     * In the HTML mode you can insert any HTML, but loose the capability to cut\n     * of overlapping text. Automatic text wrapping is enabled by default.\n     *\n     * It is not possible to modify the mode afterwards.\n     *\n     * @param content {String} Content of the label\n     * @param html {Boolean?false} Whether HTML markup should be used.\n     * @param win {Window?null} Window to create the element for\n     * @return {Element} The created iframe node\n     */\n    create : function(content, html, win)\n    {\n      if (!win) {\n        win = window;\n      }\n\n      var el = win.document.createElement(\"div\");\n\n      if (html)\n      {\n        el.useHtml = true;\n      }\n\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\"))\n      {\n        // Gecko as of Firefox 2.x and 3.0 does not support ellipsis\n        // for text overflow. We use this feature from XUL instead.\n        var xulel = win.document.createElementNS(\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\", \"label\");\n\n        var style = xulel.style;\n        style.cursor = \"inherit\";\n        style.color = \"inherit\";\n        style.overflow = \"hidden\";\n        style.maxWidth = \"100%\";\n        style.padding = \"0\";\n        style.margin = \"0\";\n        style.width = \"auto\";\n\n        // Force style inheritance for font styles to omit usage of\n        // CSS \"label\" selector, See bug #1349 for details.\n        for (var key in this.__styles) {\n          xulel.style[key] = \"inherit\";\n        }\n\n        xulel.setAttribute(\"crop\", \"end\");\n\n        el.appendChild(xulel);\n      }\n      else\n      {\n        qx.bom.element.Style.setStyles(el, this.__getStyles(html));\n      }\n\n      if (content) {\n        this.setValue(el, content);\n      }\n\n      return el;\n    },\n\n\n    /** Sanitizer function */\n    __sanitizer : null,\n\n\n    /**\n     * Sets a function to sanitize values. It will be used by {@link #setValue}.\n     * The function to sanitize will get the <code>string</code> value and\n     * should return a sanitized / cleared <code>string</code>.\n     *\n     * @param func {Function | null} Function to sanitize / clean HTML code\n     *  from given string parameter\n     */\n    setSanitizer : function(func)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (func) {\n          qx.core.Assert.assertFunction(func);\n        }\n      }\n\n      qx.bom.Label.__sanitizer = func;\n    },\n\n\n    /**\n     * Sets the content of the element.\n     *\n     * The possibilities of the value depends on the mode\n     * defined using {@link #create}.\n     *\n     * @param element {Element} DOM element to modify.\n     * @param value {String} Content to insert.\n     */\n    setValue : function(element, value)\n    {\n      value = value || \"\";\n\n      if (element.useHtml) {\n        if (qx.bom.Label.__sanitizer && typeof(qx.bom.Label.__sanitizer) === \"function\") {\n          value = qx.bom.Label.__sanitizer(value);\n        }\n        element.innerHTML = value;\n      } else if (!qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\"))\n      {\n        element.firstChild.setAttribute(\"value\", value);\n      } else {\n        qx.bom.element.Attribute.set(element, \"text\", value);\n      }\n    },\n\n\n    /**\n     * Returns the content of the element.\n     *\n     * @param element {Element} DOM element to query.\n     * @return {String} Content stored in the element.\n     */\n    getValue : function(element)\n    {\n      if (element.useHtml) {\n        return element.innerHTML;\n      } else if (!qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\"))\n      {\n        return element.firstChild.getAttribute(\"value\") || \"\";\n      } else {\n        return qx.bom.element.Attribute.get(element, \"text\");\n      }\n    },\n\n\n    /**\n     * Returns the preferred dimensions of the given HTML content.\n     *\n     * @param content {String} The HTML markup to measure\n     * @param styles {Map?null} Optional styles to apply\n     * @param width {Integer} To support width for height it is possible to limit the width\n     * @return {Map} A map with preferred <code>width</code> and <code>height</code>.\n     */\n    getHtmlSize : function(content, styles, width)\n    {\n      var element = this._htmlElement || this.__prepareHtml();\n\n      // apply width\n      element.style.width = width != undefined ? width + \"px\" : \"auto\";\n      // insert content\n      element.innerHTML = content;\n\n      return this.__measureSize(element, styles);\n    },\n\n\n    /**\n     * Returns the preferred dimensions of the given text.\n     *\n     * @param text {String} The text to measure\n     * @param styles {Map} Optional styles to apply\n     * @return {Map} A map with preferred <code>width</code> and <code>height</code>.\n     */\n    getTextSize : function(text, styles)\n    {\n      var element = this._textElement || this.__prepareText();\n\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\"))\n      {\n        element.firstChild.setAttribute(\"value\", text);\n      } else {\n        qx.bom.element.Attribute.set(element, \"text\", text);\n      }\n\n      return this.__measureSize(element, styles);\n    },\n\n\n    /**\n     * Measure the size of the given element\n     *\n     * @param element {Element} The element to measure\n     * @param styles {Map?null} Optional styles to apply\n     * @return {Map} A map with preferred <code>width</code> and <code>height</code>.\n     */\n    __measureSize : function(element, styles)\n    {\n      // sync styles\n      var keys = this.__styles;\n\n      if (!styles) {\n        styles = {};\n      }\n\n      for (var key in keys) {\n        element.style[key] = styles[key] || \"\";\n      }\n\n      // detect size\n      var size = qx.bom.element.Dimension.getSize(element);\n\n      // all modern browser are needing one more pixel for width\n      size.width++;\n\n      return size;\n    }\n  }\n});\n"
  ]
}