{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/form/AbstractSelectBox.js",
    "../transpiled/qx/ui/form/SelectBox.js",
    "../transpiled/qx/ui/form/ListItem.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-36.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Sebastian Werner (wpbasti)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Basic class for a selectbox like lists. Basically supports a popup\n * with a list and the whole children management.\n *\n * @childControl list {qx.ui.form.List} list component of the selectbox\n * @childControl popup {qx.ui.popup.Popup} popup which shows the list\n *\n */\nqx.Class.define(\"qx.ui.form.AbstractSelectBox\",\n{\n  extend  : qx.ui.core.Widget,\n  include : [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.form.MForm\n  ],\n  implement : [\n    qx.ui.form.IForm\n  ],\n  type : \"abstract\",\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // set the layout\n    var layout = new qx.ui.layout.HBox();\n    this._setLayout(layout);\n    layout.setAlignY(\"middle\");\n\n    // Register listeners\n    this.addListener(\"keypress\", this._onKeyPress);\n    this.addListener(\"blur\", this._onBlur, this);\n\n    // register the resize listener\n    this.addListener(\"resize\", this._onResize, this);\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    // overridden\n    width :\n    {\n      refine : true,\n      init : 120\n    },\n\n    /**\n     * The maximum height of the list popup. Setting this value to\n     * <code>null</code> will set cause the list to be auto-sized.\n     */\n    maxListHeight :\n    {\n      check : \"Number\",\n      apply : \"_applyMaxListHeight\",\n      nullable: true,\n      init : 200\n    },\n\n    /**\n     * Formatter which format the value from the selected <code>ListItem</code>.\n     * Uses the default formatter {@link #_defaultFormat}.\n     */\n    format :\n    {\n      check : \"Function\",\n      init : function(item) {\n        return this._defaultFormat(item);\n      },\n      nullable : true\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"list\":\n          control = new qx.ui.form.List().set({\n            focusable: false,\n            keepFocus: true,\n            height: null,\n            width: null,\n            maxHeight: this.getMaxListHeight(),\n            selectionMode: \"one\",\n            quickSelection: true\n          });\n\n          control.addListener(\"changeSelection\", this._onListChangeSelection, this);\n          control.addListener(\"pointerdown\", this._onListPointerDown, this);\n          control.getChildControl(\"pane\").addListener(\"tap\", this.close, this);\n          break;\n\n        case \"popup\":\n          control = new qx.ui.popup.Popup(new qx.ui.layout.VBox());\n          control.setAutoHide(false);\n          control.setKeepActive(true);\n          control.add(this.getChildControl(\"list\"));\n\n          control.addListener(\"changeVisibility\", this._onPopupChangeVisibility, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyMaxListHeight : function(value, old) {\n      this.getChildControl(\"list\").setMaxHeight(value);\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the list widget.\n     * @return {qx.ui.form.List} the list\n     */\n    getChildrenContainer : function() {\n      return this.getChildControl(\"list\");\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LIST STUFF\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Shows the list popup.\n     */\n    open : function()\n    {\n      var popup = this.getChildControl(\"popup\");\n\n      popup.placeToWidget(this, true);\n      popup.show();\n    },\n\n\n    /**\n     * Hides the list popup.\n     */\n    close : function() {\n      this.getChildControl(\"popup\").hide();\n    },\n\n\n    /**\n     * Toggles the popup's visibility.\n     */\n    toggle : function()\n    {\n      var isListOpen = this.getChildControl(\"popup\").isVisible();\n      if (isListOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FORMAT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Return the formatted label text from the <code>ListItem</code>.\n     * The formatter removes all HTML tags and converts all HTML entities\n     * to string characters when the rich property is <code>true</code>.\n     *\n     * @param item {qx.ui.form.ListItem} The list item to format.\n     * @return {String} The formatted text.\n     */\n    _defaultFormat : function(item)\n    {\n      var valueLabel = item ? item.getLabel() : \"\";\n      var rich = item ? item.getRich() : false;\n\n      if (rich) {\n        valueLabel = valueLabel.replace(/<[^>]+?>/g, \"\");\n        valueLabel = qx.bom.String.unescape(valueLabel);\n      }\n\n      return valueLabel;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler for the blur event of the current widget.\n     *\n     * @param e {qx.event.type.Focus} The blur event.\n     */\n    _onBlur : function(e)\n    {\n      this.close();\n    },\n\n\n    /**\n     * Reacts on special keys and forwards other key events to the list widget.\n     *\n     * @param e {qx.event.type.KeySequence} Keypress event\n     */\n    _onKeyPress : function(e)\n    {\n      // get the key identifier\n      var identifier = e.getKeyIdentifier();\n      var listPopup = this.getChildControl(\"popup\");\n\n      // disabled pageUp and pageDown keys\n      if (listPopup.isHidden() && (identifier == \"PageDown\" || identifier == \"PageUp\")) {\n        e.stopPropagation();\n      }\n\n      // hide the list always on escape\n      else if (!listPopup.isHidden() && identifier == \"Escape\")\n      {\n        this.close();\n        e.stop();\n      }\n\n      // forward the rest of the events to the list\n      else\n      {\n        this.getChildControl(\"list\").handleKeyPress(e);\n      }\n    },\n\n\n    /**\n     * Updates list minimum size.\n     *\n     * @param e {qx.event.type.Data} Data event\n     */\n    _onResize : function(e){\n      this.getChildControl(\"popup\").setMinWidth(e.getData().width);\n    },\n\n\n    /**\n     * Syncs the own property from the list change\n     *\n     * @param e {qx.event.type.Data} Data Event\n     */\n    _onListChangeSelection : function(e) {\n      throw new Error(\"Abstract method: _onListChangeSelection()\");\n    },\n\n\n    /**\n     * Redirects pointerdown event from the list to this widget.\n     *\n     * @param e {qx.event.type.Pointer} Pointer Event\n     */\n    _onListPointerDown : function(e) {\n      throw new Error(\"Abstract method: _onListPointerDown()\");\n    },\n\n\n    /**\n     * Redirects changeVisibility event from the list to this widget.\n     *\n     * @param e {qx.event.type.Data} Property change event\n     */\n    _onPopupChangeVisibility : function(e) {\n      e.getData() == \"visible\" ? this.addState(\"popupOpen\") : this.removeState(\"popupOpen\");\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Sebastian Werner (wpbasti)\n     * Jonathan Weiß (jonathan_rass)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A form widget which allows a single selection. Looks somewhat like\n * a normal button, but opens a list of items to select when tapping on it.\n *\n * Keep in mind that the SelectBox widget has always a selected item (due to the\n * single selection mode). Right after adding the first item a <code>changeSelection</code>\n * event is fired.\n *\n * <pre class='javascript'>\n * var selectBox = new qx.ui.form.SelectBox();\n *\n * selectBox.addListener(\"changeSelection\", function(e) {\n *   // ...\n * });\n *\n * // now the 'changeSelection' event is fired\n * selectBox.add(new qx.ui.form.ListItem(\"Item 1\"));\n * </pre>\n *\n * @childControl spacer {qx.ui.core.Spacer} flexible spacer widget\n * @childControl atom {qx.ui.basic.Atom} shows the text and icon of the content\n * @childControl arrow {qx.ui.basic.Image} shows the arrow to open the popup\n */\nqx.Class.define(\"qx.ui.form.SelectBox\",\n{\n  extend : qx.ui.form.AbstractSelectBox,\n  implement : [\n    qx.ui.core.ISingleSelection,\n    qx.ui.form.IModelSelection,\n    qx.ui.form.IField\n  ],\n  include : [qx.ui.core.MSingleSelectionHandling, qx.ui.form.MModelSelection],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this._createChildControl(\"atom\");\n    this._createChildControl(\"spacer\");\n    this._createChildControl(\"arrow\");\n\n    // Register listener\n    this.addListener(\"pointerover\", this._onPointerOver, this);\n    this.addListener(\"pointerout\", this._onPointerOut, this);\n    this.addListener(\"tap\", this._onTap, this);\n\n    this.addListener(\"keyinput\", this._onKeyInput, this);\n    this.addListener(\"changeSelection\", this.__onChangeSelection, this);\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"selectbox\"\n    },\n    \n    rich: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyRich\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n    /** @type {qx.ui.form.ListItem} instance */\n    __preSelectedItem : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    _applyRich: function(value, oldValue) {\n      this.getChildControl(\"atom\").setRich(value);\n    },\n    \n    // overridden\n    _defaultFormat: function(item) {\n      if (item) {\n        if (typeof item.isRich == \"function\" && item.isRich()) {\n          this.setRich(true);\n        }\n        return item.getLabel();\n      }\n      return null;\n    },\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"spacer\":\n          control = new qx.ui.core.Spacer();\n          this._add(control, {flex: 1});\n          break;\n\n        case \"atom\":\n          control = new qx.ui.basic.Atom(\" \");\n          control.setCenter(false);\n          control.setAnonymous(true);\n\n          this._add(control, {flex:1});\n          break;\n\n        case \"arrow\":\n          control = new qx.ui.basic.Image();\n          control.setAnonymous(true);\n\n          this._add(control);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      focused : true\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS FOR SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the list items for the selection.\n     *\n     * @return {qx.ui.form.ListItem[]} List items to select.\n     */\n    _getItems : function() {\n      return this.getChildrenContainer().getChildren();\n    },\n\n    /**\n     * Returns if the selection could be empty or not.\n     *\n     * @return {Boolean} <code>true</code> If selection could be empty,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowEmptySelection: function() {\n      return this.getChildrenContainer().getSelectionMode() !== \"one\";\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    __onChangeSelection : function(e)\n    {\n      var listItem = e.getData()[0];\n\n      var list = this.getChildControl(\"list\");\n      if (list.getSelection()[0] != listItem) {\n        if(listItem) {\n          list.setSelection([listItem]);\n        } else {\n          list.resetSelection();\n        }\n      }\n\n      this.__updateIcon();\n      this.__updateLabel();\n    },\n\n\n    /**\n     * Sets the icon inside the list to match the selected ListItem.\n     */\n    __updateIcon : function()\n    {\n      var listItem = this.getChildControl(\"list\").getSelection()[0];\n      var atom = this.getChildControl(\"atom\");\n      var icon = listItem ? listItem.getIcon() : \"\";\n      icon == null ? atom.resetIcon() : atom.setIcon(icon);\n    },\n\n    /**\n     * Sets the label inside the list to match the selected ListItem.\n     */\n    __updateLabel : function()\n    {\n      var listItem = this.getChildControl(\"list\").getSelection()[0];\n      var atom = this.getChildControl(\"atom\");\n      var label = listItem ? listItem.getLabel() : \"\";\n      var format = this.getFormat();\n      if (format != null && listItem) {\n        label = format.call(this, listItem);\n      }\n\n      // check for translation\n      if (label && label.translate) {\n        label = label.translate();\n      }\n      label == null ? atom.resetLabel() : atom.setLabel(label);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Listener method for \"pointerover\" event\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOver : function(e)\n    {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      if (this.hasState(\"abandoned\"))\n      {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n\n      this.addState(\"hovered\");\n    },\n\n\n    /**\n     * Listener method for \"pointerout\" event\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOut : function(e)\n    {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\"))\n      {\n        this.removeState(\"pressed\");\n        this.addState(\"abandoned\");\n      }\n    },\n\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onTap : function(e) {\n      this.toggle();\n    },\n\n\n    // overridden\n    _onKeyPress : function(e)\n    {\n      var iden = e.getKeyIdentifier();\n      if(iden == \"Enter\" || iden == \"Space\")\n      {\n        // Apply pre-selected item (translate quick selection to real selection)\n        if (this.__preSelectedItem)\n        {\n          this.setSelection([this.__preSelectedItem]);\n          this.__preSelectedItem = null;\n        }\n\n        this.toggle();\n      }\n      else\n      {\n        this.base(arguments, e);\n      }\n    },\n\n    /**\n     * Forwards key event to list widget.\n     *\n     * @param e {qx.event.type.KeyInput} Key event\n     */\n    _onKeyInput : function(e)\n    {\n      // clone the event and re-calibrate the event\n      var clone = e.clone();\n      clone.setTarget(this._list);\n      clone.setBubbles(false);\n\n      // forward it to the list\n      this.getChildControl(\"list\").dispatchEvent(clone);\n    },\n\n\n    // overridden\n    _onListPointerDown : function(e)\n    {\n      // Apply pre-selected item (translate quick selection to real selection)\n      if (this.__preSelectedItem)\n      {\n        this.setSelection([this.__preSelectedItem]);\n        this.__preSelectedItem = null;\n      }\n    },\n\n\n    // overridden\n    _onListChangeSelection : function(e)\n    {\n      var current = e.getData();\n      var old = e.getOldData();\n\n      // Remove old listeners for icon and label changes.\n      if (old && old.length > 0)\n      {\n        old[0].removeListener(\"changeIcon\", this.__updateIcon, this);\n        old[0].removeListener(\"changeLabel\", this.__updateLabel, this);\n      }\n\n\n      if (current.length > 0)\n      {\n        // Ignore quick context (e.g. pointerover)\n        // and configure the new value when closing the popup afterwards\n        var popup = this.getChildControl(\"popup\");\n        var list = this.getChildControl(\"list\");\n        var context = list.getSelectionContext();\n\n        if (popup.isVisible() && (context == \"quick\" || context == \"key\"))\n        {\n          this.__preSelectedItem = current[0];\n        }\n        else\n        {\n          this.setSelection([current[0]]);\n          this.__preSelectedItem = null;\n        }\n\n        // Add listeners for icon and label changes\n        current[0].addListener(\"changeIcon\", this.__updateIcon, this);\n        current[0].addListener(\"changeLabel\", this.__updateLabel, this);\n      }\n      else\n      {\n        this.resetSelection();\n      }\n    },\n\n    // overridden\n    _onPopupChangeVisibility : function(e)\n    {\n      this.base(arguments, e);\n\n      // Synchronize the current selection to the list selection\n      // when the popup is closed. The list selection may be invalid\n      // because of the quick selection handling which is not\n      // directly applied to the selectbox\n      var popup = this.getChildControl(\"popup\");\n      if (!popup.isVisible())\n      {\n        var list = this.getChildControl(\"list\");\n\n        // check if the list has any children before selecting\n        if (list.hasChildren()) {\n          list.setSelection(this.getSelection());\n        }\n      } else {\n        // ensure that the list is never bigger that the max list height and\n        // the available space in the viewport\n        var distance = popup.getLayoutLocation(this);\n        var viewPortHeight = qx.bom.Viewport.getHeight();\n        // distance to the bottom and top borders of the viewport\n        var toTop = distance.top;\n        var toBottom = viewPortHeight - distance.bottom;\n        var availableHeigth = toTop > toBottom ? toTop : toBottom;\n\n        var maxListHeight = this.getMaxListHeight();\n        var list = this.getChildControl(\"list\");\n        if (maxListHeight == null || maxListHeight > availableHeigth) {\n          list.setMaxHeight(availableHeigth);\n        } else if (maxListHeight < availableHeigth) {\n          list.setMaxHeight(maxListHeight);\n        }\n      }\n    }\n\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n\n  destruct : function() {\n    this.__preSelectedItem = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A item for a list. Could be added to all List like widgets but also\n * to the {@link qx.ui.form.SelectBox} and {@link qx.ui.form.ComboBox}.\n */\nqx.Class.define(\"qx.ui.form.ListItem\",\n{\n  extend : qx.ui.basic.Atom,\n  implement : [qx.ui.form.IModel],\n  include : [qx.ui.form.MModelProperty],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Label to use\n   * @param icon {String?null} Icon to use\n   * @param model {String?null} The items value\n   */\n  construct : function(label, icon, model)\n  {\n    this.base(arguments, label, icon);\n\n    if (model != null) {\n      this.setModel(model);\n    }\n\n    this.addListener(\"pointerover\", this._onPointerOver, this);\n    this.addListener(\"pointerout\", this._onPointerOut, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events:\n  {\n    /** (Fired by {@link qx.ui.form.List}) */\n    \"action\" : \"qx.event.type.Event\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    appearance :\n    {\n      refine : true,\n      init : \"listitem\"\n    }\n  },\n\n\n  members :\n  {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      focused : true,\n      hovered : true,\n      selected : true,\n      dragover : true\n    },\n\n\n    /**\n     * Event handler for the pointer over event.\n     */\n    _onPointerOver : function() {\n      this.addState(\"hovered\");\n    },\n\n\n    /**\n     * Event handler for the pointer out event.\n     */\n    _onPointerOut : function() {\n      this.removeState(\"hovered\");\n    }\n  },\n\n  destruct : function() {\n    this.removeListener(\"pointerover\", this._onPointerOver, this);\n    this.removeListener(\"pointerout\", this._onPointerOut, this);\n  }\n});\n"
  ]
}