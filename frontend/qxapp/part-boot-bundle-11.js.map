{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/layout/VBox.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-11.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A vertical box layout.\n *\n * The vertical box layout lays out widgets in a vertical column, from top\n * to bottom.\n *\n * *Features*\n *\n * * Minimum and maximum dimensions\n * * Prioritized growing/shrinking (flex)\n * * Margins (with vertical collapsing)\n * * Auto sizing (ignoring percent values)\n * * Percent heights (not relevant for size hint)\n * * Alignment (child property {@link qx.ui.core.LayoutItem#alignY} is ignored)\n * * Vertical spacing (collapsed with margins)\n * * Reversed children layout (from last to first)\n * * Horizontal children stretching (respecting size hints)\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>flex</strong> <em>(Integer)</em>: The flexibility of a layout item determines how the container\n *   distributes remaining empty space among its children. If items are made\n *   flexible, they can grow or shrink accordingly. Their relative flex values\n *   determine how the items are being resized, i.e. the larger the flex ratio\n *   of two items, the larger the resizing of the first item compared to the\n *   second.\n *\n *   If there is only one flex item in a layout container, its actual flex\n *   value is not relevant. To disallow items to become flexible, set the\n *   flex value to zero.\n * </li>\n * <li><strong>height</strong> <em>(String)</em>: Allows to define a percent\n *   height for the item. The height in percent, if specified, is used instead\n *   of the height defined by the size hint. The minimum and maximum height still\n *   takes care of the element's limits. It has no influence on the layout's\n *   size hint. Percent values are mostly useful for widgets which are sized by\n *   the outer hierarchy.\n * </li>\n * </ul>\n *\n * *Example*\n *\n * Here is a little example of how to use the vertical box layout.\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.VBox();\n * layout.setSpacing(4); // apply spacing\n *\n * var container = new qx.ui.container.Composite(layout);\n *\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * </pre>\n *\n * *External Documentation*\n *\n * See <a href='http://manual.qooxdoo.org/${qxversion}/pages/layout/box.html'>extended documentation</a>\n * and links to demos for this layout.\n *\n */\nqx.Class.define(\"qx.ui.layout.VBox\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param spacing {Integer?0} The spacing between child widgets {@link #spacing}.\n   * @param alignY {String?\"top\"} Vertical alignment of the whole children\n   *     block {@link #alignY}.\n   * @param separator {String|qx.ui.decoration.IDecorator?} A separator to be rendered between the items\n   */\n  construct : function(spacing, alignY, separator)\n  {\n    this.base(arguments);\n\n    if (spacing) {\n      this.setSpacing(spacing);\n    }\n\n    if (alignY) {\n      this.setAlignY(alignY);\n    }\n\n    if (separator) {\n      this.setSeparator(separator);\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Vertical alignment of the whole children block. The vertical\n     * alignment of the child is completely ignored in VBoxes (\n     * {@link qx.ui.core.LayoutItem#alignY}).\n     */\n    alignY :\n    {\n      check : [ \"top\", \"middle\", \"bottom\" ],\n      init : \"top\",\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /**\n     * Horizontal alignment of each child. Can be overridden through\n     * {@link qx.ui.core.LayoutItem#alignX}.\n     */\n    alignX :\n    {\n      check : [ \"left\", \"center\", \"right\" ],\n      init : \"left\",\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /** Vertical spacing between two children */\n    spacing :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /** Separator lines to use between the objects */\n    separator :\n    {\n      check : \"Decorator\",\n      nullable : true,\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /** Whether the actual children list should be laid out in reversed order. */\n    reversed :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyReversed\"\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __heights : null,\n    __flexs : null,\n    __enableFlex : null,\n    __children : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyReversed : function()\n    {\n      // easiest way is to invalidate the cache\n      this._invalidChildrenCache = true;\n\n      // call normal layout change\n      this._applyLayoutChange();\n    },\n\n\n    /**\n     * Rebuilds caches for flex and percent layout properties\n     */\n    __rebuildCache : function()\n    {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var enableFlex = false;\n      var reuse = this.__heights && this.__heights.length != length && this.__flexs && this.__heights;\n      var props;\n\n      // Sparse array (keep old one if lengths has not been modified)\n      var heights = reuse ? this.__heights : new Array(length);\n      var flexs = reuse ? this.__flexs : new Array(length);\n\n      // Reverse support\n      if (this.getReversed()) {\n        children = children.concat().reverse();\n      }\n\n      // Loop through children to preparse values\n      for (var i=0; i<length; i++)\n      {\n        props = children[i].getLayoutProperties();\n\n        if (props.height != null) {\n          heights[i] = parseFloat(props.height) / 100;\n        }\n\n        if (props.flex != null)\n        {\n          flexs[i] = props.flex;\n          enableFlex = true;\n        } else {\n          // reset (in case the index of the children changed: BUG #3131)\n          flexs[i] = 0;\n        }\n      }\n\n      // Store data\n      if (!reuse)\n      {\n        this.__heights = heights;\n        this.__flexs = flexs;\n      }\n\n      this.__enableFlex = enableFlex;\n      this.__children = children;\n\n      // Clear invalidation marker\n      delete this._invalidChildrenCache;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value)\n      {\n        this.assert(name === \"flex\" || name === \"height\", \"The property '\"+name+\"' is not supported by the VBox layout!\");\n\n        if (name ==\"height\")\n        {\n          this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\n        }\n        else\n        {\n          // flex\n          this.assertNumber(value);\n          this.assert(value >= 0);\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      // Rebuild flex/height caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      // Cache children\n      var children = this.__children;\n      var length = children.length;\n      var util = qx.ui.layout.Util;\n\n\n      // Compute gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      if (separator) {\n        var gaps = util.computeVerticalSeparatorGaps(children, spacing, separator);\n      } else {\n        var gaps = util.computeVerticalGaps(children, spacing, true);\n      }\n\n\n      // First run to cache children data and compute allocated height\n      var i, child, height, percent;\n      var heights = [], hint;\n      var allocatedHeight = gaps;\n\n      for (i=0; i<length; i+=1)\n      {\n        percent = this.__heights[i];\n        hint = children[i].getSizeHint();\n        \n        height = percent != null ?\n          Math.floor((availHeight - gaps) * percent) :\n          hint.height;\n\n        // Limit computed value\n        if (height < hint.minHeight) {\n          height = hint.minHeight;\n        } else if (height > hint.maxHeight) {\n          height = hint.maxHeight;\n        }\n        \n        heights.push(height);\n        allocatedHeight += height;\n      }\n\n\n      // Flex support (growing/shrinking)\n      if (this.__enableFlex && allocatedHeight != availHeight)\n      {\n        var flexibles = {};\n        var flex, offset;\n\n        for (i=0; i<length; i+=1)\n        {\n          flex = this.__flexs[i];\n\n          if (flex > 0)\n          {\n            hint = children[i].getSizeHint();\n\n            flexibles[i]=\n            {\n              min : hint.minHeight,\n              value : heights[i],\n              max : hint.maxHeight,\n              flex : flex\n            };\n          }\n        }\n\n        var result = util.computeFlexOffsets(flexibles, availHeight, allocatedHeight);\n\n        for (i in result)\n        {\n          offset = result[i].offset;\n\n          heights[i] += offset;\n          allocatedHeight += offset;\n        }\n      }\n\n\n      // Start with top coordinate\n      var top = children[0].getMarginTop();\n\n      // Alignment support\n      if (allocatedHeight < availHeight && this.getAlignY() != \"top\")\n      {\n        top = availHeight - allocatedHeight;\n\n        if (this.getAlignY() === \"middle\") {\n          top = Math.round(top / 2);\n        }\n      }\n\n\n      // Layouting children\n      var hint, left, width, height, marginBottom, marginLeft, marginRight;\n\n      // Pre configure separators\n      this._clearSeparators();\n\n      // Compute separator height\n      if (separator)\n      {\n        var separatorInsets = qx.theme.manager.Decoration.getInstance().resolve(separator).getInsets();\n        var separatorHeight = separatorInsets.top + separatorInsets.bottom;\n      }\n\n      // Render children and separators\n      for (i=0; i<length; i+=1)\n      {\n        child = children[i];\n        height = heights[i];\n        hint = child.getSizeHint();\n\n        marginLeft = child.getMarginLeft();\n        marginRight = child.getMarginRight();\n\n        // Find usable width\n        width = Math.max(hint.minWidth, Math.min(availWidth-marginLeft-marginRight, hint.maxWidth));\n\n        // Respect horizontal alignment\n        left = util.computeHorizontalAlignOffset(child.getAlignX()||this.getAlignX(), width, availWidth, marginLeft, marginRight);\n\n        // Add collapsed margin\n        if (i > 0)\n        {\n          // Whether a separator has been configured\n          if (separator)\n          {\n            // add margin of last child and spacing\n            top += marginBottom + spacing;\n\n            // then render the separator at this position\n            this._renderSeparator(separator, {\n              top : top + padding.top,\n              left : padding.left,\n              height : separatorHeight,\n              width : availWidth\n            });\n\n            // and finally add the size of the separator, the spacing (again) and the top margin\n            top += separatorHeight + spacing + child.getMarginTop();\n          }\n          else\n          {\n            // Support margin collapsing when no separator is defined\n            top += util.collapseMargins(spacing, marginBottom, child.getMarginTop());\n          }\n        }\n\n        // Layout child\n        child.renderLayout(left + padding.left, top + padding.top, width, height);\n\n        // Add height\n        top += height;\n\n        // Remember bottom margin (for collapsing)\n        marginBottom = child.getMarginBottom();\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      // Rebuild flex/height caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      var util = qx.ui.layout.Util;\n      var children = this.__children;\n\n      // Initialize\n      var minHeight=0, height=0, percentMinHeight=0;\n      var minWidth=0, width=0;\n      var child, hint, margin;\n\n      // Iterate over children\n      for (var i=0, l=children.length; i<l; i+=1)\n      {\n        child = children[i];\n        hint = child.getSizeHint();\n\n        // Sum up heights\n        height += hint.height;\n\n        // Detect if child is shrinkable or has percent height and update minHeight\n        var flex = this.__flexs[i];\n        var percent = this.__heights[i];\n        if (flex) {\n          minHeight += hint.minHeight;\n        } else if (percent) {\n          percentMinHeight = Math.max(percentMinHeight, Math.round(hint.minHeight/percent));\n        } else {\n          minHeight += hint.height;\n        }\n\n        // Build horizontal margin sum\n        margin = child.getMarginLeft() + child.getMarginRight();\n\n        // Find biggest width\n        if ((hint.width+margin) > width) {\n          width = hint.width + margin;\n        }\n\n        // Find biggest minWidth\n        if ((hint.minWidth+margin) > minWidth) {\n          minWidth = hint.minWidth + margin;\n        }\n      }\n\n      minHeight += percentMinHeight;\n\n      // Respect gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      if (separator) {\n        var gaps = util.computeVerticalSeparatorGaps(children, spacing, separator);\n      } else {\n        var gaps = util.computeVerticalGaps(children, spacing, true);\n      }\n\n      // Return hint\n      return {\n        minHeight : minHeight + gaps,\n        height : height + gaps,\n        minWidth : minWidth,\n        width : width\n      };\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.__heights = this.__flexs = this.__children = null;\n  }\n});\n"
  ]
}