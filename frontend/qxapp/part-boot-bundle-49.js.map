{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/table/IHeaderRenderer.js",
    "../transpiled/qx/ui/table/headerrenderer/Default.js",
    "../transpiled/qx/ui/table/ICellRenderer.js",
    "../transpiled/qx/ui/table/cellrenderer/Abstract.js",
    "../transpiled/qx/ui/table/cellrenderer/Default.js",
    "../transpiled/qx/ui/table/ICellEditorFactory.js",
    "../transpiled/qx/ui/table/celleditor/AbstractField.js",
    "../transpiled/qx/ui/table/celleditor/TextField.js",
    "../transpiled/qx/ui/table/columnmodel/Basic.js",
    "../transpiled/qx/ui/table/columnmodel/Resize.js",
    "../transpiled/qx/ui/table/Table.js",
    "../transpiled/qx/util/format/NumberFormat.js",
    "../transpiled/qx/ui/table/cellrenderer/Conditional.js",
    "../transpiled/qx/ui/table/cellrenderer/Html.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-49.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * A cell renderer for header cells.\n */\nqx.Interface.define(\"qx.ui.table.IHeaderRenderer\",\n{\n\n  members :\n  {\n    /**\n     * Creates a header cell.\n     *\n     * The cellInfo map contains the following properties:\n     * <ul>\n     * <li>col (int): the model index of the column.</li>\n     * <li>xPos (int): the x position of the column in the table pane.</li>\n     * <li>name (string): the name of the column.</li>\n     * <li>editable (boolean): whether the column is editable.</li>\n     * <li>sorted (boolean): whether the column is sorted.</li>\n     * <li>sortedAscending (boolean): whether sorting is ascending.</li>\n     * </ul>\n     *\n     * @abstract\n     * @param cellInfo {Map} A map containing the information about the cell to\n     *      create.\n     * @return {qx.ui.core.Widget} the widget that renders the header cell.\n     */\n    createHeaderCell : function(cellInfo) {\n      return true;\n    },\n\n\n    /**\n     * Updates a header cell.\n     *\n     * @abstract\n     * @param cellInfo {Map} A map containing the information about the cell to\n     *      create. This map has the same structure as in {@link #createHeaderCell}.\n     * @param cellWidget {qx.ui.core.Widget} the widget that renders the header cell. This is\n     *      the same widget formally created by {@link #createHeaderCell}.\n     */\n    updateHeaderCell : function(cellInfo, cellWidget) {\n      return true;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * The default header cell renderer.\n */\nqx.Class.define(\"qx.ui.table.headerrenderer.Default\",\n{\n  extend : qx.core.Object,\n  implement : qx.ui.table.IHeaderRenderer,\n\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * @type {String} The state which will be set for header cells of sorted columns.\n     */\n    STATE_SORTED           : \"sorted\",\n\n\n    /**\n     * @type {String} The state which will be set when sorting is ascending.\n     */\n    STATE_SORTED_ASCENDING : \"sortedAscending\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * ToolTip to show if the pointer hovers of the icon\n     */\n    toolTip :\n    {\n      check : \"String\",\n      init : null,\n      nullable : true\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    createHeaderCell : function(cellInfo)\n    {\n      var widget = new qx.ui.table.headerrenderer.HeaderCell();\n      this.updateHeaderCell(cellInfo, widget);\n\n      return widget;\n    },\n\n\n    // overridden\n    updateHeaderCell : function(cellInfo, cellWidget)\n    {\n      var DefaultHeaderCellRenderer = qx.ui.table.headerrenderer.Default;\n\n      // check for localization [BUG #2699]\n      if (cellInfo.name && cellInfo.name.translate) {\n        cellWidget.setLabel(cellInfo.name.translate());\n      } else {\n        cellWidget.setLabel(cellInfo.name);\n      }\n\n      // Set image tooltip if given\n      var widgetToolTip = cellWidget.getToolTip();\n      if (this.getToolTip() != null)\n      {\n        if (widgetToolTip == null)\n        {\n          // We have no tooltip yet -> Create one\n          widgetToolTip = new qx.ui.tooltip.ToolTip(this.getToolTip());\n          cellWidget.setToolTip(widgetToolTip);\n          // Link disposer to cellwidget to prevent memory leak\n          qx.util.DisposeUtil.disposeTriggeredBy(widgetToolTip, cellWidget);\n        }\n        else\n        {\n          // Update tooltip text\n          widgetToolTip.setLabel(this.getToolTip());\n        }\n      }\n\n      cellInfo.sorted ?\n        cellWidget.addState(DefaultHeaderCellRenderer.STATE_SORTED) :\n        cellWidget.removeState(DefaultHeaderCellRenderer.STATE_SORTED);\n\n      cellInfo.sortedAscending ?\n        cellWidget.addState(DefaultHeaderCellRenderer.STATE_SORTED_ASCENDING) :\n        cellWidget.removeState(DefaultHeaderCellRenderer.STATE_SORTED_ASCENDING);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * A cell renderer for data cells.\n */\nqx.Interface.define(\"qx.ui.table.ICellRenderer\",\n{\n\n  members :\n  {\n    /**\n     * Creates the HTML for a data cell.\n     *\n     * The cellInfo map contains the following properties:\n     * <ul>\n     * <li>value (var): the cell's value.</li>\n     * <li>rowData (var): contains the row data for the row, the cell belongs to.\n     *   The kind of this object depends on the table model, see\n     *   {@link qx.ui.table.ITableModel#getRowData}</li>\n     * <li>row (int): the model index of the row the cell belongs to.</li>\n     * <li>col (int): the model index of the column the cell belongs to.</li>\n     * <li>table (qx.ui.table.Table): the table the cell belongs to.</li>\n     * <li>xPos (int): the x position of the cell in the table pane.</li>\n     * <li>selected (boolean): whether the cell is selected.</li>\n     * <li>focusedRow (boolean): whether the cell is in the same row as the\n     *   focused cell.</li>\n     * <li>editable (boolean): whether the cell is editable.</li>\n     * <li>style (string): The CSS styles that should be applied to the outer HTML\n     *   element.</li>\n     * <li>styleLeft (string): The left position of the cell.</li>\n     * <li>styleWidth (string): The cell's width (pixel).</li>\n     * <li>styleHeight (string): The cell's height (pixel).</li>\n     * </ul>\n     *\n     * @param cellInfo {Map} A map containing the information about the cell to\n     *     create.\n     * @param htmlArr {String[]} Target string container. The HTML of the data\n     *     cell should be appended to this array.\n     *\n     * @return {Boolean|undefined}\n     *   A return value of <i>true</i> specifies that no additional cells in\n     *   the row shall be rendered. This may be used, for example, for\n     *   separator rows or for other special rendering purposes. Traditional\n     *   cell renderers had no defined return value, so returned nothing\n     *   (undefined). If this method returns either false or nothing, then\n     *   rendering continues with the next cell in the row, which the normal\n     *   mode of operation.\n     */\n    createDataCellHtml : function(cellInfo, htmlArr) {\n      return true;\n    }\n\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * An abstract data cell renderer that does the basic coloring\n * (borders, selected look, ...).\n *\n * @require(qx.bom.Stylesheet)\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Abstract\",\n{\n  type : \"abstract\",\n  implement : qx.ui.table.ICellRenderer,\n  extend : qx.core.Object,\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    var cr = qx.ui.table.cellrenderer.Abstract;\n    if (!cr.__clazz)\n    {\n      cr.__clazz = this.self(arguments);\n      this._createStyleSheet();\n\n      // add dynamic theme listener\n      if (qx.core.Environment.get(\"qx.dyntheme\")) {\n        qx.theme.manager.Meta.getInstance().addListener(\n          \"changeTheme\", this._onChangeTheme, this\n        );\n      }\n    }\n  },\n\n\n  properties :\n  {\n    /**\n     * The default cell style. The value of this property will be provided\n     * to the cell renderer as cellInfo.style.\n     */\n    defaultCellStyle :\n    {\n      init : null,\n      check : \"String\",\n      nullable : true\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Handler for the theme change.\n     * @signature function()\n     */\n    _onChangeTheme : qx.core.Environment.select(\"qx.dyntheme\",\n    {\n      \"true\" : function() {\n        qx.bom.Stylesheet.removeAllRules(\n          qx.ui.table.cellrenderer.Abstract.__clazz.stylesheet\n        );\n        this._createStyleSheet();\n      },\n      \"false\" : null\n    }),\n\n\n    /**\n     * the sum of the horizontal insets. This is needed to compute the box model\n     * independent size\n     */\n    _insetX : 6+6+1, // paddingLeft + paddingRight + borderRight\n\n    /**\n     * the sum of the vertical insets. This is needed to compute the box model\n     * independent size\n     */\n    _insetY : 0,\n\n\n    /**\n     * Creates the style sheet used for the table cells.\n     */\n    _createStyleSheet : function() {\n      var colorMgr = qx.theme.manager.Color.getInstance();\n      var stylesheet =\n        \".qooxdoo-table-cell {\" +\n        qx.bom.element.Style.compile(\n        {\n          position : \"absolute\",\n          top: \"0px\",\n          overflow: \"hidden\",\n          whiteSpace : \"nowrap\",\n          borderRight : \"1px solid \" + colorMgr.resolve(\"table-column-line\"),\n          padding : \"0px 6px\",\n          cursor : \"default\",\n          textOverflow : \"ellipsis\",\n          userSelect : \"none\"\n        }) +\n        \"} \" +\n        \".qooxdoo-table-cell-right { text-align:right } \" +\n        \".qooxdoo-table-cell-italic { font-style:italic} \" +\n        \".qooxdoo-table-cell-bold { font-weight:bold } \";\n\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\n        stylesheet += \".qooxdoo-table-cell {\" + qx.bom.element.BoxSizing.compile(\"content-box\") + \"}\";\n      }\n\n      qx.ui.table.cellrenderer.Abstract.__clazz.stylesheet =\n        qx.bom.Stylesheet.createElement(stylesheet);\n    },\n\n\n    /**\n     * Get a string of the cell element's HTML classes.\n     *\n     * This method may be overridden by sub classes.\n     *\n     * @param cellInfo {Map} cellInfo of the cell\n     * @return {String} The table cell HTML classes as string.\n     */\n    _getCellClass : function(cellInfo) {\n      return \"qooxdoo-table-cell\";\n    },\n\n\n    /**\n     * Returns the CSS styles that should be applied to the main div of this\n     * cell.\n     *\n     * This method may be overridden by sub classes.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {var} the CSS styles of the main div.\n     */\n    _getCellStyle : function(cellInfo) {\n      return cellInfo.style || \"\";\n    },\n\n\n   /**\n     * Retrieve any extra attributes the cell renderer wants applied to this\n     * cell.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     *\n     * @return {String}\n     *   The extra attributes to be applied to this cell.\n     */\n    _getCellAttributes : function(cellInfo)\n    {\n      return \"\";\n    },\n\n\n    /**\n     * Returns the HTML that should be used inside the main div of this cell.\n     *\n     * This method may be overridden by sub classes.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {String} the inner HTML of the cell.\n     */\n    _getContentHtml : function(cellInfo) {\n      return cellInfo.value || \"\";\n    },\n\n\n    /**\n     * Get the cell size taking the box model into account\n     *\n     * @param width {Integer} The cell's (border-box) width in pixel\n     * @param height {Integer} The cell's (border-box) height in pixel\n     * @param insetX {Integer} The cell's horizontal insets, i.e. the sum of\n     *    horizontal paddings and borders\n     * @param insetY {Integer} The cell's vertical insets, i.e. the sum of\n     *    vertical paddings and borders\n     * @return {String} The CSS style string for the cell size\n     */\n    _getCellSizeStyle : function(width, height, insetX, insetY)\n    {\n      var style = \"\";\n      if (qx.core.Environment.get(\"css.boxmodel\") == \"content\")\n      {\n        width -= insetX;\n        height -= insetY;\n      }\n\n      style += \"width:\" + Math.max(width, 0) + \"px;\";\n      style += \"height:\" + Math.max(height, 0) + \"px;\";\n\n      return style;\n    },\n\n\n    // interface implementation\n    createDataCellHtml : function(cellInfo, htmlArr)\n    {\n      htmlArr.push(\n        '<div class=\"',\n        this._getCellClass(cellInfo),\n        '\" style=\"',\n        'left:', cellInfo.styleLeft, 'px;',\n        this._getCellSizeStyle(cellInfo.styleWidth, cellInfo.styleHeight, this._insetX, this._insetY),\n        this._getCellStyle(cellInfo), '\" ',\n        this._getCellAttributes(cellInfo),\n        '>' +\n        this._getContentHtml(cellInfo),\n        '</div>'\n      );\n    }\n\n  },\n\n\n  destruct : function() {\n    // remove dynamic theme listener\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().removeListener(\n        \"changeTheme\", this._onChangeTheme, this\n      );\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * The default data cell renderer.\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Default\",\n{\n  extend : qx.ui.table.cellrenderer.Abstract,\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    STYLEFLAG_ALIGN_RIGHT : 1,\n    STYLEFLAG_BOLD : 2,\n    STYLEFLAG_ITALIC : 4,\n    _numberFormat : null\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Whether the alignment should automatically be set according to the cell value.\n     * If true numbers will be right-aligned.\n     */\n    useAutoAlign :\n    {\n      check : \"Boolean\",\n      init : true\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Determines the styles to apply to the cell\n     *\n     * @param cellInfo {Map} cellInfo of the cell\n     *     See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {Integer} the sum of any of the STYLEFLAGS defined below\n     */\n    _getStyleFlags : function(cellInfo)\n    {\n      if (this.getUseAutoAlign())\n      {\n        if (typeof cellInfo.value == \"number\") {\n          return qx.ui.table.cellrenderer.Default.STYLEFLAG_ALIGN_RIGHT;\n        }\n      }\n      return 0;\n    },\n\n\n    // overridden\n    _getCellClass : function(cellInfo)\n    {\n      var cellClass = this.base(arguments, cellInfo);\n      if (!cellClass) {\n        return \"\";\n      }\n\n      var stylesToApply = this._getStyleFlags(cellInfo);\n\n      if (stylesToApply & qx.ui.table.cellrenderer.Default.STYLEFLAG_ALIGN_RIGHT) {\n        cellClass += \" qooxdoo-table-cell-right\";\n      }\n\n      if (stylesToApply & qx.ui.table.cellrenderer.Default.STYLEFLAG_BOLD) {\n        cellClass += \" qooxdoo-table-cell-bold\";\n      }\n\n      if (stylesToApply & qx.ui.table.cellrenderer.Default.STYLEFLAG_ITALIC) {\n        cellClass += \" qooxdoo-table-cell-italic\";\n      }\n\n      return cellClass;\n    },\n\n\n    // overridden\n    _getContentHtml : function(cellInfo) {\n      return qx.bom.String.escape(this._formatValue(cellInfo));\n    },\n\n\n    /**\n     * Formats a value.\n     *\n     * @param cellInfo {Map} A map containing the information about the cell to\n     *          create. This map has the same structure as in\n     *          {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {String} the formatted value.\n     */\n    _formatValue : function(cellInfo)\n    {\n      var value = cellInfo.value;\n      var res;\n\n      if (value == null) {\n        return \"\";\n      }\n\n      if (typeof value == \"string\") {\n        return value;\n      }\n      else if (typeof value == \"number\")\n      {\n        if (!qx.ui.table.cellrenderer.Default._numberFormat)\n        {\n          qx.ui.table.cellrenderer.Default._numberFormat = new qx.util.format.NumberFormat();\n          qx.ui.table.cellrenderer.Default._numberFormat.setMaximumFractionDigits(2);\n        }\n\n        res = qx.ui.table.cellrenderer.Default._numberFormat.format(value);\n      }\n      else if (value instanceof Date)\n      {\n        res = qx.util.format.DateFormat.getDateInstance().format(value);\n      }\n      else\n      {\n        res = value.toString();\n      }\n\n      return res;\n    }\n\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * A factory creating widgets to use for editing table cells.\n */\nqx.Interface.define(\"qx.ui.table.ICellEditorFactory\",\n{\n\n  members :\n  {\n    /**\n     * Creates a cell editor.\n     *\n     * The cellInfo map contains the following properties:\n     * <ul>\n     * <li>value (var): the cell's value.</li>\n     * <li>row (int): the model index of the row the cell belongs to.</li>\n     * <li>col (int): the model index of the column the cell belongs to.</li>\n     * <li>xPos (int): the x position of the cell in the table pane.</li>\n     * <li>table (qx.ui.table.Table) reference to the table, the cell belongs to. </li>\n     * </ul>\n     *\n     * @abstract\n     * @param cellInfo {Map} A map containing the information about the cell to\n     *      create.\n     * @return {qx.ui.core.Widget} the widget that should be used as cell editor.\n     */\n    createCellEditor : function(cellInfo) {\n      return true;\n    },\n\n\n    /**\n     * Returns the current value of a cell editor.\n     *\n     * @abstract\n     * @param cellEditor {qx.ui.core.Widget} The cell editor formally created by\n     *      {@link #createCellEditor}.\n     * @return {var} the current value from the editor.\n     */\n    getCellEditorValue : function(cellEditor) {\n      return true;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * An abstract cell editor factory creating text/password/spinner/... fields.\n */\nqx.Class.define(\"qx.ui.table.celleditor.AbstractField\",\n{\n  extend : qx.core.Object,\n  implement : qx.ui.table.ICellEditorFactory,\n  type : \"abstract\",\n\n\n  properties :\n  {\n    /**\n     * function that validates the result\n     * the function will be called with the new value and the old value and is\n     * supposed to return the value that is set as the table value.\n     **/\n    validationFunction :\n    {\n      check : \"Function\",\n      nullable : true,\n      init : null\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Factory to create the editor widget\n     *\n     * @return {qx.ui.core.Widget} The editor widget\n     */\n    _createEditor : function() {\n      throw new Error(\"Abstract method call!\");\n    },\n\n\n    // interface implementation\n    createCellEditor : function(cellInfo)\n    {\n      var cellEditor = this._createEditor();\n\n      cellEditor.originalValue = cellInfo.value;\n      if (cellInfo.value === null || cellInfo.value === undefined) {\n        cellInfo.value = \"\";\n      }\n      cellEditor.setValue(\"\" + cellInfo.value);\n\n      cellEditor.addListener(\"appear\", function() {\n        cellEditor.selectAllText();\n      });\n\n      return cellEditor;\n    },\n\n\n    // interface implementation\n    getCellEditorValue : function(cellEditor)\n    {\n      var value = cellEditor.getValue();\n\n      // validation function will be called with new and old value\n      var validationFunc = this.getValidationFunction();\n      if (validationFunc ) {\n        value = validationFunc( value, cellEditor.originalValue );\n      }\n\n      if (typeof cellEditor.originalValue == \"number\") {\n        value = parseFloat(value);\n      }\n\n      return value;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A cell editor factory creating text fields.\n */\nqx.Class.define(\"qx.ui.table.celleditor.TextField\",\n{\n  extend : qx.ui.table.celleditor.AbstractField,\n\n  members :\n  {\n    // overridden\n    getCellEditorValue : function(cellEditor)\n    {\n      var value = cellEditor.getValue();\n\n      // validation function will be called with new and old value\n      var validationFunc = this.getValidationFunction();\n      if (validationFunc ) {\n        value = validationFunc( value, cellEditor.originalValue );\n      }\n     \n      if (typeof cellEditor.originalValue == \"number\") {\n        // Correct problem of NaN displaying when value is null string.\n        //if (value != null) {\n        if (value != null && value != '') {\n          value = parseFloat(value);\n        }\n      }\n      return value;\n    },\n\n\n    _createEditor : function()\n    {\n      var cellEditor = new qx.ui.form.TextField();\n      cellEditor.setAppearance(\"table-editor-textfield\");\n      return cellEditor;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * A model that contains all meta data about columns, such as width, renderer,\n * visibility and order.\n *\n * @see qx.ui.table.ITableModel\n */\nqx.Class.define(\"qx.ui.table.columnmodel.Basic\",\n{\n  extend : qx.core.Object,\n\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__overallColumnArr = [];\n    this.__visibleColumnArr = [];\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events : {\n\n    /**\n     * Fired when the width of a column has changed. The data property of the event is\n     * a map having the following attributes:\n     * <ul>\n     *   <li>col: The model index of the column the width of which has changed.</li>\n     *   <li>newWidth: The new width of the column in pixels.</li>\n     *   <li>oldWidth: The old width of the column in pixels.</li>\n     * </ul>\n     */\n    \"widthChanged\" : \"qx.event.type.Data\",\n\n    /**\n     * Fired when the visibility of a column has changed. This event is equal to\n      * \"visibilityChanged\", but is fired right before.\n     */\n    \"visibilityChangedPre\" : \"qx.event.type.Data\",\n\n    /**\n     * Fired when the visibility of a column has changed. The data property of the\n     * event is a map having the following attributes:\n     * <ul>\n     *   <li>col: The model index of the column the visibility of which has changed.</li>\n     *   <li>visible: Whether the column is now visible.</li>\n     * </ul>\n     */\n    \"visibilityChanged\" : \"qx.event.type.Data\",\n\n    /**\n     * Fired when the column order has changed. The data property of the\n     * event is a map having the following attributes:\n     * <ul>\n     *   <li>col: The model index of the column that was moved.</li>\n     *   <li>fromOverXPos: The old overall x position of the column.</li>\n     *   <li>toOverXPos: The new overall x position of the column.</li>\n     * </ul>\n     */\n    \"orderChanged\" : \"qx.event.type.Data\",\n\n    /**\n     * Fired when the cell renderer of a column has changed.\n     * The data property of the event is a map having the following attributes:\n     * <ul>\n     *   <li>col: The model index of the column that was moved.</li>\n     * </ul>\n     */\n    \"headerCellRendererChanged\" : \"qx.event.type.Data\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n\n    /** @type {Integer} the default width of a column in pixels. */\n    DEFAULT_WIDTH           : 100,\n\n    /** @type {qx.ui.table.headerrenderer.Default} the default header cell renderer. */\n    DEFAULT_HEADER_RENDERER : qx.ui.table.headerrenderer.Default,\n\n    /** @type {qx.ui.table.cellrenderer.Default} the default data cell renderer. */\n    DEFAULT_DATA_RENDERER   : qx.ui.table.cellrenderer.Default,\n\n    /** @type {qx.ui.table.celleditor.TextField} the default editor factory. */\n    DEFAULT_EDITOR_FACTORY  : qx.ui.table.celleditor.TextField\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __internalChange : null,\n    __colToXPosMap : null,\n    __visibleColumnArr : null,\n    __overallColumnArr : null,\n    __columnDataArr : null,\n\n    __headerRenderer : null,\n    __dataRenderer : null,\n    __editorFactory : null,\n\n\n    /**\n     * Initializes the column model.\n     *\n     * @param colCount {Integer}\n     *   The number of columns the model should have.\n     *\n     * @param table {qx.ui.table.Table}\n     *   The table to which this column model is attached.\n     */\n    init : function(colCount, table)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInteger(colCount, \"Invalid argument 'colCount'.\");\n      }\n\n      this.__columnDataArr = [];\n\n      var width = qx.ui.table.columnmodel.Basic.DEFAULT_WIDTH;\n      var headerRenderer = this.__headerRenderer ||  (this.__headerRenderer = new qx.ui.table.columnmodel.Basic.DEFAULT_HEADER_RENDERER());\n      var dataRenderer = this.__dataRenderer || (this.__dataRenderer = new qx.ui.table.columnmodel.Basic.DEFAULT_DATA_RENDERER());\n      var editorFactory = this.__editorFactory || (this.__editorFactory = new qx.ui.table.columnmodel.Basic.DEFAULT_EDITOR_FACTORY());\n      this.__overallColumnArr = [];\n      this.__visibleColumnArr = [];\n\n      // Get the initially hidden column array, if one was provided. Older\n      // subclasses may not provide the 'table' argument, so we treat them\n      // traditionally with no initially hidden columns.\n      var initiallyHiddenColumns;\n\n      // Was a table provided to us?\n      if (table)\n      {\n        // Yup. Get its list of initially hidden columns, if the user provided\n        // such a list.\n        initiallyHiddenColumns = table.getInitiallyHiddenColumns();\n      }\n\n      // If no table was specified, or if the user didn't provide a list of\n      // initially hidden columns, use an empty list.\n      initiallyHiddenColumns = initiallyHiddenColumns || [];\n\n\n      for (var col=0; col<colCount; col++)\n      {\n        this.__columnDataArr[col] =\n        {\n          width          : width,\n          headerRenderer : headerRenderer,\n          dataRenderer   : dataRenderer,\n          editorFactory  : editorFactory\n        };\n\n        this.__overallColumnArr[col] = col;\n        this.__visibleColumnArr[col] = col;\n      }\n\n      this.__colToXPosMap = null;\n\n      // If any columns are initially hidden, hide them now. Make it an\n      // internal change so that events are not generated.\n      this.__internalChange = true;\n      for (var hidden=0; hidden<initiallyHiddenColumns.length; hidden++)\n      {\n        this.setColumnVisible(initiallyHiddenColumns[hidden], false);\n      }\n      this.__internalChange = false;\n\n      for (col=0; col<colCount; col++)\n      {\n        var data =\n        {\n          col     : col,\n          visible : this.isColumnVisible(col)\n        };\n\n        this.fireDataEvent(\"visibilityChangedPre\", data);\n        this.fireDataEvent(\"visibilityChanged\", data);\n      }\n    },\n\n\n    /**\n     * Return the array of visible columns\n     *\n     * @return {Array} List of all visible columns\n     */\n    getVisibleColumns : function() {\n      return this.__visibleColumnArr != null ? this.__visibleColumnArr : [];\n    },\n\n\n    /**\n     * Sets the width of a column.\n     *\n     * @param col {Integer}\n     *   The model index of the column.\n     *\n     * @param width {Integer}\n     *   The new width the column should get in pixels.\n     *\n     * @param isPointerAction {Boolean}\n     *   <i>true</i> if the column width is being changed as a result of a\n     *   pointer drag in the header; false or undefined otherwise.\n     *\n     */\n    setColumnWidth : function(col, width, isPointerAction)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n        this.assertInteger(width, \"Invalid argument 'width'.\");\n        this.assertNotUndefined(this.__columnDataArr[col], \"Column not found in table model\");\n      }\n\n      var oldWidth = this.__columnDataArr[col].width;\n\n      if (oldWidth != width)\n      {\n        this.__columnDataArr[col].width = width;\n\n        var data =\n        {\n          col           : col,\n          newWidth      : width,\n          oldWidth      : oldWidth,\n          isPointerAction : isPointerAction || false\n        };\n\n        this.fireDataEvent(\"widthChanged\", data);\n      }\n    },\n\n\n    /**\n     * Returns the width of a column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @return {Integer} the width of the column in pixels.\n     */\n    getColumnWidth : function(col)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n        this.assertNotUndefined(this.__columnDataArr[col], \"Column not found in table model\");\n      }\n\n      return this.__columnDataArr[col].width;\n    },\n\n\n    /**\n     * Sets the header renderer of a column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @param renderer {qx.ui.table.IHeaderRenderer} the new header renderer the column\n     *      should get.\n     */\n    setHeaderCellRenderer : function(col, renderer)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n        this.assertInterface(renderer, qx.ui.table.IHeaderRenderer, \"Invalid argument 'renderer'.\");\n        this.assertNotUndefined(this.__columnDataArr[col], \"Column not found in table model\");\n      }\n\n      var oldRenderer = this.__columnDataArr[col].headerRenderer;\n      if (oldRenderer !== this.__headerRenderer) {\n        oldRenderer.dispose();\n      }\n\n      this.__columnDataArr[col].headerRenderer = renderer;\n      this.fireDataEvent(\"headerCellRendererChanged\", {col:col});\n    },\n\n\n    /**\n     * Returns the header renderer of a column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @return {qx.ui.table.IHeaderRenderer} the header renderer of the column.\n     */\n    getHeaderCellRenderer : function(col)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n        this.assertNotUndefined(this.__columnDataArr[col], \"Column not found in table model\");\n      }\n\n      return this.__columnDataArr[col].headerRenderer;\n    },\n\n\n    /**\n     * Sets the data renderer of a column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @param renderer {qx.ui.table.ICellRenderer} the new data renderer\n     *   the column should get.\n     * @return {qx.ui.table.ICellRenderer?null} If an old renderer was set and\n     *   it was not the default renderer, the old renderer is returned for\n     *   pooling or disposing.\n     */\n    setDataCellRenderer : function(col, renderer)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n        this.assertInterface(renderer, qx.ui.table.ICellRenderer, \"Invalid argument 'renderer'.\");\n        this.assertNotUndefined(this.__columnDataArr[col], \"Column not found in table model\");\n      }\n\n      var oldRenderer = this.__columnDataArr[col].dataRenderer;\n      this.__columnDataArr[col].dataRenderer = renderer;\n\n      if (oldRenderer !== this.__dataRenderer) {\n        return oldRenderer;\n      }\n      return null;\n    },\n\n\n    /**\n     * Returns the data renderer of a column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @return {qx.ui.table.ICellRenderer} the data renderer of the column.\n     */\n    getDataCellRenderer : function(col)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n        this.assertNotUndefined(this.__columnDataArr[col], \"Column not found in table model\");\n      }\n\n      return this.__columnDataArr[col].dataRenderer;\n    },\n\n\n    /**\n     * Sets the cell editor factory of a column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @param factory {qx.ui.table.ICellEditorFactory} the new cell editor factory the column should get.\n     */\n    setCellEditorFactory : function(col, factory)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n        this.assertInterface(factory, qx.ui.table.ICellEditorFactory, \"Invalid argument 'factory'.\");\n        this.assertNotUndefined(this.__columnDataArr[col], \"Column not found in table model\");\n      }\n\n      var oldFactory = this.__columnDataArr[col].editorFactory;\n      if (oldFactory === factory) {\n        return;\n      }\n      if (oldFactory !== this.__editorFactory) {\n        oldFactory.dispose();\n      }\n\n      this.__columnDataArr[col].editorFactory = factory;\n    },\n\n\n    /**\n     * Returns the cell editor factory of a column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @return {qx.ui.table.ICellEditorFactory} the cell editor factory of the column.\n     */\n    getCellEditorFactory : function(col)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n        this.assertNotUndefined(this.__columnDataArr[col], \"Column not found in table model\");\n      }\n\n      return this.__columnDataArr[col].editorFactory;\n    },\n\n\n    /**\n     * Returns the map that translates model indexes to x positions.\n     *\n     * The returned map contains for a model index (int) a map having two\n     * properties: overX (the overall x position of the column, int) and\n     * visX (the visible x position of the column, int). visX is missing for\n     * hidden columns.\n     *\n     * @return {Map} the \"column to x position\" map.\n     */\n    _getColToXPosMap : function()\n    {\n      if (this.__colToXPosMap == null)\n      {\n        this.__colToXPosMap = {};\n\n        for (var overX=0; overX<this.__overallColumnArr.length; overX++)\n        {\n          var col = this.__overallColumnArr[overX];\n          this.__colToXPosMap[col] = { overX : overX };\n        }\n\n        for (var visX=0; visX<this.__visibleColumnArr.length; visX++)\n        {\n          var col = this.__visibleColumnArr[visX];\n          this.__colToXPosMap[col].visX = visX;\n        }\n      }\n\n      return this.__colToXPosMap;\n    },\n\n\n    /**\n     * Returns the number of visible columns.\n     *\n     * @return {Integer} the number of visible columns.\n     */\n    getVisibleColumnCount : function() {\n      return this.__visibleColumnArr != null ? this.__visibleColumnArr.length : 0;\n    },\n\n\n    /**\n     * Returns the model index of a column at a certain visible x position.\n     *\n     * @param visXPos {Integer} the visible x position of the column.\n     * @return {Integer} the model index of the column.\n     */\n    getVisibleColumnAtX : function(visXPos)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInteger(visXPos, \"Invalid argument 'visXPos'.\");\n      }\n\n      return this.__visibleColumnArr[visXPos];\n    },\n\n\n    /**\n     * Returns the visible x position of a column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @return {Integer} the visible x position of the column.\n     */\n    getVisibleX : function(col)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n      }\n\n      return this._getColToXPosMap()[col].visX;\n    },\n\n\n    /**\n     * Returns the overall number of columns (including hidden columns).\n     *\n     * @return {Integer} the overall number of columns.\n     */\n    getOverallColumnCount : function() {\n      return this.__overallColumnArr.length;\n    },\n\n\n    /**\n     * Returns the model index of a column at a certain overall x position.\n     *\n     * @param overXPos {Integer} the overall x position of the column.\n     * @return {Integer} the model index of the column.\n     */\n    getOverallColumnAtX : function(overXPos)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInteger(overXPos, \"Invalid argument 'overXPos'.\");\n      }\n\n      return this.__overallColumnArr[overXPos];\n    },\n\n\n    /**\n     * Returns the overall x position of a column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @return {Integer} the overall x position of the column.\n     */\n    getOverallX : function(col)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n      }\n\n      return this._getColToXPosMap()[col].overX;\n    },\n\n\n    /**\n     * Returns whether a certain column is visible.\n     *\n     * @param col {Integer} the model index of the column.\n     * @return {Boolean} whether the column is visible.\n     */\n    isColumnVisible : function(col)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n      }\n\n      return (this._getColToXPosMap()[col].visX != null);\n    },\n\n\n    /**\n     * Sets whether a certain column is visible.\n     *\n     * @param col {Integer} the model index of the column.\n     * @param visible {Boolean} whether the column should be visible.\n     */\n    setColumnVisible : function(col, visible)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(col, \"Invalid argument 'col'.\");\n        this.assertBoolean(visible, \"Invalid argument 'visible'.\");\n      }\n\n      if (visible != this.isColumnVisible(col))\n      {\n        if (visible)\n        {\n          var colToXPosMap = this._getColToXPosMap();\n\n          var overX = colToXPosMap[col].overX;\n\n          if (overX == null) {\n            throw new Error(\"Showing column failed: \" + col + \". The column is not added to this TablePaneModel.\");\n          }\n\n          // get the visX of the next visible column after the column to show\n          var nextVisX;\n\n          for (var x=overX+1; x<this.__overallColumnArr.length; x++)\n          {\n            var currCol = this.__overallColumnArr[x];\n            var currVisX = colToXPosMap[currCol].visX;\n\n            if (currVisX != null)\n            {\n              nextVisX = currVisX;\n              break;\n            }\n          }\n\n          // If there comes no visible column any more, then show the column\n          // at the end\n          if (nextVisX == null) {\n            nextVisX = this.__visibleColumnArr.length;\n          }\n\n          // Add the column to the visible columns\n          this.__visibleColumnArr.splice(nextVisX, 0, col);\n        }\n        else\n        {\n          var visX = this.getVisibleX(col);\n          this.__visibleColumnArr.splice(visX, 1);\n        }\n\n        // Invalidate the __colToXPosMap\n        this.__colToXPosMap = null;\n\n        // Inform the listeners\n        if (!this.__internalChange)\n        {\n          var data =\n          {\n            col     : col,\n            visible : visible\n          };\n\n          this.fireDataEvent(\"visibilityChangedPre\", data);\n          this.fireDataEvent(\"visibilityChanged\", data);\n        }\n      }\n    },\n\n\n    /**\n     * Moves a column.\n     *\n     * @param fromOverXPos {Integer} the overall x position of the column to move.\n     * @param toOverXPos {Integer} the overall x position of where the column should be\n     *      moved to.\n     */\n    moveColumn : function(fromOverXPos, toOverXPos)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInteger(fromOverXPos, \"Invalid argument 'fromOverXPos'.\");\n        this.assertInteger(toOverXPos, \"Invalid argument 'toOverXPos'.\");\n      }\n\n      this.__internalChange = true;\n\n      var col = this.__overallColumnArr[fromOverXPos];\n      var visible = this.isColumnVisible(col);\n\n      if (visible) {\n        this.setColumnVisible(col, false);\n      }\n\n      this.__overallColumnArr.splice(fromOverXPos, 1);\n      this.__overallColumnArr.splice(toOverXPos, 0, col);\n\n      // Invalidate the __colToXPosMap\n      this.__colToXPosMap = null;\n\n      if (visible) {\n        this.setColumnVisible(col, true);\n      }\n      this.__internalChange = false;\n\n      // Inform the listeners\n      var data =\n      {\n        col          : col,\n        fromOverXPos : fromOverXPos,\n        toOverXPos   : toOverXPos\n      };\n\n      this.fireDataEvent(\"orderChanged\", data);\n    },\n\n\n    /**\n     * Reorders all columns to new overall positions. Will fire one \"orderChanged\" event\n     * without data afterwards\n     *\n     * @param newPositions {Integer[]} Array mapping the index of a column in table model to its wanted overall\n     *                            position on screen (both zero based). If the table models holds\n     *                            col0, col1, col2 and col3 and you give [1,3,2,0], the new column order\n     *                            will be col3, col0, col2, col1\n     */\n    setColumnsOrder : function(newPositions)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertArray(newPositions, \"Invalid argument 'newPositions'.\");\n      }\n\n      if (newPositions.length == this.__overallColumnArr.length)\n      {\n        this.__internalChange = true;\n\n        // Go through each column an switch visible ones to invisible. Reason is unknown,\n        // this just mimicks the behaviour of moveColumn. Possibly useful because setting\n        // a column visible later updates a map with its screen coords.\n        var isVisible = new Array(newPositions.length);\n        for (var colIdx = 0; colIdx < this.__overallColumnArr.length; colIdx++)\n        {\n          var visible = this.isColumnVisible(colIdx);\n          isVisible[colIdx] = visible; //Remember, as this relies on this.__colToXPosMap which is cleared below\n          if (visible){\n            this.setColumnVisible(colIdx, false);\n          }\n        }\n\n        // Store new position values\n        this.__overallColumnArr = qx.lang.Array.clone(newPositions);\n\n        // Invalidate the __colToXPosMap\n        this.__colToXPosMap = null;\n\n        // Go through each column an switch invisible ones back to visible\n        for (var colIdx = 0; colIdx < this.__overallColumnArr.length; colIdx++){\n          if (isVisible[colIdx]) {\n            this.setColumnVisible(colIdx, true);\n          }\n        }\n        this.__internalChange = false;\n\n        // Inform the listeners. Do not add data as all known listeners in qooxdoo\n        // only take this event to mean \"total repaint necesscary\". Fabian will look\n        // after deprecating the data part of the orderChanged - event\n        this.fireDataEvent(\"orderChanged\");\n\n      } else {\n        throw new Error(\"setColumnsOrder: Invalid number of column positions given, expected \"\n                        + this.__overallColumnArr.length + \", got \" + newPositions.length);\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    for (var i=0; i< this.__columnDataArr.length; i++)\n    {\n      this.__columnDataArr[i].headerRenderer.dispose();\n      this.__columnDataArr[i].dataRenderer.dispose();\n      this.__columnDataArr[i].editorFactory.dispose();\n    }\n\n    this.__overallColumnArr = this.__visibleColumnArr =\n      this.__columnDataArr = this.__colToXPosMap = null;\n\n    this._disposeObjects(\n      \"__headerRenderer\",\n      \"__dataRenderer\",\n      \"__editorFactory\"\n    );\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * A table column model that automatically resizes columns based on a\n * selected behavior.\n *\n * @see qx.ui.table.columnmodel.Basic\n */\nqx.Class.define(\"qx.ui.table.columnmodel.Resize\",\n{\n  extend : qx.ui.table.columnmodel.Basic,\n  include : qx.locale.MTranslation,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // We don't want to recursively call ourself based on our resetting of\n    // column sizes.  Track when we're resizing.\n    this.__bInProgress = false;\n\n    // Track when the table has appeared.  We want to ignore resize events\n    // until then since we won't be able to determine the available width\n    // anyway.\n    this.__bAppeared = false;\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * The behavior to use.\n     *\n     * The provided behavior must extend {@link qx.ui.table.columnmodel.resizebehavior.Abstract} and\n     * implement the <i>onAppear</i>, <i>onTableWidthChanged</i>,\n     * <i>onColumnWidthChanged</i> and <i>onVisibilityChanged</i>methods.\n     */\n    behavior :\n    {\n      check : \"qx.ui.table.columnmodel.resizebehavior.Abstract\",\n      init : null,\n      nullable : true,\n      apply : \"_applyBehavior\",\n      event : \"changeBehavior\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __bAppeared : null,\n    __bInProgress : null,\n    __table : null,\n\n\n    // Behavior modifier\n    _applyBehavior : function(value, old)\n    {\n      if (old != null)\n      {\n        old.dispose();\n        old = null;\n      }\n\n      // Tell the new behavior how many columns there are\n      value._setNumColumns(this.getOverallColumnCount());\n      value.setTableColumnModel(this);\n    },\n\n\n    /**\n     * Initializes the column model.\n     *\n     * @param numColumns {Integer} the number of columns the model should have.\n     * @param table {qx.ui.table.Table}\n     *   The table which this model is used for. This allows us access to\n     *   other aspects of the table, as the <i>behavior</i> sees fit.\n     */\n    init : function(numColumns, table)\n    {\n      // Call our superclass\n      this.base(arguments, numColumns, table);\n\n      if (this.__table == null)\n      {\n        this.__table = table;\n        // We'll do our column resizing when the table appears, ...\n        table.addListener(\"appear\", this._onappear, this);\n\n        // ... when the inner width of the table changes, ...\n        table.addListener(\"tableWidthChanged\", this._onTableWidthChanged, this);\n\n        // ... when a vertical scroll bar appears or disappears\n        table.addListener(\n          \"verticalScrollBarChanged\",\n          this._onverticalscrollbarchanged,\n          this\n        );\n\n        // We want to manipulate the button visibility menu\n        table.addListener(\n          \"columnVisibilityMenuCreateEnd\",\n          this._addResetColumnWidthButton,\n          this\n        );\n\n        // ... when columns are resized, ...\n        this.addListener(\"widthChanged\", this._oncolumnwidthchanged, this );\n\n        // ... and when a column visibility changes.\n        this.addListener(\"visibilityChanged\", this._onvisibilitychanged, this);\n      }\n\n      // Set the initial resize behavior\n      if (this.getBehavior() == null) {\n        this.setBehavior(new qx.ui.table.columnmodel.resizebehavior.Default());\n      }\n\n      // Tell the behavior how many columns there are\n      this.getBehavior()._setNumColumns(numColumns);\n    },\n\n\n    /**\n     * Get the table widget\n     *\n     * @return {qx.ui.table.Table} the table widget\n     */\n    getTable : function() {\n      return this.__table;\n    },\n\n\n    /**\n     * Reset the column widths to their \"onappear\" defaults.\n     *\n     * @param event {qx.event.type.Data}\n     *   The \"columnVisibilityMenuCreateEnd\" event indicating that the menu is\n     *   being generated.  The data is a map containing properties <i>table</i>\n     *   and <i>menu</i>.\n     *\n     */\n    _addResetColumnWidthButton : function(event)\n    {\n      var data = event.getData();\n      var columnButton = data.columnButton;\n      var menu = data.menu;\n      var o;\n\n      // Add a separator between the column names and our reset button\n      o = columnButton.factory(\"separator\");\n      menu.add(o);\n\n      // Add a button to reset the column widths\n      o = columnButton.factory(\"user-button\",\n                               {\n                                 text : this.tr(\"Reset column widths\")\n                               });\n      menu.add(o);\n      o.addListener(\"execute\", this._onappear, this);\n    },\n\n\n    /**\n     * Event handler for the \"appear\" event.\n     *\n     * @param event {qx.event.type.Event}\n     *   The \"onappear\" event object.\n     *\n     */\n    _onappear : function(event)\n    {\n      // Is this a recursive call?\n      if (this.__bInProgress)\n      {\n        // Yup.  Ignore it.\n        return ;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\"))\n        {\n          this.debug(\"onappear\");\n        }\n      }\n\n      // this handler is also called by the \"execute\" event of the menu button\n      this.getBehavior().onAppear(event, event.getType() !== \"appear\");\n\n      this.__table._updateScrollerWidths();\n      this.__table._updateScrollBarVisibility();\n\n      this.__bInProgress = false;\n\n      this.__bAppeared = true;\n    },\n\n\n    /**\n     * Event handler for the \"tableWidthChanged\" event.\n     *\n     * @param event {qx.event.type.Event}\n     *   The \"onwindowresize\" event object.\n     *\n     */\n    _onTableWidthChanged : function(event)\n    {\n      // Is this a recursive call or has the table not yet been rendered?\n      if (this.__bInProgress || !this.__bAppeared)\n      {\n        // Yup.  Ignore it.\n        return;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\"))\n        {\n          this.debug(\"ontablewidthchanged\");\n        }\n      }\n\n      this.getBehavior().onTableWidthChanged(event);\n      this.__bInProgress = false;\n    },\n\n\n    /**\n     * Event handler for the \"verticalScrollBarChanged\" event.\n     *\n     * @param event {qx.event.type.Data}\n     *   The \"verticalScrollBarChanged\" event object.  The data is a boolean\n     *   indicating whether a vertical scroll bar is now present.\n     *\n     */\n    _onverticalscrollbarchanged : function(event)\n    {\n      // Is this a recursive call or has the table not yet been rendered?\n      if (this.__bInProgress || !this.__bAppeared)\n      {\n        // Yup.  Ignore it.\n        return;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\"))\n        {\n          this.debug(\"onverticalscrollbarchanged\");\n        }\n      }\n\n      this.getBehavior().onVerticalScrollBarChanged(event);\n\n      qx.event.Timer.once(function()\n      {\n        if (this.__table && !this.__table.isDisposed())\n        {\n          this.__table._updateScrollerWidths();\n          this.__table._updateScrollBarVisibility();\n        }\n      }, this, 0);\n\n      this.__bInProgress = false;\n    },\n\n\n    /**\n     * Event handler for the \"widthChanged\" event.\n     *\n     * @param event {qx.event.type.Data}\n     *   The \"widthChanged\" event object.\n     *\n     */\n    _oncolumnwidthchanged : function(event)\n    {\n      // Is this a recursive call or has the table not yet been rendered?\n      if (this.__bInProgress || !this.__bAppeared)\n      {\n        // Yup.  Ignore it.\n        return;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\"))\n        {\n          this.debug(\"oncolumnwidthchanged\");\n        }\n      }\n\n      this.getBehavior().onColumnWidthChanged(event);\n      this.__bInProgress = false;\n    },\n\n\n    /**\n     * Event handler for the \"visibilityChanged\" event.\n     *\n     * @param event {qx.event.type.Data}\n     *   The \"visibilityChanged\" event object.\n     *\n     */\n    _onvisibilitychanged : function(event)\n    {\n      // Is this a recursive call or has the table not yet been rendered?\n      if (this.__bInProgress || !this.__bAppeared)\n      {\n        // Yup.  Ignore it.\n        return;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\"))\n        {\n          this.debug(\"onvisibilitychanged\");\n        }\n      }\n\n      this.getBehavior().onVisibilityChanged(event);\n      this.__bInProgress = false;\n    }\n  },\n\n\n /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    var behavior = this.getBehavior();\n    if (behavior) {\n      behavior.dispose();\n    }\n    this.__table = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Table\n *\n * A detailed description can be found in the package description\n * {@link qx.ui.table}.\n *\n * @childControl statusbar {qx.ui.basic.Label} label to show the status of the table\n * @childControl column-button {qx.ui.table.columnmenu.Button} button to open the column menu\n */\nqx.Class.define(\"qx.ui.table.Table\",\n{\n  extend : qx.ui.core.Widget,\n  include : qx.ui.core.MDragDropScrolling,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param tableModel {qx.ui.table.ITableModel ? null}\n   *   The table model to read the data from.\n   *\n   * @param custom {Map ? null}\n   *   A map provided to override the various supplemental classes allocated\n   *   within this constructor.  Each property must be a function which\n   *   returns an object instance, as indicated by shown the defaults listed\n   *   here:\n   *\n   *   <dl>\n   *     <dt>initiallyHiddenColumns</dt>\n   *       <dd>\n   *         {Array?}\n   *         A list of column numbers that should be initially invisible. Any\n   *         column not mentioned will be initially visible, and if no array\n   *         is provided, all columns will be initially visible.\n   *       </dd>\n   *     <dt>selectionManager</dt>\n   *       <dd><pre class='javascript'>\n   *         function(obj)\n   *         {\n   *           return new qx.ui.table.selection.Manager(obj);\n   *         }\n   *       </pre></dd>\n   *     <dt>selectionModel</dt>\n   *       <dd><pre class='javascript'>\n   *         function(obj)\n   *         {\n   *           return new qx.ui.table.selection.Model(obj);\n   *         }\n   *       </pre></dd>\n   *     <dt>tableColumnModel</dt>\n   *       <dd><pre class='javascript'>\n   *         function(obj)\n   *         {\n   *           return new qx.ui.table.columnmodel.Basic(obj);\n   *         }\n   *       </pre></dd>\n   *     <dt>tablePaneModel</dt>\n   *       <dd><pre class='javascript'>\n   *         function(obj)\n   *         {\n   *           return new qx.ui.table.pane.Model(obj);\n   *         }\n   *       </pre></dd>\n   *     <dt>tablePane</dt>\n   *       <dd><pre class='javascript'>\n   *         function(obj)\n   *         {\n   *           return new qx.ui.table.pane.Pane(obj);\n   *         }\n   *       </pre></dd>\n   *     <dt>tablePaneHeader</dt>\n   *       <dd><pre class='javascript'>\n   *         function(obj)\n   *         {\n   *           return new qx.ui.table.pane.Header(obj);\n   *         }\n   *       </pre></dd>\n   *     <dt>tablePaneScroller</dt>\n   *       <dd><pre class='javascript'>\n   *         function(obj)\n   *         {\n   *           return new qx.ui.table.pane.Scroller(obj);\n   *         }\n   *       </pre></dd>\n   *     <dt>tablePaneModel</dt>\n   *       <dd><pre class='javascript'>\n   *         function(obj)\n   *         {\n   *           return new qx.ui.table.pane.Model(obj);\n   *         }\n   *       </pre></dd>\n   *     <dt>columnMenu</dt>\n   *       <dd><pre class='javascript'>\n   *         function()\n   *         {\n   *           return new qx.ui.table.columnmenu.Button();\n   *         }\n   *       </pre></dd>\n   *   </dl>\n   */\n  construct : function(tableModel, custom)\n  {\n    this.base(arguments);\n    //\n    // Use default objects if custom objects are not specified\n    //\n    if (!custom) {\n      custom = { };\n    }\n\n    if (custom.initiallyHiddenColumns) {\n      this.setInitiallyHiddenColumns(custom.initiallyHiddenColumns);\n    }\n\n    if (custom.selectionManager) {\n      this.setNewSelectionManager(custom.selectionManager);\n    }\n\n    if (custom.selectionModel) {\n      this.setNewSelectionModel(custom.selectionModel);\n    }\n\n    if (custom.tableColumnModel) {\n      this.setNewTableColumnModel(custom.tableColumnModel);\n    }\n\n    if (custom.tablePane) {\n      this.setNewTablePane(custom.tablePane);\n    }\n\n    if (custom.tablePaneHeader) {\n      this.setNewTablePaneHeader(custom.tablePaneHeader);\n    }\n\n    if (custom.tablePaneScroller) {\n      this.setNewTablePaneScroller(custom.tablePaneScroller);\n    }\n\n    if (custom.tablePaneModel) {\n      this.setNewTablePaneModel(custom.tablePaneModel);\n    }\n\n    if (custom.columnMenu) {\n      this.setNewColumnMenu(custom.columnMenu);\n    }\n\n    this._setLayout(new qx.ui.layout.VBox());\n\n    // Create the child widgets\n    this.__scrollerParent = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n    this._add(this.__scrollerParent, {flex: 1});\n\n    // Allocate a default data row renderer\n    this.setDataRowRenderer(new qx.ui.table.rowrenderer.Default(this));\n\n    // Create the models\n    this.__selectionManager = this.getNewSelectionManager()(this);\n    this.setSelectionModel(this.getNewSelectionModel()(this));\n    this.setTableModel(tableModel || this.getEmptyTableModel());\n\n    // create the main meta column\n    this.setMetaColumnCounts([ -1 ]);\n\n    // Make focusable\n    this.setTabIndex(1);\n    this.addListener(\"keydown\", this._onKeyDown);\n    this.addListener(\"focus\", this._onFocusChanged);\n    this.addListener(\"blur\", this._onFocusChanged);\n\n    // attach the resize listener to the last child of the layout. This\n    // ensures that all other children are laid out before\n    var spacer = new qx.ui.core.Widget().set({\n      height: 0\n    });\n    this._add(spacer);\n    spacer.addListener(\"resize\", this._onResize, this);\n\n    this.__focusedCol = null;\n    this.__focusedRow = null;\n\n    // add an event listener which updates the table content on locale change\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n\n    this.initStatusBarVisible();\n\n    // If the table model has an init() method...\n    tableModel = this.getTableModel();\n    if (tableModel.init && typeof(tableModel.init) == \"function\")\n    {\n      // ... then call it now to allow the table model to affect table\n      // properties.\n      tableModel.init(this);\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * Dispatched before adding the column list to the column visibility menu.\n     * The event data is a map with two properties: table and menu.  Listeners\n     * may add additional items to the menu, which appear at the top of the\n     * menu.\n     */\n    \"columnVisibilityMenuCreateStart\" : \"qx.event.type.Data\",\n\n    /**\n     * Dispatched after adding the column list to the column visibility menu.\n     * The event data is a map with two properties: table and menu.  Listeners\n     * may add additional items to the menu, which appear at the bottom of the\n     * menu.\n     */\n    \"columnVisibilityMenuCreateEnd\" : \"qx.event.type.Data\",\n\n     /**\n      * Dispatched when the width of the table has changed.\n      */\n    \"tableWidthChanged\" : \"qx.event.type.Event\",\n\n    /**\n     * Dispatched when updating scrollbars discovers that a vertical scrollbar\n     * is needed when it previously was not, or vice versa.  The data is a\n     * boolean indicating whether a vertical scrollbar is now being used.\n     */\n    \"verticalScrollBarChanged\" : \"qx.event.type.Data\",\n\n    /**\n     * Dispatched when a data cell has been tapped.\n     */\n    \"cellTap\" : \"qx.ui.table.pane.CellEvent\",\n\n    /**\n     * Dispatched when a data cell has been tapped.\n     */\n    \"cellDbltap\" : \"qx.ui.table.pane.CellEvent\",\n\n    /**\n     * Dispatched when the context menu is needed in a data cell\n     */\n    \"cellContextmenu\" : \"qx.ui.table.pane.CellEvent\",\n\n    /**\n     * Dispatched after a cell editor is flushed.\n     *\n     * The data is a map containing this properties:\n     * <ul>\n     *   <li>row</li>\n     *   <li>col</li>\n     *   <li>value</li>\n     *   <li>oldValue</li>\n     * </ul>\n     */\n    \"dataEdited\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** Events that must be redirected to the scrollers. */\n    __redirectEvents : { cellTap: 1, cellDbltap: 1, cellContextmenu: 1 }\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    appearance :\n    {\n      refine : true,\n      init : \"table\"\n    },\n\n\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    minWidth :\n    {\n      refine : true,\n      init : 50\n    },\n\n    /**\n     * The list of columns that are initially hidden. This property is set by\n     * the constructor, from the value received in\n     * custom.initiallyHiddenColumns, and is only used when a column model is\n     * initialized. It can be of great benefit in tables with numerous columns\n     * where most are not initially visible. The process of creating the\n     * headers for all of the columns, only to have those columns discarded\n     * shortly thereafter when setColumnVisibility(false) is called, is a\n     * waste of (significant, in some browsers) time. Specifying the\n     * non-visible columns at constructor time can therefore avoid the initial\n     * creation of all of those superfluous widgets.\n     */\n    initiallyHiddenColumns :\n    {\n      init : null\n    },\n\n    /**\n     * Whether the widget contains content which may be selected by the user.\n     *\n     * If the value set to <code>true</code> the native browser selection can\n     * be used for text selection. But it is normally useful for\n     * forms fields, longer texts/documents, editors, etc.\n     *\n     * Note: This has no effect on Table!\n     */\n    selectable :\n    {\n      refine : true,\n      init : false\n    },\n\n\n    /** The selection model. */\n    selectionModel :\n    {\n      check : \"qx.ui.table.selection.Model\",\n      apply : \"_applySelectionModel\",\n      event : \"changeSelectionModel\"\n    },\n\n\n    /** The table model. */\n    tableModel :\n    {\n      check : \"qx.ui.table.ITableModel\",\n      apply : \"_applyTableModel\",\n      event : \"changeTableModel\"\n    },\n\n\n    /** The height of the table rows. */\n    rowHeight :\n    {\n      check : \"Number\",\n      init : 20,\n      apply : \"_applyRowHeight\",\n      event : \"changeRowHeight\",\n      themeable : true\n    },\n\n\n    /**\n     * Force line height to match row height.  May be disabled if cell\n     * renderers being used wish to render multiple lines of data within a\n     * cell.  (With the default setting, all but the first of multiple lines\n     * of data will not be visible.)\n     */\n    forceLineHeight :\n    {\n      check : \"Boolean\",\n      init  : true\n    },\n\n\n    /**\n     *  Whether the header cells are visible. When setting this to false,\n     *  you'll likely also want to set the {#columnVisibilityButtonVisible}\n     *  property to false as well, to entirely remove the header row.\n     */\n    headerCellsVisible :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyHeaderCellsVisible\",\n      themeable : true\n    },\n\n\n    /** The height of the header cells. */\n    headerCellHeight :\n    {\n      check : \"Integer\",\n      init : 16,\n      apply : \"_applyHeaderCellHeight\",\n      event : \"changeHeaderCellHeight\",\n      nullable : true,\n      themeable : true\n    },\n\n\n    /** Whether to show the status bar */\n    statusBarVisible :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyStatusBarVisible\"\n    },\n\n\n    /** The Statusbartext, set it, if you want some more Information */\n    additionalStatusBarText :\n    {\n      nullable : true,\n      init : null,\n      apply : \"_applyAdditionalStatusBarText\"\n    },\n\n\n    /** Whether to show the column visibility button */\n    columnVisibilityButtonVisible :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyColumnVisibilityButtonVisible\",\n      themeable : true\n    },\n\n\n    /**\n     * @type {Integer[]} The number of columns per meta column. If the last array entry is -1,\n     * this meta column will get the remaining columns.\n     */\n    metaColumnCounts :\n    {\n      check : \"Object\",\n      apply : \"_applyMetaColumnCounts\"\n    },\n\n\n    /**\n     * Whether the focus should moved when the pointer is moved over a cell. If false\n     * the focus is only moved on pointer taps.\n     */\n    focusCellOnPointerMove :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyFocusCellOnPointerMove\"\n    },\n\n    /**\n     * Whether row focus change by keyboard also modifies selection\n     */\n    rowFocusChangeModifiesSelection :\n    {\n      check : \"Boolean\",\n      init : true\n    },\n\n    /**\n     * Whether the cell focus indicator should be shown\n     */\n    showCellFocusIndicator :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyShowCellFocusIndicator\"\n    },\n\n    /**\n     * By default, the \"cellContextmenu\" event is fired only when a data cell\n     * is right-clicked. It is not fired when a right-click occurs in the\n     * empty area of the table below the last data row. By turning on this\n     * property, \"cellContextMenu\" events will also be generated when a\n     * right-click occurs in that empty area. In such a case, row identifier\n     * in the event data will be null, so event handlers can check (row ===\n     * null) to handle this case.\n     */\n    contextMenuFromDataCellsOnly :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyContextMenuFromDataCellsOnly\"\n    },\n\n    /**\n     * Whether the table should keep the first visible row complete. If set to false,\n     * the first row may be rendered partial, depending on the vertical scroll value.\n     */\n    keepFirstVisibleRowComplete :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyKeepFirstVisibleRowComplete\"\n    },\n\n\n    /**\n     * Whether the table cells should be updated when only the selection or the\n     * focus changed. This slows down the table update but allows to react on a\n     * changed selection or a changed focus in a cell renderer.\n     */\n    alwaysUpdateCells :\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n\n    /**\n     * Whether to reset the selection when a header cell is tapped. Since\n     * most data models do not have provisions to retain a selection after\n     * sorting, the default is to reset the selection in this case. Some data\n     * models, however, do have the capability to retain the selection, so\n     * when using those, this property should be set to false.\n     */\n    resetSelectionOnHeaderTap :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyResetSelectionOnHeaderTap\"\n    },\n\n\n    /** The renderer to use for styling the rows. */\n    dataRowRenderer :\n    {\n      check : \"qx.ui.table.IRowRenderer\",\n      init : null,\n      nullable : true,\n      event : \"changeDataRowRenderer\"\n    },\n\n\n    /**\n     * A function to call when before modal cell editor is opened.\n     *\n     * @signature function(cellEditor, cellInfo)\n     *\n     * @param cellEditor {qx.ui.window.Window}\n     *   The modal window which has been created for this cell editor\n     *\n     * @param cellInfo {Map}\n     *   Information about the cell for which this cell editor was created.\n     *   It contains the following properties:\n     *       col, row, xPos, value\n     *\n     */\n    modalCellEditorPreOpenFunction :\n    {\n      check : \"Function\",\n      init : null,\n      nullable : true\n    },\n\n\n    /**\n     * By default, all Scrollers' (meta-columns') horizontal scrollbars are\n     * shown if any one is required. Allow not showing any that are not\n     * required.\n     */\n    excludeScrollerScrollbarsIfNotNeeded :\n    {\n      check : \"Boolean\",\n      init : false,\n      nullable : false\n    },\n\n\n    /**\n     * A function to instantiate a new column menu button.\n     */\n    newColumnMenu :\n    {\n      check : \"Function\",\n      init  : function() {\n        return new qx.ui.table.columnmenu.Button();\n      }\n    },\n\n\n    /**\n     * A function to instantiate a selection manager.  this allows subclasses of\n     * Table to subclass this internal class.  To take effect, this property must\n     * be set before calling the Table constructor.\n     */\n    newSelectionManager :\n    {\n      check : \"Function\",\n      init : function(obj) {\n        return new qx.ui.table.selection.Manager(obj);\n      }\n    },\n\n\n    /**\n     * A function to instantiate a selection model.  this allows subclasses of\n     * Table to subclass this internal class.  To take effect, this property must\n     * be set before calling the Table constructor.\n     */\n    newSelectionModel :\n    {\n      check : \"Function\",\n      init : function(obj) {\n        return new qx.ui.table.selection.Model(obj);\n      }\n    },\n\n\n    /**\n     * A function to instantiate a table column model.  This allows subclasses\n     * of Table to subclass this internal class.  To take effect, this\n     * property must be set before calling the Table constructor.\n     */\n    newTableColumnModel :\n    {\n      check : \"Function\",\n      init : function(table) {\n        return new qx.ui.table.columnmodel.Basic(table);\n      }\n    },\n\n\n    /**\n     * A function to instantiate a table pane.  this allows subclasses of\n     * Table to subclass this internal class.  To take effect, this property\n     * must be set before calling the Table constructor.\n     */\n    newTablePane :\n    {\n      check : \"Function\",\n      init : function(obj) {\n        return new qx.ui.table.pane.Pane(obj);\n      }\n    },\n\n\n    /**\n     * A function to instantiate a table pane.  this allows subclasses of\n     * Table to subclass this internal class.  To take effect, this property\n     * must be set before calling the Table constructor.\n     */\n    newTablePaneHeader :\n    {\n      check : \"Function\",\n      init : function(obj) {\n        return new qx.ui.table.pane.Header(obj);\n      }\n    },\n\n\n    /**\n     * A function to instantiate a table pane scroller.  this allows\n     * subclasses of Table to subclass this internal class.  To take effect,\n     * this property must be set before calling the Table constructor.\n     */\n    newTablePaneScroller :\n    {\n      check : \"Function\",\n      init : function(obj) {\n        return new qx.ui.table.pane.Scroller(obj);\n      }\n    },\n\n\n    /**\n     * A function to instantiate a table pane model.  this allows subclasses\n     * of Table to subclass this internal class.  To take effect, this\n     * property must be set before calling the Table constructor.\n     */\n    newTablePaneModel :\n    {\n      check : \"Function\",\n      init : function(columnModel) {\n        return new qx.ui.table.pane.Model(columnModel);\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __focusedCol : null,\n    __focusedRow : null,\n\n    __scrollerParent : null,\n\n    __selectionManager : null,\n\n    __additionalStatusBarText : null,\n    __lastRowCount : null,\n    __internalChange : null,\n\n    __columnMenuButtons : null,\n    __columnModel : null,\n    __emptyTableModel : null,\n\n    __hadVerticalScrollBar : null,\n\n    __timer : null,\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n      case \"statusbar\":\n        control = new qx.ui.basic.Label();\n        control.set(\n          {\n            allowGrowX: true\n          });\n        this._add(control);\n        break;\n\n      case \"column-button\":\n        control = this.getNewColumnMenu()();\n        control.set({\n          focusable : false\n        });\n\n        // Create the initial menu too\n        var menu = control.factory(\"menu\", { table : this });\n\n        // Add a listener to initialize the column menu when it becomes visible\n        menu.addListener(\n          \"appear\",\n          this._initColumnMenu,\n          this\n        );\n\n        break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n\n    // property modifier\n    _applySelectionModel : function(value, old)\n    {\n      this.__selectionManager.setSelectionModel(value);\n\n      if (old != null) {\n        old.removeListener(\"changeSelection\", this._onSelectionChanged, this);\n      }\n\n      value.addListener(\"changeSelection\", this._onSelectionChanged, this);\n    },\n\n\n    // property modifier\n    _applyRowHeight : function(value, old)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].updateVerScrollBarMaximum();\n      }\n    },\n\n\n    // property modifier\n    _applyHeaderCellsVisible : function(value, old)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        if (value) {\n          scrollerArr[i]._showChildControl(\"header\");\n        } else {\n          scrollerArr[i]._excludeChildControl(\"header\");\n        }\n      }\n      // also hide the column visibility button\n      if(this.getColumnVisibilityButtonVisible()) {\n        this._applyColumnVisibilityButtonVisible(value);\n      }\n    },\n\n\n    // property modifier\n    _applyHeaderCellHeight : function(value, old)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].getHeader().setHeight(value);\n      }\n    },\n\n\n    /**\n     * Get an empty table model instance to use for this table. Use this table\n     * to configure the table with no table model.\n     *\n     * @return {qx.ui.table.ITableModel} The empty table model\n     */\n    getEmptyTableModel : function()\n    {\n      if (!this.__emptyTableModel)\n      {\n        this.__emptyTableModel = new qx.ui.table.model.Simple();\n        this.__emptyTableModel.setColumns([]);\n        this.__emptyTableModel.setData([]);\n      }\n      return this.__emptyTableModel;\n    },\n\n\n    // property modifier\n    _applyTableModel : function(value, old)\n    {\n      this.getTableColumnModel().init(value.getColumnCount(), this);\n\n      if (old != null)\n      {\n        old.removeListener(\n          \"metaDataChanged\",\n          this._onTableModelMetaDataChanged, this\n        );\n\n        old.removeListener(\n          \"dataChanged\",\n          this._onTableModelDataChanged,\n          this);\n      }\n\n      value.addListener(\n        \"metaDataChanged\",\n        this._onTableModelMetaDataChanged, this\n      );\n\n      value.addListener(\n        \"dataChanged\",\n        this._onTableModelDataChanged,\n        this);\n\n      // Update the status bar\n      this._updateStatusBar();\n\n      this._updateTableData(\n        0, value.getRowCount(),\n        0, value.getColumnCount()\n      );\n      this._onTableModelMetaDataChanged();\n\n      // If the table model has an init() method, call it. We don't, however,\n      // call it if this is the initial setting of the table model, as the\n      // scrollers are not yet initialized. In that case, the init method is\n      // called explicitly by the Table constructor.\n      if (old && value.init && typeof(value.init) == \"function\")\n      {\n        value.init(this);\n      }\n    },\n\n\n    /**\n     * Get the The table column model.\n     *\n     * @return {qx.ui.table.columnmodel.Basic} The table's column model\n     */\n    getTableColumnModel : function()\n    {\n      if (!this.__columnModel)\n      {\n        var columnModel = this.__columnModel = this.getNewTableColumnModel()(this);\n\n        columnModel.addListener(\"visibilityChanged\", this._onColVisibilityChanged, this);\n        columnModel.addListener(\"widthChanged\", this._onColWidthChanged, this);\n        columnModel.addListener(\"orderChanged\", this._onColOrderChanged, this);\n\n        // Get the current table model\n        var tableModel = this.getTableModel();\n        columnModel.init(tableModel.getColumnCount(), this);\n\n        // Reset the table column model in each table pane model\n        var scrollerArr = this._getPaneScrollerArr();\n\n        for (var i=0; i<scrollerArr.length; i++)\n        {\n          var paneScroller = scrollerArr[i];\n          var paneModel = paneScroller.getTablePaneModel();\n          paneModel.setTableColumnModel(columnModel);\n        }\n      }\n      return this.__columnModel;\n    },\n\n\n    // property modifier\n    _applyStatusBarVisible : function(value, old)\n    {\n      if (value) {\n        this._showChildControl(\"statusbar\");\n      } else {\n        this._excludeChildControl(\"statusbar\");\n      }\n\n      if (value) {\n        this._updateStatusBar();\n      }\n    },\n\n\n    // property modifier\n    _applyAdditionalStatusBarText : function(value, old)\n    {\n      this.__additionalStatusBarText = value;\n      this._updateStatusBar();\n    },\n\n\n    // property modifier\n    _applyColumnVisibilityButtonVisible : function(value, old)\n    {\n      if (value) {\n        this._showChildControl(\"column-button\");\n      } else {\n        this._excludeChildControl(\"column-button\");\n      }\n    },\n\n\n    // property modifier\n    _applyMetaColumnCounts : function(value, old)\n    {\n      var metaColumnCounts = value;\n      var scrollerArr = this._getPaneScrollerArr();\n      var handlers = { };\n\n      if (value > old)\n      {\n        // Save event listeners on the redirected events so we can re-apply\n        // them to new scrollers.\n        var manager = qx.event.Registration.getManager(scrollerArr[0]);\n        for (var evName in qx.ui.table.Table.__redirectEvents)\n        {\n          handlers[evName] = { };\n          handlers[evName].capture = manager.getListeners(scrollerArr[0],\n                                                          evName,\n                                                          true);\n          handlers[evName].bubble = manager.getListeners(scrollerArr[0],\n                                                         evName,\n                                                         false);\n        }\n      }\n\n      // Remove the panes not needed any more\n      this._cleanUpMetaColumns(metaColumnCounts.length);\n\n      // Update the old panes\n      var leftX = 0;\n\n      for (var i=0; i<scrollerArr.length; i++)\n      {\n        var paneScroller = scrollerArr[i];\n        var paneModel = paneScroller.getTablePaneModel();\n        paneModel.setFirstColumnX(leftX);\n        paneModel.setMaxColumnCount(metaColumnCounts[i]);\n        leftX += metaColumnCounts[i];\n      }\n\n      // Add the new panes\n      if (metaColumnCounts.length > scrollerArr.length)\n      {\n        var columnModel = this.getTableColumnModel();\n\n        for (var i=scrollerArr.length; i<metaColumnCounts.length; i++)\n        {\n          var paneModel = this.getNewTablePaneModel()(columnModel);\n          paneModel.setFirstColumnX(leftX);\n          paneModel.setMaxColumnCount(metaColumnCounts[i]);\n          leftX += metaColumnCounts[i];\n\n          var paneScroller = this.getNewTablePaneScroller()(this);\n          paneScroller.setTablePaneModel(paneModel);\n\n          // Register event listener for vertical scrolling\n          paneScroller.addListener(\"changeScrollY\", this._onScrollY, this);\n\n          // Apply redirected events to this new scroller\n          for (evName in qx.ui.table.Table.__redirectEvents)\n          {\n            // On first setting of meta columns (constructing phase), there\n            // are no handlers to deal with yet.\n            if (! handlers[evName])\n            {\n              break;\n            }\n\n            if (handlers[evName].capture &&\n                handlers[evName].capture.length > 0)\n            {\n              var capture = handlers[evName].capture;\n              for (var j = 0; j < capture.length; j++)\n              {\n                // Determine what context to use.  If the context does not\n                // exist, we assume that the context is this table.  If it\n                // does exist and it equals the first pane scroller (from\n                // which we retrieved the listeners) then set the context\n                // to be this new pane scroller.  Otherwise leave the context\n                // as it was set.\n                var context = capture[j].context;\n                if (! context)\n                {\n                  context = this;\n                }\n                else if (context == scrollerArr[0])\n                {\n                  context = paneScroller;\n                }\n\n                paneScroller.addListener(\n                  evName,\n                  capture[j].handler,\n                  context,\n                  true);\n              }\n            }\n\n            if (handlers[evName].bubble &&\n                handlers[evName].bubble.length > 0)\n            {\n              var bubble = handlers[evName].bubble;\n              for (var j = 0; j < bubble.length; j++)\n              {\n                // Determine what context to use.  If the context does not\n                // exist, we assume that the context is this table.  If it\n                // does exist and it equals the first pane scroller (from\n                // which we retrieved the listeners) then set the context\n                // to be this new pane scroller.  Otherwise leave the context\n                // as it was set.\n                var context = bubble[j].context;\n                if (! context)\n                {\n                  context = this;\n                }\n                else if (context == scrollerArr[0])\n                {\n                  context = paneScroller;\n                }\n\n                paneScroller.addListener(\n                  evName,\n                  bubble[j].handler,\n                  context,\n                  false);\n              }\n            }\n          }\n\n          // last meta column is flexible\n          var flex = (i == metaColumnCounts.length - 1) ? 1 : 0;\n          this.__scrollerParent.add(paneScroller, {flex: flex});\n          scrollerArr = this._getPaneScrollerArr();\n        }\n      }\n\n      // Update all meta columns\n      for (var i=0; i<scrollerArr.length; i++)\n      {\n        var paneScroller = scrollerArr[i];\n        var isLast = (i == (scrollerArr.length - 1));\n\n        // Set the right header height\n        paneScroller.getHeader().setHeight(this.getHeaderCellHeight());\n\n        // Put the column visibility button in the top right corner of the last meta column\n        paneScroller.setTopRightWidget(isLast ? this.getChildControl(\"column-button\") : null);\n      }\n\n      if (!this.isColumnVisibilityButtonVisible()) {\n        this._excludeChildControl(\"column-button\");\n      }\n\n      this._updateScrollerWidths();\n      this._updateScrollBarVisibility();\n    },\n\n\n    // property modifier\n    _applyFocusCellOnPointerMove : function(value, old)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].setFocusCellOnPointerMove(value);\n      }\n    },\n\n\n    // property modifier\n    _applyShowCellFocusIndicator : function(value, old)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].setShowCellFocusIndicator(value);\n      }\n    },\n\n\n    // property modifier\n    _applyContextMenuFromDataCellsOnly : function(value, old)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].setContextMenuFromDataCellsOnly(value);\n      }\n    },\n\n\n    // property modifier\n    _applyKeepFirstVisibleRowComplete : function(value, old)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].onKeepFirstVisibleRowCompleteChanged();\n      }\n    },\n\n\n    // property modifier\n    _applyResetSelectionOnHeaderTap : function(value, old)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].setResetSelectionOnHeaderTap(value);\n      }\n    },\n\n\n    /**\n     * Returns the selection manager.\n     *\n     * @return {qx.ui.table.selection.Manager} the selection manager.\n     */\n    getSelectionManager : function() {\n      return this.__selectionManager;\n    },\n\n\n    /**\n     * Returns an array containing all TablePaneScrollers in this table.\n     *\n     * @return {qx.ui.table.pane.Scroller[]} all TablePaneScrollers in this table.\n     */\n    _getPaneScrollerArr : function() {\n      return this.__scrollerParent.getChildren();\n    },\n\n\n    /**\n     * Returns a TablePaneScroller of this table.\n     *\n     * @param metaColumn {Integer} the meta column to get the TablePaneScroller for.\n     * @return {qx.ui.table.pane.Scroller} the qx.ui.table.pane.Scroller.\n     */\n    getPaneScroller : function(metaColumn) {\n      return this._getPaneScrollerArr()[metaColumn];\n    },\n\n\n    /**\n     * Cleans up the meta columns.\n     *\n     * @param fromMetaColumn {Integer} the first meta column to clean up. All following\n     *      meta columns will be cleaned up, too. All previous meta columns will\n     *      stay unchanged. If 0 all meta columns will be cleaned up.\n     */\n    _cleanUpMetaColumns : function(fromMetaColumn)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      if (scrollerArr != null)\n      {\n        for (var i=scrollerArr.length-1; i>=fromMetaColumn; i--)\n        {\n          scrollerArr[i].destroy();\n        }\n      }\n    },\n\n\n    /**\n     * Event handler. Called when the locale has changed.\n     *\n     * @param evt {Event} the event.\n     */\n    _onChangeLocale : function(evt)\n    {\n      this.updateContent();\n      this._updateStatusBar();\n    },\n\n\n    // overridden\n    _onChangeTheme : function() {\n      this.base(arguments);\n\n      this.getDataRowRenderer().initThemeValues();\n      this.updateContent();\n      this._updateStatusBar();\n    },\n\n\n    /**\n     * Event handler. Called when the selection has changed.\n     *\n     * @param evt {Map} the event.\n     */\n    _onSelectionChanged : function(evt)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].onSelectionChanged();\n      }\n\n      this._updateStatusBar();\n    },\n\n\n    /**\n     * Event handler. Called when the table model meta data has changed.\n     *\n     * @param evt {Map} the event.\n     */\n    _onTableModelMetaDataChanged : function(evt)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].onTableModelMetaDataChanged();\n      }\n\n      this._updateStatusBar();\n    },\n\n\n    /**\n     * Event handler. Called when the table model data has changed.\n     *\n     * @param evt {Map} the event.\n     */\n    _onTableModelDataChanged : function(evt)\n    {\n      var data = evt.getData();\n\n      this._updateTableData(\n        data.firstRow, data.lastRow,\n        data.firstColumn, data.lastColumn,\n        data.removeStart, data.removeCount\n      );\n    },\n\n\n    // overridden\n    _onContextMenuOpen : function(e)\n    {\n      // This is Widget's context menu handler which typically retrieves\n      // and displays the menu as soon as it receives a \"contextmenu\" event.\n      // We want to allow the cellContextmenu handler to create the menu,\n      // so we'll override this method with a null one, and do the menu\n      // placement and display handling in our _onContextMenu method.\n    },\n\n\n    /**\n     * To update the table if the table model has changed and remove selection.\n     *\n     * @param firstRow {Integer} The index of the first row that has changed.\n     * @param lastRow {Integer} The index of the last row that has changed.\n     * @param firstColumn {Integer} The model index of the first column that has changed.\n     * @param lastColumn {Integer} The model index of the last column that has changed.\n     * @param removeStart {Integer ? null} The first index of the interval (including), to remove selection.\n     * @param removeCount {Integer ? null} The count of the interval, to remove selection.\n     */\n    _updateTableData : function(firstRow, lastRow, firstColumn, lastColumn, removeStart, removeCount)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      // update selection if rows were removed\n      if (removeCount) {\n        this.getSelectionModel().removeSelectionInterval(removeStart, removeStart + removeCount - 1, true);\n        // remove focus if the focused row has been removed\n        if (this.__focusedRow >= removeStart && this.__focusedRow < (removeStart + removeCount)) {\n          this.setFocusedCell();\n        }\n      }\n\n      for (var i=0; i<scrollerArr.length; i++)\n      {\n        scrollerArr[i].onTableModelDataChanged(\n          firstRow, lastRow,\n          firstColumn, lastColumn\n        );\n      }\n\n      var rowCount = this.getTableModel().getRowCount();\n\n      if (rowCount != this.__lastRowCount)\n      {\n        this.__lastRowCount = rowCount;\n\n        this._updateScrollBarVisibility();\n        this._updateStatusBar();\n      }\n    },\n\n\n    /**\n     * Event handler. Called when a TablePaneScroller has been scrolled vertically.\n     *\n     * @param evt {Map} the event.\n     */\n    _onScrollY : function(evt)\n    {\n      if (!this.__internalChange)\n      {\n        this.__internalChange = true;\n\n        // Set the same scroll position to all meta columns\n        var scrollerArr = this._getPaneScrollerArr();\n\n        for (var i=0; i<scrollerArr.length; i++) {\n          scrollerArr[i].setScrollY(evt.getData());\n        }\n\n        this.__internalChange = false;\n      }\n    },\n\n\n    /**\n     * Event handler. Called when a key was pressed.\n     *\n     * @param evt {qx.event.type.KeySequence} the event.\n     * @deprecated {6.0} please use _onKeyDown instead!\n     */\n    _onKeyPress : function(evt)\n    {\n       qx.log.Logger.deprecatedMethodWarning(this._onKeyPress, \"The method '_onKeyPress()' is deprecated. Please use '_onKeyDown()' instead.\");\n       qx.log.Logger.deprecateMethodOverriding(this, qx.ui.table.Table, \"_onKeyPress\", \"The method '_onKeyPress()' is deprecated. Please use '_onKeyDown()' instead.\");\n       this._onKeyDown(evt);\n    },\n    /**\n     * Event handler. Called when on key down event\n     *\n     * @param evt {qx.event.type.KeySequence} the event.\n     */\n    _onKeyDown : function(evt)\n    {\n      if (!this.getEnabled()) {\n        return;\n      }\n\n      // No editing mode\n      var oldFocusedRow = this.__focusedRow;\n      var consumed = false;\n\n      // Handle keys that are independent from the modifiers\n      var identifier = evt.getKeyIdentifier();\n\n      if (this.isEditing())\n      {\n        // Editing mode\n        if (evt.getModifiers() == 0)\n        {\n          switch(identifier)\n          {\n            case \"Enter\":\n              this.stopEditing();\n              var oldFocusedRow = this.__focusedRow;\n              this.moveFocusedCell(0, 1);\n\n              if (this.__focusedRow != oldFocusedRow) {\n                consumed = this.startEditing();\n              }\n\n              break;\n\n            case \"Escape\":\n              this.cancelEditing();\n              this.focus();\n              break;\n\n            default:\n              consumed = false;\n              break;\n          }\n        }\n\n      }\n      else\n      {\n        consumed = true;\n        // No editing mode\n        if (evt.isCtrlPressed())\n        {\n          // Handle keys that depend on modifiers\n\n          switch(identifier)\n          {\n            case \"A\": // Ctrl + A\n              var rowCount = this.getTableModel().getRowCount();\n\n              if (rowCount > 0) {\n                this.getSelectionModel().setSelectionInterval(0, rowCount - 1);\n              }\n\n              break;\n\n            default:\n              consumed = false;\n              break;\n          }\n        }\n        else\n        {\n          // Handle keys that are independent from the modifiers\n          switch(identifier)\n          {\n            case \"Space\":\n              this.__selectionManager.handleSelectKeyDown(this.__focusedRow, evt);\n              break;\n\n            case \"F2\":\n            case \"Enter\":\n              this.startEditing();\n              consumed = true;\n              break;\n\n            case \"Home\":\n              this.setFocusedCell(this.__focusedCol, 0, true);\n              break;\n\n            case \"End\":\n              var rowCount = this.getTableModel().getRowCount();\n              this.setFocusedCell(this.__focusedCol, rowCount - 1, true);\n              break;\n\n            case \"Left\":\n              this.moveFocusedCell(-1, 0);\n              break;\n\n            case \"Right\":\n              this.moveFocusedCell(1, 0);\n              break;\n\n            case \"Up\":\n              this.moveFocusedCell(0, -1);\n              break;\n\n            case \"Down\":\n              this.moveFocusedCell(0, 1);\n              break;\n\n            case \"PageUp\":\n            case \"PageDown\":\n              var scroller = this.getPaneScroller(0);\n              var pane = scroller.getTablePane();\n              var rowHeight = this.getRowHeight();\n              var direction = (identifier == \"PageUp\") ? -1 : 1;\n              rowCount = pane.getVisibleRowCount() - 1;\n              scroller.setScrollY(scroller.getScrollY() + direction * rowCount * rowHeight);\n              this.moveFocusedCell(0, direction * rowCount);\n              break;\n\n            default:\n              consumed = false;\n          }\n        }\n      }\n\n      if (oldFocusedRow != this.__focusedRow &&\n          this.getRowFocusChangeModifiesSelection())\n      {\n        // The focus moved -> Let the selection manager handle this event\n        this.__selectionManager.handleMoveKeyDown(this.__focusedRow, evt);\n      }\n\n      if (consumed)\n      {\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Event handler. Called when the table gets the focus.\n     *\n     * @param evt {Map} the event.\n     */\n    _onFocusChanged : function(evt)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].onFocusChanged();\n      }\n    },\n\n\n    /**\n     * Event handler. Called when the visibility of a column has changed.\n     *\n     * @param evt {Map} the event.\n     */\n    _onColVisibilityChanged : function(evt)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].onColVisibilityChanged();\n      }\n\n      var data = evt.getData();\n      if (this.__columnMenuButtons != null && data.col != null &&\n          data.visible != null) {\n        this.__columnMenuButtons[data.col].setColumnVisible(data.visible);\n      }\n\n      this._updateScrollerWidths();\n      this._updateScrollBarVisibility();\n    },\n\n\n    /**\n     * Event handler. Called when the width of a column has changed.\n     *\n     * @param evt {Map} the event.\n     */\n    _onColWidthChanged : function(evt)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++)\n      {\n        var data = evt.getData();\n        scrollerArr[i].setColumnWidth(data.col, data.newWidth);\n      }\n\n      this._updateScrollerWidths();\n      this._updateScrollBarVisibility();\n    },\n\n\n    /**\n     * Event handler. Called when the column order has changed.\n     *\n     * @param evt {Map} the event.\n     */\n    _onColOrderChanged : function(evt)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].onColOrderChanged();\n      }\n\n      // A column may have been moved between meta columns\n      this._updateScrollerWidths();\n      this._updateScrollBarVisibility();\n    },\n\n\n    /**\n     * Gets the TablePaneScroller at a certain x position in the page. If there is\n     * no TablePaneScroller at this position, null is returned.\n     *\n     * @param pageX {Integer} the position in the page to check (in pixels).\n     * @return {qx.ui.table.pane.Scroller} the TablePaneScroller or null.\n     */\n    getTablePaneScrollerAtPageX : function(pageX)\n    {\n      var metaCol = this._getMetaColumnAtPageX(pageX);\n      return (metaCol != -1) ? this.getPaneScroller(metaCol) : null;\n    },\n\n\n    /**\n     * Sets the currently focused cell. A value of <code>null</code> hides the\n     * focus cell.\n     *\n     * @param col {Integer?null} the model index of the focused cell's column.\n     * @param row {Integer?null} the model index of the focused cell's row.\n     * @param scrollVisible {Boolean ? false} whether to scroll the new focused cell\n     *          visible.\n     */\n    setFocusedCell : function(col, row, scrollVisible)\n    {\n      if (!this.isEditing() && (col != this.__focusedCol || row != this.__focusedRow))\n      {\n        if (col === null) {\n          col = 0;\n        }\n\n        this.__focusedCol = col;\n        this.__focusedRow = row;\n\n        var scrollerArr = this._getPaneScrollerArr();\n\n        for (var i=0; i<scrollerArr.length; i++) {\n          scrollerArr[i].setFocusedCell(col, row);\n        }\n\n        if (col != null && scrollVisible) {\n          this.scrollCellVisible(col, row);\n        }\n      }\n    },\n\n\n    /**\n     * Resets (clears) the current selection\n     */\n    resetSelection : function() {\n      this.getSelectionModel().resetSelection();\n    },\n\n\n    /**\n     * Resets the focused cell.\n     */\n    resetCellFocus : function() {\n      this.setFocusedCell(null, null, false);\n    },\n\n\n    /**\n     * Returns the column of the currently focused cell.\n     *\n     * @return {Integer} the model index of the focused cell's column.\n     */\n    getFocusedColumn : function() {\n      return this.__focusedCol;\n    },\n\n\n    /**\n     * Returns the row of the currently focused cell.\n     *\n     * @return {Integer} the model index of the focused cell's column.\n     */\n    getFocusedRow : function() {\n      return this.__focusedRow;\n    },\n\n\n    /**\n     * Select whether the focused row is highlighted\n     *\n     * @param bHighlight {Boolean}\n     *   Flag indicating whether the focused row should be highlighted.\n     *\n     */\n    highlightFocusedRow : function(bHighlight)\n    {\n      this.getDataRowRenderer().setHighlightFocusRow(bHighlight);\n    },\n\n\n    /**\n     * Remove the highlighting of the current focus row.\n     *\n     * This is used to temporarily remove the highlighting of the currently\n     * focused row, and is expected to be used most typically by adding a\n     * listener on the \"pointerout\" event, so that the focus highlighting is\n     * suspended when the pointer leaves the table:\n     *\n     *     table.addListener(\"pointerout\", table.clearFocusedRowHighlight);\n     *\n     * @param evt {qx.event.type.Pointer} Incoming pointer event\n     */\n    clearFocusedRowHighlight : function(evt)\n    {\n      if(evt)\n      {\n        var relatedTarget = evt.getRelatedTarget();\n        if (\n          relatedTarget instanceof qx.ui.table.pane.Pane ||\n          relatedTarget instanceof qx.ui.table.pane.FocusIndicator\n         ) {\n           return ;\n         }\n      }\n\n      // Remove focus from any cell that has it\n      this.resetCellFocus();\n\n      // Now, for each pane scroller...\n      var scrollerArr = this._getPaneScrollerArr();\n      for (var i=0; i<scrollerArr.length; i++)\n      {\n        // ... repaint without focus.\n        scrollerArr[i].onFocusChanged();\n      }\n    },\n\n\n    /**\n     * Moves the focus.\n     *\n     * @param deltaX {Integer} The delta by which the focus should be moved on the x axis.\n     * @param deltaY {Integer} The delta by which the focus should be moved on the y axis.\n     */\n    moveFocusedCell : function(deltaX, deltaY)\n    {\n      var col = this.__focusedCol;\n      var row = this.__focusedRow;\n\n      // could also be undefined [BUG #4676]\n      if (col == null || row == null) {\n        return;\n      }\n\n      if (deltaX != 0)\n      {\n        var columnModel = this.getTableColumnModel();\n        var x = columnModel.getVisibleX(col);\n        var colCount = columnModel.getVisibleColumnCount();\n        x = qx.lang.Number.limit(x + deltaX, 0, colCount - 1);\n        col = columnModel.getVisibleColumnAtX(x);\n      }\n\n      if (deltaY != 0)\n      {\n        var tableModel = this.getTableModel();\n        row = qx.lang.Number.limit(row + deltaY, 0, tableModel.getRowCount() - 1);\n      }\n\n      this.setFocusedCell(col, row, true);\n    },\n\n\n    /**\n     * Scrolls a cell visible.\n     *\n     * @param col {Integer} the model index of the column the cell belongs to.\n     * @param row {Integer} the model index of the row the cell belongs to.\n     */\n    scrollCellVisible : function(col, row)\n    {\n      // get the dom element\n      var elem = this.getContentElement().getDomElement();\n      // if the dom element is not available, the table hasn't been rendered\n      if (!elem) {\n        // postpone the scroll until the table has appeared\n        this.addListenerOnce(\"appear\", function() {\n          this.scrollCellVisible(col, row);\n        }, this);\n      }\n\n      var columnModel = this.getTableColumnModel();\n      var x = columnModel.getVisibleX(col);\n\n      var metaColumn = this._getMetaColumnAtColumnX(x);\n\n      if (metaColumn != -1) {\n        this.getPaneScroller(metaColumn).scrollCellVisible(col, row);\n      }\n    },\n\n\n    /**\n     * Returns whether currently a cell is editing.\n     *\n     * @return {var} whether currently a cell is editing.\n     */\n    isEditing : function()\n    {\n      if (this.__focusedCol != null)\n      {\n        var x = this.getTableColumnModel().getVisibleX(this.__focusedCol);\n        var metaColumn = this._getMetaColumnAtColumnX(x);\n        return this.getPaneScroller(metaColumn).isEditing();\n      }\n      return false;\n    },\n\n\n    /**\n     * Starts editing the currently focused cell. Does nothing if already editing\n     * or if the column is not editable.\n     *\n     * @return {Boolean} whether editing was started\n     */\n    startEditing : function()\n    {\n      if (this.__focusedCol != null)\n      {\n        var x = this.getTableColumnModel().getVisibleX(this.__focusedCol);\n        var metaColumn = this._getMetaColumnAtColumnX(x);\n        var started = this.getPaneScroller(metaColumn).startEditing();\n        return started;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Stops editing and writes the editor's value to the model.\n     */\n    stopEditing : function()\n    {\n      if (this.__focusedCol != null)\n      {\n        var x = this.getTableColumnModel().getVisibleX(this.__focusedCol);\n        var metaColumn = this._getMetaColumnAtColumnX(x);\n        this.getPaneScroller(metaColumn).stopEditing();\n      }\n    },\n\n\n    /**\n     * Stops editing without writing the editor's value to the model.\n     */\n    cancelEditing : function()\n    {\n      if (this.__focusedCol != null)\n      {\n        var x = this.getTableColumnModel().getVisibleX(this.__focusedCol);\n        var metaColumn = this._getMetaColumnAtColumnX(x);\n        this.getPaneScroller(metaColumn).cancelEditing();\n      }\n    },\n\n\n    /**\n     * Update the table content of every attached table pane.\n     */\n    updateContent : function() {\n      var scrollerArr = this._getPaneScrollerArr();\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].getTablePane().updateContent(true);\n      }\n    },\n\n    /**\n     * Activates the blocker widgets on all column headers and the\n     * column button\n     */\n    blockHeaderElements : function()\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].getHeader().getBlocker().blockContent(20);\n      }\n      this.getChildControl(\"column-button\").getBlocker().blockContent(20);\n    },\n\n\n    /**\n     * Deactivates the blocker widgets on all column headers and the\n     * column button\n     */\n    unblockHeaderElements : function()\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n      for (var i=0; i<scrollerArr.length; i++) {\n        scrollerArr[i].getHeader().getBlocker().unblock();\n      }\n      this.getChildControl(\"column-button\").getBlocker().unblock();\n    },\n\n    /**\n     * Gets the meta column at a certain x position in the page. If there is no\n     * meta column at this position, -1 is returned.\n     *\n     * @param pageX {Integer} the position in the page to check (in pixels).\n     * @return {Integer} the index of the meta column or -1.\n     */\n    _getMetaColumnAtPageX : function(pageX)\n    {\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++)\n      {\n        var pos = scrollerArr[i].getContentLocation();\n\n        if (pageX >= pos.left && pageX <= pos.right) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n\n\n    /**\n     * Returns the meta column a column is shown in. If the column is not shown at\n     * all, -1 is returned.\n     *\n     * @param visXPos {Integer} the visible x position of the column.\n     * @return {Integer} the meta column the column is shown in.\n     */\n    _getMetaColumnAtColumnX : function(visXPos)\n    {\n      var metaColumnCounts = this.getMetaColumnCounts();\n      var rightXPos = 0;\n\n      for (var i=0; i<metaColumnCounts.length; i++)\n      {\n        var counts = metaColumnCounts[i];\n        rightXPos += counts;\n\n        if (counts == -1 || visXPos < rightXPos) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n\n\n    /**\n     * Updates the text shown in the status bar.\n     */\n    _updateStatusBar : function()\n    {\n      var tableModel = this.getTableModel();\n\n      if (this.getStatusBarVisible())\n      {\n        var selectedRowCount = this.getSelectionModel().getSelectedCount();\n        var rowCount = tableModel.getRowCount();\n\n        var text;\n\n        if (rowCount >= 0)\n        {\n          if (selectedRowCount == 0) {\n            text = this.trn(\"one row\", \"%1 rows\", rowCount, rowCount);\n          } else {\n            text = this.trn(\"one of one row\", \"%1 of %2 rows\", rowCount, selectedRowCount, rowCount);\n          }\n        }\n\n        if (this.__additionalStatusBarText)\n        {\n          if (text) {\n            text += this.__additionalStatusBarText;\n          } else {\n            text = this.__additionalStatusBarText;\n          }\n        }\n\n        if (text) {\n          this.getChildControl(\"statusbar\").setValue(text);\n        }\n      }\n    },\n\n\n    /**\n     * Updates the widths of all scrollers.\n     */\n    _updateScrollerWidths : function()\n    {\n      // Give all scrollers except for the last one the wanted width\n      // (The last one has a flex with)\n      var scrollerArr = this._getPaneScrollerArr();\n\n      for (var i=0; i<scrollerArr.length; i++)\n      {\n        var isLast = (i == (scrollerArr.length - 1));\n        var width = scrollerArr[i].getTablePaneModel().getTotalWidth();\n        scrollerArr[i].setPaneWidth(width);\n\n        var flex = isLast ? 1 : 0;\n        scrollerArr[i].setLayoutProperties({flex: flex});\n      }\n    },\n\n\n    /**\n     * Updates the visibility of the scrollbars in the meta columns.\n     */\n    _updateScrollBarVisibility : function()\n    {\n      if (!this.getBounds()) {\n        return;\n      }\n\n      var horBar = qx.ui.table.pane.Scroller.HORIZONTAL_SCROLLBAR;\n      var verBar = qx.ui.table.pane.Scroller.VERTICAL_SCROLLBAR;\n      var scrollerArr = this._getPaneScrollerArr();\n\n      // Check which scroll bars are needed\n      var horNeeded = false;\n      var verNeeded = false;\n      var excludeScrollerScrollbarsIfNotNeeded;\n\n      \n      // Determine whether we need to render horizontal scrollbars for meta\n      // columns that don't themselves actually require it\n      excludeScrollerScrollbarsIfNotNeeded =\n        this.getExcludeScrollerScrollbarsIfNotNeeded();\n\n      if (! excludeScrollerScrollbarsIfNotNeeded)\n      {\n        for (var i=0; i<scrollerArr.length; i++)\n        {\n          var isLast = (i == (scrollerArr.length - 1));\n\n          // Only show the last vertical scrollbar\n          var bars = scrollerArr[i].getNeededScrollBars(horNeeded, !isLast);\n\n          if (bars & horBar) {\n            horNeeded = true;\n          }\n\n          if (isLast && (bars & verBar)) {\n            verNeeded = true;\n          }\n        }\n      }\n\n      // Set the needed scrollbars\n      for (var i=0; i<scrollerArr.length; i++)\n      {\n        isLast = (i == (scrollerArr.length - 1));\n\n        // If we don't want to include scrollbars for meta columns that don't\n        // require it, find out whether this meta column requires it.\n        if (excludeScrollerScrollbarsIfNotNeeded)\n        {\n          horNeeded =\n            !! (scrollerArr[i].getNeededScrollBars(false, !isLast) & horBar);\n\n          // Show the horizontal scrollbar if needed. Specify null to indicate\n          // that the scrollbar should be hidden rather than excluded.\n          scrollerArr[i].setHorizontalScrollBarVisible(horNeeded || null);\n        }\n        else\n        {\n          // Show the horizontal scrollbar if needed.\n          scrollerArr[i].setHorizontalScrollBarVisible(horNeeded);\n        }\n\n        // If this is the last meta-column...\n        if (isLast)\n        {\n          // ... then get the current (old) use of vertical scroll bar\n          verNeeded =\n            !! (scrollerArr[i].getNeededScrollBars(false, false) & verBar);\n          if (this.__hadVerticalScrollBar == null) {\n            this.__hadVerticalScrollBar = scrollerArr[i].getVerticalScrollBarVisible();\n            this.__timer = qx.event.Timer.once(function()\n            {\n              // reset the last visible state of the vertical scroll bar\n              // in a timeout to prevent infinite loops.\n              this.__hadVerticalScrollBar = null;\n              this.__timer = null;\n            }, this, 0);\n          }\n        }\n\n        scrollerArr[i].setVerticalScrollBarVisible(isLast && verNeeded);\n\n        // If this is the last meta-column and the use of a vertical scroll bar\n        // has changed...\n        if (isLast && verNeeded != this.__hadVerticalScrollBar)\n        {\n          // ... then dispatch an event to any awaiting listeners\n          this.fireDataEvent(\"verticalScrollBarChanged\", verNeeded);\n        }\n      }\n    },\n\n\n    /**\n     * Initialize the column menu\n     */\n    _initColumnMenu : function()\n    {\n      var tableModel = this.getTableModel();\n      var columnModel = this.getTableColumnModel();\n\n      var columnButton = this.getChildControl(\"column-button\");\n\n      // Remove all items from the menu. We'll rebuild it here.\n      columnButton.empty();\n\n      // Inform listeners who may want to insert menu items at the beginning\n      var menu = columnButton.getMenu();\n      var data =\n      {\n        table        : this,\n        menu         : menu,\n        columnButton : columnButton\n      };\n      this.fireDataEvent(\"columnVisibilityMenuCreateStart\", data);\n\n      this.__columnMenuButtons = {};\n      for (var col=0, l=tableModel.getColumnCount(); col<l; col++)\n      {\n        var menuButton =\n          columnButton.factory(\"menu-button\",\n                               {\n                                 text     : tableModel.getColumnName(col),\n                                 column   : col,\n                                 bVisible : columnModel.isColumnVisible(col)\n                               });\n\n        qx.core.Assert.assertInterface(menuButton,\n                                       qx.ui.table.IColumnMenuItem);\n\n        menuButton.addListener(\n          \"changeColumnVisible\",\n          this._createColumnVisibilityCheckBoxHandler(col), this);\n        this.__columnMenuButtons[col] = menuButton;\n      }\n\n      // Inform listeners who may want to insert menu items at the end\n      data =\n      {\n        table        : this,\n        menu         : menu,\n        columnButton : columnButton\n      };\n      this.fireDataEvent(\"columnVisibilityMenuCreateEnd\", data);\n    },\n\n\n\n\n\n    /**\n     * Creates a handler for a check box of the column visibility menu.\n     *\n     * @param col {Integer} the model index of column to create the handler for.\n     * @return {Function} The created event handler.\n     */\n    _createColumnVisibilityCheckBoxHandler : function(col)\n    {\n      return function(evt)\n      {\n        var columnModel = this.getTableColumnModel();\n        columnModel.setColumnVisible(col, evt.getData());\n      };\n    },\n\n\n    /**\n     * Sets the width of a column.\n     *\n     * @param col {Integer} the model index of column.\n     * @param width {Integer} the new width in pixels.\n     */\n    setColumnWidth : function(col, width) {\n      this.getTableColumnModel().setColumnWidth(col, width);\n    },\n\n\n    /**\n     * Resize event handler\n     */\n    _onResize : function()\n    {\n      this.fireEvent(\"tableWidthChanged\");\n      this._updateScrollerWidths();\n      this._updateScrollBarVisibility();\n    },\n\n\n    // overridden\n    addListener : function(type, listener, self, capture)\n    {\n      if (this.self(arguments).__redirectEvents[type])\n      {\n        // start the id with the type (needed for removing)\n        var id = [type];\n        for (var i = 0, arr = this._getPaneScrollerArr(); i < arr.length; i++)\n        {\n          id.push(arr[i].addListener.apply(arr[i], arguments));\n        }\n        // join the id's of every event with \"\n        return id.join('\"');\n      }\n      else\n      {\n        return this.base(arguments, type, listener, self, capture);\n      }\n    },\n\n\n    // overridden\n    removeListener : function(type, listener, self, capture)\n    {\n      if (this.self(arguments).__redirectEvents[type])\n      {\n        for (var i = 0, arr = this._getPaneScrollerArr(); i < arr.length; i++)\n        {\n          arr[i].removeListener.apply(arr[i], arguments);\n        }\n      }\n      else\n      {\n        this.base(arguments, type, listener, self, capture);\n      }\n    },\n\n\n    // overridden\n    removeListenerById : function(id) {\n      var ids = id.split('\"');\n      // type is the first entry of the connected id\n      var type = ids.shift();\n      if (this.self(arguments).__redirectEvents[type])\n      {\n        var removed = true;\n        for (var i = 0, arr = this._getPaneScrollerArr(); i < arr.length; i++)\n        {\n          removed = arr[i].removeListenerById.call(arr[i], ids[i]) && removed;\n        }\n        return removed;\n      }\n      else\n      {\n        return this.base(arguments, id);\n      }\n    },\n\n\n    destroy : function()\n    {\n      this.getChildControl(\"column-button\").getMenu().destroy();\n      this.base(arguments);\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    // remove the event listener which handled the locale change\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n\n    // we allocated these objects on init so we have to clean them up.\n    var selectionModel = this.getSelectionModel();\n    if (selectionModel) {\n      selectionModel.dispose();\n    }\n\n    var dataRowRenderer = this.getDataRowRenderer();\n    if (dataRowRenderer) {\n      dataRowRenderer.dispose();\n    }\n\n    this._cleanUpMetaColumns(0);\n    this.getTableColumnModel().dispose();\n    this._disposeObjects(\n      \"__selectionManager\", \"__scrollerParent\",\n      \"__emptyTableModel\", \"__emptyTableModel\",\n      \"__columnModel\", \"__timer\"\n    );\n    this._disposeMap(\"__columnMenuButtons\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * A formatter and parser for numbers.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.util.format.NumberFormat\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.util.format.IFormat, qx.core.IDisposable ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param locale {String} optional locale to be used\n   * @throws {Error} If the argument is not a string.\n   */\n  construct : function(locale)\n  {\n    this.base(arguments);\n\n    if (arguments.length > 0) {\n      if (arguments.length === 1) {\n        if (qx.lang.Type.isString(locale)) {\n          this.setLocale(locale);\n        } else {\n          throw new Error(\"Wrong argument type. String is expected.\");\n        }\n      } else {\n        throw new Error(\"Wrong number of arguments.\");\n      }\n    }\n\n    if (!locale) {\n      this.setLocale(qx.locale.Manager.getInstance().getLocale());\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\n        qx.locale.Manager.getInstance().bind(\"locale\", this, \"locale\");\n      }\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * The minimum number of integer digits (digits before the decimal separator).\n     * Missing digits will be filled up with 0 (\"19\" -> \"0019\").\n     */\n    minimumIntegerDigits :\n    {\n      check : \"Number\",\n      init : 0\n    },\n\n\n    /**\n     * The maximum number of integer digits (superfluous digits will be cut off\n     * (\"1923\" -> \"23\").\n     */\n    maximumIntegerDigits :\n    {\n      check : \"Number\",\n      nullable : true\n    },\n\n\n    /**\n     * The minimum number of fraction digits (digits after the decimal separator).\n     * Missing digits will be filled up with 0 (\"1.5\" -> \"1.500\")\n     */\n    minimumFractionDigits :\n    {\n      check : \"Number\",\n      init : 0\n    },\n\n\n    /**\n     * The maximum number of fraction digits (digits after the decimal separator).\n     * Superfluous digits will cause rounding (\"1.8277\" -> \"1.83\")\n     */\n    maximumFractionDigits :\n    {\n      check : \"Number\",\n      nullable : true\n    },\n\n\n    /** Whether thousand groupings should be used {e.g. \"1,432,234.65\"}. */\n    groupingUsed :\n    {\n      check : \"Boolean\",\n      init : true\n    },\n\n\n    /** The prefix to put before the number {\"EUR \" -> \"EUR 12.31\"}. */\n    prefix :\n    {\n      check : \"String\",\n      init : \"\",\n      event : \"changeNumberFormat\"\n    },\n\n\n    /** Sets the postfix to put after the number {\" %\" -> \"56.13 %\"}. */\n    postfix :\n    {\n      check : \"String\",\n      init : \"\",\n      event : \"changeNumberFormat\"\n    },\n\n    /** Locale used */\n    locale :\n    {\n      check : \"String\",\n      init : null,\n      event : \"changeLocale\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    /**\n     * Formats a number.\n     *\n     * @param num {Number} the number to format.\n     * @return {String} the formatted number as a string.\n     */\n    format : function(num)\n    {\n      // handle special cases\n      if (isNaN(num)) {\n        return \"NaN\";\n      }\n\n      switch (num) {\n        case Infinity:\n          return \"Infinity\";\n\n        case -Infinity:\n          return \"-Infinity\";\n      }\n\n      var negative = (num < 0);\n\n      if (negative) {\n        num = -num;\n      }\n\n      if (this.getMaximumFractionDigits() != null)\n      {\n        // Do the rounding\n        var mover = Math.pow(10, this.getMaximumFractionDigits());\n        num = Math.round(num * mover) / mover;\n      }\n\n      var integerDigits = String(Math.floor(num)).length;\n\n      var numStr = \"\" + num;\n\n      // Prepare the integer part\n      var integerStr = numStr.substring(0, integerDigits);\n\n      while (integerStr.length < this.getMinimumIntegerDigits()) {\n        integerStr = \"0\" + integerStr;\n      }\n\n      if (this.getMaximumIntegerDigits() != null && integerStr.length > this.getMaximumIntegerDigits())\n      {\n        // NOTE: We cut off even though we did rounding before, because there\n        //     may be rounding errors (\"12.24000000000001\" -> \"12.24\")\n        integerStr = integerStr.substring(integerStr.length - this.getMaximumIntegerDigits());\n      }\n\n      // Prepare the fraction part\n      var fractionStr = numStr.substring(integerDigits + 1);\n\n      while (fractionStr.length < this.getMinimumFractionDigits()) {\n        fractionStr += \"0\";\n      }\n\n      if (this.getMaximumFractionDigits() != null && fractionStr.length > this.getMaximumFractionDigits())\n      {\n        // We have already rounded -> Just cut off the rest\n        fractionStr = fractionStr.substring(0, this.getMaximumFractionDigits());\n      }\n\n      // Add the thousand groupings\n      if (this.getGroupingUsed())\n      {\n        var origIntegerStr = integerStr;\n        integerStr = \"\";\n        var groupPos;\n\n        for (groupPos=origIntegerStr.length; groupPos>3; groupPos-=3) {\n          integerStr = \"\" + qx.locale.Number.getGroupSeparator(this.getLocale()) + origIntegerStr.substring(groupPos - 3, groupPos) + integerStr;\n        }\n\n        integerStr = origIntegerStr.substring(0, groupPos) + integerStr;\n      }\n\n      // Workaround: prefix and postfix are null even their defaultValue is \"\" and\n      //             allowNull is set to false?!?\n      var prefix = this.getPrefix() ? this.getPrefix() : \"\";\n      var postfix = this.getPostfix() ? this.getPostfix() : \"\";\n\n      // Assemble the number\n      var str = prefix + (negative ? \"-\" : \"\") + integerStr;\n\n      if (fractionStr.length > 0) {\n        str += \"\" + qx.locale.Number.getDecimalSeparator(this.getLocale()) + fractionStr;\n      }\n\n      str += postfix;\n\n      return str;\n    },\n\n\n    /**\n     * Parses a number.\n     *\n     * @param str {String} the string to parse.\n     * @return {Double} the number.\n     * @throws {Error} If the number string does not match the number format.\n     */\n    parse : function(str)\n    {\n      // use the escaped separators for regexp\n      var groupSepEsc = qx.lang.String.escapeRegexpChars(qx.locale.Number.getGroupSeparator(this.getLocale()) + \"\");\n      var decimalSepEsc = qx.lang.String.escapeRegexpChars(qx.locale.Number.getDecimalSeparator(this.getLocale()) + \"\");\n\n      var regex = new RegExp(\n        \"^(\" +\n        qx.lang.String.escapeRegexpChars(this.getPrefix()) +\n        ')?([-+]){0,1}'+\n        '([0-9]{1,3}(?:'+ groupSepEsc + '{0,1}[0-9]{3}){0,}){0,1}' +\n        '(' + decimalSepEsc + '\\\\d+){0,1}(' +\n        qx.lang.String.escapeRegexpChars(this.getPostfix()) +\n        \")?$\"\n      );\n\n      var hit = regex.exec(str);\n\n      if (hit == null) {\n        throw new Error(\"Number string '\" + str + \"' does not match the number format\");\n      }\n\n      // hit[1] = potential prefix\n      var negative = (hit[2] == \"-\");\n      var integerStr = hit[3] || \"0\";\n      var fractionStr = hit[4];\n      // hit[5] = potential postfix\n\n      // Remove the thousand groupings\n      integerStr = integerStr.replace(new RegExp(groupSepEsc, \"g\"), \"\");\n\n      var asStr = (negative ? \"-\" : \"\") + integerStr;\n\n      if (fractionStr != null && fractionStr.length != 0)\n      {\n        // Remove the leading decimal separator from the fractions string\n        fractionStr = fractionStr.replace(new RegExp(decimalSepEsc), \"\");\n        asStr += \".\" + fractionStr;\n      }\n\n      return parseFloat(asStr);\n    }\n  },\n\n\n  destruct: function() {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeRelatedBindings(this);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 by Tartan Solutions, Inc, http://www.tartansolutions.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Dan Hummon\n\n************************************************************************ */\n\n/**\n * The conditional cell renderer allows special per cell formatting based on\n * conditions on the cell's value.\n *\n * @require(qx.util.format.NumberFormat)\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Conditional\",\n{\n  extend : qx.ui.table.cellrenderer.Default,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param align {String|null}\n   *   The default text alignment to format the cell with by default.\n   *\n   * @param color {String|null}\n   *   The default font color to format the cell with by default.\n   *\n   * @param style {String|null}\n   *   The default font style to format the cell with by default.\n   *\n   * @param weight {String|null}\n   *   The default font weight to format the cell with by default.\n   */\n  construct : function(align, color, style, weight)\n  {\n    this.base(arguments);\n\n    this.numericAllowed = [\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"];\n    this.betweenAllowed = [\"between\", \"!between\"];\n    this.conditions = [];\n\n    this.__defaultTextAlign = align || \"\";\n    this.__defaultColor = color || \"\";\n    this.__defaultFontStyle = style || \"\";\n    this.__defaultFontWeight = weight || \"\";\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __defaultTextAlign : null,\n    __defaultColor : null,\n    __defaultFontStyle : null,\n    __defaultFontWeight : null,\n\n\n    /**\n     * Applies the cell styles to the style map.\n     * @param condition {Array} The matched condition\n     * @param style {Map} map of already applied styles.\n     */\n    __applyFormatting : function(condition, style)\n    {\n      if (condition[1] != null) {\n        style[\"text-align\"] = condition[1];\n      }\n\n      if (condition[2] != null) {\n        style[\"color\"] = condition[2];\n      }\n\n      if (condition[3] != null) {\n        style[\"font-style\"] = condition[3];\n      }\n\n      if (condition[4] != null) {\n        style[\"font-weight\"] = condition[4];\n      }\n    },\n\n\n    /**\n     * The addNumericCondition method is used to add a basic numeric condition to\n     * the cell renderer.\n     *\n     * Note: Passing null is different from passing an empty string in the align,\n     * color, style and weight arguments. Null will allow pre-existing formatting\n     * to pass through, where an empty string will clear it back to the default\n     * formatting set in the constructor.\n     *\n     *\n     * @param condition {String} The type of condition. Accepted strings are \"==\", \"!=\", \">\", \"<\", \">=\",\n     *     and \"<=\".\n     * @param value1 {Integer} The value to compare against.\n     * @param align {String|null} The text alignment to format the cell with if the condition matches.\n     * @param color {String|null} The font color to format the cell with if the condition matches.\n     * @param style {String|null} The font style to format the cell with if the condition matches.\n     * @param weight {String|null} The font weight to format the cell with if the condition matches.\n     * @param target {String|null} The text value of the column to compare against. If this is null,\n     *     comparisons will be against the contents of this cell.\n     * @throws {Error} If the condition can not be recognized or value is null.\n     */\n    addNumericCondition : function(condition, value1, align, color, style, weight, target)\n    {\n      var temp = null;\n\n      if (this.numericAllowed.includes(condition))\n      {\n        if (value1 != null) {\n          temp = [condition, align, color, style, weight, value1, target];\n        }\n      }\n\n      if (temp != null) {\n        this.conditions.push(temp);\n      } else {\n        throw new Error(\"Condition not recognized or value is null!\");\n      }\n    },\n\n\n    /**\n     * The addBetweenCondition method is used to add a between condition to the\n     * cell renderer.\n     *\n     * Note: Passing null is different from passing an empty string in the align,\n     * color, style and weight arguments. Null will allow pre-existing formatting\n     * to pass through, where an empty string will clear it back to the default\n     * formatting set in the constructor.\n     *\n     *\n     * @param condition {String} The type of condition. Accepted strings are \"between\" and \"!between\".\n     * @param value1 {Integer} The first value to compare against.\n     * @param value2 {Integer} The second value to compare against.\n     * @param align {String|null} The text alignment to format the cell with if the condition matches.\n     * @param color {String|null} The font color to format the cell with if the condition matches.\n     * @param style {String|null} The font style to format the cell with if the condition matches.\n     * @param weight {String|null} The font weight to format the cell with if the condition matches.\n     * @param target {String|null} The text value of the column to compare against. If this is null,\n     *     comparisons will be against the contents of this cell.\n     * @throws {Error} If the condition can not be recognized or value is null.\n     */\n    addBetweenCondition : function(condition, value1, value2, align, color, style, weight, target)\n    {\n      if (this.betweenAllowed.includes(condition))\n      {\n        if (value1 != null && value2 != null) {\n          var temp = [condition, align, color, style, weight, value1, value2, target];\n        }\n      }\n\n      if (temp != null) {\n        this.conditions.push(temp);\n      } else {\n        throw new Error(\"Condition not recognized or value1/value2 is null!\");\n      }\n    },\n\n\n    /**\n     * The addRegex method is used to add a regular expression condition to the\n     * cell renderer.\n     *\n     * Note: Passing null is different from passing an empty string in the align,\n     * color, style and weight arguments. Null will allow pre-existing formatting\n     * to pass through, where an empty string will clear it back to the default\n     * formatting set in the constructor.\n     *\n     *\n     * @param regex {String} The regular expression to match against.\n     * @param align {String|null} The text alignment to format the cell with if the condition matches.\n     * @param color {String|null} The font color to format the cell with if the condition matches.\n     * @param style {String|null} The font style to format the cell with if the condition matches.\n     * @param weight {String|null} The font weight to format the cell with if the condition matches.\n     * @param target {String|null} The text value of the column to compare against. If this is null,\n     *     comparisons will be against the contents of this cell.\n     * @throws {Error} If the regex is null.\n     */\n    addRegex : function(regex, align, color, style, weight, target)\n    {\n      if (regex != null) {\n        var temp = [\"regex\", align, color, style, weight, regex, target];\n      }\n\n      if (temp != null) {\n        this.conditions.push(temp);\n      } else {\n        throw new Error(\"regex cannot be null!\");\n      }\n    },\n\n\n    /**\n     * Overridden; called whenever the cell updates. The cell will iterate through\n     * each available condition and apply formatting for those that\n     * match. Multiple conditions can match, but later conditions will override\n     * earlier ones. Conditions with null values will stack with other conditions\n     * that apply to that value.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {Map}\n     */\n    _getCellStyle : function(cellInfo)\n    {\n      var tableModel = cellInfo.table.getTableModel();\n      var i;\n      var cond_test;\n      var compareValue;\n\n      var style =\n      {\n        \"text-align\": this.__defaultTextAlign,\n        \"color\": this.__defaultColor,\n        \"font-style\": this.__defaultFontStyle,\n        \"font-weight\": this.__defaultFontWeight\n      };\n\n      for (i in this.conditions)\n      {\n        cond_test = false;\n\n        if (this.numericAllowed.includes(this.conditions[i][0]))\n        {\n          if (this.conditions[i][6] == null) {\n            compareValue = cellInfo.value;\n          } else {\n            compareValue = tableModel.getValueById(this.conditions[i][6], cellInfo.row);\n          }\n\n          switch(this.conditions[i][0])\n          {\n            case \"==\":\n              if (compareValue == this.conditions[i][5]) {\n                cond_test = true;\n              }\n\n              break;\n\n            case \"!=\":\n              if (compareValue != this.conditions[i][5]) {\n                cond_test = true;\n              }\n\n              break;\n\n            case \">\":\n              if (compareValue > this.conditions[i][5]) {\n                cond_test = true;\n              }\n\n              break;\n\n            case \"<\":\n              if (compareValue < this.conditions[i][5]) {\n                cond_test = true;\n              }\n\n              break;\n\n            case \">=\":\n              if (compareValue >= this.conditions[i][5]) {\n                cond_test = true;\n              }\n\n              break;\n\n            case \"<=\":\n              if (compareValue <= this.conditions[i][5]) {\n                cond_test = true;\n              }\n\n              break;\n          }\n        }\n        else if (this.betweenAllowed.includes(this.conditions[i][0]))\n        {\n          if (this.conditions[i][7] == null) {\n            compareValue = cellInfo.value;\n          } else {\n            compareValue = tableModel.getValueById(this.conditions[i][7], cellInfo.row);\n          }\n\n          switch(this.conditions[i][0])\n          {\n            case \"between\":\n              if (compareValue >= this.conditions[i][5] && compareValue <= this.conditions[i][6]) {\n                cond_test = true;\n              }\n\n              break;\n\n            case \"!between\":\n              if (compareValue < this.conditions[i][5] || compareValue > this.conditions[i][6]) {\n                cond_test = true;\n              }\n\n              break;\n          }\n        }\n        else if (this.conditions[i][0] == \"regex\")\n        {\n          if (this.conditions[i][6] == null) {\n            compareValue = cellInfo.value;\n          } else {\n            compareValue = tableModel.getValueById(this.conditions[i][6], cellInfo.row);\n          }\n\n          var the_pattern = new RegExp(this.conditions[i][5], 'g');\n          cond_test = the_pattern.test(compareValue);\n        }\n\n        // Apply formatting, if any.\n        if (cond_test == true) {\n          this.__applyFormatting(this.conditions[i], style);\n        }\n      }\n\n      var styleString = [];\n      for(var key in style) {\n        if (style[key]) {\n          styleString.push(key, \":\", style[key], \";\");\n        }\n      }\n      return styleString.join(\"\");\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.numericAllowed = this.betweenAllowed = this.conditions = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 OpenHex SPRL, http://www.openhex.org\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Dirk Wellmann (dw(at)piponline.net)\n\n************************************************************************ */\n\n/**\n * This Cellrender is for transparent use, without escaping! Use this Cellrender\n * to output plain HTML content.\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Html\",\n{\n  extend : qx.ui.table.cellrenderer.Conditional,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    _getContentHtml : function(cellInfo) {\n      return (cellInfo.value || \"\");\n    },\n\n    // overridden\n    _getCellClass : function(cellInfo) {\n      return \"qooxdoo-table-cell\";\n    }\n  }\n});\n"
  ]
}