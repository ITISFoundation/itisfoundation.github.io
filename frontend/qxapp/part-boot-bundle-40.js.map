{
  "version": 3,
  "sources": [
    "../transpiled/qx/event/message/Bus.js",
    "../transpiled/qx/bom/Shortcut.js",
    "../transpiled/qx/ui/form/TextArea.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/qxapp/part-boot-bundle-40.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger\n\n************************************************************************ */\n\n/**\n * A simple message bus singleton.\n * The message bus registers subscriptions and notifies subscribers when\n * a matching message is dispatched\n */\nqx.Class.define(\"qx.event.message.Bus\",\n{\n  type : \"singleton\",\n\n  extend : qx.core.Object,\n\n  statics :\n  {\n\n    /**\n     * gets the hash map of message subscriptions\n     *\n     * @return {Map} with registered subscriptions. The key is the\n     *    <code>message</code> and the value is a map with <code>{subscriber: {Function},\n     *    context: {Object|null}}</code>.\n     */\n    getSubscriptions : function() {\n      return this.getInstance().getSubscriptions();\n    },\n\n\n    /**\n     * subscribes to a message\n     *\n     * @param message {String} name of message, can be truncated by *\n     * @param subscriber {Function} subscribing callback function\n     * @param context {Object} The execution context of the callback (i.e. \"this\")\n     * @return {Boolean} Success\n     */\n    subscribe : function(message, subscriber, context)\n    {\n      return this.getInstance().subscribe(message, subscriber, context);\n\n    },\n\n    /**\n     * checks if subscription is already present\n     * if you supply the callback function, match only the exact message monitor\n     * otherwise match all monitors that have the given message\n     *\n     * @param message {String} Name of message, can be truncated by *\n     * @param subscriber {Function} Callback Function\n     * @param context {Object} execution context\n     * @return {Boolean} Whether monitor is present or not\n     */\n    checkSubscription : function(message, subscriber, context)\n    {\n      return this.getInstance().checkSubscription(message, subscriber, context);\n    },\n\n    /**\n     * unsubscribe a listening method\n     * if you supply the callback function and execution context,\n     * remove only this exact subscription\n     * otherwise remove all subscriptions\n     *\n     * @param message {String} Name of message, can be truncated by *\n     * @param subscriber {Function} Callback Function\n     * @param context {Object} execution context\n     * @return {Boolean} Whether monitor was removed or not\n     */\n    unsubscribe : function(message, subscriber, context)\n    {\n      return this.getInstance().unsubscribe(message, subscriber, context);\n    },\n\n    /**\n     * dispatch message and call subscribed functions\n     *\n     * @param msg {qx.event.message.Message} message which is being dispatched\n     * @return {Boolean} <code>true</code> if the message was dispatched,\n     *    <code>false</code> otherwise.\n     */\n    dispatch : function(msg)\n    {\n      return this.getInstance().dispatch.apply(this.getInstance(), arguments);\n    },\n\n    /**\n     * Dispatches a new message by supplying the name of the\n     * message and its data.\n     *\n     * @param name {String} name of the message\n     * @param data {var} Any type of data to attach\n     *\n     * @return {Boolean} <code>true</code> if the message was dispatched,\n     *    <code>false</code> otherwise.\n     */\n    dispatchByName : function(name, data)\n    {\n      return this.getInstance().dispatchByName.apply(this.getInstance(), arguments);\n    }\n  },\n\n  /**\n   * constructor\n   */\n  construct : function()\n  {\n    /*\n     * message subscriptions database\n     */\n    this.__subscriptions = {};\n  },\n\n  members :\n  {\n    __subscriptions : null,\n\n\n    /**\n     * gets the hash map of message subscriptions\n     *\n     * @return {Map} with registered subscriptions. The key is the\n     *    <code>message</code> and the value is a map with <code>{subscriber: {Function},\n     *    context: {Object|null}}</code>.\n     */\n    getSubscriptions : function() {\n      return this.__subscriptions;\n    },\n\n\n    /**\n     * subscribes to a message\n     *\n     * @param message {String} name of message, can be truncated by *\n     * @param subscriber {Function} subscribing callback function\n     * @param context {Object} The execution context of the callback (i.e. \"this\")\n     * @return {Boolean} Success\n     */\n    subscribe : function(message, subscriber, context)\n    {\n      if (!message || typeof subscriber != \"function\")\n      {\n        this.error(\"Invalid parameters! \"+ [message, subscriber, context]);\n\n        return false;\n      }\n\n      var sub = this.getSubscriptions();\n\n      if (this.checkSubscription(message))\n      {\n        if (this.checkSubscription(message, subscriber, context))\n        {\n          this.warn(\"Object method already subscribed to \" + message);\n          return false;\n        }\n\n        // add a subscription\n        sub[message].push(\n        {\n          subscriber : subscriber,\n          context    : context || null\n        });\n\n        return true;\n      }\n      else\n      {\n        // create a subscription\n        sub[message] = [ {\n          subscriber : subscriber,\n          context    : context || null\n        } ];\n\n        return true;\n      }\n    },\n\n\n    /**\n     * checks if subscription is already present\n     * if you supply the callback function, match only the exact message monitor\n     * otherwise match all monitors that have the given message\n     *\n     * @param message {String} Name of message, can be truncated by *\n     * @param subscriber {Function} Callback Function\n     * @param context {Object} execution context\n     * @return {Boolean} Whether monitor is present or not\n     */\n    checkSubscription : function(message, subscriber, context)\n    {\n      var sub = this.getSubscriptions();\n\n      if (!sub[message] || sub[message].length === 0) {\n        return false;\n      }\n\n      if (subscriber)\n      {\n        for (var i=0; i<sub[message].length; i++)\n        {\n          if (sub[message][i].subscriber === subscriber && sub[message][i].context === (context || null)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return true;\n    },\n\n\n    /**\n     * unsubscribe a listening method\n     * if you supply the callback function and execution context,\n     * remove only this exact subscription\n     * otherwise remove all subscriptions\n     *\n     * @param message {String} Name of message, can be truncated by *\n     * @param subscriber {Function} Callback Function\n     * @param context {Object} execution context\n     * @return {Boolean} Whether monitor was removed or not\n     */\n    unsubscribe : function(message, subscriber, context)\n    {\n       var sub = this.getSubscriptions();\n       var subscrList = sub[message];\n       if (subscrList) {\n         if (!subscriber) {\n           sub[message] = null;\n           delete sub[message];\n           return true;\n         } else {\n           if (! context) {\n             context = null;\n           }\n           var i = subscrList.length;\n           var subscription;\n           do {\n             subscription = subscrList[--i];\n             if (subscription.subscriber === subscriber && subscription.context === context) {\n               subscrList.splice(i, 1);\n               if (subscrList.length === 0) {\n                 sub[message] = null;\n                 delete sub[message];\n               }\n               return true;\n             }\n           } while (i);\n         }\n       }\n       return false;\n    },\n\n    /**\n     * dispatch message and call subscribed functions\n     *\n     * @param msg {qx.event.message.Message} message which is being dispatched\n     * @return {Boolean} <code>true</code> if the message was dispatched,\n     *    <code>false</code> otherwise.\n     */\n    dispatch : function(msg)\n    {\n      var sub = this.getSubscriptions();\n      var msgName = msg.getName();\n      var dispatched = false;\n\n      for (var key in sub)\n      {\n        var pos = key.indexOf(\"*\");\n\n        if (pos > -1)\n        {\n          // use of wildcard\n          if (pos === 0 || key.substr(0, pos) === msgName.substr(0, pos))\n          {\n            this.__callSubscribers(sub[key], msg);\n            dispatched = true;\n          }\n        }\n        else\n        {\n          // exact match\n          if (key === msgName)\n          {\n            this.__callSubscribers(sub[msgName], msg);\n            dispatched = true;\n          }\n        }\n      }\n\n      return dispatched;\n    },\n\n    /**\n     * Dispatches a new message by supplying the name of the\n     * message and its data.\n     *\n     * @param name {String} name of the message\n     * @param data {var} Any type of data to attach\n     *\n     * @return {Boolean} <code>true</code> if the message was dispatched,\n     *    <code>false</code> otherwise.\n     */\n    dispatchByName : function(name, data)\n    {\n      var message = new qx.event.message.Message(name, data);\n\n      // Dispatch the message\n      var ret = this.dispatch(message);\n\n      // We instantiated this message, so it's our responsibility to dispose it.\n      message.dispose();\n      message = null;\n\n      // Let 'em know whether this message was dispatched to any subscribers.\n      return ret;\n    },\n\n\n    /**\n     * Call subscribers with passed message.\n     *\n     * Each currently-subscribed subscriber function will be called in\n     * turn. Any requests to unsubscribe a subscriber from the list, while\n     * processing the currently-subscribed subscriber functions, will take\n     * effect after all currently-subscribed subscriber functions have been\n     * processed.\n     *\n     * @param subscribers {Array} subscribers to call\n     * @param msg {qx.event.message.Message} message for subscribers\n     */\n    __callSubscribers : function(subscribers, msg)\n    {\n      // (Shallow) clone the subscribers array in case one of them alters the\n      // list, e.g., by unsubscribing\n      subscribers = subscribers.slice();\n\n      for (var i=0; i<subscribers.length; i++)\n      {\n        var subscriber = subscribers[i].subscriber;\n        var context = subscribers[i].context;\n\n        // call message monitor subscriber\n        if (context && context.isDisposed)\n        {\n          if (context.isDisposed())\n          {\n            subscribers.splice(i, 1);\n            i--;\n          }\n          else\n          {\n            subscriber.call(context, msg);\n          }\n        }\n        else\n        {\n          subscriber.call(context, msg);\n        }\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Shortcuts can be used to globally define keyboard shortcuts.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.bom.Shortcut\",\n{\n  extend : qx.core.Object,\n  implement: [ qx.core.IDisposable ],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance of Command\n   *\n   * @param shortcut {String} shortcuts can be composed of optional modifier\n   *    keys Control, Alt, Shift, Meta and a non modifier key.\n   *    If no non modifier key is specified, the second parameter is evaluated.\n   *    The key must be separated by a <code>+</code> or <code>-</code> character.\n   *    Examples: Alt+F1, Control+C, Control+Alt+Delete\n   */\n  construct : function(shortcut)\n  {\n    this.base(arguments);\n\n    this.__modifier = {};\n    this.__key = null;\n\n    if (shortcut != null) {\n      this.setShortcut(shortcut);\n    }\n\n    this.initEnabled();\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * Fired when the command is executed. Sets the \"data\" property of the event to\n     * the object that issued the command.\n     */\n    \"execute\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** whether the command should be respected/enabled */\n    enabled :\n    {\n      init : true,\n      check : \"Boolean\",\n      event : \"changeEnabled\",\n      apply : \"_applyEnabled\"\n    },\n\n\n    /** The command shortcut */\n    shortcut :\n    {\n      check : \"String\",\n      apply : \"_applyShortcut\",\n      nullable : true\n    },\n\n\n    /**\n     * Whether the execute event should be fired repeatedly if the user keep\n     * the keys pressed.\n     */\n    autoRepeat :\n    {\n      check : \"Boolean\",\n      init : false\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __modifier : \"\",\n    __key : \"\",\n\n\n    /*\n    ---------------------------------------------------------------------------\n      USER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fire the \"execute\" event on this shortcut.\n     *\n     * @param target {Object} Object which issued the execute event\n     */\n    execute : function(target) {\n      this.fireDataEvent(\"execute\", target);\n    },\n\n\n    /**\n     * Key down event handler.\n     *\n     * @param event {qx.event.type.KeySequence} The key event object\n     */\n    __onKeyDown : function(event)\n    {\n      if (this.getEnabled() && this.__matchesKeyEvent(event))\n      {\n        if (!this.isAutoRepeat()) {\n          this.execute(event.getTarget());\n        }\n        event.stop();\n      }\n    },\n\n\n    /**\n     * Key press event handler.\n     *\n     * @param event {qx.event.type.KeySequence} The key event object\n     */\n    __onKeyPress : function(event)\n    {\n      if (this.getEnabled() && this.__matchesKeyEvent(event))\n      {\n        if (this.isAutoRepeat()) {\n          this.execute(event.getTarget());\n        }\n        event.stop();\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applyEnabled : function(value, old)\n    {\n      if (value) {\n        qx.event.Registration.addListener(document.documentElement, \"keydown\", this.__onKeyDown, this);\n        qx.event.Registration.addListener(document.documentElement, \"keypress\", this.__onKeyPress, this);\n      } else {\n        qx.event.Registration.removeListener(document.documentElement, \"keydown\", this.__onKeyDown, this);\n        qx.event.Registration.removeListener(document.documentElement, \"keypress\", this.__onKeyPress, this);\n      }\n    },\n\n\n    // property apply\n    _applyShortcut : function(value, old)\n    {\n      if (value)\n      {\n        // do not allow whitespaces within shortcuts\n        if (value.search(/[\\s]+/) != -1)\n        {\n          var msg = \"Whitespaces are not allowed within shortcuts\";\n          this.error(msg);\n          throw new Error(msg);\n        }\n\n        this.__modifier = { \"Control\" : false,\n                            \"Shift\"   : false,\n                            \"Meta\"    : false,\n                            \"Alt\"     : false };\n        this.__key = null;\n\n        // To support shortcuts with \"+\" and \"-\" as keys it is necessary\n        // to split the given value in a different way to determine the\n        // several keyIdentifiers\n        var index;\n        var a = [];\n        while (value.length > 0 && index != -1)\n        {\n          // search for delimiters \"+\" and \"-\"\n          index = value.search(/[-+]+/);\n\n          // add identifiers - take value if no separator was found or\n          // only one char is left (second part of shortcut)\n          a.push((value.length == 1 || index == -1) ? value : value.substring(0, index));\n\n          // extract the already detected identifier\n          value = value.substring(index + 1);\n        }\n        var al = a.length;\n\n        for (var i=0; i<al; i++)\n        {\n          var identifier = this.__normalizeKeyIdentifier(a[i]);\n\n          switch(identifier)\n          {\n            case \"Control\":\n            case \"Shift\":\n            case \"Meta\":\n            case \"Alt\":\n              this.__modifier[identifier] = true;\n              break;\n\n            case \"Unidentified\":\n              var msg = \"Not a valid key name for a shortcut: \" + a[i];\n              this.error(msg);\n              throw msg;\n\n            default:\n              if (this.__key)\n              {\n                var msg = \"You can only specify one non modifier key!\";\n                this.error(msg);\n                throw msg;\n              }\n\n              this.__key = identifier;\n          }\n        }\n      }\n\n      return true;\n    },\n\n\n\n\n    /*\n    --------------------------------------------------------------------------\n      INTERNAL MATCHING LOGIC\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Checks whether the given key event matches the shortcut's shortcut\n     *\n     * @param e {qx.event.type.KeySequence} the key event object\n     * @return {Boolean} whether the shortcuts shortcut matches the key event\n     */\n    __matchesKeyEvent : function(e)\n    {\n      var key = this.__key;\n\n      if (!key)\n      {\n        // no shortcut defined.\n        return false;\n      }\n\n      // for check special keys\n      // and check if a shortcut is a single char and special keys are pressed\n      if (\n        (!this.__modifier.Shift && e.isShiftPressed()) ||\n        (this.__modifier.Shift && !e.isShiftPressed()) ||\n        (!this.__modifier.Control && e.isCtrlPressed()) ||\n        (this.__modifier.Control && !e.isCtrlPressed()) ||\n        (!this.__modifier.Meta && e.isMetaPressed()) ||\n        (this.__modifier.Meta && !e.isMetaPressed()) ||\n        (!this.__modifier.Alt && e.isAltPressed()) ||\n        (this.__modifier.Alt && !e.isAltPressed())\n      ) {\n        return false;\n      }\n\n      if (key == e.getKeyIdentifier()) {\n        return true;\n      }\n\n      return false;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      COMPATIBILITY TO COMMAND\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @lint ignoreReferenceField(__oldKeyNameToKeyIdentifierMap)\n     */\n    __oldKeyNameToKeyIdentifierMap :\n    {\n      // all other keys are converted by converting the first letter to uppercase\n      esc             : \"Escape\",\n      ctrl            : \"Control\",\n      print           : \"PrintScreen\",\n      del             : \"Delete\",\n      pageup          : \"PageUp\",\n      pagedown        : \"PageDown\",\n      numlock         : \"NumLock\",\n      numpad_0        : \"0\",\n      numpad_1        : \"1\",\n      numpad_2        : \"2\",\n      numpad_3        : \"3\",\n      numpad_4        : \"4\",\n      numpad_5        : \"5\",\n      numpad_6        : \"6\",\n      numpad_7        : \"7\",\n      numpad_8        : \"8\",\n      numpad_9        : \"9\",\n      numpad_divide   : \"/\",\n      numpad_multiply : \"*\",\n      numpad_minus    : \"-\",\n      numpad_plus     : \"+\"\n    },\n\n\n    /**\n     * Checks and normalizes the key identifier.\n     *\n     * @param keyName {String} name of the key.\n     * @return {String} normalized keyIdentifier or \"Unidentified\" if a conversion was not possible\n     */\n    __normalizeKeyIdentifier : function(keyName)\n    {\n      var kbUtil = qx.event.util.Keyboard;\n      var keyIdentifier = \"Unidentified\";\n\n      if (kbUtil.isValidKeyIdentifier(keyName)) {\n        return keyName;\n      }\n\n      if (keyName.length == 1 && keyName >= \"a\" && keyName <= \"z\") {\n        return keyName.toUpperCase();\n      }\n\n      keyName = keyName.toLowerCase();\n      var keyIdentifier = this.__oldKeyNameToKeyIdentifierMap[keyName] || qx.lang.String.firstUp(keyName);\n\n      if (kbUtil.isValidKeyIdentifier(keyIdentifier)) {\n        return keyIdentifier;\n      } else {\n        return \"Unidentified\";\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STRING CONVERSION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the shortcut as string using the currently selected locale.\n     *\n     * @return {String} shortcut\n     */\n    toString : function()\n    {\n      var key = this.__key;\n\n      var str = [];\n\n      for (var modifier in this.__modifier) {\n        // this.__modifier holds a map with shortcut combination keys\n        // like \"Control\", \"Alt\", \"Meta\" and \"Shift\" as keys with\n        // Boolean values\n        if (this.__modifier[modifier])\n        {\n          str.push(qx.locale.Key.getKeyName(\"short\", modifier));\n        }\n      }\n\n      if (key) {\n        str.push(qx.locale.Key.getKeyName(\"short\", key));\n      }\n\n      return str.join(\"+\");\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    // this will remove the event listener\n    this.setEnabled(false);\n\n    this.__modifier = this.__key = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Jonathan Weiß (jonathan_rass)\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n * The TextField is a multi-line text input field.\n */\nqx.Class.define(\"qx.ui.form.TextArea\",\n{\n  extend : qx.ui.form.AbstractField,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String?\"\"} The text area's initial value\n   */\n  construct : function(value)\n  {\n    this.base(arguments, value);\n    this.initWrap();\n\n    this.addListener(\"roll\", this._onRoll, this);\n    this.addListener(\"resize\", this._onResize, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** Controls whether text wrap is activated or not. */\n    wrap :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyWrap\"\n    },\n\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"textarea\"\n    },\n\n    /** Factor for scrolling the <code>TextArea</code> with the mouse wheel. */\n    singleStep :\n    {\n      check : \"Integer\",\n      init : 20\n    },\n\n    /** Minimal line height. On default this is set to four lines. */\n    minimalLineHeight :\n    {\n      check : \"Integer\",\n      apply : \"_applyMinimalLineHeight\",\n      init : 4\n    },\n\n    /**\n    * Whether the <code>TextArea</code> should automatically adjust to\n    * the height of the content.\n    *\n    * To set the initial height, modify {@link #minHeight}. If you wish\n    * to set a minHeight below four lines of text, also set\n    * {@link #minimalLineHeight}. In order to limit growing to a certain\n    * height, set {@link #maxHeight} respectively. Please note that\n    * autoSize is ignored when the {@link #height} property is in use.\n    */\n    autoSize :\n    {\n      check : \"Boolean\",\n      apply : \"_applyAutoSize\",\n      init : false\n    }\n\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __areaClone : null,\n    __areaHeight : null,\n    __originalAreaHeight : null,\n\n    // overridden\n    setValue : function(value)\n    {\n      value = this.base(arguments, value);\n      this.__autoSize();\n\n      return value;\n    },\n\n    /**\n     * Handles the roll for scrolling the <code>TextArea</code>.\n     *\n     * @param e {qx.event.type.Roll} roll event.\n     */\n    _onRoll : function(e) {\n      // only wheel\n      if (e.getPointerType() != \"wheel\") {\n        return;\n      }\n      var contentElement = this.getContentElement();\n      var scrollY = contentElement.getScrollY();\n\n      contentElement.scrollToY(scrollY + (e.getDelta().y / 30) * this.getSingleStep());\n\n      var newScrollY = contentElement.getScrollY();\n\n      if (newScrollY != scrollY) {\n        e.stop();\n      }\n    },\n\t\n\t\n    /**\n     * When the element resizes we throw away the clone and trigger autosize again, otherwise the clone would have\n     * another width and the autosize calculation would be faulty.\n     * \n     * @param e {qx.event.type.Data} resize event.\n     */\n    _onResize : function(e) {\n      if (this.__areaClone) {\n        this.__areaClone.dispose();\n        this.__areaClone = null;\n        this.__autoSize();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      AUTO SIZE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n    * Adjust height of <code>TextArea</code> so that content fits without scroll bar.\n    *\n    */\n    __autoSize: function() {\n      if (this.isAutoSize()) {\n        var clone = this.__getAreaClone();\n\n        if (clone && this.getBounds()) {\n\n          // Remember original area height\n          this.__originalAreaHeight = this.__originalAreaHeight || this._getAreaHeight();\n\n          var scrolledHeight = this._getScrolledAreaHeight();\n\n          // Show scroll-bar when above maxHeight, if defined\n          if (this.getMaxHeight()) {\n            var insets = this.getInsets();\n            var innerMaxHeight = -insets.top + this.getMaxHeight() - insets.bottom;\n            if (scrolledHeight > innerMaxHeight) {\n                this.getContentElement().setStyle(\"overflowY\", \"auto\");\n            } else {\n                this.getContentElement().setStyle(\"overflowY\", \"hidden\");\n            }\n          }\n\n          // Never shrink below original area height\n          var desiredHeight = Math.max(scrolledHeight, this.__originalAreaHeight);\n\n          // Set new height\n          this._setAreaHeight(desiredHeight);\n\n        // On init, the clone is not yet present. Try again on appear.\n        } else {\n          this.getContentElement().addListenerOnce(\"appear\", function() {\n            this.__autoSize();\n          }, this);\n        }\n      }\n    },\n\n    /**\n    * Get actual height of <code>TextArea</code>\n    *\n    * @return {Integer} Height of <code>TextArea</code>\n    */\n    _getAreaHeight: function() {\n      return this.getInnerSize().height;\n    },\n\n    /**\n    * Set actual height of <code>TextArea</code>\n    *\n    * @param height {Integer} Desired height of <code>TextArea</code>\n    */\n    _setAreaHeight: function(height) {\n      if (this._getAreaHeight() !== height) {\n        this.__areaHeight = height;\n\n        qx.ui.core.queue.Layout.add(this);\n\n        // Apply height directly. This works-around a visual glitch in WebKit\n        // browsers where a line-break causes the text to be moved upwards\n        // for one line. Since this change appears instantly whereas the queue\n        // is computed later, a flicker is visible.\n        qx.ui.core.queue.Manager.flush();\n\n        this.__forceRewrap();\n      }\n    },\n\n    /**\n    * Get scrolled area height. Equals the total height of the <code>TextArea</code>,\n    * as if no scroll-bar was visible.\n    *\n    * @return {Integer} Height of scrolled area\n    */\n    _getScrolledAreaHeight: function() {\n      var clone = this.__getAreaClone();\n      var cloneDom = clone.getDomElement();\n\n      if (cloneDom) {\n\n        // Clone created but not yet in DOM. Try again.\n        if (!cloneDom.parentNode) {\n          qx.html.Element.flush();\n          return this._getScrolledAreaHeight();\n        }\n\n        // In WebKit and IE8, \"wrap\" must have been \"soft\" on DOM level before setting\n        // \"off\" can disable wrapping. To fix, make sure wrap is toggled.\n        // Otherwise, the height of an auto-size text area with wrapping\n        // disabled initially is incorrectly computed as if wrapping was enabled.\n        if (qx.core.Environment.get(\"engine.name\") === \"webkit\" ||\n            (qx.core.Environment.get(\"engine.name\") == \"mshtml\")) {\n          clone.setWrap(!this.getWrap(), true);\n        }\n\n        clone.setWrap(this.getWrap(), true);\n\n        // Webkit needs overflow \"hidden\" in order to correctly compute height\n        if (qx.core.Environment.get(\"engine.name\") === \"webkit\" ||\n            (qx.core.Environment.get(\"engine.name\") == \"mshtml\")) {\n          cloneDom.style.overflow = \"hidden\";\n        }\n\n        // IE >= 8 needs overflow \"visible\" in order to correctly compute height\n        if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n          qx.core.Environment.get(\"browser.documentmode\") >= 8) {\n          cloneDom.style.overflow = \"visible\";\n          cloneDom.style.overflowX = \"hidden\";\n        }\n\n        // Update value\n        clone.setValue(this.getValue() || \"\");\n\n        // Force IE > 8 to update size measurements\n        if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n          cloneDom.style.height = \"auto\";\n          qx.html.Element.flush();\n          cloneDom.style.height = \"0\";\n        }\n\n        // Recompute\n        this.__scrollCloneToBottom(clone);\n\n        if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n            qx.core.Environment.get(\"browser.documentmode\") == 8) {\n          // Flush required for scrollTop to return correct value\n          // when initial value should be taken into consideration\n          if (!cloneDom.scrollTop) {\n            qx.html.Element.flush();\n          }\n        }\n\n        return cloneDom.scrollTop;\n      }\n    },\n\n    /**\n    * Returns the area clone.\n    *\n    * @return {Element|null} DOM Element or <code>null</code> if there is no\n    * original element\n    */\n    __getAreaClone: function() {\n      this.__areaClone = this.__areaClone || this.__createAreaClone();\n      return this.__areaClone;\n    },\n\n    /**\n    * Creates and prepares the area clone.\n    *\n    * @return {Element} Element\n    */\n    __createAreaClone: function() {\n      var orig,\n          clone,\n          cloneDom,\n          cloneHtml;\n\n      orig = this.getContentElement();\n\n      // An existing DOM element is required\n      if (!orig.getDomElement()) {\n        return null;\n      }\n\n      // Create DOM clone\n      cloneDom = qx.bom.Element.clone(orig.getDomElement());\n\n      // Convert to qx.html Element\n      cloneHtml = new qx.html.Input(\"textarea\");\n      cloneHtml.useElement(cloneDom);\n      clone = cloneHtml;\n\n      // Push out of view\n      // Zero height (i.e. scrolled area equals height)\n      clone.setStyles({\n        position: \"absolute\",\n        top: 0,\n        left: \"-9999px\",\n        height: 0,\n        overflow: \"hidden\"\n      }, true);\n\n      // Fix attributes\n      clone.removeAttribute('id');\n      clone.removeAttribute('name');\n      clone.setAttribute(\"tabIndex\", \"-1\");\n\n      // Copy value\n      clone.setValue(orig.getValue() || \"\");\n\n      // Attach to DOM\n      clone.insertBefore(orig);\n\n      // Make sure scrollTop is actual height\n      this.__scrollCloneToBottom(clone);\n\n      return clone;\n    },\n\n    /**\n    * Scroll <code>TextArea</code> to bottom. That way, scrollTop reflects the height\n    * of the <code>TextArea</code>.\n    *\n    * @param clone {Element} The <code>TextArea</code> to scroll\n    */\n    __scrollCloneToBottom: function(clone) {\n      clone = clone.getDomElement();\n      if (clone) {\n        clone.scrollTop = 10000;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FIELD API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createInputElement : function()\n    {\n      return new qx.html.Input(\"textarea\", {\n        overflowX: \"auto\",\n        overflowY: \"auto\"\n      });\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyWrap : function(value, old) {\n      this.getContentElement().setWrap(value);\n      if (this._placeholder) {\n        var whiteSpace = value ? \"normal\" : \"nowrap\";\n        this._placeholder.setStyle(\"whiteSpace\", whiteSpace);\n      }\n      this.__autoSize();\n    },\n\n    // property apply\n    _applyMinimalLineHeight : function() {\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    // property apply\n    _applyAutoSize: function(value, old) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.__warnAutoSizeAndHeight();\n      }\n\n      if (value) {\n        this.__autoSize();\n        this.addListener(\"input\", this.__autoSize, this);\n\n        // This is done asynchronously on purpose. The style given would\n        // otherwise be overridden by the DOM changes queued in the\n        // property apply for wrap. See [BUG #4493] for more details.\n        if (!this.getBounds()) {\n          this.addListenerOnce(\"appear\", function() {\n            this.getContentElement().setStyle(\"overflowY\", \"hidden\");\n          });\n        } else {\n          this.getContentElement().setStyle(\"overflowY\", \"hidden\");\n        }\n\n      } else {\n        this.removeListener(\"input\", this.__autoSize);\n        this.getContentElement().setStyle(\"overflowY\", \"auto\");\n      }\n    },\n\n\n    // property apply\n    _applyDimension : function(value) {\n      this.base(arguments);\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.__warnAutoSizeAndHeight();\n      }\n\n      if (value === this.getMaxHeight()) {\n        this.__autoSize();\n      }\n    },\n\n    /**\n     * Force rewrapping of text.\n     *\n     * The distribution of characters depends on the space available.\n     * Unfortunately, browsers do not reliably (or not at all) rewrap text when\n     * the size of the text area changes.\n     *\n     * This method is called on change of the area's size.\n     */\n    __forceRewrap : function() {\n      var content = this.getContentElement();\n      var element = content.getDomElement();\n\n      // Temporarily increase width\n      var width = content.getStyle(\"width\");\n      content.setStyle(\"width\", parseInt(width, 10) + 1000 + \"px\", true);\n\n      // Force browser to render\n      if (element) {\n        qx.bom.element.Dimension.getWidth(element);\n      }\n\n      // Restore width\n      content.setStyle(\"width\", width, true);\n    },\n\n    /**\n     * Warn when both autoSize and height property are set.\n     *\n     */\n    __warnAutoSizeAndHeight: function() {\n      if (this.isAutoSize() && this.getHeight()) {\n        this.warn(\"autoSize is ignored when the height property is set. \" +\n                  \"If you want to set an initial height, use the minHeight \" +\n                  \"property instead.\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getContentHint : function()\n    {\n      var hint = this.base(arguments);\n\n      // lines of text\n      hint.height = hint.height * this.getMinimalLineHeight();\n\n      // 20 character wide\n      hint.width = this._getTextSize().width * 20;\n\n      if (this.isAutoSize()) {\n        hint.height = this.__areaHeight || hint.height;\n      }\n\n      return hint;\n    }\n  },\n\n\n  destruct : function() {\n    this.setAutoSize(false);\n    if (this.__areaClone) {\n      this.__areaClone.dispose();\n    }\n  }\n});\n"
  ]
}