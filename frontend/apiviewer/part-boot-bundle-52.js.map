{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/menu/CheckBox.js",
    "../transpiled/qx/ui/table/columnmenu/MenuItem.js",
    "../transpiled/qx/ui/table/pane/Clipper.js",
    "../transpiled/qx/ui/table/pane/CellEvent.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-52.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Renders a special checkbox button inside a menu. The button behaves like\n * a normal {@link qx.ui.form.CheckBox} and shows a check icon when\n * checked; normally shows no icon when not checked (depends on the theme).\n */\nqx.Class.define(\"qx.ui.menu.CheckBox\",\n{\n  extend : qx.ui.menu.AbstractButton,\n  implement : [qx.ui.form.IBooleanForm],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Initial label\n   * @param menu {qx.ui.menu.Menu} Initial sub menu\n   */\n  construct : function(label, menu)\n  {\n    this.base(arguments);\n\n    // Initialize with incoming arguments\n    if (label != null) {\n      // try to translate every time you create a checkbox [BUG #2699]\n      if (label.translate) {\n        this.setLabel(label.translate());\n      } else {\n        this.setLabel(label);\n      }\n    }\n\n    if (menu != null) {\n      this.setMenu(menu);\n    }\n\n    this.addListener(\"execute\", this._onExecute, this);\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"menu-checkbox\"\n    },\n\n    /** Whether the button is checked */\n    value :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyValue\",\n      event : \"changeValue\",\n      nullable : true\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden (from MExecutable to keep the icon out of the binding)\n    /**\n     * @lint ignoreReferenceField(_bindableProperties)\n     */\n    _bindableProperties :\n    [\n      \"enabled\",\n      \"label\",\n      \"toolTipText\",\n      \"value\",\n      \"menu\"\n    ],\n\n    // property apply\n    _applyValue : function(value, old)\n    {\n      value ?\n        this.addState(\"checked\") :\n        this.removeState(\"checked\");\n    },\n\n\n    /**\n     * Handler for the execute event.\n     *\n     * @param e {qx.event.type.Event} The execute event.\n     */\n    _onExecute : function(e) {\n      this.toggleValue();\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * A menu item.\n */\nqx.Class.define(\"qx.ui.table.columnmenu.MenuItem\",\n{\n  extend     : qx.ui.menu.CheckBox,\n  implement  : qx.ui.table.IColumnMenuItem,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance of an item for insertion into the table column\n   * visibility menu.\n   *\n   * @param text {String}\n   *   Text for the menu item, most typically the name of the column in the\n   *   table.\n   */\n  construct : function(text)\n  {\n    this.base(arguments, text);\n\n    // Two way binding this.columnVisible <--> this.value\n    this.bind(\"value\", this, \"columnVisible\");\n    this.bind(\"columnVisible\", this, \"value\");\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    columnVisible :\n    {\n      check : \"Boolean\",\n      init  : true,\n      event : \"changeColumnVisible\"\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Clipping area for the table header and table pane.\n */\nqx.Class.define(\"qx.ui.table.pane.Clipper\",\n{\n  extend : qx.ui.container.Composite,\n\n  construct : function()\n  {\n    this.base(arguments, new qx.ui.layout.Grow());\n    this.setMinWidth(0);\n  },\n\n  members :\n  {\n    /**\n     * Scrolls the element's content to the given left coordinate\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     */\n    scrollToX : function(value) {\n      this.getContentElement().scrollToX(value, false);\n    },\n\n\n    /**\n     * Scrolls the element's content to the given top coordinate\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     */\n    scrollToY : function(value) {\n      this.getContentElement().scrollToY(value, true);\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * David Perez Carmona (david-perez)\n\n************************************************************************ */\n\n/**\n * A cell event instance contains all data for pointer events related to cells in\n * a table.\n **/\nqx.Class.define(\"qx.ui.table.pane.CellEvent\",\n{\n  extend : qx.event.type.Pointer,\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The table row of the event target */\n    row :\n    {\n      check : \"Integer\",\n      nullable: true\n    },\n\n    /** The table column of the event target */\n    column :\n    {\n      check : \"Integer\",\n      nullable: true\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n     *****************************************************************************\n        CONSTRUCTOR\n     *****************************************************************************\n     */\n\n     /**\n      * Initialize the event\n      *\n      * @param scroller {qx.ui.table.pane.Scroller} The tables pane scroller\n      * @param me {qx.event.type.Pointer} The original pointer event\n      * @param row {Integer?null} The cell's row index\n      * @param column {Integer?null} The cell's column index\n      */\n    init : function(scroller, me, row, column)\n    {\n      me.clone(this);\n      this.setBubbles(false);\n\n      if (row != null) {\n        this.setRow(row);\n      } else {\n        this.setRow(scroller._getRowForPagePos(this.getDocumentLeft(), this.getDocumentTop()));\n      }\n\n      if (column != null) {\n        this.setColumn(column);\n      } else {\n        this.setColumn(scroller._getColumnForPageX(this.getDocumentLeft()));\n      }\n    },\n\n\n    // overridden\n    clone : function(embryo)\n    {\n      var clone = this.base(arguments, embryo);\n\n      clone.set({\n        row: this.getRow(),\n        column: this.getColumn()\n      });\n\n      return clone;\n    }\n  }\n});\n"
  ]
}