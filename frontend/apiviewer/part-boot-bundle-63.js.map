{
  "version": 3,
  "sources": [
    "../transpiled/qx/bom/HashHistory.js",
    "../transpiled/qx/bom/IframeHistory.js",
    "../transpiled/qx/bom/NativeHistory.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-63.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\n/**\n * History manager implementation for IE greater 7. IE reloads iframe\n * content on history actions even just hash value changed. This\n * implementation forwards history states (hashes) to a helper iframe.\n *\n * This class must be disposed of after use\n *\n * @internal\n */\nqx.Class.define(\"qx.bom.HashHistory\",\n{\n  extend : qx.bom.History,\n  implement: [ qx.core.IDisposable ],\n\n  construct : function()\n  {\n    this.base(arguments);\n    this._baseUrl = null;\n    this.__initIframe();\n  },\n\n\n  members :\n  {\n    __checkOnHashChange : null,\n    __iframe : null,\n    __iframeReady : false,\n\n\n    //overridden\n    addToHistory : function(state, newTitle)\n    {\n      if (!qx.lang.Type.isString(state)) {\n        state = state + \"\";\n      }\n\n      if (qx.lang.Type.isString(newTitle))\n      {\n        this.setTitle(newTitle);\n        this._titles[state] = newTitle;\n      }\n\n      if (this.getState() !== state) {\n        this._writeState(state);\n      }\n    },\n\n\n    /**\n     * Initializes the iframe\n     *\n     */\n    __initIframe : function()\n    {\n      this.__iframe = this.__createIframe();\n      document.body.appendChild(this.__iframe);\n\n      this.__waitForIFrame(function()\n      {\n        this._baseUrl = this.__iframe.contentWindow.document.location.href;\n        this.__attachListeners();\n      }, this);\n    },\n\n\n    /**\n     * IMPORTANT NOTE FOR IE:\n     * Setting the source before adding the iframe to the document.\n     * Otherwise IE will bring up a \"Unsecure items ...\" warning in SSL mode\n     *\n     * @return {Element}\n     */\n    __createIframe : function ()\n    {\n      var iframe = qx.bom.Iframe.create({\n        src : qx.util.ResourceManager.getInstance().toUri(qx.core.Environment.get(\"qx.blankpage\")) + \"#\"\n      });\n\n      iframe.style.visibility = \"hidden\";\n      iframe.style.position = \"absolute\";\n      iframe.style.left = \"-1000px\";\n      iframe.style.top = \"-1000px\";\n\n      return iframe;\n    },\n\n\n    /**\n     * Waits for the IFrame being loaded. Once the IFrame is loaded\n     * the callback is called with the provided context.\n     *\n     * @param callback {Function} This function will be called once the iframe is loaded\n     * @param context {Object?window} The context for the callback.\n     * @param retry {Integer} number of tries to initialize the iframe\n     */\n    __waitForIFrame : function(callback, context, retry)\n    {\n      if (typeof retry === \"undefined\") {\n        retry = 0;\n      }\n\n      if ( !this.__iframe.contentWindow || !this.__iframe.contentWindow.document )\n      {\n        if (retry > 20) {\n          throw new Error(\"can't initialize iframe\");\n        }\n\n        qx.event.Timer.once(function() {\n          this.__waitForIFrame(callback, context, ++retry);\n        }, this, 10);\n\n        return;\n      }\n\n      this.__iframeReady = true;\n      callback.call(context || window);\n    },\n\n\n    /**\n     * Attach hash change listeners\n     */\n    __attachListeners : function()\n    {\n      qx.event.Idle.getInstance().addListener(\"interval\", this.__onHashChange, this);\n    },\n\n\n    /**\n     * Remove hash change listeners\n     */\n    __detatchListeners : function()\n    {\n      qx.event.Idle.getInstance().removeListener(\"interval\", this.__onHashChange, this);\n    },\n\n\n    /**\n     * hash change event handler\n     */\n    __onHashChange : function()\n    {\n      var currentState = this._readState();\n\n      if (qx.lang.Type.isString(currentState) && currentState != this.getState()) {\n        this._onHistoryLoad(currentState);\n      }\n    },\n\n\n    /**\n     * Browser dependent function to read the current state of the history\n     *\n     * @return {String} current state of the browser history\n     */\n    _readState : function() {\n      var hash = !this._getHash() ? \"\" : this._getHash().substr(1);\n      return this._decode(hash);\n    },\n\n\n    /**\n     * Returns the fragment identifier of the top window URL. For gecko browsers we\n     * have to use a regular expression to avoid encoding problems.\n     *\n     * @return {String|null} the fragment identifier or <code>null</code> if the\n     * iframe isn't ready yet\n     */\n    _getHash : function()\n    {\n      if (!this.__iframeReady){\n        return null;\n      }\n      return this.__iframe.contentWindow.document.location.hash;\n    },\n\n\n    /**\n     * Save a state into the browser history.\n     *\n     * @param state {String} state to save\n     */\n    _writeState : function(state)\n    {\n      this._setHash(this._encode(state));\n    },\n\n\n    /**\n     * Sets the fragment identifier of the window URL\n     *\n     * @param value {String} the fragment identifier\n     */\n    _setHash : function (value)\n    {\n      if (!this.__iframe || !this._baseUrl){\n        return;\n      }\n      var hash = !this.__iframe.contentWindow.document.location.hash ? \"\" : this.__iframe.contentWindow.document.location.hash.substr(1);\n      if (value != hash) {\n        this.__iframe.contentWindow.document.location.hash = value;\n      }\n    }\n  },\n\n\n  destruct : function() {\n    this.__detatchListeners();\n    this.__iframe = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\n/**\n * Implements an iFrame based history manager for IE 6/7/8.\n *\n * Creates a hidden iFrame and uses document.write to store entries in the\n * history browser's stack.\n *\n * This class must be disposed of after use\n *\n * @internal\n */\nqx.Class.define(\"qx.bom.IframeHistory\",\n{\n  extend : qx.bom.History,\n  implement: [ qx.core.IDisposable ],\n\n\n  construct : function()\n  {\n    this.base(arguments);\n    this.__initTimer();\n  },\n\n\n  members :\n  {\n    __iframe : null,\n    __iframeReady : false,\n    __writeStateTimner : null,\n    __dontApplyState : null,\n    __locationState : null,\n\n\n    // overridden\n    _setInitialState : function()\n    {\n      this.base(arguments);\n      this.__locationState = this._getHash();\n    },\n\n\n    //overridden\n    _setHash : function(value)\n    {\n      this.base(arguments, value);\n      this.__locationState = this._encode(value);\n    },\n\n\n    //overridden\n    addToHistory : function(state, newTitle)\n    {\n      if (!qx.lang.Type.isString(state)) {\n        state = state + \"\";\n      }\n\n      if (qx.lang.Type.isString(newTitle))\n      {\n        this.setTitle(newTitle);\n        this._titles[state] = newTitle;\n      }\n\n      if (this.getState() !== state) {\n        this.setState(state);\n      }\n      this.fireDataEvent(\"request\", state);\n    },\n\n\n    //overridden\n    _onHistoryLoad : function(state)\n    {\n      this._setState(state);\n      this.fireDataEvent(\"request\", state);\n      if (this._titles[state] != null) {\n        this.setTitle(this._titles[state]);\n      }\n    },\n\n\n    /**\n     * Helper function to set state property. This will only be called\n     * by _onHistoryLoad. It determines, that no apply of state will be called.\n     * @param state {String} State loaded from history\n     */\n    _setState : function(state)\n    {\n      this.__dontApplyState = true;\n      this.setState(state);\n      this.__dontApplyState = false;\n    },\n\n\n    //overridden\n    _applyState : function(value, old)\n    {\n      if (this.__dontApplyState){\n        return;\n      }\n      this._writeState(value);\n    },\n\n\n    /**\n     * Get state from the iframe\n     *\n     * @return {String} current state of the browser history\n     */\n    _readState : function()\n    {\n      if (!this.__iframeReady) {\n        return this._decode(this._getHash());\n      }\n\n      var doc = this.__iframe.contentWindow.document;\n      var elem = doc.getElementById(\"state\");\n      return elem ? this._decode(elem.innerText) : \"\";\n    },\n\n\n    /**\n     * Store state to the iframe\n     *\n     * @param state {String} state to save\n     */\n    _writeState : function(state)\n    {\n      if (!this.__iframeReady) {\n        this.__clearWriteSateTimer();\n        this.__writeStateTimner = qx.event.Timer.once(function(){this._writeState(state);}, this, 50);\n        return;\n      }\n      this.__clearWriteSateTimer();\n\n      var state = this._encode(state);\n\n      // IE8 is sometimes recognizing a hash change as history entry. Cause of sporadic surface of this behavior, we have to prevent setting hash.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" && qx.core.Environment.get(\"browser.version\") != 8){\n        this._setHash(state);\n      }\n\n      var doc = this.__iframe.contentWindow.document;\n      doc.open();\n      doc.write('<html><body><div id=\"state\">' + state + '</div></body></html>');\n      doc.close();\n    },\n\n\n    /**\n     * Helper function to clear the write state timer.\n     */\n    __clearWriteSateTimer : function()\n    {\n      if (this.__writeStateTimner){\n        this.__writeStateTimner.stop();\n        this.__writeStateTimner.dispose();\n      }\n    },\n\n\n    /**\n     * Initialize the polling timer\n     */\n    __initTimer : function()\n    {\n      this.__initIframe(function () {\n        qx.event.Idle.getInstance().addListener(\"interval\", this.__onHashChange, this);\n      });\n    },\n\n\n    /**\n     * Hash change listener.\n     *\n     * @param e {qx.event.type.Event} event instance\n     */\n    __onHashChange : function(e)\n    {\n      // the location only changes if the user manually changes the fragment\n      // identifier.\n      var currentState = null;\n      var locationState = this._getHash();\n\n      if (!this.__isCurrentLocationState(locationState)) {\n        currentState = this.__storeLocationState(locationState);\n      } else {\n        currentState = this._readState();\n      }\n      if (qx.lang.Type.isString(currentState) && currentState != this.getState()) {\n        this._onHistoryLoad(currentState);\n      }\n    },\n\n\n    /**\n     * Stores the given location state.\n     *\n     * @param locationState {String} location state\n     * @return {String}\n     */\n    __storeLocationState : function (locationState)\n    {\n      locationState = this._decode(locationState);\n      this._writeState(locationState);\n\n      return locationState;\n    },\n\n\n    /**\n     * Checks whether the given location state is the current one.\n     *\n     * @param locationState {String} location state to check\n     * @return {Boolean}\n     */\n    __isCurrentLocationState : function (locationState) {\n      return qx.lang.Type.isString(locationState) && locationState == this.__locationState;\n    },\n\n\n    /**\n     * Initializes the iframe\n     *\n     * @param handler {Function?null} if given this callback is executed after iframe is ready to use\n     */\n    __initIframe : function(handler)\n    {\n      this.__iframe = this.__createIframe();\n      document.body.appendChild(this.__iframe);\n\n      this.__waitForIFrame(function()\n      {\n        this._writeState(this.getState());\n\n        if (handler) {\n          handler.call(this);\n        }\n      }, this);\n    },\n\n\n    /**\n     * IMPORTANT NOTE FOR IE:\n     * Setting the source before adding the iframe to the document.\n     * Otherwise IE will bring up a \"Unsecure items ...\" warning in SSL mode\n     *\n     * @return {qx.bom.Iframe}\n     */\n    __createIframe : function ()\n    {\n      var iframe = qx.bom.Iframe.create({\n        src : qx.util.ResourceManager.getInstance().toUri(qx.core.Environment.get(\"qx.blankpage\"))\n      });\n\n      iframe.style.visibility = \"hidden\";\n      iframe.style.position = \"absolute\";\n      iframe.style.left = \"-1000px\";\n      iframe.style.top = \"-1000px\";\n\n      return iframe;\n    },\n\n\n    /**\n     * Waits for the IFrame being loaded. Once the IFrame is loaded\n     * the callback is called with the provided context.\n     *\n     * @param callback {Function} This function will be called once the iframe is loaded\n     * @param context {Object?window} The context for the callback.\n     * @param retry {Integer} number of tries to initialize the iframe\n     */\n    __waitForIFrame : function(callback, context, retry)\n    {\n      if (typeof retry === \"undefined\") {\n        retry = 0;\n      }\n\n      if ( !this.__iframe.contentWindow || !this.__iframe.contentWindow.document )\n      {\n        if (retry > 20) {\n          throw new Error(\"can't initialize iframe\");\n        }\n\n        qx.event.Timer.once(function() {\n          this.__waitForIFrame(callback, context, ++retry);\n        }, this, 10);\n\n        return;\n      }\n\n      this.__iframeReady = true;\n      callback.call(context || window);\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.__iframe = null;\n    if (this.__writeStateTimner){\n      this.__writeStateTimner.dispose();\n      this.__writeStateTimner = null;\n    }\n    qx.event.Idle.getInstance().removeListener(\"interval\", this.__onHashChange, this);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Default history manager implementation. Either polls for URL fragment\n * identifier (hash) changes or uses the native \"hashchange\" event.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @internal\n */\nqx.Class.define(\"qx.bom.NativeHistory\",\n{\n  extend : qx.bom.History,\n  implement: [ qx.core.IDisposable ],\n\n  construct : function()\n  {\n    this.base(arguments);\n    this.__attachListeners();\n  },\n\n\n  members :\n  {\n    __checkOnHashChange : null,\n\n\n    /**\n     * Attach hash change listeners\n     */\n    __attachListeners : function()\n    {\n      if (qx.bom.History.SUPPORTS_HASH_CHANGE_EVENT)\n      {\n        var boundFunc = qx.lang.Function.bind(this.__onHashChange, this);\n        this.__checkOnHashChange = qx.event.GlobalError.observeMethod(boundFunc);\n        qx.bom.Event.addNativeListener(window, \"hashchange\", this.__checkOnHashChange);\n      }\n      else\n      {\n        qx.event.Idle.getInstance().addListener(\"interval\", this.__onHashChange, this);\n      }\n    },\n\n\n    /**\n     * Remove hash change listeners\n     */\n    __detatchListeners : function()\n    {\n      if (qx.bom.History.SUPPORTS_HASH_CHANGE_EVENT) {\n        qx.bom.Event.removeNativeListener(window, \"hashchange\", this.__checkOnHashChange);\n      } else {\n        qx.event.Idle.getInstance().removeListener(\"interval\", this.__onHashChange, this);\n      }\n    },\n\n\n    /**\n     * hash change event handler\n     */\n    __onHashChange : function()\n    {\n      var currentState = this._readState();\n\n      if (qx.lang.Type.isString(currentState) && currentState != this.getState()) {\n        this._onHistoryLoad(currentState);\n      }\n    },\n\n\n    /**\n     * Browser dependent function to read the current state of the history\n     *\n     * @return {String} current state of the browser history\n     */\n    _readState : function() {\n      return this._decode(this._getHash());\n    },\n\n\n    /**\n     * Save a state into the browser history.\n     *\n     * @param state {String} state to save\n     */\n    _writeState : qx.core.Environment.select(\"engine.name\",\n    {\n      \"opera\" : function(state)\n      {\n        qx.event.Timer.once(function()\n        {\n          this._setHash(this._encode(state));\n        }, this, 0);\n      },\n\n      \"default\" : function (state) {\n        this._setHash(this._encode(state));\n      }\n    })\n  },\n\n\n  destruct : function() {\n    this.__detatchListeners();\n  }\n});\n"
  ]
}