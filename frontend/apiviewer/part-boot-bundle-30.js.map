{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/layout/Flow.js",
    "../transpiled/qx/ui/form/ToggleButton.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-30.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n   http://qooxdoo.org\n\n   Copyright:\n     2008 Dihedrals.com, http://www.dihedrals.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Chris Banford (zermattchris)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A basic layout, which supports positioning of child widgets in a 'flowing'\n * manner, starting at the container's top/left position, placing children left to right\n * (like a HBox) until the there's no remaining room for the next child. When\n * out of room on the current line of elements, a new line is started, cleared\n * below the tallest child of the preceding line -- a bit like using 'float'\n * in CSS, except that a new line wraps all the way back to the left.\n *\n * *Features*\n *\n * <ul>\n * <li> Reversing children order </li>\n * <li> Manual line breaks </li>\n * <li> Horizontal alignment of lines </li>\n * <li> Vertical alignment of individual widgets within a line </li>\n * <li> Margins with horizontal margin collapsing </li>\n * <li> Horizontal and vertical spacing </li>\n * <li> Height for width calculations </li>\n * <li> Auto-sizing </li>\n * </ul>\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>lineBreak</strong> <em>(Boolean)</em>: If set to <code>true</code>\n *   a forced line break will happen after this child widget.\n * </li>\n * <li><strong>stretch</strong> <em>(Boolean)</em>: If set to <code>true</code>\n *   the widget will be stretched to the remaining line width. This requires\n *   lineBreak to be true.\n * </li>\n\n * </ul>\n *\n * *Example*\n *\n * Here is a little example of how to use the Flow layout.\n *\n * <pre class=\"javascript\">\n *  var flowlayout = new qx.ui.layout.Flow();\n *\n *  flowlayout.setAlignX( \"center\" );  // Align children to the X axis of the container (left|center|right)\n *\n *  var container = new qx.ui.container.Composite(flowlayout);\n *  this.getRoot().add(container, {edge: 0});\n *\n *  var button1 = new qx.ui.form.Button(\"1. First Button\", \"flowlayout/test.png\");\n *  container.add(button1);\n *\n *  var button2 = new qx.ui.form.Button(\"2. Second longer Button...\", \"flowlayout/test.png\");\n *  // Have this child create a break in the current Line (next child will always start a new Line)\n *  container.add(button2, {lineBreak: true});\n *\n *  var button3 = new qx.ui.form.Button(\"3rd really, really, really long Button\", \"flowlayout/test.png\");\n *  button3.setHeight(100);  // tall button\n *  container.add(button3);\n *\n *  var button4 = new qx.ui.form.Button(\"Number 4\", \"flowlayout/test.png\");\n *  button4.setAlignY(\"bottom\");\n *  container.add(button4);\n *\n *  var button5 = new qx.ui.form.Button(\"20px Margins around the great big 5th button!\");\n *  button5.setHeight(100);  // tall button\n *  button5.setMargin(20);\n *  container.add(button5, {lineBreak: true});    // Line break after this button.\n *\n *  var button6 = new qx.ui.form.Button(\"Number 6\", \"flowlayout/test.png\");\n *  button6.setAlignY(\"middle\");  // Align this child to the vertical center of this line.\n *  container.add(button6);\n *\n *  var button7 = new qx.ui.form.Button(\"7th a wide, short button\", \"flowlayout/test.png\");\n *  button7.setMaxHeight(20);  // short button\n *  container.add(button7);\n * </pre>\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/layout/flow.html'>\n * Extended documentation</a> and links to demos of this layout in the qooxdoo manual.\n */\nqx.Class.define(\"qx.ui.layout.Flow\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param spacingX {Integer?0} The spacing between child widgets {@link #spacingX}.\n   * @param spacingY {Integer?0} The spacing between the lines {@link #spacingY}.\n   * @param alignX {String?\"left\"} Horizontal alignment of the whole children\n   *     block {@link #alignX}.\n   */\n  construct : function(spacingX, spacingY, alignX)\n  {\n    this.base(arguments);\n\n    if (spacingX) {\n      this.setSpacingX(spacingX);\n    }\n\n    if (spacingY) {\n      this.setSpacingY(spacingY);\n    }\n\n    if (alignX) {\n      this.setAlignX(alignX);\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Horizontal alignment of the whole children block. The horizontal\n     * alignment of the child is completely ignored in HBoxes (\n     * {@link qx.ui.core.LayoutItem#alignX}).\n     */\n    alignX :\n    {\n      check : [ \"left\", \"center\", \"right\" ],\n      init : \"left\",\n      apply : \"_applyLayoutChange\"\n    },\n\n    /**\n     * Vertical alignment of each child. Can be overridden through\n     * {@link qx.ui.core.LayoutItem#alignY}.\n     */\n    alignY :\n    {\n      check : [ \"top\", \"middle\", \"bottom\"],\n      init : \"top\",\n      apply : \"_applyLayoutChange\"\n    },\n\n    /** Horizontal spacing between two children */\n    spacingX :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyLayoutChange\"\n    },\n\n    /**\n     * The vertical spacing between the lines.\n     */\n    spacingY :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyLayoutChange\"\n    },\n\n    /** Whether the actual children list should be laid out in reversed order. */\n    reversed :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyLayoutChange\"\n    }\n\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value) {\n        var validProperties = [\"lineBreak\", \"stretch\"];\n        this.assertInArray(name, validProperties, \"The property '\"+name+\"' is not supported by the flow layout!\" );\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    connectToWidget : function(widget)\n    {\n      this.base(arguments, widget);\n\n      // Necessary to be able to calculate the lines for the flow layout.\n      // Otherwise the layout calculates the needed width and height by using\n      // only one line of items which is leading to the wrong height. This\n      // wrong height does e.g. suppress scrolling since the scroll pane does\n      // not know about the correct needed height.\n      if (widget) {\n        widget.setAllowShrinkY(false);\n      }\n    },\n\n\n    /**\n     * The FlowLayout tries to add as many Children as possible to the current 'Line'\n     * and when it sees that the next Child won't fit, it starts on a new Line, continuing\n     * until all the Children have been added.\n     * To enable alignX \"left\", \"center\", \"right\" renderLayout has to calculate the positions\n     * of all a Line's children before it draws them.\n     *\n     * @param availWidth {Integer} Final width available for the content (in pixel)\n     * @param availHeight {Integer} Final height available for the content (in pixel)\n     * @param padding {Map} Map containing the padding values. Keys:\n     * <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>\n     */\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      var children = this._getLayoutChildren();\n\n      if (this.getReversed()) {\n        children = children.concat().reverse();\n      }\n\n      var lineCalculator = new qx.ui.layout.LineSizeIterator(\n        children,\n        this.getSpacingX()\n      );\n\n      var lineTop = padding.top;\n      while (lineCalculator.hasMoreLines())\n      {\n        var line = lineCalculator.computeNextLine(availWidth);\n        this.__renderLine(line, lineTop, availWidth, padding);\n        lineTop += line.height + this.getSpacingY();\n      }\n    },\n\n\n    /**\n     * Render a line in the flow layout\n     *\n     * @param line {Map} A line configuration as returned by\n     *    {@link LineSizeIterator#computeNextLine}.\n     * @param lineTop {Integer} The line's top position\n     * @param availWidth {Integer} The available line width\n     * @param padding {Map} Map containing the padding values. Keys:\n     * <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>\n     */\n    __renderLine : function(line, lineTop, availWidth, padding)\n    {\n      var util = qx.ui.layout.Util;\n\n      var left = padding.left;\n      if (this.getAlignX() != \"left\") {\n        left = padding.left + availWidth - line.width;\n        if (this.getAlignX() == \"center\") {\n          left = padding.left + Math.round((availWidth - line.width) / 2);\n        }\n      }\n\n      for (var i=0; i<line.children.length; i++)\n      {\n        var child = line.children[i];\n        var size = child.getSizeHint();\n        var marginTop = child.getMarginTop();\n        var marginBottom = child.getMarginBottom();\n\n        var top = util.computeVerticalAlignOffset(\n          child.getAlignY() || this.getAlignY(),\n          marginTop + size.height + marginBottom,\n          line.height,\n          marginTop, marginBottom\n        );\n\n        var layoutProps = child.getLayoutProperties();\n        if (layoutProps.stretch && layoutProps.stretch) {\n          size.width += availWidth - line.width;\n        }\n\n        child.renderLayout(\n          left + line.gapsBefore[i],\n          lineTop + top,\n          size.width,\n          size.height\n        );\n\n        left += line.gapsBefore[i] + size.width;\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function() {\n      return this.__computeSize(Infinity);\n    },\n\n\n    // overridden\n    hasHeightForWidth : function() {\n      return true;\n    },\n\n\n    // overridden\n    getHeightForWidth : function(width) {\n      return this.__computeSize(width).height;\n    },\n\n\n    /**\n     * Returns the list of children fitting in the last row of the given width.\n     * @param width {Number} The width to use for the calculation.\n     * @return {Array} List of children in the first row.\n     */\n    getLastLineChildren : function(width) {\n      var lineCalculator = new qx.ui.layout.LineSizeIterator(\n        this._getLayoutChildren(),\n        this.getSpacingX()\n      );\n\n      var lineData = [];\n      while (lineCalculator.hasMoreLines()) {\n        lineData = lineCalculator.computeNextLine(width).children;\n      }\n\n      return lineData;\n    },\n\n\n    /**\n     * Compute the preferred size optionally constrained by the available width\n     *\n     * @param availWidth {Integer} The available width\n     * @return {Map} Map containing the preferred height and width of the layout\n     */\n    __computeSize : function(availWidth)\n    {\n      var lineCalculator = new qx.ui.layout.LineSizeIterator(\n        this._getLayoutChildren(),\n        this.getSpacingX()\n      );\n\n      var height = 0;\n      var width = 0;\n      var lineCount = 0;\n\n      while (lineCalculator.hasMoreLines())\n      {\n        var line = lineCalculator.computeNextLine(availWidth);\n        lineCount += 1;\n        width = Math.max(width, line.width);\n        height += line.height;\n      }\n\n      return {\n        width : width,\n        height : height + this.getSpacingY() * (lineCount-1)\n      };\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A toggle Button widget\n *\n * If the user presses the button by tapping on it pressing the enter or\n * space key, the button toggles between the pressed an not pressed states.\n */\nqx.Class.define(\"qx.ui.form.ToggleButton\",\n{\n  extend : qx.ui.basic.Atom,\n  include : [\n    qx.ui.core.MExecutable\n  ],\n  implement : [\n    qx.ui.form.IBooleanForm,\n    qx.ui.form.IExecutable,\n    qx.ui.form.IRadioItem\n  ],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a ToggleButton.\n   *\n   * @param label {String} The text on the button.\n   * @param icon {String} An URI to the icon of the button.\n   */\n  construct : function(label, icon)\n  {\n    this.base(arguments, label, icon);\n\n    // register pointer events\n    this.addListener(\"pointerover\", this._onPointerOver);\n    this.addListener(\"pointerout\", this._onPointerOut);\n    this.addListener(\"pointerdown\", this._onPointerDown);\n    this.addListener(\"pointerup\", this._onPointerUp);\n\n    // register keyboard events\n    this.addListener(\"keydown\", this._onKeyDown);\n    this.addListener(\"keyup\", this._onKeyUp);\n\n    // register execute event\n    this.addListener(\"execute\", this._onExecute, this);\n\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties:\n  {\n    // overridden\n    appearance:\n    {\n      refine: true,\n      init: \"button\"\n    },\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    /** The value of the widget. True, if the widget is checked. */\n    value :\n    {\n      check : \"Boolean\",\n      nullable : true,\n      event : \"changeValue\",\n      apply : \"_applyValue\",\n      init : false\n    },\n\n    /** The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons. */\n    group :\n    {\n      check  : \"qx.ui.form.RadioGroup\",\n      nullable : true,\n      apply : \"_applyGroup\"\n    },\n\n    /**\n    * Whether the button has a third state. Use this for tri-state checkboxes.\n    *\n    * When enabled, the value null of the property value stands for \"undetermined\",\n    * while true is mapped to \"enabled\" and false to \"disabled\" as usual. Note\n    * that the value property is set to false initially.\n    *\n    */\n    triState :\n    {\n      check : \"Boolean\",\n      apply : \"_applyTriState\",\n      nullable : true,\n      init : null\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /** The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons */\n    _applyGroup : function(value, old)\n    {\n      if (old) {\n        old.remove(this);\n      }\n\n      if (value) {\n        value.add(this);\n      }\n    },\n\n\n    /**\n     * Changes the state of the button dependent on the checked value.\n     *\n     * @param value {Boolean} Current value\n     * @param old {Boolean} Previous value\n     */\n    _applyValue : function(value, old) {\n      value ? this.addState(\"checked\") : this.removeState(\"checked\");\n\n      if (this.isTriState()) {\n        if (value === null) {\n          this.addState(\"undetermined\");\n        } else if (old === null) {\n          this.removeState(\"undetermined\");\n        }\n      }\n    },\n\n    /**\n    * Apply value property when triState property is modified.\n    *\n    * @param value {Boolean} Current value\n    * @param old {Boolean} Previous value\n    */\n    _applyTriState : function(value, old) {\n      this._applyValue(this.getValue());\n    },\n\n\n    /**\n     * Handler for the execute event.\n     *\n     * @param e {qx.event.type.Event} The execute event.\n     */\n    _onExecute : function(e) {\n      this.toggleValue();\n    },\n\n\n    /**\n     * Listener method for \"pointerover\" event.\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOver : function(e)\n    {\n      if (e.getTarget() !== this) {\n        return;\n      }\n\n      this.addState(\"hovered\");\n\n      if (this.hasState(\"abandoned\"))\n      {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n    },\n\n\n    /**\n     * Listener method for \"pointerout\" event.\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" state (if \"pressed\" state is set)</li>\n     * <li>Removes \"pressed\" state (if \"pressed\" state is set and button is not checked)\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerOut : function(e)\n    {\n      if (e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\"))\n      {\n        if (!this.getValue()) {\n          this.removeState(\"pressed\");\n        }\n\n        this.addState(\"abandoned\");\n      }\n    },\n\n\n    /**\n     * Listener method for \"pointerdown\" event.\n     * <ul>\n     * <li>Activates capturing</li>\n     * <li>Removes \"abandoned\" state</li>\n     * <li>Adds \"pressed\" state</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerDown : function(e)\n    {\n      if (!e.isLeftPressed()) {\n        return;\n      }\n\n      // Activate capturing if the button get a pointerout while\n      // the button is pressed.\n      this.capture();\n\n      this.removeState(\"abandoned\");\n      this.addState(\"pressed\");\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener method for \"pointerup\" event.\n     * <ul>\n     * <li>Releases capturing</li>\n     * <li>Removes \"pressed\" state (if not \"abandoned\" state is set and \"pressed\" state is set)</li>\n     * <li>Removes \"abandoned\" state (if set)</li>\n     * <li>Toggles {@link #value} (if state \"abandoned\" is not set and state \"pressed\" is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerUp : function(e)\n    {\n      this.releaseCapture();\n\n      if (this.hasState(\"abandoned\")) {\n        this.removeState(\"abandoned\");\n      } else if (this.hasState(\"pressed\")) {\n        this.execute();\n      }\n\n      this.removeState(\"pressed\");\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Listener method for \"keydown\" event.<br/>\n     * Removes \"abandoned\" and adds \"pressed\" state\n     * for the keys \"Enter\" or \"Space\"\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyDown : function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.addState(\"pressed\");\n\n          e.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Listener method for \"keyup\" event.<br/>\n     * Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\n     * for the keys \"Enter\" or \"Space\". It also toggles the {@link #value} property.\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyUp : function(e)\n    {\n      if (!this.hasState(\"pressed\")) {\n        return;\n      }\n\n      switch(e.getKeyIdentifier())\n      {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.execute();\n\n          this.removeState(\"pressed\");\n          e.stopPropagation();\n      }\n    }\n  }\n});\n"
  ]
}