{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/form/MenuButton.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-21.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A button which opens the connected menu when tapping on it.\n */\nqx.Class.define(\"qx.ui.form.MenuButton\",\n{\n  extend : qx.ui.form.Button,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Initial label\n   * @param icon {String?null} Initial icon\n   * @param menu {qx.ui.menu.Menu} Connect to menu instance\n   */\n  construct : function(label, icon, menu)\n  {\n    this.base(arguments, label, icon);\n\n    // Initialize properties\n    if (menu != null) {\n      this.setMenu(menu);\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The menu instance to show when tapping on the button */\n    menu :\n    {\n      check : \"qx.ui.menu.Menu\",\n      nullable : true,\n      apply : \"_applyMenu\",\n      event : \"changeMenu\"\n    },\n\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"menubutton\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n    // overridden\n    _applyVisibility : function(value, old) {\n      this.base(arguments, value, old);\n\n      // hide the menu too\n      var menu = this.getMenu();\n      if (value != \"visible\" && menu) {\n        menu.hide();\n      }\n    },\n\n\n    // property apply\n    _applyMenu : function(value, old)\n    {\n      if (old)\n      {\n        old.removeListener(\"changeVisibility\", this._onMenuChange, this);\n        old.resetOpener();\n      }\n\n      if (value)\n      {\n        value.addListener(\"changeVisibility\", this._onMenuChange, this);\n        value.setOpener(this);\n\n        value.removeState(\"submenu\");\n        value.removeState(\"contextmenu\");\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Positions and shows the attached menu widget.\n     *\n     * @param selectFirst {Boolean?false} Whether the first menu button should be selected\n     */\n    open : function(selectFirst)\n    {\n      var menu = this.getMenu();\n\n      if (menu)\n      {\n        // Hide all menus first\n        qx.ui.menu.Manager.getInstance().hideAll();\n\n        // Open the attached menu\n        menu.setOpener(this);\n        menu.open();\n\n        // Select first item\n        if (selectFirst)\n        {\n          var first = menu.getSelectables()[0];\n          if (first) {\n            menu.setSelectedButton(first);\n          }\n        }\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener for visibility property changes of the attached menu\n     *\n     * @param e {qx.event.type.Data} Property change event\n     */\n    _onMenuChange : function(e)\n    {\n      var menu = this.getMenu();\n\n      if (menu.isVisible()) {\n        this.addState(\"pressed\");\n      } else {\n        this.removeState(\"pressed\");\n      }\n    },\n\n\n    // overridden\n    _onPointerDown : function(e) {\n      // call the base function to get into the capture phase [BUG #4340]\n      this.base(arguments, e);\n\n      // only open on left clicks [BUG #5125]\n      if(e.getButton() != \"left\") {\n        return;\n      }\n\n      var menu = this.getMenu();\n      if (menu) {\n        // Toggle sub menu visibility\n        if (!menu.isVisible()) {\n          this.open();\n        } else {\n          menu.exclude();\n        }\n\n        // Event is processed, stop it for others\n        e.stopPropagation();\n      }\n    },\n\n\n    // overridden\n    _onPointerUp : function(e) {\n      // call base for firing the execute event\n      this.base(arguments, e);\n\n      // Just stop propagation to stop menu manager\n      // from getting the event\n      e.stopPropagation();\n    },\n\n\n    // overridden\n    _onPointerOver : function(e) {\n      // Add hovered state\n      this.addState(\"hovered\");\n    },\n\n\n    // overridden\n    _onPointerOut : function(e) {\n      // Just remove the hover state\n      this.removeState(\"hovered\");\n    },\n\n\n    // overridden\n    _onKeyDown : function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"Enter\":\n          this.removeState(\"abandoned\");\n          this.addState(\"pressed\");\n\n          var menu = this.getMenu();\n          if (menu)\n          {\n            // Toggle sub menu visibility\n            if (!menu.isVisible()) {\n              this.open();\n            } else {\n              menu.exclude();\n            }\n          }\n\n          e.stopPropagation();\n      }\n    },\n\n\n    // overridden\n    _onKeyUp : function(e) {\n      // no action required here\n    }\n  }\n});\n"
  ]
}