{
  "version": 3,
  "sources": [
    "../transpiled/qx/io/remote/RequestQueue.js"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;AAUA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,2BAAf,EACA;AACC,IAAA,IAAI,EAAG,WADR;AAEC,IAAA,MAAM,EAAG,EAAE,CAAC,IAAH,CAAQ,MAFlB;AAGC,IAAA,SAAS,EAAG,CAAE,EAAE,CAAC,IAAH,CAAQ,WAAV,CAHb;;AAQC;;;;;AAMA,IAAA,SAAS,EAAG,qBACZ;AACE;AAEA,WAAK,OAAL,GAAe,EAAf;AACA,WAAK,QAAL,GAAgB,EAAhB;AAEA,WAAK,eAAL,GAAuB,CAAvB,CANF,CAQE;;AACA,WAAK,OAAL,GAAe,IAAI,EAAE,CAAC,KAAH,CAAS,KAAb,CAAmB,GAAnB,CAAf;;AACA,WAAK,OAAL,CAAa,WAAb,CAAyB,UAAzB,EAAqC,KAAK,WAA1C,EAAuD,IAAvD;AACD,KA1BF;;AA+BC;;;;;AAMA,IAAA,UAAU,EACV;AAEE;;;AAGA,MAAA,OAAO,EACP;AACE,QAAA,IAAI,EAAG,IADT;AAEE,QAAA,KAAK,EAAG,SAFV;AAGE,QAAA,KAAK,EAAG;AAHV,OANF;;AAYE;;;AAGA,MAAA,gBAAgB,EAChB;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,QAAQ,EAAG;AAFb,OAhBF;;AAsBE;;;AAGA,MAAA,qBAAqB,EACrB;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,gBAAxB;AAFT,OA1BF;;AAgCE;;;AAGA,MAAA,cAAc,EACd;AACE,QAAA,KAAK,EAAG,SADV;AAEE,QAAA,IAAI,EAAG;AAFT;AApCF,KAtCD;;AAmFC;;;;;AAMA,IAAA,OAAO,EACP;AAEE,MAAA,OAAO,EAAG,IAFZ;AAGE,MAAA,QAAQ,EAAG,IAHb;AAIE,MAAA,eAAe,EAAG,IAJpB;AAKE,MAAA,OAAO,EAAG,IALZ;;AAOE;;;;;;AAOA;;;;;AAKA,MAAA,eAAe,EAAG,2BAAW;AAC3B,eAAO,KAAK,OAAZ;AACD,OArBH;;AAwBE;;;;;;;AAOA,MAAA,cAAc,EAAG,0BAAW;AAC1B,eAAO,KAAK,QAAZ;AACD,OAjCH;;AAoCE;;;AAGA,MAAA,MAAM,EAAG,kBACT;AAEE;AACE,cAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,oBAAxB,CAAJ,EACA;AACE;AACA,gBAAI,KAAK,GAAG,KAAK,QAAL,CAAc,MAAd,GAAuB,GAAvB,IAA8B,KAAK,OAAL,CAAa,MAAb,GAAsB,KAAK,QAAL,CAAc,MAAlE,CAAZ;AAEA,iBAAK,KAAL,CAAW,eAAe,KAA1B;AACA,YAAA,MAAM,CAAC,MAAP,GAAgB,6BAA6B,KAA7C;AACD;AACF;AACF,OApDH;;AAuDE;;;;;;AAMA,MAAA,MAAM,EAAG,kBACT;AACE;AACA,aAAK,MAAL,GAFF,CAIE;;;AACA,YAAI,KAAK,QAAL,CAAc,MAAd,IAAwB,CAAxB,IAA6B,KAAK,OAAL,CAAa,MAAb,IAAuB,CAAxD,EAA2D;AACzD,eAAK,OAAL,CAAa,IAAb;AACD,SAPH,CASE;;;AACA,YAAI,CAAC,KAAK,UAAL,EAAL,EAAwB;AACtB;AACD,SAZH,CAcE;;;AACA,YAAK,KAAK,OAAL,CAAa,MAAb,IAAuB,CAAvB,IAA4B,KAAK,OAAL,CAAa,CAAb,EAAgB,cAAhB,MAAoC,KAAK,QAAL,CAAc,MAAd,IAAwB,KAAK,wBAAL,EAA7F,EAA+H;AAC7H;AACD,SAjBH,CAmBE;;;AACA,YAAI,KAAK,mBAAL,MAA8B,IAA9B,IAAsC,KAAK,eAAL,IAAwB,KAAK,mBAAL,EAAlE,EAA8F;AAC5F;AACD;;AAED,YAAI,QAAQ,GAAG,KAAK,OAAL,CAAa,KAAb,EAAf;;AACA,YAAI,UAAU,GAAG,IAAI,EAAE,CAAC,EAAH,CAAM,MAAN,CAAa,QAAjB,CAA0B,QAA1B,CAAjB,CAzBF,CA2BE;;AACA,aAAK,eAAL,GA5BF,CA8BE;;AACA,aAAK,QAAL,CAAc,IAAd,CAAmB,UAAnB,EA/BF,CAiCE;;;AACA,aAAK,MAAL,GAlCF,CAoCE;;;AACA,QAAA,UAAU,CAAC,WAAX,CAAuB,SAAvB,EAAkC,KAAK,UAAvC,EAAmD,IAAnD;AACA,QAAA,UAAU,CAAC,WAAX,CAAuB,WAAvB,EAAoC,KAAK,YAAzC,EAAuD,IAAvD;AACA,QAAA,UAAU,CAAC,WAAX,CAAuB,WAAvB,EAAoC,KAAK,YAAzC,EAAuD,IAAvD;AACA,QAAA,UAAU,CAAC,WAAX,CAAuB,SAAvB,EAAkC,KAAK,YAAvC,EAAqD,IAArD;AACA,QAAA,UAAU,CAAC,WAAX,CAAuB,SAAvB,EAAkC,KAAK,YAAvC,EAAqD,IAArD;AACA,QAAA,UAAU,CAAC,WAAX,CAAuB,QAAvB,EAAiC,KAAK,YAAtC,EAAoD,IAApD,EA1CF,CA4CE;;AACA,QAAA,UAAU,CAAC,MAAX,GAAqB,IAAI,IAAJ,EAAD,CAAW,OAAX,EAApB,CA7CF,CA+CE;;AACA,QAAA,UAAU,CAAC,IAAX,GAhDF,CAkDE;;AACA,YAAI,KAAK,OAAL,CAAa,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,eAAK,MAAL;AACD;AACF,OApHH;;AAuHE;;;;;;AAMA,MAAA,OAAO,EAAG,iBAAS,UAAT,EACV;AACE;AACA,QAAA,EAAE,CAAC,IAAH,CAAQ,KAAR,CAAc,MAAd,CAAqB,KAAK,QAA1B,EAAoC,UAApC,EAFF,CAIE;;AACA,QAAA,UAAU,CAAC,OAAX,GALF,CAOE;;AACA,aAAK,MAAL;AACD,OAvIH;;AA4IE;;;;;AAMA,MAAA,aAAa,EAAG,CAlJlB;;AAqJE;;;;;;AAMA,MAAA,UAAU,EAAG,oBAAS,CAAT,EACb;AAEE;AACE,cAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,oBAAxB,CAAJ,EACA;AACE,iBAAK,aAAL;AACA,YAAA,CAAC,CAAC,SAAF,GAAc,QAAd,GAAyB,IAAzB;AAEA,iBAAK,KAAL,CAAW,kBAAkB,KAAK,aAAlC;AACD;AACF;;AAED,QAAA,CAAC,CAAC,SAAF,GAAc,UAAd,GAA2B,UAA3B,CAAsC,CAAtC;AACD,OAzKH;;AA4KE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,CAAT,EAAY;AACzB,QAAA,CAAC,CAAC,SAAF,GAAc,UAAd,GAA2B,YAA3B,CAAwC,CAAxC;AACD,OApLH;;AAuLE;;;;;;AAMA,MAAA,YAAY,EAAG,sBAAS,CAAT,EACf;AAEE;AACE,cAAI,EAAE,CAAC,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAwB,oBAAxB,CAAJ,EACA;AACE,gBAAI,CAAC,CAAC,SAAF,GAAc,QAAlB,EACA;AACE,mBAAK,aAAL;AACA,mBAAK,KAAL,CAAW,kBAAkB,KAAK,aAAlC;AACD;AACF;AACF,SAXH,CAaE;AACA;;AACA,YAAI,OAAO,GAAG,CAAC,CAAC,SAAF,GAAc,UAAd,EAAd;AACA,YAAI,cAAc,GAAG,QAAQ,CAAC,CAAC,OAAF,EAA7B,CAhBF,CAkBE;AACA;;AACA,aAAK,OAAL,CAAa,CAAC,CAAC,SAAF,EAAb,EApBF,CAsBE;AACA;AACA;;;AACA,YACA;AACE,cAAI,OAAO,CAAC,cAAD,CAAX,EACA;AACE,YAAA,OAAO,CAAC,cAAD,CAAP,CAAwB,CAAxB;AACD;AACF,SAND,CAOA,OAAM,EAAN,EACA;AACE,eAAK,KAAL,CAAW,aAAa,OAAb,GAAuB,WAAvB,GAAqC,cAArC,GACT,mBADF,EACuB,EADvB,EADF,CAIE;AACA;;AACA,cACA;AACE,gBAAI,OAAO,CAAC,YAAD,CAAX,EACA;AACE,kBAAI,KAAK,GAAG,EAAE,CAAC,KAAH,CAAS,YAAT,CAAsB,WAAtB,CAAkC,SAAlC,EAC8B,EAAE,CAAC,KAAH,CAAS,IAAT,CAAc,KAD5C,CAAZ;AAEA,cAAA,OAAO,CAAC,YAAD,CAAP,CAAsB,KAAtB;AACD;AACF,WARD,CASA,OAAM,GAAN,EACA,CACC;AACF;AACF,OAlPH;;AAuPE;;;;;;AAMA;;;;;;AAMA,MAAA,WAAW,EAAG,qBAAS,CAAT,EACd;AACE,YAAI,OAAO,GAAG,KAAK,QAAnB;;AAEA,YAAI,OAAO,CAAC,MAAR,IAAkB,CAAtB,EACA;AACE,eAAK,OAAL,CAAa,IAAb;;AACA;AACD;;AAED,YAAI,QAAQ,GAAI,IAAI,IAAJ,EAAD,CAAW,OAAX,EAAf;AACA,YAAI,UAAJ;AACA,YAAI,QAAJ;AACA,YAAI,eAAe,GAAG,KAAK,iBAAL,EAAtB;AACA,YAAI,QAAJ;AACA,YAAI,KAAJ;;AAEA,aAAK,IAAI,CAAC,GAAC,OAAO,CAAC,MAAR,GAAe,CAA1B,EAA6B,CAAC,IAAE,CAAhC,EAAmC,CAAC,EAApC,EACA;AACE,UAAA,UAAU,GAAG,OAAO,CAAC,CAAD,CAApB;AACA,UAAA,QAAQ,GAAG,UAAU,CAAC,UAAX,EAAX;;AAEA,cAAI,QAAQ,CAAC,cAAT,EAAJ,EACA;AACE,YAAA,QAAQ,GAAG,QAAQ,CAAC,UAAT,EAAX,CADF,CAGE;;AACA,gBAAI,QAAQ,IAAI,CAAhB,EACA;AACE;AACA;AACD;;AAED,gBAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,cAAA,QAAQ,GAAG,eAAX;AACD;;AAED,YAAA,KAAK,GAAG,QAAQ,GAAG,UAAU,CAAC,MAA9B;;AAEA,gBAAI,KAAK,GAAG,QAAZ,EACA;AACE,mBAAK,IAAL,CAAU,wBAAwB,UAAU,CAAC,UAAX,EAAlC;AACA,mBAAK,IAAL,CAAU,KAAK,GAAG,OAAR,GAAkB,QAAlB,GAA6B,IAAvC;AACA,cAAA,UAAU,CAAC,OAAX;AACD;AACF;AACF;AACF,OAlTH;;AAuTE;;;;;AAOA;AACA,MAAA,aAAa,EAAG,uBAAS,KAAT,EAAgB,GAAhB,EAChB;AACE,YAAI,KAAJ,EAAW;AACT,eAAK,MAAL;AACD;;AAED,aAAK,OAAL,CAAa,UAAb,CAAwB,KAAxB;AACD,OAtUH;;AA2UE;;;;;;AAMA;;;;;AAKA,MAAA,GAAG,EAAG,aAAS,QAAT,EACN;AACE,QAAA,QAAQ,CAAC,QAAT,CAAkB,QAAlB;;AAEA,YAAI,QAAQ,CAAC,cAAT,EAAJ,EAA+B;AAC7B,eAAK,OAAL,CAAa,IAAb,CAAkB,QAAlB;AACD,SAFD,MAEO;AACL,eAAK,OAAL,CAAa,OAAb,CAAqB,QAArB;AACD;;AAED,aAAK,MAAL;;AAEA,YAAI,KAAK,UAAL,EAAJ,EAAuB;AACrB,eAAK,OAAL,CAAa,KAAb;AACD;AACF,OArWH;;AAwWE;;;;;;;;;;AAUA,MAAA,KAAK,EAAG,eAAS,QAAT,EACR;AACE,YAAI,UAAU,GAAG,QAAQ,CAAC,YAAT,EAAjB;;AAEA,YAAI,UAAJ,EAAgB;AACd,UAAA,UAAU,CAAC,KAAX;AACD,SAFD,MAEO,IAAI,KAAK,OAAL,CAAa,QAAb,CAAsB,QAAtB,CAAJ,EAAqC;AAC1C,UAAA,EAAE,CAAC,IAAH,CAAQ,KAAR,CAAc,MAAd,CAAqB,KAAK,OAA1B,EAAmC,QAAnC;AACD;AACF;AA3XH,KA1FD;;AA2dC;;;;;AAMA,IAAA,QAAQ,EAAG,oBACX;AACE,WAAK,aAAL,CAAmB,UAAnB;;AACA,WAAK,eAAL,CAAqB,SAArB;;AACA,WAAK,OAAL,GAAe,IAAf;AACD;AAteF,GADA;AA/BA,EAAA,EAAC,CAAC,EAAF,CAAK,MAAL,CAAY,YAAZ,CAAyB,aAAzB,GAAyC,aAAzC",
  "file": "build-output/apiviewer/part-boot-bundle-64.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Handles scheduling of requests to be sent to a server.\n *\n * This class is a singleton and is used by qx.io.remote.Request to schedule its\n * requests. It should not be used directly.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @internal\n */\nqx.Class.define(\"qx.io.remote.RequestQueue\",\n{\n  type : \"singleton\",\n  extend : qx.core.Object,\n  implement : [ qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__queue = [];\n    this.__active = [];\n\n    this.__totalRequests = 0;\n\n    // timeout handling\n    this.__timer = new qx.event.Timer(500);\n    this.__timer.addListener(\"interval\", this._oninterval, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n\n    /**\n     * Indicates whether queue is enabled or not.\n     */\n    enabled :\n    {\n      init : true,\n      check : \"Boolean\",\n      apply : \"_applyEnabled\"\n    },\n\n    /**\n     * The maximum number of total requests.\n     */\n    maxTotalRequests :\n    {\n      check : \"Integer\",\n      nullable : true\n    },\n\n\n    /**\n     * Maximum number of parallel requests.\n     */\n    maxConcurrentRequests :\n    {\n      check : \"Integer\",\n      init : qx.core.Environment.get(\"io.maxrequests\")\n    },\n\n\n    /**\n     * Default timeout for remote requests in milliseconds.\n     */\n    defaultTimeout :\n    {\n      check : \"Integer\",\n      init : 5000\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __queue : null,\n    __active : null,\n    __totalRequests : null,\n    __timer : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      QUEUE HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Get a list of queued requests\n     *\n     * @return {qx.io.remote.Request[]} The list of queued requests\n     */\n    getRequestQueue : function() {\n      return this.__queue;\n    },\n\n\n    /**\n     * Get a list of active queued requests, each one wrapped in an instance of\n     * {@link qx.io.remote.Exchange}\n     *\n     * @return {qx.io.remote.Exchange[]} The list of active queued requests, each one\n     *   wrapped in an instance of {@link qx.io.remote.Exchange}\n     */\n    getActiveQueue : function() {\n      return this.__active;\n    },\n\n\n    /**\n     * Generates debug output\n     */\n    _debug : function()\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\"))\n        {\n          // Debug output\n          var vText = this.__active.length + \"/\" + (this.__queue.length + this.__active.length);\n\n          this.debug(\"Progress: \" + vText);\n          window.status = \"Request-Queue Progress: \" + vText;\n        }\n      }\n    },\n\n\n    /**\n     * Checks the queue if any request is left to send and uses the transport\n     * layer to send the open requests.\n     * This method calls itself until every request in the queue is send.\n     *\n     */\n    _check : function()\n    {\n      // Debug output\n      this._debug();\n\n      // Check queues and stop timer if not needed anymore\n      if (this.__active.length == 0 && this.__queue.length == 0) {\n        this.__timer.stop();\n      }\n\n      // Checking if enabled\n      if (!this.getEnabled()) {\n        return;\n      }\n\n      // Checking active queue fill\n      if ( this.__queue.length == 0 ||(this.__queue[0].isAsynchronous() && this.__active.length >= this.getMaxConcurrentRequests())) {\n        return;\n      }\n\n      // Checking number of total requests\n      if (this.getMaxTotalRequests() != null && this.__totalRequests >= this.getMaxTotalRequests()) {\n        return;\n      }\n\n      var vRequest = this.__queue.shift();\n      var vTransport = new qx.io.remote.Exchange(vRequest);\n\n      // Increment counter\n      this.__totalRequests++;\n\n      // Add to active queue\n      this.__active.push(vTransport);\n\n      // Debug output\n      this._debug();\n\n      // Establish event connection between qx.io.remote.Exchange and me.\n      vTransport.addListener(\"sending\", this._onsending, this);\n      vTransport.addListener(\"receiving\", this._onreceiving, this);\n      vTransport.addListener(\"completed\", this._oncompleted, this);\n      vTransport.addListener(\"aborted\", this._oncompleted, this);\n      vTransport.addListener(\"timeout\", this._oncompleted, this);\n      vTransport.addListener(\"failed\", this._oncompleted, this);\n\n      // Store send timestamp\n      vTransport._start = (new Date).valueOf();\n\n      // Send\n      vTransport.send();\n\n      // Retry\n      if (this.__queue.length > 0) {\n        this._check();\n      }\n    },\n\n\n    /**\n     * Removes a transport object from the active queue and disposes the\n     * transport object in order stop the request.\n     *\n     * @param vTransport {qx.io.remote.Exchange} Transport object\n     */\n    _remove : function(vTransport)\n    {\n      // Remove from active transports\n      qx.lang.Array.remove(this.__active, vTransport);\n\n      // Dispose transport object\n      vTransport.dispose();\n\n      // Check again\n      this._check();\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    __activeCount : 0,\n\n\n    /**\n     * Listens for the \"sending\" event of the transport object and increases\n     * the counter for active requests.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _onsending : function(e)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\"))\n        {\n          this.__activeCount++;\n          e.getTarget()._counted = true;\n\n          this.debug(\"ActiveCount: \" + this.__activeCount);\n        }\n      }\n\n      e.getTarget().getRequest()._onsending(e);\n    },\n\n\n    /**\n     * Listens for the \"receiving\" event of the transport object and delegate\n     * the event to the current request object.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _onreceiving : function(e) {\n      e.getTarget().getRequest()._onreceiving(e);\n    },\n\n\n    /**\n     * Listens for the \"completed\" event of the transport object and decreases\n     * the counter for active requests.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _oncompleted : function(e)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\"))\n        {\n          if (e.getTarget()._counted)\n          {\n            this.__activeCount--;\n            this.debug(\"ActiveCount: \" + this.__activeCount);\n          }\n        }\n      }\n\n      // delegate the event to the handler method of the request depending\n      // on the current type of the event ( completed|aborted|timeout|failed )\n      var request = e.getTarget().getRequest();\n      var requestHandler = \"_on\" + e.getType();\n\n      // remove the request from the queue,\n      // keep local reference, see [BUG #4422]\n      this._remove(e.getTarget());\n\n      // It's possible that the request handler can fail, possibly due to\n      // being sent garbage data. We want to prevent that from crashing\n      // the program, but instead display an error.\n      try\n      {\n        if (request[requestHandler])\n        {\n          request[requestHandler](e);\n        }\n      }\n      catch(ex)\n      {\n        this.error(\"Request \" + request + \" handler \" + requestHandler +\n          \" threw an error: \", ex);\n\n        // Issue an \"aborted\" event so the application gets notified.\n        // If that too fails, or if there's no \"aborted\" handler, ignore it.\n        try\n        {\n          if (request[\"_onaborted\"])\n          {\n            var event = qx.event.Registration.createEvent(\"aborted\",\n                                                      qx.event.type.Event);\n            request[\"_onaborted\"](event);\n          }\n        }\n        catch(ex1)\n        {\n        }\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMEOUT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listens for the \"interval\" event of the transport object and checks\n     * if the active requests are timed out.\n     *\n     * @param e {qx.event.type.Event} event object\n     */\n    _oninterval : function(e)\n    {\n      var vActive = this.__active;\n\n      if (vActive.length == 0)\n      {\n        this.__timer.stop();\n        return;\n      }\n\n      var vCurrent = (new Date).valueOf();\n      var vTransport;\n      var vRequest;\n      var vDefaultTimeout = this.getDefaultTimeout();\n      var vTimeout;\n      var vTime;\n\n      for (var i=vActive.length-1; i>=0; i--)\n      {\n        vTransport = vActive[i];\n        vRequest = vTransport.getRequest();\n\n        if (vRequest.isAsynchronous())\n        {\n          vTimeout = vRequest.getTimeout();\n\n          // if timer is disabled...\n          if (vTimeout == 0)\n          {\n            // then ignore it.\n            continue;\n          }\n\n          if (vTimeout == null) {\n            vTimeout = vDefaultTimeout;\n          }\n\n          vTime = vCurrent - vTransport._start;\n\n          if (vTime > vTimeout)\n          {\n            this.warn(\"Timeout: transport \" + vTransport.toHashCode());\n            this.warn(vTime + \"ms > \" + vTimeout + \"ms\");\n            vTransport.timeout();\n          }\n        }\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MODIFIERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applyEnabled : function(value, old)\n    {\n      if (value) {\n        this._check();\n      }\n\n      this.__timer.setEnabled(value);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CORE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add the request to the pending requests queue.\n     *\n     * @param vRequest {var} The request\n     */\n    add : function(vRequest)\n    {\n      vRequest.setState(\"queued\");\n\n      if (vRequest.isAsynchronous()) {\n        this.__queue.push(vRequest);\n      } else {\n        this.__queue.unshift(vRequest);\n      }\n\n      this._check();\n\n      if (this.getEnabled()) {\n        this.__timer.start();\n      }\n    },\n\n\n    /**\n     * Remove the request from the pending requests queue.\n     *\n     *  The underlying transport of the request is forced into the aborted\n     *  state (\"aborted\") and listeners of the \"aborted\"\n     *  signal are notified about the event. If the request isn't in the\n     *  pending requests queue, this method is a noop.\n     *\n     * @param vRequest {var} The request\n     */\n    abort : function(vRequest)\n    {\n      var vTransport = vRequest.getTransport();\n\n      if (vTransport) {\n        vTransport.abort();\n      } else if (this.__queue.includes(vRequest)) {\n        qx.lang.Array.remove(this.__queue, vRequest);\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this._disposeArray(\"__active\");\n    this._disposeObjects(\"__timer\");\n    this.__queue = null;\n  }\n});\n"
  ]
}