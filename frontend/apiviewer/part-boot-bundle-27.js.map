{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/form/MModelProperty.js",
    "../transpiled/qx/ui/form/IRadioItem.js",
    "../transpiled/qx/ui/form/IBooleanForm.js",
    "../transpiled/qx/ui/form/IModel.js",
    "../transpiled/qx/ui/form/RadioButton.js",
    "../transpiled/qx/ui/tabview/TabButton.js",
    "../transpiled/qx/ui/form/RepeatButton.js",
    "../transpiled/qx/ui/core/scroll/ScrollPane.js",
    "../transpiled/qx/ui/core/scroll/IScrollBar.js",
    "../transpiled/qx/ui/core/scroll/ScrollBar.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-27.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * Can be included for implementing {@link qx.ui.form.IModel}. It only contains\n * a nullable property named 'model' with a 'changeModel' event.\n */\nqx.Mixin.define(\"qx.ui.form.MModelProperty\",\n{\n  properties :\n  {\n    /**\n     * Model property for storing additional information for the including\n     * object. It can act as value property on form items for example.\n     *\n     * Be careful using that property as this is used for the\n     * {@link qx.ui.form.MModelSelection} it has some restrictions:\n     *\n     * * Don't use equal models in one widget using the\n     *     {@link qx.ui.form.MModelSelection}.\n     *\n     * * Avoid setting only some model properties if the widgets are added to\n     *     a {@link qx.ui.form.MModelSelection} widget.\n     *\n     * Both restrictions result of the fact, that the set models are deputies\n     * for their widget.\n     */\n    model :\n    {\n      nullable : true,\n      event : \"changeModel\",\n      apply : \"_applyModel\",\n      dereference : true\n    }\n  },\n\n\n  members :\n  {\n    // apply method\n    _applyModel : function(value, old) {\n      // Empty implementation\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Each object, which should be managed by a {@link RadioGroup} have to\n * implement this interface.\n */\nqx.Interface.define(\"qx.ui.form.IRadioItem\",\n{\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the item was checked or unchecked */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Set whether the item is checked\n     *\n     * @param value {Boolean} whether the item should be checked\n     */\n    setValue : function(value) {},\n\n\n    /**\n     * Get whether the item is checked\n     *\n     * @return {Boolean} whether the item it checked\n     */\n    getValue : function() {},\n\n\n    /**\n     * Set the radiogroup, which manages this item\n     *\n     * @param value {qx.ui.form.RadioGroup} The radiogroup, which should\n     *     manage the item.\n     */\n    setGroup : function(value) {\n      this.assertInstance(value, qx.ui.form.RadioGroup);\n    },\n\n\n    /**\n     * Get the radiogroup, which manages this item\n     *\n     * @return {qx.ui.form.RadioGroup} The radiogroup, which manages the item.\n     */\n    getGroup : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Form interface for all form widgets which have boolean as their primary\n * data type like a checkbox.\n */\nqx.Interface.define(\"qx.ui.form.IBooleanForm\",\n{\n  extend : qx.ui.form.IField,\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the value was modified */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      VALUE PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the element's value.\n     *\n     * @param value {Boolean|null} The new value of the element.\n     */\n    setValue : function(value) {\n      return arguments.length == 1;\n    },\n\n\n    /**\n     * Resets the element's value to its initial value.\n     */\n    resetValue : function() {},\n\n\n    /**\n     * The element's user set value.\n     *\n     * @return {Boolean|null} The value.\n     */\n    getValue : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Each object which wants to store data representative for the real item\n * should implement this interface.\n */\nqx.Interface.define(\"qx.ui.form.IModel\",\n{\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the model data changes */\n    \"changeModel\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Set the representative data for the item.\n     *\n     * @param value {var} The data.\n     */\n    setModel : function(value) {},\n\n\n    /**\n     * Returns the representative data for the item\n     *\n     * @return {var} The data.\n     */\n    getModel : function() {},\n\n\n    /**\n     * Sets the representative data to null.\n     */\n    resetModel : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Radio buttons can be used in radio groups to allow to the user to select\n * exactly one item from a list. Radio groups are established by adding\n * radio buttons to a radio manager {@link qx.ui.form.RadioGroup}.\n *\n * Example:\n * <pre class=\"javascript\">\n *   var container = new qx.ui.container.Composite(new qx.ui.layout.VBox);\n *\n *   var female = new qx.ui.form.RadioButton(\"female\");\n *   var male = new qx.ui.form.RadioButton(\"male\");\n *\n *   var mgr = new qx.ui.form.RadioGroup();\n *   mgr.add(female, male);\n *\n *   container.add(male);\n *   container.add(female);\n * </pre>\n */\nqx.Class.define(\"qx.ui.form.RadioButton\",\n{\n  extend : qx.ui.form.Button,\n  include : [\n    qx.ui.form.MForm,\n    qx.ui.form.MModelProperty\n  ],\n  implement : [\n    qx.ui.form.IRadioItem,\n    qx.ui.form.IForm,\n    qx.ui.form.IBooleanForm,\n    qx.ui.form.IModel\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String?null} An optional label for the radio button.\n   */\n  construct : function(label)\n  {\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertArgumentsCount(arguments, 0, 1);\n    }\n\n    this.base(arguments, label);\n\n    // Add listeners\n    this.addListener(\"execute\", this._onExecute);\n    this.addListener(\"keypress\", this._onKeyPress);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons */\n    group :\n    {\n      check  : \"qx.ui.form.RadioGroup\",\n      nullable : true,\n      apply : \"_applyGroup\"\n    },\n\n    /** The value of the widget. True, if the widget is checked. */\n    value :\n    {\n      check : \"Boolean\",\n      nullable : true,\n      event : \"changeValue\",\n      apply : \"_applyValue\",\n      init: false\n    },\n\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"radiobutton\"\n    },\n\n    // overridden\n    allowGrowX :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      checked : true,\n      focused : true,\n      invalid : true,\n      hovered : true\n    },\n\n    // overridden (from MExecutable to keep the icon out of the binding)\n    /**\n     * @lint ignoreReferenceField(_bindableProperties)\n     */\n    _bindableProperties :\n    [\n      \"enabled\",\n      \"label\",\n      \"toolTipText\",\n      \"value\",\n      \"menu\"\n    ],\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyValue : function(value, old)\n    {\n      value ?\n        this.addState(\"checked\") :\n        this.removeState(\"checked\");\n    },\n\n\n    /** The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons */\n    _applyGroup : function(value, old)\n    {\n      if (old) {\n        old.remove(this);\n      }\n\n      if (value) {\n        value.add(this);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT-HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for the \"execute\" event.\n     *\n     * Sets the property \"checked\" to true.\n     *\n     * @param e {qx.event.type.Event} execute event\n     */\n    _onExecute : function(e) {\n      var grp = this.getGroup();\n      if (grp && grp.getAllowEmptySelection()) {\n        this.toggleValue();\n      } else {\n        this.setValue(true);\n      }\n    },\n\n\n    /**\n     * Event listener for the \"keyPress\" event.\n     *\n     * Selects the previous RadioButton when pressing \"Left\" or \"Up\" and\n     * Selects the next RadioButton when pressing \"Right\" and \"Down\"\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     */\n    _onKeyPress : function(e)\n    {\n\n      var grp = this.getGroup();\n      if (!grp) {\n        return;\n      }\n\n      switch(e.getKeyIdentifier())\n      {\n        case \"Left\":\n        case \"Up\":\n          grp.selectPrevious();\n          break;\n\n        case \"Right\":\n        case \"Down\":\n          grp.selectNext();\n          break;\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A TabButton is the tapable part sitting on the {@link qx.ui.tabview.Page}.\n * By tapping on the TabButton the user can set a Page active.\n *\n * @childControl label {qx.ui.basic.Label} label of the tab button\n * @childControl icon {qx.ui.basic.Image} icon of the tab button\n * @childControl close-button {qx.ui.form.Button} close button of the tab button\n */\nqx.Class.define(\"qx.ui.tabview.TabButton\",\n{\n  extend : qx.ui.form.RadioButton,\n  implement : qx.ui.form.IRadioItem,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    var layout = new qx.ui.layout.Grid(2, 0);\n    layout.setRowAlign(0, \"left\", \"middle\");\n    layout.setColumnAlign(0, \"right\", \"middle\");\n\n    this._getLayout().dispose();\n    this._setLayout(layout);\n\n    this.initShowCloseButton();\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * Fired by {@link qx.ui.tabview.Page} if the close button is tapped.\n     *\n     * Event data: The tab button.\n     */\n    \"close\" : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n\n    /** Indicates if the close button of a TabButton should be shown. */\n    showCloseButton :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyShowCloseButton\"\n    }\n\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n\n  members :\n  {\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      focused : true,\n      checked : true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    _applyIconPosition : function(value, old)\n    {\n\n      var children = {\n        icon : this.getChildControl(\"icon\"),\n        label : this.getChildControl(\"label\"),\n        closeButton : this.getShowCloseButton() ? this.getChildControl(\"close-button\") : null\n      };\n\n      // Remove all children before adding them again\n      for (var child in children)\n      {\n        if (children[child]) {\n          this._remove(children[child]);\n        }\n      }\n\n      switch (value)\n      {\n        case \"top\":\n          this._add(children.label, {row: 3, column: 2});\n          this._add(children.icon, {row: 1, column: 2});\n          if (children.closeButton) {\n            this._add(children.closeButton, {row: 0, column: 4});\n          }\n          break;\n\n        case \"bottom\":\n          this._add(children.label, {row: 1, column: 2});\n          this._add(children.icon, {row: 3, column: 2});\n          if (children.closeButton) {\n            this._add(children.closeButton, {row: 0, column: 4});\n          }\n          break;\n\n        case \"left\":\n          this._add(children.label, {row: 0, column: 2});\n          this._add(children.icon, {row: 0, column: 0});\n          if (children.closeButton) {\n            this._add(children.closeButton, {row: 0, column: 4});\n          }\n          break;\n\n        case \"right\":\n          this._add(children.label, {row: 0, column: 0});\n          this._add(children.icon, {row: 0, column: 2});\n          if (children.closeButton) {\n            this._add(children.closeButton, {row: 0, column: 4});\n          }\n          break;\n      }\n\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id) {\n        case \"label\":\n          var control = new qx.ui.basic.Label(this.getLabel());\n          control.setAnonymous(true);\n          this._add(control, {row: 0, column: 2});\n          this._getLayout().setColumnFlex(2, 1);\n          break;\n\n        case \"icon\":\n          control = new qx.ui.basic.Image(this.getIcon());\n          control.setAnonymous(true);\n          this._add(control, {row: 0, column: 0});\n          break;\n\n        case \"close-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.setKeepActive(true);\n          control.addListener(\"tap\", this._onCloseButtonTap, this);\n          this._add(control, {row: 0, column: 4});\n\n          if (!this.getShowCloseButton()) {\n            control.exclude();\n          }\n\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Fires a \"close\" event when the close button is tapped.\n     */\n    _onCloseButtonTap : function() {\n      this.fireDataEvent(\"close\", this);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyShowCloseButton : function(value, old)\n    {\n      if (value) {\n        this._showChildControl(\"close-button\");\n      } else {\n        this._excludeChildControl(\"close-button\");\n      }\n    },\n\n    // property apply\n    _applyCenter : function(value)\n    {\n      var layout = this._getLayout();\n\n      if (value) {\n        layout.setColumnAlign(2, \"center\", \"middle\");\n      } else {\n        layout.setColumnAlign(2, \"left\", \"middle\");\n      }\n\n    }\n\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The RepeatButton is a special button, which fires repeatedly {@link #execute}\n * events, while a button is pressed on the button. The initial delay\n * and the interval time can be set using the properties {@link #firstInterval}\n * and {@link #interval}. The {@link #execute} events will be fired in a shorter\n * amount of time if a button is hold, until the min {@link #minTimer}\n * is reached. The {@link #timerDecrease} property sets the amount of milliseconds\n * which will decreased after every firing.\n *\n * <pre class='javascript'>\n *   var button = new qx.ui.form.RepeatButton(\"Hello World\");\n *\n *   button.addListener(\"execute\", function(e) {\n *     alert(\"Button is executed\");\n *   }, this);\n *\n *   this.getRoot.add(button);\n * </pre>\n *\n * This example creates a button with the label \"Hello World\" and attaches an\n * event listener to the {@link #execute} event.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/repeatbutton.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.form.RepeatButton\",\n{\n  extend : qx.ui.form.Button,\n\n\n  /**\n   * @param label {String} Label to use\n   * @param icon {String?null} Icon to use\n   */\n  construct : function(label, icon)\n  {\n    this.base(arguments, label, icon);\n\n    // create the timer and add the listener\n    this.__timer = new qx.event.AcceleratingTimer();\n    this.__timer.addListener(\"interval\", this._onInterval, this);\n  },\n\n\n  events :\n  {\n    /**\n     * This event gets dispatched with every interval. The timer gets executed\n     * as long as the user holds down a button.\n     */\n    \"execute\" : \"qx.event.type.Event\",\n\n    /**\n     * This event gets dispatched when the button is pressed.\n     */\n    \"press\"   : \"qx.event.type.Event\",\n\n    /**\n     * This event gets dispatched when the button is released.\n     */\n    \"release\" : \"qx.event.type.Event\"\n  },\n\n\n  properties :\n  {\n    /**\n     * Interval used after the first run of the timer. Usually a smaller value\n     * than the \"firstInterval\" property value to get a faster reaction.\n     */\n    interval :\n    {\n      check : \"Integer\",\n      init  : 100\n    },\n\n    /**\n     * Interval used for the first run of the timer. Usually a greater value\n     * than the \"interval\" property value to a little delayed reaction at the first\n     * time.\n     */\n    firstInterval :\n    {\n      check : \"Integer\",\n      init  : 500\n    },\n\n    /** This configures the minimum value for the timer interval. */\n    minTimer :\n    {\n      check : \"Integer\",\n      init  : 20\n    },\n\n    /** Decrease of the timer on each interval (for the next interval) until minTimer reached. */\n    timerDecrease :\n    {\n      check : \"Integer\",\n      init  : 2\n    }\n  },\n\n\n  members :\n  {\n    __executed : null,\n    __timer : null,\n\n\n    /**\n     * Calling this function is like a tap from the user on the\n     * button with all consequences.\n     * <span style='color: red'>Be sure to call the {@link #release} function.</span>\n     *\n     */\n    press : function()\n    {\n      // only if the button is enabled\n      if (this.isEnabled())\n      {\n        // if the state pressed must be applied (first call)\n        if (!this.hasState(\"pressed\"))\n        {\n          // start the timer\n          this.__startInternalTimer();\n        }\n\n        // set the states\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n    },\n\n\n    /**\n     * Calling this function is like a release from the user on the\n     * button with all consequences.\n     * Usually the {@link #release} function will be called before the call of\n     * this function.\n     *\n     * @param fireExecuteEvent {Boolean?true} flag which signals, if an event should be fired\n     */\n    release : function(fireExecuteEvent)\n    {\n      // only if the button is enabled\n      if (!this.isEnabled()) {\n        return;\n      }\n\n      // only if the button is pressed\n      if (this.hasState(\"pressed\"))\n      {\n        // if the button has not been executed\n        if (!this.__executed) {\n          this.execute();\n        }\n      }\n\n      // remove button states\n      this.removeState(\"pressed\");\n      this.removeState(\"abandoned\");\n\n      // stop the repeat timer and therefore the execution\n      this.__stopInternalTimer();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _applyEnabled : function(value, old)\n    {\n      this.base(arguments, value, old);\n\n      if (!value)\n      {\n        if (this.isCapturing()) {\n          // also release capture because out event is missing on iOS\n          this.releaseCapture();\n        }\n\n        // remove button states\n        this.removeState(\"pressed\");\n        this.removeState(\"abandoned\");\n\n        // stop the repeat timer and therefore the execution\n        this.__stopInternalTimer();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener method for \"pointerover\" event\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOver : function(e)\n    {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      if (this.hasState(\"abandoned\"))\n      {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n        this.__timer.start();\n      }\n\n      this.addState(\"hovered\");\n    },\n\n\n    /**\n     * Listener method for \"pointerout\" event\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOut : function(e)\n    {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\"))\n      {\n        this.removeState(\"pressed\");\n        this.addState(\"abandoned\");\n        this.__timer.stop();\n      }\n    },\n\n\n    /**\n     * Callback method for the \"pointerdown\" method.\n     *\n     * Sets the interval of the timer (value of firstInterval property) and\n     * starts the timer. Additionally removes the state \"abandoned\" and adds the\n     * state \"pressed\".\n     *\n     * @param e {qx.event.type.Pointer} pointerdown event\n     */\n    _onPointerDown : function(e)\n    {\n      if (!e.isLeftPressed()) {\n        return;\n      }\n\n      // Activate capturing if the button get a pointerout while\n      // the button is pressed.\n      this.capture();\n\n      this.__startInternalTimer();\n      e.stopPropagation();\n    },\n\n\n    /**\n     * Callback method for the \"pointerup\" event.\n     *\n     * Handles the case that the user is releasing a button\n     * before the timer interval method got executed. This way the\n     * \"execute\" method get executed at least one time.\n     *\n     * @param e {qx.event.type.Pointer} pointerup event\n     */\n    _onPointerUp : function(e)\n    {\n      this.releaseCapture();\n\n      if (!this.hasState(\"abandoned\"))\n      {\n        this.addState(\"hovered\");\n\n        if (this.hasState(\"pressed\") && !this.__executed) {\n          this.execute();\n        }\n      }\n\n      this.__stopInternalTimer();\n      e.stopPropagation();\n    },\n\n\n    // Nothing to do, 'execute' is already fired by _onPointerUp.\n    _onTap : function(e) {},\n\n\n    /**\n     * Listener method for \"keyup\" event.\n     *\n     * Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\n     * for the keys \"Enter\" or \"Space\" and stops the internal timer\n     * (same like pointer up).\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyUp : function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"Enter\":\n        case \"Space\":\n          if (this.hasState(\"pressed\"))\n          {\n            if (!this.__executed) {\n              this.execute();\n            }\n\n            this.removeState(\"pressed\");\n            this.removeState(\"abandoned\");\n            e.stopPropagation();\n            this.__stopInternalTimer();\n          }\n      }\n    },\n\n\n    /**\n     * Listener method for \"keydown\" event.\n     *\n     * Removes \"abandoned\" and adds \"pressed\" state\n     * for the keys \"Enter\" or \"Space\". It also starts\n     * the internal timer (same like pointerdown).\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyDown : function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.addState(\"pressed\");\n          e.stopPropagation();\n          this.__startInternalTimer();\n      }\n    },\n\n\n    /**\n     * Callback for the interval event.\n     *\n     * Stops the timer and starts it with a new interval\n     * (value of the \"interval\" property - value of the \"timerDecrease\" property).\n     * Dispatches the \"execute\" event.\n     *\n     * @param e {qx.event.type.Event} interval event\n     */\n    _onInterval : function(e)\n    {\n      this.__executed = true;\n      this.fireEvent(\"execute\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL TIMER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Starts the internal timer which causes firing of execution\n     * events in an interval. It also presses the button.\n     *\n     */\n    __startInternalTimer : function()\n    {\n      this.fireEvent(\"press\");\n\n      this.__executed = false;\n\n      this.__timer.set({\n        interval: this.getInterval(),\n        firstInterval: this.getFirstInterval(),\n        minimum: this.getMinTimer(),\n        decrease: this.getTimerDecrease()\n      }).start();\n\n      this.removeState(\"abandoned\");\n      this.addState(\"pressed\");\n    },\n\n\n    /**\n     * Stops the internal timer and releases the button.\n     *\n     */\n    __stopInternalTimer : function()\n    {\n      this.fireEvent(\"release\");\n\n      this.__timer.stop();\n\n      this.removeState(\"abandoned\");\n      this.removeState(\"pressed\");\n    }\n  },\n\n\n\n\n  /*\n    *****************************************************************************\n       DESTRUCTOR\n    *****************************************************************************\n    */\n\n  destruct : function() {\n    this._disposeObjects(\"__timer\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This class represents a scroll able pane. This means that this widget\n * may contain content which is bigger than the available (inner)\n * dimensions of this widget. The widget also offer methods to control\n * the scrolling position. It can only have exactly one child.\n */\nqx.Class.define(\"qx.ui.core.scroll.ScrollPane\",\n{\n  extend : qx.ui.core.Widget,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.set({\n      minWidth: 0,\n      minHeight: 0\n    });\n\n    // Automatically configure a \"fixed\" grow layout.\n    this._setLayout(new qx.ui.layout.Grow());\n\n    // Add resize listener to \"translate\" event\n    this.addListener(\"resize\", this._onUpdate);\n\n    var contentEl = this.getContentElement();\n\n    // Synchronizes the DOM scroll position with the properties\n    contentEl.addListener(\"scroll\", this._onScroll, this);\n\n    // Fixed some browser quirks e.g. correcting scroll position\n    // to the previous value on re-display of a pane\n    contentEl.addListener(\"appear\", this._onAppear, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired on resize of both the container or the content. */\n    update : \"qx.event.type.Event\",\n\n    /** Fired on scroll animation end invoked by 'scroll*' methods. */\n    scrollAnimationEnd : \"qx.event.type.Event\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The horizontal scroll position */\n    scrollX :\n    {\n      check : \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxX()\",\n      apply : \"_applyScrollX\",\n      transform: \"_transformScrollX\",\n      event : \"scrollX\",\n      init  : 0\n    },\n\n    /** The vertical scroll position */\n    scrollY :\n    {\n      check : \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getScrollMaxY()\",\n      apply : \"_applyScrollY\",\n      transform: \"_transformScrollY\",\n      event : \"scrollY\",\n      init  : 0\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __frame : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTENT MANAGEMENT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Configures the content of the scroll pane. Replaces any existing child\n     * with the newly given one.\n     *\n     * @param widget {qx.ui.core.Widget?null} The content widget of the pane\n     */\n    add : function(widget)\n    {\n      var old = this._getChildren()[0];\n      if (old)\n      {\n        this._remove(old);\n        old.removeListener(\"resize\", this._onUpdate, this);\n      }\n\n      if (widget)\n      {\n        this._add(widget);\n        widget.addListener(\"resize\", this._onUpdate, this);\n      }\n    },\n\n\n    /**\n     * Removes the given widget from the content. The pane is empty\n     * afterwards as only one child is supported by the pane.\n     *\n     * @param widget {qx.ui.core.Widget?null} The content widget of the pane\n     */\n    remove : function(widget)\n    {\n      if (widget)\n      {\n        this._remove(widget);\n        widget.removeListener(\"resize\", this._onUpdate, this);\n      }\n    },\n\n\n    /**\n     * Returns an array containing the current content.\n     *\n     * @return {Object[]} The content array\n     */\n    getChildren : function() {\n      return this._getChildren();\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for resize event of content and container\n     *\n     * @param e {Event} Resize event object\n     */\n    _onUpdate : function(e) {\n      this.fireEvent(\"update\");\n    },\n\n\n    /**\n     * Event listener for scroll event of content\n     *\n     * @param e {qx.event.type.Event} Scroll event object\n     */\n    _onScroll : function(e)\n    {\n      var contentEl = this.getContentElement();\n\n      this.setScrollX(contentEl.getScrollX());\n      this.setScrollY(contentEl.getScrollY());\n    },\n\n\n    /**\n     * Event listener for appear event of content\n     *\n     * @param e {qx.event.type.Event} Appear event object\n     */\n    _onAppear : function(e)\n    {\n      var contentEl = this.getContentElement();\n\n      var internalX = this.getScrollX();\n      var domX = contentEl.getScrollX();\n\n      if (internalX != domX) {\n        contentEl.scrollToX(internalX);\n      }\n\n      var internalY = this.getScrollY();\n      var domY = contentEl.getScrollY();\n\n      if (internalY != domY) {\n        contentEl.scrollToY(internalY);\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ITEM LOCATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the top offset of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemTop : function(item)\n    {\n      var top = 0;\n\n      do\n      {\n        top += item.getBounds().top;\n        item = item.getLayoutParent();\n      }\n      while (item && item !== this);\n\n      return top;\n    },\n\n\n    /**\n     * Returns the top offset of the end of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemBottom : function(item) {\n      return this.getItemTop(item) + item.getBounds().height;\n    },\n\n\n    /**\n     * Returns the left offset of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemLeft : function(item)\n    {\n      var left = 0;\n      var parent;\n\n      do\n      {\n        left += item.getBounds().left;\n        parent = item.getLayoutParent();\n        if (parent) {\n          left += parent.getInsets().left;\n        }\n        item = parent;\n      }\n      while (item && item !== this);\n\n      return left;\n    },\n\n\n    /**\n     * Returns the left offset of the end of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Right offset\n     */\n    getItemRight : function(item) {\n      return this.getItemLeft(item) + item.getBounds().width;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DIMENSIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The size (identical with the preferred size) of the content.\n     *\n     * @return {Map} Size of the content (keys: <code>width</code> and <code>height</code>)\n     */\n    getScrollSize : function() {\n      return this.getChildren()[0].getBounds();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The maximum horizontal scroll position.\n     *\n     * @return {Integer} Maximum horizontal scroll position.\n     */\n    getScrollMaxX : function()\n    {\n      var paneSize = this.getInnerSize();\n      var scrollSize = this.getScrollSize();\n\n      if (paneSize && scrollSize) {\n        return Math.max(0, scrollSize.width - paneSize.width);\n      }\n\n      return 0;\n    },\n\n\n    /**\n     * The maximum vertical scroll position.\n     *\n     * @return {Integer} Maximum vertical scroll position.\n     */\n    getScrollMaxY : function()\n    {\n      var paneSize = this.getInnerSize();\n      var scrollSize = this.getScrollSize();\n\n      if (paneSize && scrollSize) {\n        return Math.max(0, scrollSize.height - paneSize.height);\n      }\n\n      return 0;\n    },\n\n\n    /**\n     * Scrolls the element's content to the given left coordinate\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToX : function(value, duration)\n    {\n      var max = this.getScrollMaxX();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      this.stopScrollAnimation();\n\n      if (duration) {\n        var from = this.getScrollX();\n        this.__frame = new qx.bom.AnimationFrame();\n        this.__frame.on(\"end\", function() {\n          this.setScrollX(value);\n          this.__frame = null;\n          this.fireEvent(\"scrollAnimationEnd\");\n        }, this);\n        this.__frame.on(\"frame\", function(timePassed) {\n          var newX = parseInt(timePassed/duration * (value - from) + from);\n          this.setScrollX(newX);\n        }, this);\n        this.__frame.startSequence(duration);\n\n      } else {\n        this.setScrollX(value);\n      }\n    },\n\n\n    /**\n     * Scrolls the element's content to the given top coordinate\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToY : function(value, duration)\n    {\n      var max = this.getScrollMaxY();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      this.stopScrollAnimation();\n\n      if (duration) {\n        var from = this.getScrollY();\n        this.__frame = new qx.bom.AnimationFrame();\n        this.__frame.on(\"end\", function() {\n          this.setScrollY(value);\n          this.__frame = null;\n          this.fireEvent(\"scrollAnimationEnd\");\n        }, this);\n        this.__frame.on(\"frame\", function(timePassed) {\n          var newY = parseInt(timePassed/duration * (value - from) + from);\n          this.setScrollY(newY);\n        }, this);\n        this.__frame.startSequence(duration);\n\n      } else {\n        this.setScrollY(value);\n      }\n    },\n\n\n    /**\n     * Scrolls the element's content horizontally by the given amount.\n     *\n     * @param x {Integer?0} Amount to scroll\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByX : function(x, duration) {\n      this.scrollToX(this.getScrollX() + x, duration);\n    },\n\n\n    /**\n     * Scrolls the element's content vertically by the given amount.\n     *\n     * @param y {Integer?0} Amount to scroll\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByY : function(y, duration) {\n      this.scrollToY(this.getScrollY() + y, duration);\n    },\n\n\n    /**\n     * If an scroll animation is running, it will be stopped with that method.\n     */\n    stopScrollAnimation : function() {\n      if (this.__frame) {\n        this.__frame.cancelSequence();\n        this.__frame = null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyScrollX : function(value) {\n      this.getContentElement().scrollToX(value);\n    },\n\n    /**\n     * Transform property\n     *\n     * @param value {Number} Value to transform\n     * @return {Number} Rounded value\n     */\n    _transformScrollX: function(value) {\n      return Math.round(value);\n    },\n    \n\n    // property apply\n    _applyScrollY : function(value) {\n      this.getContentElement().scrollToY(value);\n    },\n\n    /**\n     * Transform property\n     *\n     * @param value {Number} Value to transform\n     * @return {Number} Rounded value\n     */\n    _transformScrollY: function(value) {\n      return Math.round(value);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * All widget used as scrollbars must implement this interface.\n */\nqx.Interface.define(\"qx.ui.core.scroll.IScrollBar\",\n{\n  events :\n  {\n    /** Fired if the user scroll */\n    \"scroll\" : \"qx.event.type.Data\",\n    /** Fired as soon as the scroll animation ended. */\n    \"scrollAnimationEnd\": 'qx.event.type.Event'\n  },\n\n\n  properties :\n  {\n    /**\n     * The scroll bar orientation\n     */\n    orientation : {},\n\n\n    /**\n     * The maximum value (difference between available size and\n     * content size).\n     */\n    maximum : {},\n\n\n    /**\n     * Position of the scrollbar (which means the scroll left/top of the\n     * attached area's pane)\n     *\n     * Strictly validates according to {@link #maximum}.\n     * Does not apply any correction to the incoming value. If you depend\n     * on this, please use {@link #scrollTo} instead.\n     */\n    position : {},\n\n\n    /**\n     * Factor to apply to the width/height of the knob in relation\n     * to the dimension of the underlying area.\n     */\n    knobFactor : {}\n  },\n\n\n  members :\n  {\n    /**\n     * Scrolls to the given position.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param position {Integer} Scroll to this position. Must be greater zero.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollTo : function(position, duration) {\n      this.assertNumber(position);\n    },\n\n\n    /**\n     * Scrolls by the given offset.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param offset {Integer} Scroll by this offset\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBy : function(offset, duration) {\n      this.assertNumber(offset);\n    },\n\n\n    /**\n     * Scrolls by the given number of steps.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param steps {Integer} Number of steps\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBySteps : function(steps, duration) {\n      this.assertNumber(steps);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The scroll bar widget, is a special slider, which is used in qooxdoo instead\n * of the native browser scroll bars.\n *\n * Scroll bars are used by the {@link qx.ui.container.Scroll} container. Usually\n * a scroll bar is not used directly.\n *\n * @childControl slider {qx.ui.core.scroll.ScrollSlider} scroll slider component\n * @childControl button-begin {qx.ui.form.RepeatButton} button to scroll to top\n * @childControl button-end {qx.ui.form.RepeatButton} button to scroll to bottom\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var scrollBar = new qx.ui.core.scroll.ScrollBar(\"horizontal\");\n *   scrollBar.set({\n *     maximum: 500\n *   })\n *   this.getRoot().add(scrollBar);\n * </pre>\n *\n * This example creates a horizontal scroll bar with a maximum value of 500.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/scrollbar.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.core.scroll.ScrollBar\",\n{\n  extend : qx.ui.core.Widget,\n  implement : qx.ui.core.scroll.IScrollBar,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param orientation {String?\"horizontal\"} The initial scroll bar orientation\n   */\n  construct : function(orientation)\n  {\n    this.base(arguments);\n\n    // Create child controls\n    this._createChildControl(\"button-begin\");\n    this._createChildControl(\"slider\").addListener(\"resize\", this._onResizeSlider, this);\n    this._createChildControl(\"button-end\");\n\n    // Configure orientation\n    if (orientation != null) {\n      this.setOrientation(orientation);\n    } else {\n      this.initOrientation();\n    }\n\n    // prevent drag & drop on scrolling\n    this.addListener(\"track\", function(e) {\n      e.stopPropagation();\n    }, this);\n  },\n\n\n  events : {\n    /** Change event for the value. */\n    \"scrollAnimationEnd\": \"qx.event.type.Event\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"scrollbar\"\n    },\n\n\n    /**\n     * The scroll bar orientation\n     */\n    orientation :\n    {\n      check : [ \"horizontal\", \"vertical\" ],\n      init : \"horizontal\",\n      apply : \"_applyOrientation\"\n    },\n\n\n    /**\n     * The maximum value (difference between available size and\n     * content size).\n     */\n    maximum :\n    {\n      check : \"PositiveInteger\",\n      apply : \"_applyMaximum\",\n      init : 100\n    },\n\n\n    /**\n     * Position of the scrollbar (which means the scroll left/top of the\n     * attached area's pane)\n     *\n     * Strictly validates according to {@link #maximum}.\n     * Does not apply any correction to the incoming value. If you depend\n     * on this, please use {@link #scrollTo} instead.\n     */\n    position :\n    {\n      check : \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getMaximum()\",\n      init : 0,\n      apply : \"_applyPosition\",\n      event : \"scroll\"\n    },\n\n\n    /**\n     * Step size for each tap on the up/down or left/right buttons.\n     */\n    singleStep :\n    {\n      check : \"Integer\",\n      init : 20\n    },\n\n\n    /**\n     * The amount to increment on each event. Typically corresponds\n     * to the user pressing <code>PageUp</code> or <code>PageDown</code>.\n     */\n    pageStep :\n    {\n      check : \"Integer\",\n      init : 10,\n      apply : \"_applyPageStep\"\n    },\n\n\n    /**\n     * Factor to apply to the width/height of the knob in relation\n     * to the dimension of the underlying area.\n     */\n    knobFactor :\n    {\n      check : \"PositiveNumber\",\n      apply : \"_applyKnobFactor\",\n      nullable : true\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __offset : 2,\n    __originalMinSize : 0,\n\n\n    // overridden\n    _computeSizeHint : function() {\n      var hint = this.base(arguments);\n      if (this.getOrientation() === \"horizontal\") {\n        this.__originalMinSize = hint.minWidth;\n        hint.minWidth = 0;\n      } else {\n        this.__originalMinSize = hint.minHeight;\n        hint.minHeight = 0;\n      }\n      return hint;\n    },\n\n\n    // overridden\n    renderLayout : function(left, top, width, height) {\n      var changes = this.base(arguments, left, top, width, height);\n      var horizontal = this.getOrientation() === \"horizontal\";\n      if (this.__originalMinSize >= (horizontal ? width : height)) {\n        this.getChildControl(\"button-begin\").setVisibility(\"hidden\");\n        this.getChildControl(\"button-end\").setVisibility(\"hidden\");\n      } else {\n        this.getChildControl(\"button-begin\").setVisibility(\"visible\");\n        this.getChildControl(\"button-end\").setVisibility(\"visible\");\n      }\n\n      return changes;\n    },\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"slider\":\n          control = new qx.ui.core.scroll.ScrollSlider();\n          control.setPageStep(100);\n          control.setFocusable(false);\n          control.addListener(\"changeValue\", this._onChangeSliderValue, this);\n          control.addListener(\"slideAnimationEnd\", this._onSlideAnimationEnd, this);\n          this._add(control, {flex: 1});\n          break;\n\n        case \"button-begin\":\n          // Top/Left Button\n          control = new qx.ui.form.RepeatButton();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onExecuteBegin, this);\n          this._add(control);\n          break;\n\n        case \"button-end\":\n          // Bottom/Right Button\n          control = new qx.ui.form.RepeatButton();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onExecuteEnd, this);\n          this._add(control);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyMaximum : function(value) {\n      this.getChildControl(\"slider\").setMaximum(value);\n    },\n\n\n    // property apply\n    _applyPosition : function(value) {\n      this.getChildControl(\"slider\").setValue(value);\n    },\n\n\n    // property apply\n    _applyKnobFactor : function(value) {\n      this.getChildControl(\"slider\").setKnobFactor(value);\n    },\n\n\n    // property apply\n    _applyPageStep : function(value) {\n      this.getChildControl(\"slider\").setPageStep(value);\n    },\n\n\n    // property apply\n    _applyOrientation : function(value, old)\n    {\n      // Dispose old layout\n      var oldLayout = this._getLayout();\n      if (oldLayout) {\n        oldLayout.dispose();\n      }\n\n      // Reconfigure\n      if (value === \"horizontal\")\n      {\n        this._setLayout(new qx.ui.layout.HBox());\n\n        this.setAllowStretchX(true);\n        this.setAllowStretchY(false);\n\n        this.replaceState(\"vertical\", \"horizontal\");\n\n        this.getChildControl(\"button-begin\").replaceState(\"up\", \"left\");\n        this.getChildControl(\"button-end\").replaceState(\"down\", \"right\");\n      }\n      else\n      {\n        this._setLayout(new qx.ui.layout.VBox());\n\n        this.setAllowStretchX(false);\n        this.setAllowStretchY(true);\n\n        this.replaceState(\"horizontal\", \"vertical\");\n\n        this.getChildControl(\"button-begin\").replaceState(\"left\", \"up\");\n        this.getChildControl(\"button-end\").replaceState(\"right\", \"down\");\n      }\n\n      // Sync slider orientation\n      this.getChildControl(\"slider\").setOrientation(value);\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      METHOD REDIRECTION TO SLIDER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls to the given position.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param position {Integer} Scroll to this position. Must be greater zero.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollTo : function(position, duration) {\n      this.getChildControl(\"slider\").slideTo(position, duration);\n    },\n\n\n    /**\n     * Scrolls by the given offset.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param offset {Integer} Scroll by this offset\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBy : function(offset, duration) {\n      this.getChildControl(\"slider\").slideBy(offset, duration);\n    },\n\n\n    /**\n     * Scrolls by the given number of steps.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param steps {Integer} Number of steps\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBySteps : function(steps, duration) {\n      var size = this.getSingleStep();\n      this.getChildControl(\"slider\").slideBy(steps * size, duration);\n    },\n\n\n    /**\n     * Updates the position property considering the minimum and maximum values.\n     * @param position {Number} The new position.\n     */\n    updatePosition : function(position) {\n      this.getChildControl(\"slider\").updatePosition(position);\n    },\n\n\n    /**\n     * If a scroll animation is running, it will be stopped.\n     */\n    stopScrollAnimation : function() {\n      this.getChildControl(\"slider\").stopSlideAnimation();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Executed when the up/left button is executed (pressed)\n     *\n     * @param e {qx.event.type.Event} Execute event of the button\n     */\n    _onExecuteBegin : function(e) {\n      this.scrollBy(-this.getSingleStep(), 50);\n    },\n\n\n    /**\n     * Executed when the down/right button is executed (pressed)\n     *\n     * @param e {qx.event.type.Event} Execute event of the button\n     */\n    _onExecuteEnd : function(e) {\n      this.scrollBy(this.getSingleStep(), 50);\n    },\n\n\n    /**\n     * Change listener for slider animation end.\n     */\n    _onSlideAnimationEnd : function() {\n      this.fireEvent(\"scrollAnimationEnd\");\n    },\n\n\n    /**\n     * Change listener for slider value changes.\n     *\n     * @param e {qx.event.type.Data} The change event object\n     */\n    _onChangeSliderValue : function(e) {\n      this.setPosition(e.getData());\n    },\n\n    /**\n     * Hide the knob of the slider if the slidebar is too small or show it\n     * otherwise.\n     *\n     * @param e {qx.event.type.Data} event object\n     */\n    _onResizeSlider : function(e)\n    {\n      var knob = this.getChildControl(\"slider\").getChildControl(\"knob\");\n      var knobHint = knob.getSizeHint();\n      var hideKnob = false;\n      var sliderSize = this.getChildControl(\"slider\").getInnerSize();\n\n      if (this.getOrientation() == \"vertical\")\n      {\n        if (sliderSize.height  < knobHint.minHeight + this.__offset) {\n          hideKnob = true;\n        }\n      }\n      else\n      {\n        if (sliderSize.width  < knobHint.minWidth + this.__offset) {\n          hideKnob = true;\n        }\n      }\n\n      if (hideKnob) {\n        knob.exclude();\n      } else {\n        knob.show();\n      }\n    }\n  }\n});\n"
  ]
}