{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/core/scroll/MScrollBarFactory.js",
    "../transpiled/qx/ui/core/scroll/MRoll.js",
    "../transpiled/qx/ui/core/MDragDropScrolling.js",
    "../transpiled/qx/ui/core/DragDropScrolling.js",
    "../transpiled/qx/ui/core/scroll/AbstractScrollArea.js",
    "../transpiled/qx/bom/client/Scroll.js",
    "../transpiled/qx/ui/container/Scroll.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-23.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.core.Environment.add(\"qx.nativeScrollBars\", false);\n\n/**\n * Include this widget if you want to create scrollbars depending on the global\n * \"qx.nativeScrollBars\" setting.\n */\nqx.Mixin.define(\"qx.ui.core.scroll.MScrollBarFactory\",\n{\n  members :\n  {\n    /**\n     * Creates a new scrollbar. This can either be a styled qooxdoo scrollbar\n     * or a native browser scrollbar.\n     *\n     * @param orientation {String?\"horizontal\"} The initial scroll bar orientation\n     * @return {qx.ui.core.scroll.IScrollBar} The scrollbar instance\n     */\n    _createScrollBar : function(orientation)\n    {\n      if (qx.core.Environment.get(\"qx.nativeScrollBars\")) {\n        return new qx.ui.core.scroll.NativeScrollBar(orientation);\n      } else {\n        return new qx.ui.core.scroll.ScrollBar(orientation);\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Mixin holding the handler for roll event. Please\n * keep in mind that the including widget has to have the scroll bars\n * implemented as child controls named <code>scrollbar-x</code> and\n * <code>scrollbar-y</code> to get the handler working. Also, you have to\n * attach the listener yourself.\n */\nqx.Mixin.define(\"qx.ui.core.scroll.MRoll\",\n{\n  members :\n  {\n    _cancelRoll : null,\n\n\n    /**\n     * Responsible for adding the event listener needed for scroll handling.\n     */\n    _addRollHandling : function() {\n      this.addListener(\"roll\", this._onRoll, this);\n      this.addListener(\"pointerdown\", this._onPointerDownForRoll, this);\n    },\n\n\n    /**\n     * Responsible for removing the event listener needed for scroll handling.\n     */\n    _removeRollHandling : function() {\n      this.removeListener(\"roll\", this._onRoll, this);\n      this.removeListener(\"pointerdown\", this._onPointerDownForRoll, this);\n    },\n\n\n    /**\n     * Handler for the pointerdown event which simply stops the momentum scrolling.\n     *\n     * @param e {qx.event.type.Pointer} pointerdown event\n     */\n    _onPointerDownForRoll : function(e) {\n      this._cancelRoll = e.getPointerId();\n    },\n\n\n    /**\n     * Roll event handler\n     *\n     * @param e {qx.event.type.Roll} Roll event\n     */\n    _onRoll : function(e)\n    {\n      // only wheel and touch\n      if (e.getPointerType() == \"mouse\") {\n        return;\n      }\n\n      if (this._cancelRoll && e.getMomentum()) {\n        e.stopMomentum();\n        this._cancelRoll = null;\n        return;\n      }\n      this._cancelRoll = null;\n\n      var showX = this._isChildControlVisible(\"scrollbar-x\");\n      var showY = this._isChildControlVisible(\"scrollbar-y\");\n\n      var scrollbarY = showY ? this.getChildControl(\"scrollbar-y\", true) : null;\n      var scrollbarX = showX ? this.getChildControl(\"scrollbar-x\", true) : null;\n\n      var deltaY = e.getDelta().y;\n      var deltaX = e.getDelta().x;\n\n      var endY = !showY;\n      var endX = !showX;\n\n      // y case\n      if (scrollbarY) {\n        if (deltaY !== 0) {\n          scrollbarY.scrollBy(parseInt(deltaY, 10));\n        }\n\n        var position = scrollbarY.getPosition();\n        var max = scrollbarY.getMaximum();\n\n        // pass the event to the parent if the scrollbar is at an edge\n        if (deltaY < 0 && position <= 0 || deltaY > 0 && position >= max) {\n          endY = true;\n        }\n      }\n\n      // x case\n      if (scrollbarX) {\n        if (deltaX !== 0) {\n          scrollbarX.scrollBy(parseInt(deltaX, 10));\n        }\n\n        var position = scrollbarX.getPosition();\n        var max = scrollbarX.getMaximum();\n        // pass the event to the parent if the scrollbar is at an edge\n        if (deltaX < 0 && position <= 0 || deltaX > 0 && position >= max) {\n          endX = true;\n        }\n      }\n\n      if (endX && endY) {\n        e.stopMomentum();\n      }\n\n      // pass the event to the parent if both scrollbars are at the end\n      if ((!endY && deltaX === 0) ||\n          (!endX && deltaY === 0) ||\n          ((!endX || !endY ) && deltaX !== 0 && deltaY !== 0)) {\n        // Stop bubbling and native event only if a scrollbar is visible\n        e.stop();\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\n/**\n * Provides scrolling ability during drag session to the widget.\n */\nqx.Mixin.define(\"qx.ui.core.MDragDropScrolling\",\n{\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    var widget = this;\n\n    if (this instanceof qx.ui.core.DragDropScrolling) {\n      widget = this._getWidget();\n    }\n\n    widget.addListener(\"drag\", this.__onDrag, this);\n    widget.addListener(\"dragend\", this.__onDragend, this);\n\n    this.__xDirs = [\"left\", \"right\"];\n    this.__yDirs = [\"top\", \"bottom\"];\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** The threshold for the x-axis (in pixel) to activate scrolling at the edges. */\n    dragScrollThresholdX :\n    {\n      check : \"Integer\",\n      init : 30\n    },\n\n    /** The threshold for the y-axis (in pixel) to activate scrolling at the edges. */\n    dragScrollThresholdY :\n    {\n      check : \"Integer\",\n      init : 30\n    },\n\n    /** The factor for slowing down the scrolling. */\n    dragScrollSlowDownFactor :\n    {\n      check : \"Float\",\n      init : 0.1\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __dragScrollTimer : null,\n    __xDirs : null,\n    __yDirs : null,\n\n    /**\n     * Finds the first scrollable parent (in the parent chain).\n     *\n     * @param widget {qx.ui.core.LayoutItem} The widget to start from.\n     * @return {qx.ui.core.Widget} A scrollable widget.\n     */\n    _findScrollableParent : function(widget)\n    {\n      var cur = widget;\n      if (cur === null) {\n        return null;\n      }\n\n      while (cur.getLayoutParent()) {\n        cur = cur.getLayoutParent();\n        if (this._isScrollable(cur)) {\n          return cur;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Whether the widget is scrollable.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to check.\n     * @return {Boolean} Whether the widget is scrollable.\n     */\n    _isScrollable : function(widget)\n    {\n      return qx.Class.hasMixin(widget.constructor, qx.ui.core.scroll.MScrollBarFactory);\n    },\n\n    /**\n     * Gets the bounds of the given scrollable.\n     *\n     * @param scrollable {qx.ui.core.Widget} Scrollable which has scrollbar child controls.\n     * @return {Map} A map with all four bounds (e.g. {\"left\":0, \"top\":20, \"right\":0, \"bottom\":80}).\n     */\n    _getBounds : function(scrollable)\n    {\n      var bounds = scrollable.getContentLocation();\n\n      // the scrollable may dictate a nested widget for more precise bounds\n      if (scrollable.getScrollAreaContainer) {\n        bounds = scrollable.getScrollAreaContainer().getContentLocation();\n      }\n\n      return bounds;\n    },\n\n    /**\n     * Gets the edge type or null if the pointer isn't within one of the thresholds.\n     *\n     * @param diff {Map} Difference map with all for edgeTypes.\n     * @param thresholdX {Number} x-axis threshold.\n     * @param thresholdY {Number} y-axis threshold.\n     * @return {String} One of the four edgeTypes ('left', 'right', 'top', 'bottom').\n     */\n    _getEdgeType : function(diff, thresholdX, thresholdY)\n    {\n      if ((diff.left * -1) <= thresholdX && diff.left < 0) {\n        return \"left\";\n      } else if ((diff.top * -1) <= thresholdY && diff.top < 0) {\n        return \"top\";\n      } else if (diff.right <= thresholdX && diff.right > 0) {\n        return \"right\";\n      } else if (diff.bottom <= thresholdY && diff.bottom > 0) {\n        return \"bottom\";\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * Gets the axis ('x' or 'y') by the edge type.\n     *\n     * @param edgeType {String} One of the four edgeTypes ('left', 'right', 'top', 'bottom').\n     * @throws {Error} If edgeType is not one of the distinct four ones.\n     * @return {String} Returns 'y' or 'x'.\n     */\n    _getAxis : function(edgeType)\n    {\n      if (this.__xDirs.indexOf(edgeType) !== -1) {\n        return \"x\";\n      } else if (this.__yDirs.indexOf(edgeType) !== -1) {\n        return \"y\";\n      } else {\n        throw new Error(\"Invalid edge type given (\"+edgeType+\"). Must be: 'left', 'right', 'top' or 'bottom'\");\n      }\n    },\n\n    /**\n     * Gets the threshold amount by edge type.\n     *\n     * @param edgeType {String} One of the four edgeTypes ('left', 'right', 'top', 'bottom').\n     * @return {Number} The threshold of the x or y axis.\n     */\n    _getThresholdByEdgeType : function(edgeType) {\n      if (this.__xDirs.indexOf(edgeType) !== -1) {\n        return this.getDragScrollThresholdX();\n      } else if(this.__yDirs.indexOf(edgeType) !== -1) {\n        return this.getDragScrollThresholdY();\n      }\n    },\n\n    /**\n     * Whether the scrollbar is visible.\n     *\n     * @param scrollable {qx.ui.core.Widget} Scrollable which has scrollbar child controls.\n     * @param axis {String} Can be 'y' or 'x'.\n     * @return {Boolean} Whether the scrollbar is visible.\n     */\n    _isScrollbarVisible : function(scrollable, axis)\n    {\n      if (scrollable && scrollable._isChildControlVisible) {\n        return scrollable._isChildControlVisible(\"scrollbar-\"+axis);\n      } else {\n        return false;\n      }\n    },\n\n    /**\n     * Whether the scrollbar is exceeding it's maximum position.\n     *\n     * @param scrollbar {qx.ui.core.scroll.IScrollBar} Scrollbar to check.\n     * @param axis {String} Can be 'y' or 'x'.\n     * @param amount {Number} Amount to scroll which may be negative.\n     * @return {Boolean} Whether the amount will exceed the scrollbar max position.\n     */\n    _isScrollbarExceedingMaxPos : function(scrollbar, axis, amount)\n    {\n      var newPos = 0;\n      if (!scrollbar) {\n        return true;\n      }\n      newPos = scrollbar.getPosition() + amount;\n      return (newPos > scrollbar.getMaximum() || newPos < 0);\n    },\n\n    /**\n     * Calculates the threshold exceedance (which may be negative).\n     *\n     * @param diff {Number} Difference value of one edgeType.\n     * @param threshold {Number} x-axis or y-axis threshold.\n     * @return {Number} Threshold exceedance amount (positive or negative).\n     */\n    _calculateThresholdExceedance : function(diff, threshold)\n    {\n      var amount = threshold - Math.abs(diff);\n      return diff < 0 ? (amount * -1) : amount;\n    },\n\n    /**\n     * Calculates the scroll amount (which may be negative).\n     * The amount is influenced by the scrollbar size (bigger = faster)\n     * the exceedanceAmount (bigger = faster) and the slowDownFactor.\n     *\n     * @param scrollbarSize {Number} Size of the scrollbar.\n     * @param exceedanceAmount {Number} Threshold exceedance amount (positive or negative).\n     * @return {Number} Scroll amount (positive or negative).\n     */\n    _calculateScrollAmount : function(scrollbarSize, exceedanceAmount)\n    {\n      return Math.floor(((scrollbarSize / 100) * exceedanceAmount) * this.getDragScrollSlowDownFactor());\n    },\n\n    /**\n     * Scrolls the given scrollable on the given axis for the given amount.\n     *\n     * @param scrollable {qx.ui.core.Widget} Scrollable which has scrollbar child controls.\n     * @param axis {String} Can be 'y' or 'x'.\n     * @param exceedanceAmount {Number} Threshold exceedance amount (positive or negative).\n     */\n    _scrollBy : function(scrollable, axis, exceedanceAmount) {\n      var scrollbar = scrollable.getChildControl(\"scrollbar-\"+axis, true);\n      if (!scrollbar) {\n        return;\n      }\n      var bounds = scrollbar.getBounds(),\n          scrollbarSize = axis === \"x\" ? bounds.width : bounds.height,\n          amount = this._calculateScrollAmount(scrollbarSize, exceedanceAmount);\n\n      if (this._isScrollbarExceedingMaxPos(scrollbar, axis, amount)) {\n        this.__dragScrollTimer.stop();\n      }\n\n      scrollbar.scrollBy(amount);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n    EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for the drag event.\n     *\n     * @param e {qx.event.type.Drag} The drag event instance.\n     */\n    __onDrag : function(e)\n    {\n      if (this.__dragScrollTimer) {\n        // stop last scroll action\n        this.__dragScrollTimer.stop();\n      }\n\n      var target;\n      if (e.getOriginalTarget() instanceof qx.ui.core.Widget) {\n        target = e.getOriginalTarget();\n      }\n      else {\n        target = qx.ui.core.Widget.getWidgetByElement(e.getOriginalTarget());\n      }\n      if (!target) {\n        return;\n      }\n      var scrollable;\n      if (this._isScrollable(target)) {\n        scrollable = target;\n      } else {\n        scrollable = this._findScrollableParent(target);\n      }\n\n      while (scrollable) {\n        var bounds = this._getBounds(scrollable),\n            xPos = e.getDocumentLeft(),\n            yPos = e.getDocumentTop(),\n            diff = {\n              \"left\": bounds.left - xPos,\n              \"right\": bounds.right - xPos,\n              \"top\": bounds.top - yPos,\n              \"bottom\": bounds.bottom - yPos\n            },\n            edgeType = null,\n            axis = \"\",\n            exceedanceAmount = 0;\n\n        edgeType = this._getEdgeType(diff, this.getDragScrollThresholdX(), this.getDragScrollThresholdY());\n        if (!edgeType) {\n          scrollable = this._findScrollableParent(scrollable);\n          continue;\n        }\n        axis = this._getAxis(edgeType);\n\n        if (this._isScrollbarVisible(scrollable, axis)) {\n          exceedanceAmount = this._calculateThresholdExceedance(diff[edgeType], this._getThresholdByEdgeType(edgeType));\n\n          if (this.__dragScrollTimer) {\n            this.__dragScrollTimer.dispose();\n          }\n\n          this.__dragScrollTimer = new qx.event.Timer(50);\n          this.__dragScrollTimer.addListener(\"interval\",\n            function(scrollable, axis, amount) {\n              this._scrollBy(scrollable, axis, amount);\n            }.bind(this, scrollable, axis, exceedanceAmount));\n          this.__dragScrollTimer.start();\n          e.stopPropagation();\n          return;\n        } else {\n          scrollable = this._findScrollableParent(scrollable);\n        }\n      }\n    },\n\n    /**\n     * Event handler for the dragend event.\n     *\n     * @param e {qx.event.type.Drag} The drag event instance.\n     */\n    __onDragend : function(e)\n    {\n      if (this.__dragScrollTimer) {\n        this.__dragScrollTimer.stop();\n      }\n    }\n  },\n\n\n  destruct : function() {\n    if (this.__dragScrollTimer) {\n      this.__dragScrollTimer.dispose();\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\n/**\n * Provides scrolling ability during drag session to the widget.\n */\nqx.Class.define(\"qx.ui.core.DragDropScrolling\",\n{\n  extend : qx.core.Object,\n\n  include : [qx.ui.core.MDragDropScrolling],\n\n\n  construct : function(widget)\n  {\n    this.base(arguments);\n\n    this._widget = widget;\n  },\n\n  members :\n  {\n    _widget : null,\n\n\n    /**\n     * Returns the root widget whose children will have scroll on drag session\n     * behavior. Widget was set on constructor or will be application root by\n     * default.\n     *\n     * @return {qx.ui.core.Widget} The root widget whose children will have\n     * scroll on drag session\n     */\n    _getWidget : function()\n    {\n      return this._widget || qx.core.Init.getApplication().getRoot();\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The ScrollArea provides a container widget with on demand scroll bars\n * if the content size exceeds the size of the container.\n *\n * @childControl pane {qx.ui.core.scroll.ScrollPane} pane which holds the content to scroll\n * @childControl scrollbar-x {qx.ui.core.scroll.ScrollBar?qx.ui.core.scroll.NativeScrollBar} horizontal scrollbar\n * @childControl scrollbar-y {qx.ui.core.scroll.ScrollBar?qx.ui.core.scroll.NativeScrollBar} vertical scrollbar\n * @childControl corner {qx.ui.core.Widget} corner where no scrollbar is shown\n */\nqx.Class.define(\"qx.ui.core.scroll.AbstractScrollArea\",\n{\n  extend : qx.ui.core.Widget,\n  include : [\n    qx.ui.core.scroll.MScrollBarFactory,\n    qx.ui.core.scroll.MRoll,\n    qx.ui.core.MDragDropScrolling\n  ],\n  type : \"abstract\",\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /**\n     * The default width which is used for the width of the scroll bar if\n     * overlaid.\n     */\n    DEFAULT_SCROLLBAR_WIDTH : 14\n  },\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n      // use a plain canvas to overlay the scroll bars\n      this._setLayout(new qx.ui.layout.Canvas());\n    } else {\n      // Create 'fixed' grid layout\n      var grid = new qx.ui.layout.Grid();\n      grid.setColumnFlex(0, 1);\n      grid.setRowFlex(0, 1);\n      this._setLayout(grid);\n    }\n\n    // since the scroll container disregards the min size of the scrollbars\n    // we have to set the min size of the scroll area to ensure that the\n    // scrollbars always have an usable size.\n    var size = qx.ui.core.scroll.AbstractScrollArea.DEFAULT_SCROLLBAR_WIDTH * 2 + 14;\n    this.set({minHeight: size, minWidth: size});\n\n    // Roll listener for scrolling\n    this._addRollHandling();\n  },\n\n\n  events : {\n    /** Fired as soon as the scroll animation in X direction ends. */\n    scrollAnimationXEnd: 'qx.event.type.Event',\n\n    /** Fired as soon as the scroll animation in Y direction ends. */\n    scrollAnimationYEnd: 'qx.event.type.Event'\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"scrollarea\"\n    },\n\n\n    /**\n     * The policy, when the horizontal scrollbar should be shown.\n     * <ul>\n     *   <li><b>auto</b>: Show scrollbar on demand</li>\n     *   <li><b>on</b>: Always show the scrollbar</li>\n     *   <li><b>off</b>: Never show the scrollbar</li>\n     * </ul>\n     */\n    scrollbarX :\n    {\n      check : [\"auto\", \"on\", \"off\"],\n      init : \"auto\",\n      themeable : true,\n      apply : \"_computeScrollbars\"\n    },\n\n\n    /**\n     * The policy, when the horizontal scrollbar should be shown.\n     * <ul>\n     *   <li><b>auto</b>: Show scrollbar on demand</li>\n     *   <li><b>on</b>: Always show the scrollbar</li>\n     *   <li><b>off</b>: Never show the scrollbar</li>\n     * </ul>\n     */\n    scrollbarY :\n    {\n      check : [\"auto\", \"on\", \"off\"],\n      init : \"auto\",\n      themeable : true,\n      apply : \"_computeScrollbars\"\n    },\n\n\n    /**\n     * Group property, to set the overflow of both scroll bars.\n     */\n    scrollbar : {\n      group : [ \"scrollbarX\", \"scrollbarY\" ]\n    }\n  },\n\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      CHILD CONTROL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"pane\":\n          control = new qx.ui.core.scroll.ScrollPane();\n\n          control.addListener(\"update\", this._computeScrollbars, this);\n          control.addListener(\"scrollX\", this._onScrollPaneX, this);\n          control.addListener(\"scrollY\", this._onScrollPaneY, this);\n\n          if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n            this._add(control, {edge: 0});\n          } else {\n            this._add(control, {row: 0, column: 0});\n          }\n          break;\n\n\n        case \"scrollbar-x\":\n          control = this._createScrollBar(\"horizontal\");\n          control.setMinWidth(0);\n\n          control.exclude();\n          control.addListener(\"scroll\", this._onScrollBarX, this);\n          control.addListener(\"changeVisibility\", this._onChangeScrollbarXVisibility, this);\n          control.addListener(\"scrollAnimationEnd\", this._onScrollAnimationEnd.bind(this, \"X\"));\n\n          if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n            control.setMinHeight(qx.ui.core.scroll.AbstractScrollArea.DEFAULT_SCROLLBAR_WIDTH);\n            this._add(control, {bottom: 0, right: 0, left: 0});\n          } else {\n            this._add(control, {row: 1, column: 0});\n          }\n          break;\n\n\n        case \"scrollbar-y\":\n          control = this._createScrollBar(\"vertical\");\n          control.setMinHeight(0);\n\n          control.exclude();\n          control.addListener(\"scroll\", this._onScrollBarY, this);\n          control.addListener(\"changeVisibility\", this._onChangeScrollbarYVisibility, this);\n          control.addListener(\"scrollAnimationEnd\", this._onScrollAnimationEnd.bind(this, \"Y\"));\n\n          if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n            control.setMinWidth(qx.ui.core.scroll.AbstractScrollArea.DEFAULT_SCROLLBAR_WIDTH);\n            this._add(control, {right: 0, bottom: 0, top: 0});\n          } else {\n            this._add(control, {row: 0, column: 1});\n          }\n          break;\n\n\n        case \"corner\":\n          control = new qx.ui.core.Widget();\n          control.setWidth(0);\n          control.setHeight(0);\n          control.exclude();\n\n          if (!qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n            // only add for non overlayed scroll bars\n            this._add(control, {row: 1, column: 1});\n          }\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PANE SIZE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the dimensions of the pane.\n     *\n     * @return {Map|null} The pane dimension in pixel. Contains\n     *    the keys <code>width</code> and <code>height</code>.\n     */\n    getPaneSize : function() {\n      return this.getChildControl(\"pane\").getInnerSize();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ITEM LOCATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the top offset of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemTop : function(item) {\n      return this.getChildControl(\"pane\").getItemTop(item);\n    },\n\n\n    /**\n     * Returns the top offset of the end of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemBottom : function(item) {\n      return this.getChildControl(\"pane\").getItemBottom(item);\n    },\n\n\n    /**\n     * Returns the left offset of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemLeft : function(item) {\n      return this.getChildControl(\"pane\").getItemLeft(item);\n    },\n\n\n    /**\n     * Returns the left offset of the end of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Right offset\n     */\n    getItemRight : function(item) {\n      return this.getChildControl(\"pane\").getItemRight(item);\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls the element's content to the given left coordinate\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToX : function(value, duration) {\n      // First flush queue before scroll\n      qx.ui.core.queue.Manager.flush();\n\n      this.getChildControl(\"scrollbar-x\").scrollTo(value, duration);\n    },\n\n\n    /**\n     * Scrolls the element's content by the given left offset\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByX : function(value, duration) {\n      // First flush queue before scroll\n      qx.ui.core.queue.Manager.flush();\n\n      this.getChildControl(\"scrollbar-x\").scrollBy(value, duration);\n    },\n\n\n    /**\n     * Returns the scroll left position of the content\n     *\n     * @return {Integer} Horizontal scroll position\n     */\n    getScrollX : function()\n    {\n      var scrollbar = this.getChildControl(\"scrollbar-x\", true);\n      return scrollbar ? scrollbar.getPosition() : 0;\n    },\n\n\n    /**\n     * Scrolls the element's content to the given top coordinate\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToY : function(value, duration) {\n      // First flush queue before scroll\n      qx.ui.core.queue.Manager.flush();\n\n      this.getChildControl(\"scrollbar-y\").scrollTo(value, duration);\n    },\n\n\n    /**\n     * Scrolls the element's content by the given top offset\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByY : function(value, duration) {\n      // First flush queue before scroll\n      qx.ui.core.queue.Manager.flush();\n\n      this.getChildControl(\"scrollbar-y\").scrollBy(value, duration);\n    },\n\n\n    /**\n     * Returns the scroll top position of the content\n     *\n     * @return {Integer} Vertical scroll position\n     */\n    getScrollY : function()\n    {\n      var scrollbar = this.getChildControl(\"scrollbar-y\", true);\n      return scrollbar ? scrollbar.getPosition() : 0;\n    },\n\n\n    /**\n     * In case a scroll animation is currently running in X direction,\n     * it will be stopped. If not, the method does nothing.\n     */\n    stopScrollAnimationX : function() {\n      var scrollbar = this.getChildControl(\"scrollbar-x\", true);\n      if (scrollbar) {\n        scrollbar.stopScrollAnimation();\n      }\n    },\n\n\n    /**\n     * In case a scroll animation is currently running in X direction,\n     * it will be stopped. If not, the method does nothing.\n     */\n    stopScrollAnimationY : function() {\n      var scrollbar = this.getChildControl(\"scrollbar-y\", true);\n      if (scrollbar) {\n        scrollbar.stopScrollAnimation();\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Event handler for the scroll animation end event for both scroll bars.\n     *\n     * @param direction {String} Either \"X\" or \"Y\".\n     */\n    _onScrollAnimationEnd : function(direction) {\n      this.fireEvent(\"scrollAnimation\" + direction + \"End\");\n    },\n\n    /**\n     * Event handler for the scroll event of the horizontal scrollbar\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollBarX : function(e) {\n      this.getChildControl(\"pane\").scrollToX(e.getData());\n    },\n\n\n    /**\n     * Event handler for the scroll event of the vertical scrollbar\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollBarY : function(e) {\n      this.getChildControl(\"pane\").scrollToY(e.getData());\n    },\n\n\n    /**\n     * Event handler for the horizontal scroll event of the pane\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollPaneX : function(e) {\n      var scrollbar = this.getChildControl(\"scrollbar-x\");\n      if (scrollbar) {\n        scrollbar.updatePosition(e.getData());\n      }\n    },\n\n\n    /**\n     * Event handler for the vertical scroll event of the pane\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollPaneY : function(e) {\n      var scrollbar = this.getChildControl(\"scrollbar-y\");\n      if (scrollbar) {\n        scrollbar.updatePosition(e.getData());\n      }\n    },\n\n\n    /**\n     * Event handler for visibility changes of horizontal scrollbar.\n     *\n     * @param e {qx.event.type.Event} Property change event\n     */\n    _onChangeScrollbarXVisibility : function(e)\n    {\n      var showX = this._isChildControlVisible(\"scrollbar-x\");\n      var showY = this._isChildControlVisible(\"scrollbar-y\");\n\n      if (!showX) {\n        this.scrollToX(0);\n      }\n\n      showX && showY ? this._showChildControl(\"corner\") : this._excludeChildControl(\"corner\");\n    },\n\n\n    /**\n     * Event handler for visibility changes of horizontal scrollbar.\n     *\n     * @param e {qx.event.type.Event} Property change event\n     */\n    _onChangeScrollbarYVisibility : function(e)\n    {\n      var showX = this._isChildControlVisible(\"scrollbar-x\");\n      var showY = this._isChildControlVisible(\"scrollbar-y\");\n\n      if (!showY) {\n        this.scrollToY(0);\n      }\n\n      showX && showY ? this._showChildControl(\"corner\") : this._excludeChildControl(\"corner\");\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Computes the visibility state for scrollbars.\n     *\n     */\n    _computeScrollbars : function()\n    {\n      var pane = this.getChildControl(\"pane\");\n      var content = pane.getChildren()[0];\n      if (!content)\n      {\n        this._excludeChildControl(\"scrollbar-x\");\n        this._excludeChildControl(\"scrollbar-y\");\n        return;\n      }\n\n      var innerSize = this.getInnerSize();\n      var paneSize = pane.getInnerSize();\n      var scrollSize = pane.getScrollSize();\n\n      // if the widget has not yet been rendered, return and try again in the\n      // resize event\n      if (!paneSize || !scrollSize) {\n        return;\n      }\n\n      var scrollbarX = this.getScrollbarX();\n      var scrollbarY = this.getScrollbarY();\n\n      if (scrollbarX === \"auto\" && scrollbarY === \"auto\")\n      {\n        // Check if the container is big enough to show\n        // the full content.\n        var showX = scrollSize.width > innerSize.width;\n        var showY = scrollSize.height > innerSize.height;\n\n        // Dependency check\n        // We need a special intelligence here when only one\n        // of the autosized axis requires a scrollbar\n        // This scrollbar may then influence the need\n        // for the other one as well.\n        if ((showX || showY) && !(showX && showY))\n        {\n          if (showX) {\n            showY = scrollSize.height > paneSize.height;\n          } else if (showY) {\n            showX = scrollSize.width > paneSize.width;\n          }\n        }\n      }\n      else\n      {\n        var showX = scrollbarX === \"on\";\n        var showY = scrollbarY === \"on\";\n\n        // Check auto values afterwards with already\n        // corrected client dimensions\n        if (scrollSize.width > (showX ? paneSize.width : innerSize.width) && scrollbarX === \"auto\") {\n          showX = true;\n        }\n\n        if (scrollSize.height > (showX ? paneSize.height : innerSize.height) && scrollbarY === \"auto\") {\n          showY = true;\n        }\n      }\n\n      // Update scrollbars\n      if (showX)\n      {\n        var barX = this.getChildControl(\"scrollbar-x\");\n\n        barX.show();\n        barX.setMaximum(Math.max(0, scrollSize.width - paneSize.width));\n        barX.setKnobFactor((scrollSize.width === 0) ? 0 : paneSize.width / scrollSize.width);\n      }\n      else\n      {\n        this._excludeChildControl(\"scrollbar-x\");\n      }\n\n      if (showY)\n      {\n        var barY = this.getChildControl(\"scrollbar-y\");\n\n        barY.show();\n        barY.setMaximum(Math.max(0, scrollSize.height - paneSize.height));\n        barY.setKnobFactor((scrollSize.height === 0) ? 0 : paneSize.height / scrollSize.height);\n      }\n      else\n      {\n        this._excludeChildControl(\"scrollbar-y\");\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * This class is responsible for checking the scrolling behavior of the client.\n *\n * This class is used by {@link qx.core.Environment} and should not be used\n * directly. Please check its class comment for details how to use it.\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.client.Scroll\",\n{\n  statics :\n  {\n    /**\n     * Check if the scrollbars should be positioned on top of the content. This\n     * is true of OSX Lion when the scrollbars disappear automatically.\n     *\n     * @internal\n     *\n     * @return {Boolean} <code>true</code> if the scrollbars should be\n     *   positioned on top of the content.\n     */\n    scrollBarOverlayed : function() {\n      var scrollBarWidth = qx.bom.element.Scroll.getScrollbarWidth();\n      var osx = qx.bom.client.OperatingSystem.getName() === \"osx\";\n      var nativeScrollBars = qx.core.Environment.get(\"qx.nativeScrollBars\");\n\n      return scrollBarWidth === 0 && osx && nativeScrollBars;\n    },\n\n\n    /**\n     * Checks if native scroll can be used for the current mobile device.\n     *\n     * @internal\n     *\n     * @return {Boolean} <code>true</code> if the current device is capable to\n     * use native scroll.\n     */\n    getNativeScroll : function()\n    {\n      // iOS 8+\n      if (qx.core.Environment.get(\"os.name\") == \"ios\" &&\n        parseInt(qx.core.Environment.get(\"browser.version\"), 10) > 7) {\n        return true;\n      }\n\n      // Firefox\n      if (qx.core.Environment.get(\"browser.name\") == \"firefox\") {\n        return true;\n      }\n\n      // Android 4.4+\n      if (qx.core.Environment.get(\"os.name\") == \"android\")\n      {\n        var osVersion = qx.core.Environment.get(\"os.version\");\n        var splitVersion = osVersion.split(\".\");\n        if (splitVersion[0] > 4 ||\n            (splitVersion.length > 1 && splitVersion[0] > 3 && splitVersion[1] > 3)) {\n          return true;\n        }\n      }\n\n      // IE 10+\n      if (qx.core.Environment.get(\"event.mspointer\")) {\n        return true;\n      }\n\n      return false;\n    }\n  },\n\n\n  defer : function(statics) {\n    qx.core.Environment.add(\"os.scrollBarOverlayed\", statics.scrollBarOverlayed);\n    qx.core.Environment.add(\"qx.mobile.nativescroll\", statics.getNativeScroll);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Container, which allows vertical and horizontal scrolling if the contents is\n * larger than the container.\n *\n * Note that this class can only have one child widget. This container has a\n * fixed layout, which cannot be changed.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   // create scroll container\n *   var scroll = new qx.ui.container.Scroll().set({\n *     width: 300,\n *     height: 200\n *   });\n *\n *   // add a widget which is larger than the container\n *   scroll.add(new qx.ui.core.Widget().set({\n *     width: 600,\n *     minWidth: 600,\n *     height: 400,\n *     minHeight: 400\n *   }));\n *\n *   this.getRoot().add(scroll);\n * </pre>\n *\n * This example creates a scroll container and adds a widget, which is larger\n * than the container. This will cause the container to display vertical\n * and horizontal toolbars.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/scroll.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.container.Scroll\",\n{\n  extend : qx.ui.core.scroll.AbstractScrollArea,\n  include : [qx.ui.core.MContentPadding],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param content {qx.ui.core.LayoutItem?null} The content widget of the scroll\n   *    container.\n   */\n  construct : function(content)\n  {\n    this.base(arguments);\n\n    if (content) {\n      this.add(content);\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Sets the content of the scroll container. Scroll containers\n     * may only have one child, so it always replaces the current\n     * child with the given one.\n     *\n     * @param widget {qx.ui.core.Widget} Widget to insert\n     */\n    add : function(widget) {\n      this.getChildControl(\"pane\").add(widget);\n    },\n\n\n    /**\n     * Returns the content of the scroll area.\n     *\n     * @param widget {qx.ui.core.Widget} Widget to remove\n     */\n    remove : function(widget) {\n      this.getChildControl(\"pane\").remove(widget);\n    },\n\n\n    /**\n     * Returns the content of the scroll container.\n     *\n     * Scroll containers may only have one child. This\n     * method returns an array containing the child or an empty array.\n     *\n     * @return {Object[]} The child array\n     */\n    getChildren : function() {\n      return this.getChildControl(\"pane\").getChildren();\n    },\n\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget : function() {\n      return this.getChildControl(\"pane\");\n    }\n  }\n});\n"
  ]
}