{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/toolbar/ToolBar.js",
    "../transpiled/qx/ui/toolbar/Part.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-35.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * The Toolbar class is the main part of the toolbar widget.\n *\n * It can handle added {@link Button}s, {@link CheckBox}es, {@link RadioButton}s\n * and {@link Separator}s in its {@link #add} method. The {@link #addSpacer} method\n * adds a spacer at the current toolbar position. This means that the widgets\n * added after the method call of {@link #addSpacer} are aligned to the right of\n * the toolbar.\n *\n * For more details on the documentation of the toolbar widget, take a look at the\n * documentation of the {@link qx.ui.toolbar}-Package.\n */\nqx.Class.define(\"qx.ui.toolbar.ToolBar\",\n{\n  extend : qx.ui.core.Widget,\n  include : qx.ui.core.MChildrenHandling,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // add needed layout\n    this._setLayout(new qx.ui.layout.HBox());\n\n    // initialize the overflow handling\n    this.__removedItems = [];\n    this.__removePriority = [];\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** Appearance of the widget */\n    appearance :\n    {\n      refine : true,\n      init : \"toolbar\"\n    },\n\n    /** Holds the currently open menu (when the toolbar is used for menus) */\n    openMenu :\n    {\n      check : \"qx.ui.menu.Menu\",\n      event : \"changeOpenMenu\",\n      nullable : true\n    },\n\n    /** Whether icons, labels, both or none should be shown. */\n    show :\n    {\n      init : \"both\",\n      check : [ \"both\", \"label\", \"icon\" ],\n      inheritable : true,\n      apply : \"_applyShow\",\n      event : \"changeShow\"\n    },\n\n    /** The spacing between every child of the toolbar */\n    spacing :\n    {\n      nullable : true,\n      check : \"Integer\",\n      themeable : true,\n      apply : \"_applySpacing\"\n    },\n\n    /**\n     * Widget which will be shown if at least one toolbar item is hidden.\n     * Keep in mind to add this widget to the toolbar before you set it as\n     * indicator!\n     */\n    overflowIndicator :\n    {\n      check : \"qx.ui.core.Widget\",\n      nullable : true,\n      apply : \"_applyOverflowIndicator\"\n    },\n\n    /** Enables the overflow handling which automatically removes items.*/\n    overflowHandling :\n    {\n      init : false,\n      check : \"Boolean\",\n      apply : \"_applyOverflowHandling\"\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired if an item will be hidden by the {@link #overflowHandling}.*/\n    \"hideItem\" : \"qx.event.type.Data\",\n\n    /** Fired if an item will be shown by the {@link #overflowHandling}.*/\n    \"showItem\" : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      OVERFLOW HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    __removedItems : null,\n    __removePriority : null,\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      // get the original hint\n      var hint = this.base(arguments);\n      if (true && this.getOverflowHandling()) {\n        var minWidth = 0;\n        // if an overflow widget is given, use its width + spacing as min width\n        var overflowWidget = this.getOverflowIndicator();\n        if (overflowWidget) {\n          minWidth = overflowWidget.getSizeHint().width + this.getSpacing();\n        }\n        // reset the minWidth because we reduce the count of elements\n        hint.minWidth = minWidth;\n      }\n      return hint;\n    },\n\n\n    /**\n     * Resize event handler.\n     *\n     * @param e {qx.event.type.Data} The resize event.\n     */\n    _onResize : function(e) {\n      this._recalculateOverflow(e.getData().width);\n    },\n\n\n    /**\n     * Responsible for calculation the overflow based on the available width.\n     *\n     * @param width {Integer?null} The available width.\n     * @param requiredWidth {Integer?null} The required width for the widget\n     *   if available.\n     */\n    _recalculateOverflow : function(width, requiredWidth)\n    {\n     // do nothing if overflow handling is not enabled\n     if (!this.getOverflowHandling()) {\n       return;\n     }\n\n     // get all required sizes\n     requiredWidth = requiredWidth || this.getSizeHint().width;\n     var overflowWidget = this.getOverflowIndicator();\n     var overflowWidgetWidth = 0;\n     if (overflowWidget) {\n       overflowWidgetWidth = overflowWidget.getSizeHint().width;\n     }\n\n     if (width == undefined && this.getBounds() != null) {\n       width = this.getBounds().width;\n     }\n\n     // if we still don't have a width, than we are not added to a parent\n     if (width == undefined) {\n       // we should ignore it in that case\n       return;\n     }\n\n     // if we have not enough space\n     if (width < requiredWidth) {\n       do {\n         // get the next child\n         var childToHide = this._getNextToHide();\n         // if there is no child to hide, just do nothing\n         if (!childToHide) {\n           return;\n         }\n         // get margins or spacing\n         var margins = childToHide.getMarginLeft() + childToHide.getMarginRight();\n         margins = Math.max(margins, this.getSpacing());\n         var childWidth = childToHide.getSizeHint().width + margins;\n         this.__hideChild(childToHide);\n\n         // new width is the requiredWidth - the removed childs width\n         requiredWidth -= childWidth;\n\n         // show the overflowWidgetWidth\n         if (overflowWidget && overflowWidget.getVisibility() != \"visible\") {\n           overflowWidget.setVisibility(\"visible\");\n           // if we need to add the overflow indicator, we need to add its width\n           requiredWidth += overflowWidgetWidth;\n           // add spacing or margins\n           var overflowWidgetMargins =\n             overflowWidget.getMarginLeft() +\n             overflowWidget.getMarginRight();\n           requiredWidth += Math.max(overflowWidgetMargins, this.getSpacing());\n         }\n       } while (requiredWidth > width);\n\n       // if we can possibly show something\n     } else if (this.__removedItems.length > 0) {\n\n       do {\n         var removedChild = this.__removedItems[0];\n         // if we have something we can show\n         if (removedChild) {\n           // get the margins or spacing\n           var margins = removedChild.getMarginLeft() + removedChild.getMarginRight();\n           margins = Math.max(margins, this.getSpacing());\n\n           // check if the element has been rendered before [BUG #4542]\n           if (removedChild.getContentElement().getDomElement() == null) {\n             // if not, apply the decorator element because it can change the\n             // width of the child with padding e.g.\n             removedChild.syncAppearance();\n             // also invalidate the layout cache to trigger size hint\n             // recalculation\n             removedChild.invalidateLayoutCache();\n           }\n           var removedChildWidth = removedChild.getSizeHint().width;\n\n           // check if it fits in in case its the last child to replace\n           var fits = false;\n           // if we can remove the overflow widget if its available\n\n           if (this.__removedItems.length == 1 && overflowWidgetWidth > 0) {\n             var addedMargin = margins - this.getSpacing();\n             var wouldRequiredWidth =\n               requiredWidth -\n               overflowWidgetWidth +\n               removedChildWidth +\n               addedMargin;\n             fits = width > wouldRequiredWidth;\n           }\n\n           // if it just fits in || it fits in when we remove the overflow widget\n           if (width > requiredWidth + removedChildWidth + margins || fits) {\n             this.__showChild(removedChild);\n             requiredWidth += removedChildWidth;\n             // check if we need to remove the overflow widget\n             if (overflowWidget && this.__removedItems.length == 0) {\n\n               overflowWidget.setVisibility(\"excluded\");\n             }\n           } else {\n             return;\n           }\n         }\n       } while (width >= requiredWidth && this.__removedItems.length > 0);\n     }\n    },\n\n\n    /**\n     * Helper to show a toolbar item.\n     *\n     * @param child {qx.ui.core.Widget} The widget to show.\n     */\n    __showChild : function(child)\n    {\n      child.setVisibility(\"visible\");\n      this.__removedItems.shift();\n      this.fireDataEvent(\"showItem\", child);\n    },\n\n\n    /**\n     * Helper to exclude a toolbar item.\n     *\n     * @param child {qx.ui.core.Widget} The widget to exclude.\n     */\n    __hideChild : function(child)\n    {\n      // ignore the call if no child is given\n      if (!child) {\n        return;\n      }\n      this.__removedItems.unshift(child);\n      child.setVisibility(\"excluded\");\n      this.fireDataEvent(\"hideItem\", child);\n    },\n\n\n    /**\n     * Responsible for returning the next item to remove. In It checks the\n     * priorities added by {@link #setRemovePriority}. If all priorized widgets\n     * already excluded, it takes the widget added at last.\n     *\n     * @return {qx.ui.core.Widget|null} The widget which should be removed next.\n     *   If null is returned, no widget is available to remove.\n     */\n    _getNextToHide : function()\n    {\n      // get the elements by priority\n      for (var i = this.__removePriority.length - 1; i >= 0; i--) {\n        var item = this.__removePriority[i];\n        // maybe a priority is left out and spacers don't have the visibility\n        if (item && item.getVisibility && item.getVisibility() == \"visible\") {\n          return item;\n        }\n      };\n\n      // if there is non found by priority, check all available widgets\n      var children = this._getChildren();\n      for (var i = children.length -1; i >= 0; i--) {\n        var child = children[i];\n        // ignore the overflow widget\n        if (child == this.getOverflowIndicator()) {\n          continue;\n        }\n        // spacer don't have the visibility\n        if (child.getVisibility && child.getVisibility() == \"visible\") {\n          return child;\n        }\n      };\n    },\n\n\n    /**\n     * The removal of the toolbar items is priority based. You can change these\n     * priorities with this method. The higher a priority, the earlier it will\n     * be excluded. Remember to use every priority only once! If you want\n     * override an already set priority, use the override parameter.\n     * Keep in mind to only use already added items.\n     *\n     * @param item {qx.ui.core.Widget} The item to give the priority.\n     * @param priority {Integer} The priority, higher means removed earlier.\n     * @param override {Boolean} true, if the priority should be overridden.\n     */\n    setRemovePriority : function(item, priority, override)\n    {\n      // security check for overriding priorities\n      if (!override && this.__removePriority[priority] != undefined) {\n        throw new Error(\"Priority already in use!\");\n      }\n      this.__removePriority[priority] = item;\n    },\n\n\n    // property apply\n    _applyOverflowHandling : function(value, old)\n    {\n      // invalidate the own and the parents layout cache because the size hint changes\n      this.invalidateLayoutCache();\n      var parent = this.getLayoutParent();\n      if (parent) {\n        parent.invalidateLayoutCache();\n      }\n\n      // recalculate if possible\n      var bounds = this.getBounds();\n      if (bounds && bounds.width) {\n        this._recalculateOverflow(bounds.width);\n      }\n\n      // if the handling has been enabled\n      if (value) {\n        // add the resize listener\n        this.addListener(\"resize\", this._onResize, this);\n\n      // if the handles has been disabled\n      } else {\n        this.removeListener(\"resize\", this._onResize, this);\n\n        // set the overflow indicator to excluded\n        var overflowIndicator = this.getOverflowIndicator();\n        if (overflowIndicator) {\n          overflowIndicator.setVisibility(\"excluded\");\n        }\n\n        // set all buttons back to visible\n        for (var i = 0; i < this.__removedItems.length; i++) {\n          this.__removedItems[i].setVisibility(\"visible\");\n        };\n        // reset the removed items\n        this.__removedItems = [];\n      }\n    },\n\n\n    // property apply\n    _applyOverflowIndicator : function(value, old)\n    {\n      if (old) {\n        this._remove(old);\n      }\n\n      if (value) {\n        // check if its a child of the toolbar\n        if (this._indexOf(value) == -1) {\n          throw new Error(\"Widget must be child of the toolbar.\");\n        }\n        // hide the widget\n        value.setVisibility(\"excluded\");\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MENU OPEN\n    ---------------------------------------------------------------------------\n    */\n\n    __allowMenuOpenHover : false,\n\n    /**\n     * Indicate if a menu could be opened on hover or not.\n     *\n     * @internal\n     * @param value {Boolean} <code>true</code> if a menu could be opened,\n     *    <code>false</code> otherwise.\n     */\n    _setAllowMenuOpenHover : function(value) {\n      this.__allowMenuOpenHover = value;\n    },\n\n    /**\n     * Return if a menu could be opened on hover or not.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code> if a menu could be opened,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowMenuOpenHover : function () {\n      return this.__allowMenuOpenHover;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applySpacing : function(value, old)\n    {\n      var layout = this._getLayout();\n      value == null ? layout.resetSpacing() : layout.setSpacing(value);\n    },\n\n\n    // property apply\n    _applyShow : function(value) {\n      var children = this._getChildren();\n      for (var i=0; i < children.length; i++) {\n        if (children[i].setShow) {\n          children[i].setShow(value);\n        }\n      };\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILD HANDLING\n    ---------------------------------------------------------------------------\n    */\n    // overridden\n    _add : function(child, options) {\n      this.base(arguments, child, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _addAt : function(child, index, options) {\n      this.base(arguments, child, index, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _addBefore : function(child, before, options) {\n      this.base(arguments, child, before, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _addAfter : function(child, after, options) {\n      this.base(arguments, child, after, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _remove : function(child) {\n      this.base(arguments, child);\n      var newWidth =\n        this.getSizeHint().width -\n        child.getSizeHint().width -\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _removeAt : function(index) {\n      var child = this._getChildren()[index];\n      this.base(arguments, index);\n      var newWidth =\n        this.getSizeHint().width -\n        child.getSizeHint().width -\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n      return child;\n    },\n\n    // overridden\n    _removeAll : function() {\n      var children = this.base(arguments);\n      this._recalculateOverflow(null, 0);\n      return children;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add a spacer to the toolbar. The spacer has a flex\n     * value of one and will stretch to the available space.\n     *\n     * @return {qx.ui.core.Spacer} The newly added spacer object. A reference\n     *   to the spacer is needed to remove this spacer from the layout.\n     */\n    addSpacer : function()\n    {\n      var spacer = new qx.ui.core.Spacer;\n      this._add(spacer, {flex:1});\n      return spacer;\n    },\n\n\n    /**\n     * Adds a separator to the toolbar.\n     */\n    addSeparator : function() {\n      this.add(new qx.ui.toolbar.Separator);\n    },\n\n\n    /**\n     * Returns all nested buttons which contains a menu to show. This is mainly\n     * used for keyboard support.\n     *\n     * @return {Array} List of all menu buttons\n     */\n    getMenuButtons : function()\n    {\n      var children = this.getChildren();\n      var buttons = [];\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        if (child instanceof qx.ui.menubar.Button) {\n          buttons.push(child);\n        } else if (child instanceof qx.ui.toolbar.Part) {\n          buttons.push.apply(buttons, child.getMenuButtons());\n        }\n      }\n\n      return buttons;\n    }\n  },\n\n\n  destruct : function() {\n    if (this.hasListener(\"resize\")) {\n      this.removeListener(\"resize\", this._onResize, this);\n    }\n\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A part is a container for multiple toolbar buttons. Each part comes\n * with a handle which may be used in later versions to drag the part\n * around and move it to another position. Currently mainly used\n * for structuring large toolbars beyond the capabilities of the\n * {@link Separator}.\n *\n * @childControl handle {qx.ui.basic.Image} prat handle to visualize the separation\n * @childControl container {qx.ui.toolbar.PartContainer} holds the content of the toolbar part\n */\nqx.Class.define(\"qx.ui.toolbar.Part\",\n{\n  extend : qx.ui.core.Widget,\n  include : [qx.ui.core.MRemoteChildrenHandling],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // Hard coded HBox layout\n    this._setLayout(new qx.ui.layout.HBox);\n\n    // Force creation of the handle\n    this._createChildControl(\"handle\");\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    appearance :\n    {\n      refine : true,\n      init : \"toolbar/part\"\n    },\n\n    /** Whether icons, labels, both or none should be shown. */\n    show :\n    {\n      init : \"both\",\n      check : [ \"both\", \"label\", \"icon\" ],\n      inheritable : true,\n      event : \"changeShow\"\n    },\n\n    /** The spacing between every child of the toolbar */\n    spacing :\n    {\n      nullable : true,\n      check : \"Integer\",\n      themeable : true,\n      apply : \"_applySpacing\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"handle\":\n          control = new qx.ui.basic.Image();\n          control.setAlignY(\"middle\");\n          this._add(control);\n          break;\n\n        case \"container\":\n          control = new qx.ui.toolbar.PartContainer();\n          control.addListener(\"syncAppearance\", this.__onSyncAppearance, this);\n          this._add(control);\n          control.addListener(\"changeChildren\", function() {\n            this.__onSyncAppearance();\n          }, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    // overridden\n    getChildrenContainer : function() {\n      return this.getChildControl(\"container\");\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    _applySpacing : function(value, old)\n    {\n      var layout = this.getChildControl(\"container\").getLayout();\n      value == null ? layout.resetSpacing() : layout.setSpacing(value);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILITIES\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Helper which applies the left, right and middle states.\n     */\n    __onSyncAppearance : function() {\n      // check every child\n      var children = this.getChildrenContainer().getChildren();\n      children = children.filter(function(child) {\n        return child.getVisibility() == \"visible\";\n      });\n      for (var i = 0; i < children.length; i++) {\n        // if its the first child\n        if (i == 0 && i != children.length - 1) {\n          children[i].addState(\"left\");\n          children[i].removeState(\"right\");\n          children[i].removeState(\"middle\");\n        // if its the last child\n        } else if (i == children.length - 1 && i != 0) {\n          children[i].addState(\"right\");\n          children[i].removeState(\"left\");\n          children[i].removeState(\"middle\");\n        // if there is only one child\n        } else if (i == 0 && i == children.length - 1) {\n          children[i].removeState(\"left\");\n          children[i].removeState(\"middle\");\n          children[i].removeState(\"right\");\n        } else {\n          children[i].addState(\"middle\");\n          children[i].removeState(\"right\");\n          children[i].removeState(\"left\");\n        }\n      };\n    },\n\n\n    /**\n     * Adds a separator to the toolbar part.\n     */\n    addSeparator : function() {\n      this.add(new qx.ui.toolbar.Separator);\n    },\n\n\n    /**\n     * Returns all nested buttons which contains a menu to show. This is mainly\n     * used for keyboard support.\n     *\n     * @return {Array} List of all menu buttons\n     */\n    getMenuButtons : function()\n    {\n      var children = this.getChildren();\n      var buttons = [];\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        if (child instanceof qx.ui.menubar.Button) {\n          buttons.push(child);\n        }\n      }\n\n      return buttons;\n    }\n  }\n});\n"
  ]
}