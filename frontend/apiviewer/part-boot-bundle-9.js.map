{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/layout/Canvas.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-9.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The Canvas is an extended Basic layout.\n *\n * It is possible to position a widget relative to the right or bottom edge of\n * the available space. It further supports stretching between left and right\n * or top and bottom e.g. <code>left=20</code> and <code>right=20</code> would\n * keep a margin of 20 pixels to both edges. The Canvas layout has support for\n * percent dimensions and locations.\n *\n * *Features*\n *\n * * Pixel dimensions and locations\n * * Percent dimensions and locations\n * * Stretching between left+right and top+bottom\n * * Minimum and maximum dimensions\n * * Children are automatically shrunk to their minimum dimensions if not enough space is available\n * * Auto sizing (ignoring percent values)\n * * Margins (also negative ones)\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>left</strong> <em>(Integer|String)</em>: The left coordinate in pixel or as a percent string e.g. <code>20</code> or <code>30%</code>.</li>\n * <li><strong>top</strong> <em>(Integer|String)</em>: The top coordinate in pixel or as a percent string e.g. <code>20</code> or <code>30%</code>.</li>\n * <li><strong>right</strong> <em>(Integer|String)</em>: The right coordinate in pixel or as a percent string e.g. <code>20</code> or <code>30%</code>.</li>\n * <li><strong>bottom</strong> <em>(Integer|String)</em>: The bottom coordinate in pixel or as a percent string e.g. <code>20</code> or <code>30%</code>.</li>\n * <li><strong>edge</strong> <em>(Integer|String)</em>: The coordinate in pixels or as a percent string to be used for all four edges.\n * <li><strong>width</strong> <em>(String)</em>: A percent width e.g. <code>40%</code>.</li>\n * <li><strong>height</strong> <em>(String)</em>: A percent height e.g. <code>60%</code>.</li>\n * </ul>\n *\n * *Notes*\n *\n * <ul>\n * <li>Stretching (<code>left</code>-><code>right</code> or <code>top</code>-><code>bottom</code>)\n *   has a higher priority than the preferred dimensions</li>\n * <li>Stretching has a lower priority than the min/max dimensions.</li>\n * <li>Percent values have no influence on the size hint of the layout.</li>\n * </ul>\n *\n * *Example*\n *\n * Here is a little example of how to use the canvas layout.\n *\n * <pre class=\"javascript\">\n * var container = new qx.ui.container.Composite(new qx.ui.layout.Canvas());\n *\n * // simple positioning\n * container.add(new qx.ui.core.Widget(), {top: 10, left: 10});\n *\n * // stretch vertically with 10 pixel distance to the parent's top\n * // and bottom border\n * container.add(new qx.ui.core.Widget(), {top: 10, left: 10, bottom: 10});\n *\n * // percent positioning and size\n * container.add(new qx.ui.core.Widget(), {left: \"50%\", top: \"50%\", width: \"25%\", height: \"40%\"});\n * </pre>\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/layout/canvas.html'>\n * Extended documentation</a> and links to demos of this layout in the qooxdoo manual.\n */\nqx.Class.define(\"qx.ui.layout.Canvas\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties : {\n\n    /**\n     * If desktop mode is active, the children's minimum sizes are ignored\n     * by the layout calculation. This is necessary to prevent the desktop\n     * from growing if e.g. a window is moved beyond the edge of the desktop\n     */\n    desktop :\n    {\n      check : \"Boolean\",\n      init: false\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value)\n      {\n        var layoutProperties =\n        {\n          top : 1,\n          left : 1,\n          bottom : 1,\n          right : 1,\n          width : 1,\n          height : 1,\n          edge : 1\n        };\n\n        this.assert(layoutProperties[name] == 1, \"The property '\"+name+\"' is not supported by the Canvas layout!\");\n\n        if (name ==\"width\" || name == \"height\")\n        {\n          this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\n        }\n        else\n        {\n          if (typeof value === \"number\") {\n            this.assertInteger(value);\n          } else if (qx.lang.Type.isString(value)) {\n            this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\n          } else {\n            this.fail(\n              \"Bad format of layout property '\" + name + \"': \" + value +\n              \". The value must be either an integer or an percent string.\"\n            );\n          }\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      var children = this._getLayoutChildren();\n\n      var child, size, props;\n      var left, top, right, bottom, width, height;\n      var marginTop, marginRight, marginBottom, marginLeft;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n        size = child.getSizeHint();\n        props = child.getLayoutProperties();\n\n        // Cache margins\n        marginTop = child.getMarginTop();\n        marginRight = child.getMarginRight();\n        marginBottom = child.getMarginBottom();\n        marginLeft = child.getMarginLeft();\n\n\n\n        // **************************************\n        //   Processing location\n        // **************************************\n\n        left = props.left != null ? props.left : props.edge;\n        if (qx.lang.Type.isString(left)) {\n          left = Math.round(parseFloat(left) * availWidth / 100);\n        }\n\n        right = props.right != null ? props.right : props.edge;\n        if (qx.lang.Type.isString(right)) {\n          right = Math.round(parseFloat(right) * availWidth / 100);\n        }\n\n        top = props.top != null ? props.top : props.edge;\n        if (qx.lang.Type.isString(top)) {\n          top = Math.round(parseFloat(top) * availHeight / 100);\n        }\n\n        bottom = props.bottom != null ? props.bottom : props.edge;\n        if (qx.lang.Type.isString(bottom)) {\n          bottom = Math.round(parseFloat(bottom) * availHeight / 100);\n        }\n\n\n\n        // **************************************\n        //   Processing dimension\n        // **************************************\n\n        // Stretching has higher priority than dimension data\n        if (left != null && right != null)\n        {\n          width = availWidth - left - right - marginLeft - marginRight;\n\n          // Limit computed value\n          if (width < size.minWidth) {\n            width = size.minWidth;\n          } else if (width > size.maxWidth) {\n            width = size.maxWidth;\n          }\n\n          // Add margin\n          left += marginLeft;\n        }\n        else\n        {\n          // Layout data has higher priority than data from size hint\n          width = props.width;\n\n          if (width == null)\n          {\n            width = size.width;\n          }\n          else\n          {\n            width = Math.round(parseFloat(width) * availWidth / 100);\n\n            // Limit computed value\n            if (width < size.minWidth) {\n              width = size.minWidth;\n            } else if (width > size.maxWidth) {\n              width = size.maxWidth;\n            }\n          }\n\n          if (right != null) {\n            left = availWidth - width - right - marginRight - marginLeft;\n          } else if (left == null) {\n            left = marginLeft;\n          } else {\n            left += marginLeft;\n          }\n        }\n\n        // Stretching has higher priority than dimension data\n        if (top != null && bottom != null)\n        {\n          height = availHeight - top - bottom - marginTop - marginBottom;\n\n          // Limit computed value\n          if (height < size.minHeight) {\n            height = size.minHeight;\n          } else if (height > size.maxHeight) {\n            height = size.maxHeight;\n          }\n\n          // Add margin\n          top += marginTop;\n        }\n        else\n        {\n          // Layout data has higher priority than data from size hint\n          height = props.height;\n\n          if (height == null)\n          {\n            height = size.height;\n          }\n          else\n          {\n            height = Math.round(parseFloat(height) * availHeight / 100);\n\n            // Limit computed value\n            if (height < size.minHeight) {\n              height = size.minHeight;\n            } else if (height > size.maxHeight) {\n              height = size.maxHeight;\n            }\n          }\n\n          if (bottom != null) {\n            top = availHeight - height - bottom - marginBottom - marginTop;\n          } else if (top == null) {\n            top = marginTop;\n          } else {\n            top += marginTop;\n          }\n        }\n\n        left += padding.left;\n        top += padding.top;\n\n        // Apply layout\n        child.renderLayout(left, top, width, height);\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      var neededWidth=0, neededMinWidth=0;\n      var neededHeight=0, neededMinHeight=0;\n\n      var width, minWidth;\n      var height, minHeight;\n\n      var children = this._getLayoutChildren();\n      var child, props, hint;\n      var desktop = this.isDesktop();\n\n      var left, top, right, bottom;\n\n      for (var i=0,l=children.length; i<l; i++)\n      {\n        child = children[i];\n        props = child.getLayoutProperties();\n        hint = child.getSizeHint();\n\n\n        // Cache margins\n        var marginX = child.getMarginLeft() + child.getMarginRight();\n        var marginY = child.getMarginTop() + child.getMarginBottom();\n\n\n        // Compute width\n        width = hint.width+marginX;\n        minWidth = hint.minWidth+marginX;\n\n        left = props.left != null ? props.left : props.edge;\n        if (left && typeof left === \"number\")\n        {\n          width += left;\n          minWidth += left;\n        }\n\n        right = props.right != null ? props.right : props.edge;\n        if (right && typeof right === \"number\")\n        {\n          width += right;\n          minWidth += right;\n        }\n\n        neededWidth = Math.max(neededWidth, width);\n        neededMinWidth = desktop ? 0 : Math.max(neededMinWidth, minWidth);\n\n\n        // Compute height\n        height = hint.height+marginY;\n        minHeight = hint.minHeight+marginY;\n\n        top = props.top != null ? props.top : props.edge;\n        if (top && typeof top === \"number\")\n        {\n          height += top;\n          minHeight += top;\n        }\n\n        bottom = props.bottom != null ? props.bottom : props.edge;\n        if (bottom && typeof bottom === \"number\")\n        {\n          height += bottom;\n          minHeight += bottom;\n        }\n\n        neededHeight = Math.max(neededHeight, height);\n        neededMinHeight = desktop ? 0 : Math.max(neededMinHeight, minHeight);\n      }\n\n      return {\n        width : neededWidth,\n        minWidth : neededMinWidth,\n        height : neededHeight,\n        minHeight : neededMinHeight\n      };\n    }\n  }\n});\n"
  ]
}