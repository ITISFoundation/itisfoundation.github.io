{
  "version": 3,
  "sources": [
    "../transpiled/qx/dev/unit/AsyncWrapper.js",
    "../transpiled/qx/dev/unit/RequirementError.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-55.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\n/**\n *  This class stores the information needed to instruct a running test to wait.\n *  It is thrown as an exception to be caught by the method executing the test.\n */\nqx.Class.define(\"qx.dev.unit.AsyncWrapper\",\n{\n  extend : qx.core.Object,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param delay {Integer?} The amount of time in milliseconds to wait\n   * @param deferredFunction {Function?} The function to run after the timeout\n   * has expired.\n   * @param context {Object?window} Optional execution context for deferredFunction\n   */\n  construct : function(delay, deferredFunction, context)\n  {\n    for (var i=0; i<2; i++) {\n      if (qx.lang.Type.isFunction(arguments[i])) {\n        this.setDeferredFunction(arguments[i]);\n      } else if (qx.lang.Type.isNumber(arguments[i])) {\n        if (qx.core.Environment.get(\"qx.test.delay.scale\")) {\n          this.setDelay(arguments[i] * parseInt(qx.core.Environment.get(\"qx.test.delay.scale\"), 10));\n        } else {\n          this.setDelay(arguments[i]);\n        }\n      }\n    }\n\n    if (context) {\n      this.setContext(context);\n    }\n  },\n\n  properties :\n  {\n    /** The function to run after the timeout has expired */\n    deferredFunction :\n    {\n      check : \"Function\",\n      init : false\n    },\n\n    /** The context in which the timeout function should be executed  */\n    context :\n    {\n      check : \"Object\",\n      init : null\n    },\n\n    /** The amount of time in milliseconds to wait */\n    delay :\n    {\n      check: \"Integer\",\n      nullable : false,\n      init : 10000\n    }\n  }\n\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\n/**\n * This error is thrown by the unit test class if an infrastructure requirement\n * is not met. The unit testing framework should skip the test and visually mark\n * the test as not having been executed.\n */\nqx.Class.define(\"qx.dev.unit.RequirementError\", {\n\n  extend : Error,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param requirement {String?} The requirement ID, e.g. \"SSL\"\n   * @param message {String?} Optional error message\n   */\n  construct : function(requirement, message) {\n\n    this.__message = message || \"Requirement not met\";\n    this.__requirement = requirement;\n\n    var inst = Error.call(this, this.__message);\n    // map stack trace properties since they're not added by Error's constructor\n    if (inst.stack) {\n      this.stack = inst.stack;\n    }\n    if (inst.stacktrace) {\n      this.stacktrace = inst.stacktrace;\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members :\n  {\n    __message : null,\n    __requirement : null,\n\n\n    /**\n     * Returns the ID of the requirement that was not satisfied.\n     *\n     * @return {String} The requirement ID\n     */\n    getRequirement : function()\n    {\n      return this.__requirement;\n    },\n\n\n    /**\n     * Returns a string representation of the error.\n     *\n     * @return {String} Error message\n     */\n    toString : function()\n    {\n      var msg = this.__message;\n      if (this.__requirement) {\n        msg += \": \" + this.__requirement;\n      }\n      return msg;\n    }\n  }\n});"
  ]
}