{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/core/EventHandler.js",
    "../transpiled/qx/util/PropertyUtil.js",
    "../transpiled/qx/ui/core/queue/Layout.js",
    "../transpiled/qx/ui/core/queue/Visibility.js",
    "../transpiled/qx/theme/manager/Decoration.js",
    "../transpiled/qx/ui/core/queue/Manager.js",
    "../transpiled/qx/module/Css.js",
    "../transpiled/qx/type/BaseArray.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-2.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Connects the widgets to the browser DOM events.\n */\nqx.Class.define(\"qx.ui.core.EventHandler\",\n{\n  extend : qx.core.Object,\n  implement : qx.event.IEventHandler,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__manager = qx.event.Registration.getManager(window);\n  },\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_FIRST,\n\n    /** @type {Map} Supported event types. Identical to events map of qx.ui.core.Widget */\n    SUPPORTED_TYPES :\n    {\n      // mouse events\n      mousemove : 1,\n      mouseover : 1,\n      mouseout : 1,\n      mousedown : 1,\n      mouseup : 1,\n      click : 1,\n      auxclick : 1,\n      dblclick : 1,\n      contextmenu : 1,\n      mousewheel : 1,\n\n      // key events\n      keyup : 1,\n      keydown : 1,\n      keypress : 1,\n      keyinput : 1,\n\n      // mouse capture\n      capture : 1,\n      losecapture : 1,\n\n      // focus events\n      focusin : 1,\n      focusout : 1,\n      focus : 1,\n      blur : 1,\n      activate : 1,\n      deactivate : 1,\n\n      // appear events\n      appear : 1,\n      disappear : 1,\n\n      // drag drop events\n      dragstart : 1,\n      dragend : 1,\n      dragover : 1,\n      dragleave : 1,\n      drop : 1,\n      drag : 1,\n      dragchange : 1,\n      droprequest : 1,\n\n      // touch events\n      touchstart : 1,\n      touchend : 1,\n      touchmove : 1,\n      touchcancel : 1,\n\n      // gestures\n      tap : 1,\n      longtap : 1,\n      swipe : 1,\n      dbltap : 1,\n      track : 1,\n      trackend : 1,\n      trackstart : 1,\n      pinch : 1,\n      rotate : 1,\n      roll : 1,\n\n      // pointer events\n      pointermove : 1,\n      pointerover : 1,\n      pointerout : 1,\n      pointerdown : 1,\n      pointerup : 1,\n      pointercancel : 1\n    },\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : false\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __manager : null,\n\n\n    /**\n     * @type {Map} Supported focus event types\n     *\n     * @lint ignoreReferenceField(__focusEvents)\n     */\n    __focusEvents :\n    {\n      focusin : 1,\n      focusout : 1,\n      focus : 1,\n      blur : 1\n    },\n\n\n    /**\n     * @type {Map} Map of events which should be fired independently from being disabled\n     *\n     * @lint ignoreReferenceField(__ignoreDisabled)\n     */\n    __ignoreDisabled :\n    {\n      // mouse events\n      mouseover : 1,\n      mouseout : 1,\n\n      // appear events\n      appear : 1,\n      disappear : 1\n    },\n\n\n    // interface implementation\n    canHandleEvent : function(target, type) {\n      return target instanceof qx.ui.core.Widget;\n    },\n\n\n    /**\n     * Dispatches a DOM event on a widget.\n     *\n     * @param domEvent {qx.event.type.Event} The event object to dispatch.\n     */\n    _dispatchEvent : function(domEvent)\n    {\n      // EVENT TARGET\n      var domTarget = domEvent.getTarget();\n\n      var widgetTarget = qx.ui.core.Widget.getWidgetByElement(domTarget);\n      var targetChanged = false;\n      while (widgetTarget && widgetTarget.isAnonymous())\n      {\n        var targetChanged = true;\n        widgetTarget = widgetTarget.getLayoutParent();\n      }\n\n      // don't activate anonymous widgets!\n      if (widgetTarget && targetChanged && domEvent.getType() == \"activate\") {\n        widgetTarget.getContentElement().activate();\n      }\n\n\n      // Correcting target for focus events\n      if (this.__focusEvents[domEvent.getType()])\n      {\n        widgetTarget = widgetTarget && widgetTarget.getFocusTarget();\n\n        // Whether nothing is returned\n        if (!widgetTarget) {\n          return;\n        }\n      }\n\n\n      // EVENT RELATED TARGET\n      if (domEvent.getRelatedTarget)\n      {\n        var domRelatedTarget = domEvent.getRelatedTarget();\n\n        var widgetRelatedTarget = qx.ui.core.Widget.getWidgetByElement(domRelatedTarget);\n        while (widgetRelatedTarget && widgetRelatedTarget.isAnonymous()) {\n          widgetRelatedTarget = widgetRelatedTarget.getLayoutParent();\n        }\n\n        if (widgetRelatedTarget)\n        {\n          // Correcting target for focus events\n          if (this.__focusEvents[domEvent.getType()]) {\n            widgetRelatedTarget = widgetRelatedTarget.getFocusTarget();\n          }\n\n          // If target and related target are identical ignore the event\n          if (widgetRelatedTarget === widgetTarget) {\n            return;\n          }\n        }\n      }\n\n\n      // EVENT CURRENT TARGET\n      var currentTarget = domEvent.getCurrentTarget();\n\n\n      var currentWidget = qx.ui.core.Widget.getWidgetByElement(currentTarget);\n      if (!currentWidget || currentWidget.isAnonymous()) {\n        return;\n      }\n\n      // Correcting target for focus events\n      if (this.__focusEvents[domEvent.getType()]) {\n        currentWidget = currentWidget.getFocusTarget();\n      }\n\n      // Ignore most events in the disabled state.\n      var type = domEvent.getType();\n      if (!currentWidget || !(currentWidget.isEnabled() || this.__ignoreDisabled[type])) {\n        return;\n      }\n\n\n      // PROCESS LISTENERS\n\n      // Load listeners\n      var capture = domEvent.getEventPhase() == qx.event.type.Event.CAPTURING_PHASE;\n      var listeners = this.__manager.getListeners(currentWidget, type, capture);\n\n      if (domEvent.getEventPhase() == qx.event.type.Event.AT_TARGET) {\n        if (!listeners) {\n          listeners = [];\n        }\n        var otherListeners = this.__manager.getListeners(currentWidget, type, !capture);\n        if (otherListeners) {\n          listeners = listeners.concat(otherListeners);\n        }\n      }\n\n      if (!listeners || listeners.length === 0) {\n        return;\n      }\n\n      // Create cloned event with correct target\n      var widgetEvent = qx.event.Pool.getInstance().getObject(domEvent.constructor);\n      domEvent.clone(widgetEvent);\n\n      widgetEvent.setTarget(widgetTarget);\n      widgetEvent.setRelatedTarget(widgetRelatedTarget||null);\n      widgetEvent.setCurrentTarget(currentWidget);\n\n      // Keep original target of DOM event, otherwise map it to the original\n      var orig = domEvent.getOriginalTarget();\n      if (orig)\n      {\n        var widgetOriginalTarget = qx.ui.core.Widget.getWidgetByElement(orig);\n        while (widgetOriginalTarget && widgetOriginalTarget.isAnonymous()) {\n          widgetOriginalTarget = widgetOriginalTarget.getLayoutParent();\n        }\n\n        widgetEvent.setOriginalTarget(widgetOriginalTarget);\n      }\n      else\n      {\n        widgetEvent.setOriginalTarget(domTarget);\n      }\n\n      // Dispatch it on all listeners\n      var tracker = {};\n      qx.event.Utils.then(tracker, function() {\n        return qx.event.Utils.series(listeners, function(listener) {\n          var context = listener.context || currentWidget;\n          return listener.handler.call(context, widgetEvent);\n        });\n      });\n\n      // Synchronize propagation stopped/prevent default property\n      qx.event.Utils.then(tracker, function() {\n        if (widgetEvent.getPropagationStopped()) {\n          domEvent.stopPropagation();\n        }\n\n        if (widgetEvent.getDefaultPrevented()) {\n          domEvent.preventDefault();\n        }\n      });\n\n      return qx.event.Utils.then(tracker, function() {\n        qx.event.Pool.getInstance().poolObject(widgetEvent);\n      });\n    },\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture)\n    {\n      var elem;\n\n      if (type === \"focus\" || type === \"blur\") {\n        elem = target.getFocusElement();\n      } else {\n        elem = target.getContentElement();\n      }\n\n      if (elem) {\n        elem.addListener(type, this._dispatchEvent, this, capture);\n      }\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture)\n    {\n      var elem;\n\n      if (type === \"focus\" || type === \"blur\") {\n        elem = target.getFocusElement();\n      } else {\n        elem = target.getContentElement();\n      }\n\n      if (elem) {\n        elem.removeListener(type, this._dispatchEvent, this, capture);\n      }\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.__manager = null;\n  },\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A helper class for accessing the property system directly.\n *\n * This class is rather to be used internally. For all regular usage of the\n * property system the default API should be sufficient.\n */\nqx.Class.define(\"qx.util.PropertyUtil\",\n{\n  statics :\n  {\n    /**\n     * Get the property map of the given class\n     *\n     * @param clazz {Class} a qooxdoo class\n     * @return {Map} A properties map as defined in {@link qx.Class#define}\n     *   including the properties of included mixins and not including refined\n     *   properties.\n     */\n    getProperties : function(clazz) {\n      return clazz.$$properties;\n    },\n\n\n    /**\n     * Get the property map of the given class including the properties of all\n     * superclasses!\n     *\n     * @param clazz {Class} a qooxdoo class\n     * @return {Map} The properties map as defined in {@link qx.Class#define}\n     *   including the properties of included mixins of the current class and\n     *   all superclasses.\n     */\n    getAllProperties : function(clazz)\n    {\n\n      var properties = {};\n      var superclass = clazz;\n      // go threw the class hierarchy\n      while (superclass != qx.core.Object) {\n        var currentProperties = this.getProperties(superclass);\n        for (var property in currentProperties) {\n          properties[property] = currentProperties[property];\n        }\n        superclass = superclass.superclass;\n      }\n      return properties;\n    },\n\n\n\n    /*\n    -------------------------------------------------------------------------\n      USER VALUES\n    -------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the user value of the given property\n     *\n     * @param object {Object} The object to access\n     * @param propertyName {String} The name of the property\n     * @return {var} The user value\n     */\n    getUserValue : function(object, propertyName) {\n      return object[\"$$user_\" + propertyName];\n    },\n\n    /**\n    * Sets the user value of the given property\n    *\n    * @param object {Object} The object to access\n    * @param propertyName {String} The name of the property\n    * @param value {var} The value to set\n    */\n    setUserValue : function(object, propertyName, value) {\n      object[\"$$user_\" + propertyName] = value;\n    },\n\n    /**\n    * Deletes the user value of the given property\n    *\n    * @param object {Object} The object to access\n    * @param propertyName {String} The name of the property\n    */\n    deleteUserValue : function(object, propertyName) {\n      delete(object[\"$$user_\" + propertyName]);\n    },\n\n\n    /*\n    -------------------------------------------------------------------------\n      INIT VALUES\n    -------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the init value of the given property\n     *\n     * @param object {Object} The object to access\n     * @param propertyName {String} The name of the property\n     * @return {var} The init value\n     */\n    getInitValue : function(object, propertyName) {\n      return object[\"$$init_\" + propertyName];\n    },\n\n    /**\n    * Sets the init value of the given property\n    *\n    * @param object {Object} The object to access\n    * @param propertyName {String} The name of the property\n    * @param value {var} The value to set\n    */\n    setInitValue : function(object, propertyName, value) {\n      object[\"$$init_\" + propertyName] = value;\n    },\n\n    /**\n    * Deletes the init value of the given property\n    *\n    * @param object {Object} The object to access\n    * @param propertyName {String} The name of the property\n    */\n    deleteInitValue : function(object, propertyName) {\n      delete(object[\"$$init_\" + propertyName]);\n    },\n\n\n    /*\n    -------------------------------------------------------------------------\n      THEME VALUES\n    -------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the theme value of the given property\n     *\n     * @param object {Object} The object to access\n     * @param propertyName {String} The name of the property\n     * @return {var} The theme value\n     */\n    getThemeValue : function(object, propertyName) {\n      return object[\"$$theme_\" + propertyName];\n    },\n\n    /**\n    * Sets the theme value of the given property\n    *\n    * @param object {Object} The object to access\n    * @param propertyName {String} The name of the property\n    * @param value {var} The value to set\n    */\n    setThemeValue : function(object, propertyName, value) {\n      object[\"$$theme_\" + propertyName] = value;\n    },\n\n    /**\n    * Deletes the theme value of the given property\n    *\n    * @param object {Object} The object to access\n    * @param propertyName {String} The name of the property\n    */\n    deleteThemeValue : function(object, propertyName) {\n      delete(object[\"$$theme_\" + propertyName]);\n    },\n\n\n    /*\n    -------------------------------------------------------------------------\n      THEMED PROPERTY\n    -------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets a themed property\n     *\n     * @param object {Object} The object to access\n     * @param propertyName {String} The name of the property\n    * @param value {var} The value to set\n     */\n    setThemed : function(object, propertyName, value)\n    {\n      var styler = qx.core.Property.$$method.setThemed;\n      object[styler[propertyName]](value);\n    },\n\n    /**\n    * Resets a themed property\n    *\n    * @param object {Object} The object to access\n    * @param propertyName {String} The name of the property\n    */\n    resetThemed : function(object, propertyName)\n    {\n      var unstyler = qx.core.Property.$$method.resetThemed;\n      object[unstyler[propertyName]]();\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The layout queue manages all widgets, which need a recalculation of their\n * layout. The {@link #flush} method computes the layout of all queued widgets\n * and their dependent widgets.\n */\nqx.Class.define(\"qx.ui.core.queue.Layout\",\n{\n  statics :\n  {\n    /** @type {Map} This contains all the queued widgets for the next flush. */\n    __queue : {},\n\n\n    /** Nesting level cache **/\n    __nesting : {},\n\n\n    /**\n     * Clears the widget from the internal queue. Normally only used\n     * during interims disposes of one or a few widgets.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to clear\n     */\n    remove : function(widget) {\n      delete this.__queue[widget.$$hash];\n    },\n\n\n    /**\n     * Mark a widget's layout as invalid and add its layout root to\n     * the queue.\n     *\n     * Should only be used by {@link qx.ui.core.Widget}.\n     *\n     * @param widget {qx.ui.core.Widget} Widget to add.\n     */\n    add : function(widget)\n    {\n      this.__queue[widget.$$hash] = widget;\n      qx.ui.core.queue.Manager.scheduleFlush(\"layout\");\n    },\n\n    /**\n    * Check whether the queue has scheduled changes for a widget.\n    * Note that the layout parent can have changes scheduled that\n    * affect the children widgets.\n    *\n    * @param widget {qx.ui.core.Widget} Widget to check.\n    * @return {Boolean} Whether the widget given has layout changes queued.\n    */\n    isScheduled : function(widget) {\n      return !!this.__queue[widget.$$hash];\n    },\n\n    /**\n     * Update the layout of all widgets, which layout is marked as invalid.\n     *\n     * This is used exclusively by the {@link qx.ui.core.queue.Manager}.\n     *\n     */\n    flush : function()\n    {\n      // get sorted widgets to (re-)layout\n      var queue = this.__getSortedQueue();\n\n      // iterate in reversed order to process widgets with the smallest nesting\n      // level first because these may affect the inner lying children\n      for (var i=queue.length-1; i>=0; i--)\n      {\n        var widget = queue[i];\n\n        // continue if a relayout of one of the root's parents has made the\n        // layout valid\n        if (widget.hasValidLayout()) {\n          continue;\n        }\n\n        // overflow areas or qx.ui.root.*\n        if (widget.isRootWidget() && !widget.hasUserBounds())\n        {\n          // This is a real root widget. Set its size to its preferred size.\n          var hint = widget.getSizeHint();\n          widget.renderLayout(0, 0, hint.width, hint.height);\n        }\n        else\n        {\n          // This is an inner item of layout changes. Do a relayout of its\n          // children without changing its position and size.\n          var bounds = widget.getBounds();\n          widget.renderLayout(bounds.left, bounds.top, bounds.width, bounds.height);\n        }\n      }\n    },\n\n\n    /**\n     * Get the widget's nesting level. Top level widgets have a nesting level\n     * of <code>0</code>.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to query.\n     * @return {Integer} The nesting level\n     */\n    getNestingLevel : function(widget)\n    {\n      var cache = this.__nesting;\n      var level = 0;\n      var parent = widget;\n\n      // Detecting level\n      while (true)\n      {\n        if (cache[parent.$$hash] != null)\n        {\n          level += cache[parent.$$hash];\n          break;\n        }\n\n        if (!parent.$$parent) {\n          break;\n        }\n\n        parent = parent.$$parent;\n        level += 1;\n      }\n\n      // Update the processed hierarchy (runs from inner to outer)\n      var leveldown = level;\n      while (widget && widget !== parent)\n      {\n        cache[widget.$$hash] = leveldown--;\n        widget = widget.$$parent;\n      }\n\n      return level;\n    },\n\n\n    /**\n     * Group widget by their nesting level.\n     *\n     * @return {Map[]} A sparse array. Each entry of the array contains a widget\n     *     map with all widgets of the same level as the array index.\n     */\n    __getLevelGroupedWidgets : function()\n    {\n      var VisibilityQueue = qx.ui.core.queue.Visibility;\n\n      // clear cache\n      this.__nesting = {};\n\n      // sparse level array\n      var levels = [];\n      var queue = this.__queue;\n      var widget, level;\n\n      for (var hash in queue)\n      {\n        widget = queue[hash];\n\n        if (VisibilityQueue.isVisible(widget))\n        {\n          level = this.getNestingLevel(widget);\n\n          // create hierarchy\n          if (!levels[level]) {\n            levels[level] = {};\n          }\n\n          // store widget in level map\n          levels[level][hash] = widget;\n\n          // remove widget from layout queue\n          delete queue[hash];\n        }\n      }\n\n      return levels;\n    },\n\n\n    /**\n     * Compute all layout roots of the given widgets. Layout roots are either\n     * root widgets or widgets, which preferred size has not changed by the\n     * layout changes of its children.\n     *\n     * This function returns the roots ordered by their nesting factors. The\n     * layout with the largest nesting level comes first.\n     *\n     * @return {qx.ui.core.Widget[]} Ordered list or layout roots.\n     */\n    __getSortedQueue : function()\n    {\n      var sortedQueue = [];\n      var levels = this.__getLevelGroupedWidgets();\n\n      for (var level=levels.length-1; level>=0; level--)\n      {\n        // Ignore empty levels (levels is an sparse array)\n        if (!levels[level]) {\n          continue;\n        }\n\n        for (var hash in levels[level])\n        {\n          var widget = levels[level][hash];\n\n          // This is a real layout root. Add it directly to the list\n          if (level == 0 || widget.isRootWidget() || widget.hasUserBounds())\n          {\n            sortedQueue.push(widget);\n            widget.invalidateLayoutCache();\n            continue;\n          }\n\n          // compare old size hint to new size hint\n          var oldSizeHint = widget.getSizeHint(false);\n\n          if (oldSizeHint)\n          {\n            widget.invalidateLayoutCache();\n            var newSizeHint = widget.getSizeHint();\n\n            var hintChanged = (\n              !widget.getBounds() ||\n              oldSizeHint.minWidth !== newSizeHint.minWidth ||\n              oldSizeHint.width !== newSizeHint.width ||\n              oldSizeHint.maxWidth !== newSizeHint.maxWidth ||\n              oldSizeHint.minHeight !== newSizeHint.minHeight ||\n              oldSizeHint.height !== newSizeHint.height ||\n              oldSizeHint.maxHeight !== newSizeHint.maxHeight\n            );\n          }\n          else\n          {\n            hintChanged = true;\n          }\n\n          if (hintChanged)\n          {\n            // Since the level is > 0, the widget must\n            // have a parent != null.\n            var parent = widget.getLayoutParent();\n            if (!levels[level-1]) {\n              levels[level-1] = {};\n            }\n\n            levels[level-1][parent.$$hash] = parent;\n          }\n          else\n          {\n            // this is an internal layout root since its own preferred size\n            // has not changed.\n            sortedQueue.push(widget);\n          }\n        }\n      }\n\n      return sortedQueue;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * Keeps data about the visibility of all widgets. Updates the internal\n * tree when widgets are added, removed or modify their visibility.\n */\nqx.Class.define(\"qx.ui.core.queue.Visibility\",\n{\n  statics :\n  {\n    /** @type {Array} This contains all the queued widgets for the next flush. */\n    __queue : [],\n    \n    /** @type {Map} map of widgets by hash code which are in the queue */\n    __lookup : {},\n\n\n    /** @type {Map} Maps hash codes to visibility */\n    __data : {},\n\n\n    /**\n     * Clears the cached data of the given widget. Normally only used\n     * during interims disposes of one or a few widgets.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to clear\n     */\n    remove : function(widget)\n    {\n    \tif (this.__lookup[widget.$$hash]) {\n\t      delete this.__lookup[widget.$$hash];\n\t      qx.lang.Array.remove(this.__queue, widget);\n    \t}\n      delete this.__data[widget.$$hash];\n    },\n\n\n    /**\n     * Whether the given widget is visible.\n     *\n     * Please note that the information given by this method is queued and may not be accurate\n     * until the next queue flush happens.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to query\n     * @return {Boolean} Whether the widget is visible\n     */\n    isVisible : function(widget) {\n      return this.__data[widget.$$hash] || false;\n    },\n\n\n    /**\n     * Computes the visibility for the given widget\n     *\n     * @param widget {qx.ui.core.Widget} The widget to update\n     * @return {Boolean} Whether the widget is visible\n     */\n    __computeVisible : function(widget)\n    {\n      var data = this.__data;\n      var hash = widget.$$hash;\n      var visible;\n\n      // Respect local value\n      if (widget.isExcluded())\n      {\n        visible = false;\n      }\n      else\n      {\n        // Parent hierarchy\n        var parent = widget.$$parent;\n        if (parent) {\n          visible = this.__computeVisible(parent);\n        } else {\n          visible = widget.isRootWidget();\n        }\n      }\n\n      return data[hash] = visible;\n    },\n\n\n    /**\n     * Adds a widget to the queue.\n     *\n     * Should only be used by {@link qx.ui.core.Widget}.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to add.\n     */\n    add : function(widget)\n    {\n      if (this.__lookup[widget.$$hash]) {\n        return;\n      }\n\n      this.__queue.unshift(widget);\n      this.__lookup[widget.$$hash] = widget;\n      qx.ui.core.queue.Manager.scheduleFlush(\"visibility\");\n    },\n\n\n    /**\n     * Flushes the visibility queue.\n     *\n     * This is used exclusively by the {@link qx.ui.core.queue.Manager}.\n     */\n    flush : function()\n    {\n      // Dispose all registered objects\n      var queue = this.__queue;\n      var data = this.__data;\n\n      // Dynamically add children to queue\n      // Only respect already known widgets because otherwise the children\n      // are also already in the queue (added on their own)\n      for (var i = queue.length - 1; i >= 0; i--)\n      {\n        var hash = queue[i].$$hash;\n        if (data[hash] != null) {\n          // recursive method call which adds widgets to the queue so be\n          // careful with that one (performance critical)\n          queue[i].addChildrenToQueue(queue);\n        }\n      }\n\n      // Cache old data, clear current data\n      // Do this before starting with recomputation because\n      // new data may also be added by related widgets and not\n      // only the widget itself.\n      var oldData = {};\n      for (var i = queue.length - 1; i >= 0; i--)\n      {\n        var hash = queue[i].$$hash;\n        oldData[hash] = data[hash];\n        data[hash] = null;\n      }\n\n      // Finally recompute\n      for (var i = queue.length - 1; i >= 0; i--)\n      {\n        var widget = queue[i];\n        var hash = widget.$$hash;\n        queue.splice(i, 1);\n\n        // Only update when not already updated by another widget\n        if (data[hash] == null) {\n          this.__computeVisible(widget);\n        }\n\n        // Check for updates required to the appearance.\n        // Hint: Invisible widgets are ignored inside appearance flush\n        if (data[hash] && data[hash] != oldData[hash]) {\n          widget.checkAppearanceNeeds();\n        }\n      }\n\n      // Recreate the array is cheaper compared to keep a sparse array over time\n      this.__queue = [];\n      this.__lookup = {};\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Manager for decoration themes\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.theme.manager.Decoration\",\n{\n  type : \"singleton\",\n  extend : qx.core.Object,\n  implement : [ qx.core.IDisposable ],\n\n\n  statics :\n  {\n    /** The prefix for all created CSS classes*/\n    CSS_CLASSNAME_PREFIX : \"qx-\"\n  },\n\n\n\n  construct : function() {\n    this.base(arguments);\n    this.__rules = [];\n    this.__legacyIe = (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n      qx.core.Environment.get(\"browser.documentmode\") < 9);\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** Selected decoration theme */\n    theme :\n    {\n      check : \"Theme\",\n      nullable : true,\n      apply : \"_applyTheme\",\n      event : \"changeTheme\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __dynamic : null,\n    __rules : null,\n    __legacyIe : false,\n\n\n    /**\n     * Returns the name which will be / is used as css class name.\n     * @param value {String|qx.ui.decoration.IDecorator} The decorator string or instance.\n     * @return {String} The css class name.\n     */\n    getCssClassName : function(value) {\n      var prefix = qx.theme.manager.Decoration.CSS_CLASSNAME_PREFIX;\n      if (qx.lang.Type.isString(value)) {\n        return prefix + value;\n      } else {\n        return prefix + value.toHashCode();\n      }\n    },\n\n\n    /**\n     * Adds a css class to the global stylesheet for the given decorator.\n     * This includes resolving the decorator if it's a string.\n     * @param value {String|qx.ui.decoration.IDecorator} The decorator string or instance.\n     * @return {String} the css class name.\n     */\n    addCssClass : function(value) {\n      var sheet = qx.ui.style.Stylesheet.getInstance();\n\n      var instance = value;\n\n      value = this.getCssClassName(value);\n      var selector = \".\" + value;\n\n      if (sheet.hasRule(selector)) {\n        return value;\n      }\n\n      if (qx.lang.Type.isString(instance)) {\n        instance = this.resolve(instance);\n      }\n\n      if (!instance) {\n        throw new Error(\"Unable to resolve decorator '\" + value + \"'.\");\n      }\n\n      // create and add a CSS rule\n      var css = \"\";\n      var styles = instance.getStyles(true);\n      \n      // Sort the styles so that more specific styles come after the group styles, \n      // eg background-color comes after background. The sort order is alphabetical\n      // so that short cut rules come before actual\n      Object.keys(styles).sort().forEach(function(key) {\n        // if we find a map value, use it as pseudo class\n        if (qx.Bootstrap.isObject(styles[key])) {\n          var innerCss = \"\";\n          var innerStyles = styles[key];\n          var inner = false;\n          for (var innerKey in innerStyles) {\n            inner = true;\n            innerCss += innerKey + \":\" + innerStyles[innerKey] + \";\";\n          }\n          var innerSelector = this.__legacyIe ? selector :\n            selector + (inner ? \":\" : \"\");\n          this.__rules.push(innerSelector + key);\n          sheet.addRule(innerSelector + key, innerCss);\n          return;\n        }\n        css += key + \":\" + styles[key] + \";\";\n      }, this);\n\n      if (css) {\n        sheet.addRule(selector, css);\n        this.__rules.push(selector);\n      }\n\n      return value;\n    },\n\n\n    /**\n     * Removes all previously by {@link #addCssClass} created CSS rule from\n     * the global stylesheet.\n     */\n    removeAllCssClasses : function()\n    {\n      // remove old rules\n      for (var i=0; i < this.__rules.length; i++) {\n        var selector = this.__rules[i];\n        qx.ui.style.Stylesheet.getInstance().removeRule(selector);\n      };\n      this.__rules = [];\n    },\n\n\n    /**\n     * Returns the dynamically interpreted result for the incoming value\n     *\n     * @param value {String} dynamically interpreted idenfier\n     * @return {var} return the (translated) result of the incoming value\n     */\n    resolve : function(value)\n    {\n      if (!value) {\n        return null;\n      }\n\n      if (typeof value === \"object\") {\n        return value;\n      }\n\n      var cache = this.__dynamic;\n      if (!cache) {\n        cache = this.__dynamic = {};\n      }\n\n      var resolved = cache[value];\n      if (resolved) {\n        return resolved;\n      }\n\n      var theme = this.getTheme();\n      if (!theme) {\n        return null;\n      }\n\n      if(!theme.decorations[value]) {\n        return null;\n      }\n      \n      // create an empty decorator\n      var decorator = new qx.ui.decoration.Decorator();\n\n      // handle recursive decorator includes\n      var recurseDecoratorInclude = function(currentEntry, name) {\n        // follow the include chain to the topmost decorator entry\n        if(currentEntry.include && theme.decorations[currentEntry.include]) {\n          recurseDecoratorInclude(theme.decorations[currentEntry.include], currentEntry.include);\n        }\n\n        // apply styles from the included decorator, \n        // overwriting existing values.\n        if (currentEntry.style) {\n          decorator.set(currentEntry.style);\n        }\n      };\n\n      // start with the current decorator entry\n      recurseDecoratorInclude(theme.decorations[value], value);\n\n      cache[value] = decorator;\n      \n      return cache[value];\n    },\n\n\n    /**\n     * Whether the given value is valid for being used in a property\n     * with the 'check' configured to 'Decorator'.\n     *\n     * @param value {var} Incoming value\n     * @return {Boolean} Whether the value is valid for being used in a Decorator property\n     */\n    isValidPropertyValue : function(value)\n    {\n      if (typeof value === \"string\") {\n        return this.isDynamic(value);\n      }\n      else if (typeof value === \"object\")\n      {\n        var clazz = value.constructor;\n        return qx.Class.hasInterface(clazz, qx.ui.decoration.IDecorator);\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Whether a value is interpreted dynamically\n     *\n     * @param value {String} dynamically interpreted identifier\n     * @return {Boolean} returns <code>true</code> if the value is interpreted dynamically\n     */\n    isDynamic : function(value)\n    {\n      if (!value) {\n        return false;\n      }\n\n      var theme = this.getTheme();\n      if (!theme) {\n        return false;\n      }\n\n      return !!theme.decorations[value];\n    },\n\n\n    /**\n     * Whether the given decorator is cached\n     *\n     * @param decorator {String|qx.ui.decoration.IDecorator} The decorator to check\n     * @return {Boolean} <code>true</code> if the decorator is cached\n     * @internal\n     */\n    isCached : function(decorator)\n    {\n      return !this.__dynamic ? false :\n        qx.lang.Object.contains(this.__dynamic, decorator);\n    },\n\n\n    // property apply\n    _applyTheme : function(value, old)\n    {\n      var aliasManager = qx.util.AliasManager.getInstance();\n\n      // remove old rules\n      this.removeAllCssClasses();\n\n      if (old)\n      {\n        for (var alias in old.aliases) {\n          aliasManager.remove(alias);\n        }\n      }\n\n      if (value)\n      {\n        for (var alias in value.aliases) {\n          aliasManager.add(alias, value.aliases[alias]);\n        }\n      }\n\n      this._disposeMap(\"__dynamic\");\n      this.__dynamic = {};\n    },\n\n\n    /**\n     * Clears internal caches and removes all previously created CSS classes.\n     */\n    clear : function()\n    {\n      // remove aliases\n      var aliasManager = qx.util.AliasManager.getInstance();\n\n      var theme = this.getTheme();\n      if (!aliasManager.isDisposed() && theme && theme.alias) {\n        for (var alias in theme.aliases) {\n          aliasManager.remove(alias, theme.aliases[alias]);\n        }\n      }\n\n      // remove old rules\n      this.removeAllCssClasses();\n\n      this._disposeMap(\"__dynamic\");\n      this.__dynamic = {};\n    },\n\n\n    /**\n     * Refreshes all decorator by clearing internal caches and re applying\n     * aliases.\n     */\n    refresh : function()\n    {\n      this.clear();\n\n      var aliasManager = qx.util.AliasManager.getInstance();\n      var theme = this.getTheme();\n      if (theme && theme.alias) {\n        for (var alias in theme.aliases) {\n          aliasManager.add(alias, theme.aliases[alias]);\n        }\n      }\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.clear();\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This class performs the auto flush of all layout relevant queues.\n *\n * @require(qx.event.handler.UserAction)\n */\nqx.Class.define(\"qx.ui.core.queue.Manager\",\n{\n  statics :\n  {\n    /** @type {Boolean} Whether a flush was scheduled */\n    __scheduled : false,\n\n    /** @type {Boolean} true, if the flush should not be executed */\n    __canceled : false,\n\n    /** @type {Map} Internal data structure for the current job list */\n    __jobs : {},\n\n\n    /** @type {Integer} Counts how often a flush failed due to exceptions */\n    __retries : 0,\n\n    /** @type {Integer} Maximum number of flush retries */\n    MAX_RETRIES : 10,\n\n\n    /**\n     * Schedule a deferred flush of all queues.\n     *\n     * @param job {String} The job, which should be performed. Valid values are\n     *     <code>layout</code>, <code>decoration</code> and <code>element</code>.\n     */\n    scheduleFlush : function(job)\n    {\n      // Sometimes not executed in context, fix this\n      var self = qx.ui.core.queue.Manager;\n\n      self.__jobs[job] = true;\n\n      if (!self.__scheduled)\n      {\n        self.__canceled = false;\n\n        qx.bom.AnimationFrame.request(function() {\n          if (self.__canceled) {\n            self.__canceled = false;\n            return;\n          }\n          self.flush();\n        }, self);\n        self.__scheduled = true;\n      }\n    },\n\n\n    /**\n     * Flush all layout queues in the correct order. This function is called\n     * deferred if {@link #scheduleFlush} is called.\n     *\n     */\n    flush : function()\n    {\n      // Sometimes not executed in context, fix this\n      var self = qx.ui.core.queue.Manager;\n\n      // Stop when already executed\n      if (self.__inFlush) {\n        return;\n      }\n\n      self.__inFlush = true;\n\n      // Cancel timeout if called manually\n      self.__canceled = true;\n\n      var jobs = self.__jobs;\n\n      self.__executeAndRescheduleOnError(function()\n      {\n        // Process jobs\n        while (jobs.visibility || jobs.widget || jobs.appearance || jobs.layout || jobs.element)\n        {\n          // No else blocks here because each flush can influence the following flushes!\n          if (jobs.widget)\n          {\n            delete jobs.widget;\n\n            if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n              try {\n                qx.ui.core.queue.Widget.flush();\n              } catch (e) {\n                qx.log.Logger.error(qx.ui.core.queue.Widget, \"Error in the 'Widget' queue:\" + e, e);\n              }\n            } else {\n              qx.ui.core.queue.Widget.flush();\n            }\n          }\n\n          if (jobs.visibility)\n          {\n            delete jobs.visibility;\n\n            if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n              try {\n                qx.ui.core.queue.Visibility.flush();\n              } catch (e) {\n                qx.log.Logger.error(qx.ui.core.queue.Visibility, \"Error in the 'Visibility' queue:\" + e, e);\n              }\n            } else {\n              qx.ui.core.queue.Visibility.flush();\n            }\n          }\n\n          if (jobs.appearance)\n          {\n            delete jobs.appearance;\n\n            if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n              try {\n                qx.ui.core.queue.Appearance.flush();\n              } catch (e) {\n                qx.log.Logger.error(qx.ui.core.queue.Appearance, \"Error in the 'Appearance' queue:\" + e, e);\n              }\n            } else {\n              qx.ui.core.queue.Appearance.flush();\n            }\n          }\n\n          // Defer layout as long as possible\n          if (jobs.widget || jobs.visibility || jobs.appearance) {\n            continue;\n          }\n\n          if (jobs.layout)\n          {\n            delete jobs.layout;\n\n            if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n              try {\n                qx.ui.core.queue.Layout.flush();\n              } catch (e) {\n                qx.log.Logger.error(qx.ui.core.queue.Layout, \"Error in the 'Layout' queue:\" + e, e);\n              }\n            } else {\n              qx.ui.core.queue.Layout.flush();\n            }\n          }\n\n          // Defer element as long as possible\n          if (jobs.widget || jobs.visibility || jobs.appearance || jobs.layout) {\n            continue;\n          }\n\n          if (jobs.element)\n          {\n            delete jobs.element;\n            qx.html.Element.flush();\n          }\n        }\n      }, function() {\n        self.__scheduled = false;\n      });\n\n      self.__executeAndRescheduleOnError(function()\n      {\n        if (jobs.dispose)\n        {\n          delete jobs.dispose;\n\n          if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n            try {\n              qx.ui.core.queue.Dispose.flush();\n            } catch (e) {\n              qx.log.Logger.error(\"Error in the 'Dispose' queue:\" + e);\n            }\n          } else {\n            qx.ui.core.queue.Dispose.flush();\n          }\n        }\n      }, function() {\n        // Clear flag\n        self.__inFlush = false;\n      });\n\n      // flush succeeded successfully. Reset retries\n      self.__retries = 0;\n    },\n\n\n    /**\n     * Executes the callback code. If the callback throws an error the current\n     * flush is cleaned up and rescheduled. The finally code is called after the\n     * callback even if it has thrown an exception.\n     *\n     * @signature function(callback, finallyCode)\n     * @param callback {Function} the callback function\n     * @param finallyCode {Function} function to be called in the finally block\n     */\n    __executeAndRescheduleOnError : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(callback, finallyCode)\n      {\n        callback();\n        finallyCode();\n      },\n\n\n      \"false\" : function(callback, finallyCode)\n      {\n        var self = qx.ui.core.queue.Manager;\n\n        try\n        {\n          callback();\n        }\n        catch (e)\n        {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            qx.log.Logger.error(\n              \"Error while layout flush: \" + e + \"\\n\" +\n              \"Stack trace: \\n\" +\n              qx.dev.StackTrace.getStackTraceFromError(e)\n            );\n          }\n          self.__scheduled = false;\n          self.__inFlush = false;\n          self.__retries += 1;\n\n          if (self.__retries <= self.MAX_RETRIES) {\n            self.scheduleFlush();\n          } else {\n            throw new Error(\n              \"Fatal Error: Flush terminated \" + (self.__retries-1) + \" times in a row\" +\n              \" due to exceptions in user code. The application has to be reloaded!\"\n            );\n          }\n\n          throw e;\n        }\n        finally\n        {\n          finallyCode();\n        }\n      }\n    }),\n\n\n    /**\n     * Handler used on touch devices to prevent the queue from manipulating\n     * the dom during the touch - mouse - ... event sequence. Usually, iOS\n     * devices fire a click event 300ms after the touchend event. So using\n     * 500ms should be a good value to be on the save side. This is necessary\n     * due to the fact that the event chain is stopped if a manipulation in\n     * the DOM is done.\n     *\n     * @param e {qx.event.type.Data} The user action data event.\n     */\n    __onUserAction : function(e)\n    {\n      qx.ui.core.queue.Manager.flush();\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  defer : function(statics)\n  {\n    // Replace default scheduler for HTML element with local one.\n    // This is quite a hack, but allows us to force other flushes\n    // before the HTML element flush.\n    qx.html.Element._scheduleFlush = statics.scheduleFlush;\n\n    // Register to user action\n    qx.event.Registration.addListener(window, \"useraction\",\n      qx.core.Environment.get(\"event.touch\") ?\n        statics.__onUserAction : statics.flush\n    );\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n/**\n * CSS/Style property manipulation module\n * @group (Core)\n */\nqx.Bootstrap.define(\"qx.module.Css\", {\n  statics: {\n    /**\n     * INTERNAL\n     *\n     * Returns the rendered height of the first element in the collection.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the height of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered height\n     */\n    _getHeight : function(force) {\n      var elem = this[0];\n\n      if (elem) {\n        if (qx.dom.Node.isElement(elem)) {\n\n          var elementHeight;\n          if (force) {\n            var stylesToSwap = {\n              display : \"block\",\n              position : \"absolute\",\n              visibility : \"hidden\"\n            };\n            elementHeight = qx.module.Css.__swap(elem, stylesToSwap, \"_getHeight\", this);\n          } else {\n            elementHeight = qx.bom.element.Dimension.getHeight(elem);\n          }\n\n          return elementHeight;\n        } else if (qx.dom.Node.isDocument(elem)) {\n          return qx.bom.Document.getHeight(qx.dom.Node.getWindow(elem));\n        } else if (qx.dom.Node.isWindow(elem)) {\n          return qx.bom.Viewport.getHeight(elem);\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * INTERNAL\n     *\n     * Returns the rendered width of the first element in the collection\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the width of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered width\n     */\n    _getWidth : function(force) {\n      var elem = this[0];\n\n      if (elem) {\n        if (qx.dom.Node.isElement(elem)) {\n\n          var elementWidth;\n          if (force) {\n            var stylesToSwap = {\n              display : \"block\",\n              position : \"absolute\",\n              visibility : \"hidden\"\n            };\n            elementWidth = qx.module.Css.__swap(elem, stylesToSwap, \"_getWidth\", this);\n          } else {\n            elementWidth = qx.bom.element.Dimension.getWidth(elem);\n          }\n\n          return elementWidth;\n        } else if (qx.dom.Node.isDocument(elem)) {\n          return qx.bom.Document.getWidth(qx.dom.Node.getWindow(elem));\n        } else if (qx.dom.Node.isWindow(elem)) {\n          return qx.bom.Viewport.getWidth(elem);\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * INTERNAL\n     *\n     * Returns the content height of the first element in the collection.\n     * This is the maximum height the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content height of a <em>non displayed</em> element\n     * @return {Number} Computed content height\n     */\n    _getContentHeight : function(force)\n    {\n      var obj = this[0];\n      if (qx.dom.Node.isElement(obj)) {\n\n        var contentHeight;\n        if (force) {\n          var stylesToSwap = {\n            position: \"absolute\",\n            visibility: \"hidden\",\n            display: \"block\"\n          };\n          contentHeight = qx.module.Css.__swap(obj, stylesToSwap, \"_getContentHeight\", this);\n        } else {\n          contentHeight = qx.bom.element.Dimension.getContentHeight(obj);\n        }\n\n        return contentHeight;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * INTERNAL\n     *\n     * Returns the content width of the first element in the collection.\n     * This is the maximum width the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content width of a <em>non displayed</em> element\n     * @return {Number} Computed content width\n     */\n    _getContentWidth : function(force)\n    {\n      var obj = this[0];\n      if (qx.dom.Node.isElement(obj)) {\n\n        var contentWidth;\n        if (force) {\n          var stylesToSwap = {\n            position: \"absolute\",\n            visibility: \"hidden\",\n            display: \"block\"\n          };\n          contentWidth = qx.module.Css.__swap(obj, stylesToSwap, \"_getContentWidth\", this);\n        } else {\n          contentWidth = qx.bom.element.Dimension.getContentWidth(obj);\n        }\n\n        return contentWidth;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Maps HTML elements to their default \"display\" style values.\n     */\n    __displayDefaults : {},\n\n\n    /**\n     * Attempts tp determine the default \"display\" style value for\n     * elements with the given tag name.\n     *\n     * @param tagName {String} Tag name\n     * @param  doc {Document?} Document element. Default: The current document\n     * @return {String} The default \"display\" value, e.g. <code>inline</code>\n     * or <code>block</code>\n     */\n    __getDisplayDefault : function(tagName, doc)\n    {\n      var defaults = qx.module.Css.__displayDefaults;\n      if (!defaults[tagName]) {\n        var docu = doc || document;\n        var tempEl = qxWeb(docu.createElement(tagName)).appendTo(doc.body);\n        defaults[tagName] = tempEl.getStyle(\"display\");\n        tempEl.remove();\n      }\n\n      return defaults[tagName] || \"\";\n    },\n\n\n    /**\n     * Swaps the given styles of the element and execute the callback\n     * before the original values are restored.\n     *\n     * Finally returns the return value of the callback.\n     *\n     * @param element {Element} the DOM element to operate on\n     * @param styles {Map} the styles to swap\n     * @param methodName {String} the callback functions name\n     * @param context {Object} the context in which the callback should be called\n     * @return {Object} the return value of the callback\n     */\n    __swap : function(element, styles, methodName, context)\n    {\n      // get the current values\n      var currentValues = {};\n      for (var styleProperty in styles) {\n        currentValues[styleProperty] = element.style[styleProperty];\n        element.style[styleProperty] = styles[styleProperty];\n      }\n\n      var value = context[methodName]();\n\n      for (var styleProperty in currentValues) {\n        element.style[styleProperty] = currentValues[styleProperty];\n      }\n\n      return value;\n    },\n\n\n    /**\n     * Includes a Stylesheet file\n     *\n     * @attachStatic {qxWeb}\n     * @param uri {String} The stylesheet's URI\n     * @param doc {Document?} Document to modify\n     */\n    includeStylesheet : function(uri, doc) {\n      qx.bom.Stylesheet.includeFile(uri, doc);\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Returns the rendered height of the first element in the collection.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the height of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered height\n     */\n    getHeight : function(force) {\n      return this._getHeight(force);\n    },\n\n\n    /**\n     * Returns the rendered width of the first element in the collection\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the width of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered width\n     */\n    getWidth : function(force) {\n      return this._getWidth(force);\n    },\n\n    /**\n     * Returns the content height of the first element in the collection.\n     * This is the maximum height the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content height of a <em>non displayed</em> element\n     * @return {Number} Computed content height\n     */\n    getContentHeight : function(force) {\n      return this._getContentHeight(force);\n    },\n\n    /**\n     * Returns the content width of the first element in the collection.\n     * This is the maximum width the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content width of a <em>non displayed</em> element\n     * @return {Number} Computed content width\n     */\n    getContentWidth : function(force) {\n      return this._getContentWidth(force);\n    },\n\n    /**\n     * Shows any elements with \"display: none\" in the collection. If an element\n     * was hidden by using the {@link #hide} method, its previous\n     * \"display\" style value will be re-applied. Otherwise, the\n     * default \"display\" value for the element type will be applied.\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    show : function() {\n      this._forEachElementWrapped(function(item) {\n        var currentVal = item.getStyle(\"display\");\n        var prevVal = item[0].$$qPrevDisp;\n        var newVal;\n        if (currentVal == \"none\") {\n          if (prevVal && prevVal != \"none\") {\n            newVal = prevVal;\n          }\n          else {\n            var doc = qxWeb.getDocument(item[0]);\n            newVal = qx.module.Css.__getDisplayDefault(item[0].tagName, doc);\n          }\n          item.setStyle(\"display\", newVal);\n          item[0].$$qPrevDisp = \"none\";\n        }\n      });\n\n      return this;\n    },\n\n\n    /**\n     * Hides all elements in the collection by setting their \"display\"\n     * style to \"none\". The previous value is stored so it can be re-applied\n     * when {@link #show} is called.\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    hide : function() {\n      this._forEachElementWrapped(function(item) {\n        var prevStyle = item.getStyle(\"display\");\n        if (prevStyle !== \"none\") {\n          item[0].$$qPrevDisp = prevStyle;\n          item.setStyle(\"display\", \"none\");\n        }\n      });\n\n      return this;\n    },\n\n\n    /**\n     * Returns the distance between the first element in the collection and its\n     * offset parent\n     *\n     * @attach {qxWeb}\n     * @return {Map} a map with the keys <code>left</code> and <code>top</code>\n     * containing the distance between the elements\n     */\n    getPosition : function()\n    {\n      var obj = this[0];\n      if (qx.dom.Node.isElement(obj)) {\n        return qx.bom.element.Location.getPosition(obj);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Returns the computed location of the given element in the context of the\n     * document dimensions.\n     *\n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).\n     *\n     * @attach {qxWeb}\n     * @param mode {String?box} A supported option. See comment above.\n     * @return {Map} A map with the keys <code>left</code>, <code>top</code>,\n     * <code>right</code> and <code>bottom</code> which contains the distance\n     * of the element relative to the document.\n     */\n    getOffset : function(mode) {\n      var elem = this[0];\n\n      if (elem && qx.dom.Node.isElement(elem)) {\n        return qx.bom.element.Location.get(elem, mode);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Modifies the given style property on all elements in the collection.\n     *\n     * @attach {qxWeb}\n     * @param name {String} Name of the style property to modify\n     * @param value {var} The value to apply\n     * @return {qxWeb} The collection for chaining\n     */\n    setStyle : function(name, value) {\n      if (/\\w-\\w/.test(name)) {\n        name = qx.lang.String.camelCase(name);\n      }\n      this._forEachElement(function(item) {\n        qx.bom.element.Style.set(item, name, value);\n      });\n      return this;\n    },\n\n\n    /**\n     * Returns the value of the given style property for the first item in the\n     * collection.\n     *\n     * @attach {qxWeb}\n     * @param name {String} Style property name\n     * @return {var} Style property value\n     */\n    getStyle : function(name) {\n      if (this[0] && qx.dom.Node.isElement(this[0])) {\n        if (/\\w-\\w/.test(name)) {\n          name = qx.lang.String.camelCase(name);\n        }\n        return qx.bom.element.Style.get(this[0], name);\n      }\n      return null;\n    },\n\n\n    /**\n     * Sets multiple style properties for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param styles {Map} A map of style property name/value pairs\n     * @return {qxWeb} The collection for chaining\n     */\n    setStyles : function(styles) {\n      for (var name in styles) {\n        this.setStyle(name, styles[name]);\n      }\n      return this;\n    },\n\n\n    /**\n     * Returns the values of multiple style properties for each item in the\n     * collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of style property names\n     * @return {Map} Map of style property name/value pairs\n     */\n    getStyles : function(names) {\n      var styles = {};\n      for (var i=0; i < names.length; i++) {\n        styles[names[i]] = this.getStyle(names[i]);\n      }\n      return styles;\n    },\n\n\n    /**\n     * Adds a class name to each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Class name\n     * @return {qxWeb} The collection for chaining\n     */\n    addClass : function(name) {\n      this._forEachElement(function(item) {\n        qx.bom.element.Class.add(item, name);\n      });\n      return this;\n    },\n\n\n    /**\n     * Adds multiple class names to each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of class names to add\n     * @return {qxWeb} The collection for chaining\n     */\n    addClasses : function(names) {\n      this._forEachElement(function(item) {\n        qx.bom.element.Class.addClasses(item, names);\n      });\n      return this;\n    },\n\n\n    /**\n     * Removes a class name from each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} The class name to remove\n     * @return {qxWeb} The collection for chaining\n     */\n    removeClass : function(name) {\n      this._forEachElement(function(item) {\n        qx.bom.element.Class.remove(item, name);\n      });\n      return this;\n    },\n\n\n    /**\n     * Removes multiple class names from each element in the collection.\n     * Use {@link qx.module.Attribute#removeAttribute} to remove all classes.\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of class names to remove\n     * @return {qxWeb} The collection for chaining\n     */\n    removeClasses : function(names) {\n      this._forEachElement(function(item) {\n        qx.bom.element.Class.removeClasses(item, names);\n      });\n      return this;\n    },\n\n\n    /**\n     * Checks if the first element in the collection has the given class name\n     *\n     * @attach {qxWeb}\n     * @param name {String} Class name to check for\n     * @return {Boolean} <code>true</code> if the first item has the given class name\n     */\n    hasClass : function(name) {\n      if (!this[0] || !qx.dom.Node.isElement(this[0])) {\n        return false;\n      }\n      return qx.bom.element.Class.has(this[0], name);\n    },\n\n\n    /**\n     * Returns the class name of the first element in the collection\n     *\n     * @attach {qxWeb}\n     * @return {String} Class name\n     */\n    getClass : function() {\n      if (!this[0] || !qx.dom.Node.isElement(this[0])) {\n        return \"\";\n      }\n      return qx.bom.element.Class.get(this[0]);\n    },\n\n\n    /**\n     * Toggles the given class name on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Class name\n     * @return {qxWeb} The collection for chaining\n     */\n    toggleClass : function(name) {\n      var bCls = qx.bom.element.Class;\n      this._forEachElement(function(item) {\n        bCls.has(item, name) ?\n          bCls.remove(item, name) :\n          bCls.add(item, name);\n      });\n      return this;\n    },\n\n\n    /**\n     * Toggles the given list of class names on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} Class names\n     * @return {qxWeb} The collection for chaining\n     */\n    toggleClasses : function(names) {\n      for (var i=0,l=names.length; i<l; i++) {\n        this.toggleClass(names[i]);\n      }\n      return this;\n    },\n\n\n    /**\n     * Replaces a class name on each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param oldName {String} Class name to remove\n     * @param newName {String} Class name to add\n     * @return {qxWeb} The collection for chaining\n     */\n    replaceClass : function(oldName, newName) {\n      this._forEachElement(function(item) {\n        qx.bom.element.Class.replace(item, oldName, newName);\n      });\n      return this;\n    }\n  },\n\n\n  defer : function(statics) {\n    qxWeb.$attachAll(this);\n    // manually attach private method which is ignored by attachAll\n    qxWeb.$attach({\n      \"_getWidth\" : statics._getWidth,\n      \"_getHeight\" : statics._getHeight,\n      \"_getContentHeight\" : statics._getContentHeight,\n      \"_getContentWidth\" : statics._getContentWidth\n    });\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n   ======================================================================\n\n   This class uses ideas and code snippets presented at\n   http://webreflection.blogspot.com/2008/05/habemus-array-unlocked-length-in-ie8.html\n   http://webreflection.blogspot.com/2008/05/stack-and-arrayobject-how-to-create.html\n\n   Author:\n     Andrea Giammarchi\n\n   License:\n     MIT: http://www.opensource.org/licenses/mit-license.php\n\n   ======================================================================\n\n   This class uses documentation of the native Array methods from the MDC\n   documentation of Mozilla.\n\n   License:\n     CC Attribution-Sharealike License:\n     http://creativecommons.org/licenses/by-sa/2.5/\n\n************************************************************************ */\n\n/**\n * This class is the common superclass for most array classes in\n * qooxdoo. It supports all of the shiny 1.6 JavaScript array features\n * like <code>forEach</code> and <code>map</code>.\n *\n * This class may be instantiated instead of the native Array if\n * one wants to work with a feature-unified Array instead of the native\n * one. This class uses native features whereever possible but fills\n * all missing implementations with custom ones.\n *\n * Through the ability to extend from this class one could add even\n * more utility features on top of it.\n *\n * @require(qx.bom.client.Engine)\n * @require(qx.lang.normalize.Array)\n */\nqx.Bootstrap.define(\"qx.type.BaseArray\",\n{\n  extend : Array,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a new Array with the given length or the listed elements.\n   *\n   * <pre class=\"javascript\">\n   * var arr1 = new qx.type.BaseArray(arrayLength);\n   * var arr2 = new qx.type.BaseArray(item0, item1, ..., itemN);\n   * </pre>\n   *\n   * * <code>arrayLength</code>: The initial length of the array. You can access\n   * this value using the length property. If the value specified is not a\n   * number, an array of length 1 is created, with the first element having\n   * the specified value. The maximum length allowed for an\n   * array is 2^32-1, i.e. 4,294,967,295.\n   * * <code>itemN</code>:  A value for the element in that position in the\n   * array. When this form is used, the array is initialized with the specified\n   * values as its elements, and the array's length property is set to the\n   * number of arguments.\n   *\n   * @param length_or_items {Integer|var?null} The initial length of the array\n   *        OR an argument list of values.\n   */\n  construct : function(length_or_items) {},\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Converts a base array to a native Array\n     *\n     * @signature function()\n     * @return {Array} The native array\n     */\n    toArray : null,\n\n    /**\n     * Returns the current number of items stored in the Array\n     *\n     * @signature function()\n     * @return {Integer} number of items\n     */\n    valueOf : null,\n\n    /**\n     * Removes the last element from an array and returns that element.\n     *\n     * This method modifies the array.\n     *\n     * @signature function()\n     * @return {var} The last element of the array.\n     */\n    pop : null,\n\n    /**\n     * Adds one or more elements to the end of an array and returns the new length of the array.\n     *\n     * This method modifies the array.\n     *\n     * @signature function(varargs)\n     * @param varargs {var} The elements to add to the end of the array.\n     * @return {Integer} The new array's length\n     */\n    push : null,\n\n    /**\n     * Reverses the order of the elements of an array -- the first becomes the last, and the last becomes the first.\n     *\n     * This method modifies the array.\n     *\n     * @signature function()\n     * @return {Array} Returns the modified array (works in place)\n     */\n    reverse : null,\n\n    /**\n     * Removes the first element from an array and returns that element.\n     *\n     * This method modifies the array.\n     *\n     * @signature function()\n     * @return {var} The first element of the array.\n     */\n    shift : null,\n\n    /**\n     * Sorts the elements of an array.\n     *\n     * This method modifies the array.\n     *\n     * @signature function(compareFunction)\n     * @param compareFunction {Function?null} Specifies a function that defines the sort order. If omitted,\n     *   the array is sorted lexicographically (in dictionary order) according to the string conversion of each element.\n     * @return {Array} Returns the modified array (works in place)\n     */\n    sort : null,\n\n    /**\n     * Adds and/or removes elements from an array.\n     *\n     * @signature function(index, howMany, varargs)\n     * @param index {Integer} Index at which to start changing the array. If negative, will begin\n     *   that many elements from the end.\n     * @param howMany {Integer} An integer indicating the number of old array elements to remove.\n     *   If <code>howMany</code> is 0, no elements are removed. In this case, you should specify\n     *   at least one new element.\n     * @param varargs {var?null} The elements to add to the array. If you don't specify any elements,\n     *   splice simply removes elements from the array.\n     * @return {qx.type.BaseArray} New array with the removed elements.\n     */\n    splice : null,\n\n    /**\n     * Adds one or more elements to the front of an array and returns the new length of the array.\n     *\n     * This method modifies the array.\n     *\n     * @signature function(varargs)\n     * @param varargs {var} The elements to add to the front of the array.\n     * @return {Integer} The new array's length\n     */\n    unshift : null,\n\n    /**\n     * Returns a new array comprised of this array joined with other array(s) and/or value(s).\n     *\n     * This method does not modify the array and returns a modified copy of the original.\n     *\n     * @signature function(varargs)\n     * @param varargs {Array|var} Arrays and/or values to concatenate to the resulting array.\n     * @return {qx.type.BaseArray} New array built of the given arrays or values.\n     */\n    concat : null,\n\n    /**\n     * Joins all elements of an array into a string.\n     *\n     * @signature function(separator)\n     * @param separator {String} Specifies a string to separate each element of the array. The separator is\n     *   converted to a string if necessary. If omitted, the array elements are separated with a comma.\n     * @return {String} The stringified values of all elements divided by the given separator.\n     */\n    join : null,\n\n    /**\n     * Extracts a section of an array and returns a new array.\n     *\n     * @signature function(begin, end)\n     * @param begin {Integer} Zero-based index at which to begin extraction. As a negative index, start indicates\n     *   an offset from the end of the sequence. slice(-2) extracts the second-to-last element and the last element\n     *   in the sequence.\n     * @param end {Integer?length} Zero-based index at which to end extraction. slice extracts up to but not including end.\n     *   <code>slice(1,4)</code> extracts the second element through the fourth element (elements indexed 1, 2, and 3).\n     *   As a negative index, end indicates an offset from the end of the sequence. slice(2,-1) extracts the third element through the second-to-last element in the sequence.\n     *   If end is omitted, slice extracts to the end of the sequence.\n     * @return {qx.type.BaseArray} An new array which contains a copy of the given region.\n     */\n    slice : null,\n\n    /**\n     * Returns a string representing the array and its elements. Overrides the Object.prototype.toString method.\n     *\n     * @signature function()\n     * @return {String} The string representation of the array.\n     */\n    toString : null,\n\n    /**\n     * Returns the first (least) index of an element within the array equal to the specified value, or -1 if none is found.\n     *\n     * @signature function(searchElement, fromIndex)\n     * @param searchElement {var} Element to locate in the array.\n     * @param fromIndex {Integer?0} The index at which to begin the search. Defaults to 0, i.e. the\n     *   whole array will be searched. If the index is greater than or equal to the length of the\n     *   array, -1 is returned, i.e. the array will not be searched. If negative, it is taken as\n     *   the offset from the end of the array. Note that even when the index is negative, the array\n     *   is still searched from front to back. If the calculated index is less than 0, the whole\n     *   array will be searched.\n     * @return {Integer} The index of the given element\n     */\n    indexOf : null,\n\n    /**\n     * Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found.\n     *\n     * @signature function(searchElement, fromIndex)\n     * @param searchElement {var} Element to locate in the array.\n     * @param fromIndex {Integer?length} The index at which to start searching backwards. Defaults to\n     *   the array's length, i.e. the whole array will be searched. If the index is greater than\n     *   or equal to the length of the array, the whole array will be searched. If negative, it\n     *   is taken as the offset from the end of the array. Note that even when the index is\n     *   negative, the array is still searched from back to front. If the calculated index is\n     *   less than 0, -1 is returned, i.e. the array will not be searched.\n     * @return {Integer} The index of the given element\n     */\n    lastIndexOf : null,\n\n    /**\n     * Executes a provided function once per array element.\n     *\n     * <code>forEach</code> executes the provided function (<code>callback</code>) once for each\n     * element present in the array.  <code>callback</code> is invoked only for indexes of the array\n     * which have assigned values; it is not invoked for indexes which have been deleted or which\n     * have never been assigned values.\n     *\n     * <code>callback</code> is invoked with three arguments: the value of the element, the index\n     * of the element, and the Array object being traversed.\n     *\n     * If a <code>obj</code> parameter is provided to <code>forEach</code>, it will be used\n     * as the <code>this</code> for each invocation of the <code>callback</code>.  If it is not\n     * provided, or is <code>null</code>, the global object associated with <code>callback</code>\n     * is used instead.\n     *\n     * <code>forEach</code> does not mutate the array on which it is called.\n     *\n     * The range of elements processed by <code>forEach</code> is set before the first invocation of\n     * <code>callback</code>.  Elements which are appended to the array after the call to\n     * <code>forEach</code> begins will not be visited by <code>callback</code>. If existing elements\n     * of the array are changed, or deleted, their value as passed to <code>callback</code> will be\n     * the value at the time <code>forEach</code> visits them; elements that are deleted are not visited.\n     *\n     * @signature function(callback, obj)\n     * @param callback {Function} Function to execute for each element.\n     * @param obj {Object} Object to use as this when executing callback.\n     */\n    forEach : null,\n\n    /**\n     * Creates a new array with all elements that pass the test implemented by the provided\n     * function.\n     *\n     * <code>filter</code> calls a provided <code>callback</code> function once for each\n     * element in an array, and constructs a new array of all the values for which\n     * <code>callback</code> returns a true value.  <code>callback</code> is invoked only\n     * for indexes of the array which have assigned values; it is not invoked for indexes\n     * which have been deleted or which have never been assigned values.  Array elements which\n     * do not pass the <code>callback</code> test are simply skipped, and are not included\n     * in the new array.\n     *\n     * <code>callback</code> is invoked with three arguments: the value of the element, the\n     * index of the element, and the Array object being traversed.\n     *\n     * If a <code>obj</code> parameter is provided to <code>filter</code>, it will\n     * be used as the <code>this</code> for each invocation of the <code>callback</code>.\n     * If it is not provided, or is <code>null</code>, the global object associated with\n     * <code>callback</code> is used instead.\n     *\n     * <code>filter</code> does not mutate the array on which it is called. The range of\n     * elements processed by <code>filter</code> is set before the first invocation of\n     * <code>callback</code>. Elements which are appended to the array after the call to\n     * <code>filter</code> begins will not be visited by <code>callback</code>. If existing\n     * elements of the array are changed, or deleted, their value as passed to <code>callback</code>\n     * will be the value at the time <code>filter</code> visits them; elements that are deleted\n     * are not visited.\n     *\n     * @signature function(callback, obj)\n     * @param callback {Function} Function to test each element of the array.\n     * @param obj {Object} Object to use as <code>this</code> when executing <code>callback</code>.\n     * @return {qx.type.BaseArray} The newly created array with all matching elements\n     */\n    filter : null,\n\n    /**\n     * Creates a new array with the results of calling a provided function on every element in this array.\n     *\n     * <code>map</code> calls a provided <code>callback</code> function once for each element in an array,\n     * in order, and constructs a new array from the results.  <code>callback</code> is invoked only for\n     * indexes of the array which have assigned values; it is not invoked for indexes which have been\n     * deleted or which have never been assigned values.\n     *\n     * <code>callback</code> is invoked with three arguments: the value of the element, the index of the\n     * element, and the Array object being traversed.\n     *\n     * If a <code>obj</code> parameter is provided to <code>map</code>, it will be used as the\n     * <code>this</code> for each invocation of the <code>callback</code>. If it is not provided, or is\n     * <code>null</code>, the global object associated with <code>callback</code> is used instead.\n     *\n     * <code>map</code> does not mutate the array on which it is called.\n     *\n     * The range of elements processed by <code>map</code> is set before the first invocation of\n     * <code>callback</code>. Elements which are appended to the array after the call to <code>map</code>\n     * begins will not be visited by <code>callback</code>.  If existing elements of the array are changed,\n     * or deleted, their value as passed to <code>callback</code> will be the value at the time\n     * <code>map</code> visits them; elements that are deleted are not visited.\n     *\n     * @signature function(callback, obj)\n     * @param callback {Function} Function produce an element of the new Array from an element of the current one.\n     * @param obj {Object} Object to use as <code>this</code> when executing <code>callback</code>.\n     * @return {qx.type.BaseArray} A new array which contains the return values of every item executed through the given function\n     */\n    map : null,\n\n    /**\n     * Tests whether some element in the array passes the test implemented by the provided function.\n     *\n     * <code>some</code> executes the <code>callback</code> function once for each element present in\n     * the array until it finds one where <code>callback</code> returns a true value. If such an element\n     * is found, <code>some</code> immediately returns <code>true</code>. Otherwise, <code>some</code>\n     * returns <code>false</code>. <code>callback</code> is invoked only for indexes of the array which\n     * have assigned values; it is not invoked for indexes which have been deleted or which have never\n     * been assigned values.\n     *\n     * <code>callback</code> is invoked with three arguments: the value of the element, the index of the\n     * element, and the Array object being traversed.\n     *\n     * If a <code>obj</code> parameter is provided to <code>some</code>, it will be used as the\n     * <code>this</code> for each invocation of the <code>callback</code>. If it is not provided, or is\n     * <code>null</code>, the global object associated with <code>callback</code> is used instead.\n     *\n     * <code>some</code> does not mutate the array on which it is called.\n     *\n     * The range of elements processed by <code>some</code> is set before the first invocation of\n     * <code>callback</code>.  Elements that are appended to the array after the call to <code>some</code>\n     * begins will not be visited by <code>callback</code>. If an existing, unvisited element of the array\n     * is changed by <code>callback</code>, its value passed to the visiting <code>callback</code> will\n     * be the value at the time that <code>some</code> visits that element's index; elements that are\n     * deleted are not visited.\n     *\n     * @signature function(callback, obj)\n     * @param callback {Function} Function to test for each element.\n     * @param obj {Object} Object to use as <code>this</code> when executing <code>callback</code>.\n     * @return {Boolean} Whether at least one elements passed the test\n     */\n    some : null,\n\n    /**\n     * Tests whether all elements in the array pass the test implemented by the provided function.\n     *\n     * <code>every</code> executes the provided <code>callback</code> function once for each element\n     * present in the array until it finds one where <code>callback</code> returns a false value. If\n     * such an element is found, the <code>every</code> method immediately returns <code>false</code>.\n     * Otherwise, if <code>callback</code> returned a true value for all elements, <code>every</code>\n     * will return <code>true</code>.  <code>callback</code> is invoked only for indexes of the array\n     * which have assigned values; it is not invoked for indexes which have been deleted or which have\n     * never been assigned values.\n     *\n     * <code>callback</code> is invoked with three arguments: the value of the element, the index of\n     * the element, and the Array object being traversed.\n     *\n     * If a <code>obj</code> parameter is provided to <code>every</code>, it will be used as\n     * the <code>this</code> for each invocation of the <code>callback</code>. If it is not provided,\n     * or is <code>null</code>, the global object associated with <code>callback</code> is used instead.\n     *\n     * <code>every</code> does not mutate the array on which it is called. The range of elements processed\n     * by <code>every</code> is set before the first invocation of <code>callback</code>. Elements which\n     * are appended to the array after the call to <code>every</code> begins will not be visited by\n     * <code>callback</code>.  If existing elements of the array are changed, their value as passed\n     * to <code>callback</code> will be the value at the time <code>every</code> visits them; elements\n     * that are deleted are not visited.\n     *\n     * @signature function(callback, obj)\n     * @param callback {Function} Function to test for each element.\n     * @param obj {Object} Object to use as <code>this</code> when executing <code>callback</code>.\n     * @return {Boolean} Whether all elements passed the test\n     */\n    every : null\n  }\n});\n\n(function() {\n\nfunction createStackConstructor(stack)\n{\n  // In IE don't inherit from Array but use an empty object as prototype\n  // and copy the methods from Array\n  if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n  {\n    Stack.prototype = {\n      length : 0,\n      $$isArray : true\n    };\n\n    var args = \"pop.push.reverse.shift.sort.splice.unshift.join.slice\".split(\".\");\n\n    for (var length = args.length; length;) {\n      Stack.prototype[args[--length]] = Array.prototype[args[length]];\n    }\n  };\n\n  // Remember Array's slice method\n  var slice = Array.prototype.slice;\n\n  // Fix \"concat\" method\n  Stack.prototype.concat = function()\n  {\n    var constructor = this.slice(0);\n\n    for (var i=0, length=arguments.length; i<length; i++)\n    {\n      var copy;\n\n      if (arguments[i] instanceof Stack) {\n        copy = slice.call(arguments[i], 0);\n      } else if (arguments[i] instanceof Array) {\n        copy = arguments[i];\n      } else {\n        copy = [arguments[i]];\n      }\n\n      constructor.push.apply(constructor, copy);\n    }\n\n    return constructor;\n  };\n\n  // Fix \"toString\" method\n  Stack.prototype.toString = function(){\n    return slice.call(this, 0).toString();\n  };\n\n  // Fix \"toLocaleString\"\n  Stack.prototype.toLocaleString = function() {\n    return slice.call(this, 0).toLocaleString();\n  };\n\n  // Fix constructor\n  Stack.prototype.constructor = Stack;\n\n\n  // Add JS 1.6 Array features\n  Stack.prototype.indexOf = Array.prototype.indexOf;\n  Stack.prototype.lastIndexOf = Array.prototype.lastIndexOf;\n  Stack.prototype.forEach = Array.prototype.forEach;\n  Stack.prototype.some = Array.prototype.some;\n  Stack.prototype.every = Array.prototype.every;\n\n  var filter = Array.prototype.filter;\n  var map = Array.prototype.map;\n\n\n  // Fix methods which generates a new instance\n  // to return an instance of the same class\n  Stack.prototype.filter = function()\n  {\n    var ret = new this.constructor;\n    ret.push.apply(ret, filter.apply(this, arguments));\n    return ret;\n  };\n\n  Stack.prototype.map = function()\n  {\n    var ret = new this.constructor;\n    ret.push.apply(ret, map.apply(this, arguments));\n    return ret;\n  };\n\n  Stack.prototype.slice = function()\n  {\n    var ret = new this.constructor;\n    ret.push.apply(ret, Array.prototype.slice.apply(this, arguments));\n    return ret;\n  };\n\n  Stack.prototype.splice = function()\n  {\n    var ret = new this.constructor;\n    ret.push.apply(ret, Array.prototype.splice.apply(this, arguments));\n    return ret;\n  };\n\n  // Add new \"toArray\" method for convert a base array to a native Array\n  Stack.prototype.toArray = function() {\n    return Array.prototype.slice.call(this, 0);\n  };\n\n  // Add valueOf() to return the length\n  Stack.prototype.valueOf = function(){\n    return this.length;\n  };\n\n  // Return final class\n  return Stack;\n}\n\n\nfunction Stack(length)\n{\n  if(arguments.length === 1 && typeof length === \"number\") {\n    this.length = -1 < length && length === length >> .5 ? length : this.push(length);\n  } else if(arguments.length) {\n    this.push.apply(this, arguments);\n  }\n};\n\nfunction PseudoArray(){};\nPseudoArray.prototype = [];\nStack.prototype = new PseudoArray;\nStack.prototype.length = 0;\n\nqx.type.BaseArray = createStackConstructor(Stack);\n\n})();\n"
  ]
}