{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/splitpane/Slider.js",
    "../transpiled/qx/ui/splitpane/Splitter.js",
    "../transpiled/qx/ui/splitpane/Blocker.js",
    "../transpiled/qx/ui/splitpane/VLayout.js",
    "../transpiled/qx/ui/splitpane/HLayout.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-38.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * The slider of the SplitPane (used during drag sessions for fast feedback)\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.splitpane.Slider\",\n{\n  extend : qx.ui.core.Widget,\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    allowShrinkX :\n    {\n      refine : true,\n      init : false\n    },\n\n    // overridden\n    allowShrinkY :\n    {\n      refine : true,\n      init : false\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * The splitter is the element between the two panes.\n *\n * @internal\n *\n * @childControl knob {qx.ui.basic.Image} knob to resize the splitpane\n */\nqx.Class.define(\"qx.ui.splitpane.Splitter\",\n{\n  extend : qx.ui.core.Widget,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param parentWidget {qx.ui.splitpane.Pane} The underlaying split pane.\n   */\n  construct : function(parentWidget)\n  {\n    this.base(arguments);\n\n    // set layout\n    if (parentWidget.getOrientation() == \"vertical\")\n    {\n      this._setLayout(new qx.ui.layout.HBox(0, \"center\"));\n      this._getLayout().setAlignY(\"middle\");\n    }\n    else\n    {\n      this._setLayout(new qx.ui.layout.VBox(0, \"middle\"));\n      this._getLayout().setAlignX(\"center\");\n    }\n\n    // create knob child control\n    if (this.getVisible()) {\n      this._createChildControl(\"knob\");\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    allowShrinkX :\n    {\n      refine : true,\n      init : false\n    },\n\n    // overridden\n    allowShrinkY :\n    {\n      refine : true,\n      init : false\n    },\n    /**\n     * The visibility of the splitter.\n     * Allows to remove the splitter in favor of other visual separation means like background color differences.\n     */\n    visible :\n    {\n      init: true,\n      check: \"Boolean\",\n      themeable: true,\n      apply: \"_applyVisible\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        // Create splitter knob\n        case \"knob\":\n          control = new qx.ui.basic.Image;\n          this._add(control);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    _applyVisible: function(visible, old) {\n      this.getChildControl(\"knob\").setVisibility(visible ? \"visible\" : \"excluded\");\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n * A special blocker element for the splitpane which is based on\n * {@link qx.html.Element} and takes care of the positioning of the div.\n *\n * @internal\n * @asset(qx/static/blank.gif)\n */\nqx.Class.define(\"qx.ui.splitpane.Blocker\",\n{\n  extend : qx.html.Element,\n\n  /**\n   * @param orientation {String} The orientation of the split pane control.\n   */\n  construct : function(orientation)\n  {\n    var styles = {\n      position: \"absolute\",\n      zIndex: 11\n    };\n\n    // IE needs some extra love here to convince it to block events.\n    if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n    {\n      styles.backgroundImage = \"url(\" + qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\") + \")\";\n      styles.backgroundRepeat = \"repeat\";\n    }\n\n    this.base(arguments, \"div\", styles);\n\n    // Initialize orientation\n    if (orientation) {\n      this.setOrientation(orientation);\n    } else {\n      this.initOrientation();\n    }\n  },\n\n\n  properties :\n  {\n    /**\n     * The orientation of the blocker which should be the same as the\n     * orientation of the splitpane.\n     */\n    orientation :\n    {\n      init  : \"horizontal\",\n      check : [ \"horizontal\", \"vertical\" ],\n      apply : \"_applyOrientation\"\n    }\n  },\n\n\n  members :\n  {\n\n    // property apply\n    _applyOrientation : function(value, old) {\n      if (value == \"horizontal\") {\n        this.setStyle(\"height\", \"100%\");\n        this.setStyle(\"cursor\", \"col-resize\");\n        this.setStyle(\"top\", null);\n      } else {\n        this.setStyle(\"width\", \"100%\");\n        this.setStyle(\"left\", null);\n        this.setStyle(\"cursor\", \"row-resize\");\n      }\n    },\n\n\n    /**\n     * Takes the two parameters and set the propper width of the blocker.\n     *\n     * @param offset {Number} The offset of the splitpane.\n     * @param spliterSize {Number} The width of the splitter.\n     */\n    setWidth : function(offset, spliterSize) {\n      var width = spliterSize + 2 * offset;\n      this.setStyle(\"width\", width + \"px\");\n    },\n\n\n    /**\n     * Takes the two parameter and sets the propper height of the blocker.\n     *\n     * @param offset {Number} The offset of the splitpane.\n     * @param spliterSize {Number} The height of the splitter.\n     */\n    setHeight : function(offset, spliterSize) {\n      var height = spliterSize + 2 * offset;\n      this.setStyle(\"height\", height + \"px\");\n    },\n\n\n    /**\n     * Takes the two parameter and sets the propper left position of\n     * the blocker.\n     *\n     * @param offset {Number} The offset of the splitpane.\n     * @param splitterLeft {Number} The left position of the splitter.\n     */\n    setLeft : function(offset, splitterLeft) {\n      var left = splitterLeft - offset;\n      this.setStyle(\"left\", left + \"px\");\n    },\n\n\n    /**\n     * Takes the two parameter and sets the propper top position of\n     * the blocker.\n     *\n     * @param offset {Number} The offset of the splitpane.\n     * @param splitterTop {Number} The top position of the splitter.\n     */\n    setTop : function(offset, splitterTop) {\n      var top = splitterTop - offset;\n      this.setStyle(\"top\", top + \"px\");\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Layouter for vertical split panes.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.splitpane.VLayout\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value)\n      {\n        this.assert(name === \"type\" || name === \"flex\", \"The property '\"+name+\"' is not supported by the split layout!\");\n\n        if (name == \"flex\") {\n          this.assertNumber(value);\n        }\n\n        if (name == \"type\") {\n          this.assertString(value);\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var child, type;\n      var begin, splitter, slider, end;\n      var paddingLeft = padding.left || 0;\n      var paddingTop = padding.top || 0;\n\n      for (var i=0; i<length; i++)\n      {\n        child = children[i];\n        type = child.getLayoutProperties().type;\n\n        if (type === \"splitter\") {\n          splitter = child;\n        } else if (type === \"slider\") {\n          slider = child;\n        } else if (!begin) {\n          begin = child;\n        } else {\n          end = child;\n        }\n      }\n\n      if (begin && end)\n      {\n        var beginFlex = begin.getLayoutProperties().flex;\n        var endFlex = end.getLayoutProperties().flex;\n\n        if (beginFlex == null) {\n          beginFlex = 1;\n        }\n\n        if (endFlex == null) {\n          endFlex = 1;\n        }\n\n        var beginHint = begin.getSizeHint();\n        var splitterHint = splitter.getSizeHint();\n        var endHint = end.getSizeHint();\n\n        var beginHeight = beginHint.height;\n        var splitterHeight = splitterHint.height;\n        var endHeight = endHint.height;\n\n        if (beginFlex > 0 && endFlex > 0)\n        {\n          var flexSum = beginFlex + endFlex;\n          var flexAvailable = availHeight - splitterHeight;\n\n          var beginHeight = Math.round((flexAvailable / flexSum) * beginFlex);\n          var endHeight = flexAvailable - beginHeight;\n\n          var sizes = qx.ui.layout.Util.arrangeIdeals(beginHint.minHeight, beginHeight, beginHint.maxHeight,\n            endHint.minHeight, endHeight, endHint.maxHeight);\n\n          beginHeight = sizes.begin;\n          endHeight = sizes.end;\n        }\n        else if (beginFlex > 0)\n        {\n          beginHeight = availHeight - splitterHeight - endHeight;\n          if (beginHeight < beginHint.minHeight) {\n            beginHeight = beginHint.minHeight;\n          }\n\n          if (beginHeight > beginHint.maxHeight) {\n            beginHeight = beginHint.maxHeight;\n          }\n        }\n        else if (endFlex > 0)\n        {\n          endHeight = availHeight - beginHeight - splitterHeight;\n          if (endHeight < endHint.minHeight) {\n            endHeight = endHint.minHeight;\n          }\n\n          if (endHeight > endHint.maxHeight) {\n            endHeight = endHint.maxHeight;\n          }\n        }\n\n        begin.renderLayout(paddingLeft, paddingTop, availWidth, beginHeight);\n        splitter.renderLayout(paddingLeft, beginHeight + paddingTop, availWidth, splitterHeight);\n        end.renderLayout(paddingLeft, beginHeight+splitterHeight + paddingTop, availWidth, endHeight);\n      }\n      else\n      {\n        // Hide the splitter completely\n        splitter.renderLayout(0, 0, 0, 0);\n\n        // Render one child\n        if (begin) {\n          begin.renderLayout(paddingLeft, paddingTop, availWidth, availHeight);\n        } else if (end) {\n          end.renderLayout(paddingLeft, paddingTop, availWidth, availHeight);\n        }\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var child, hint, props;\n      var minHeight=0, height=0, maxHeight=0;\n      var minWidth=0, width=0, maxWidth=0;\n\n      for (var i=0; i<length; i++)\n      {\n        child = children[i];\n        props = child.getLayoutProperties();\n\n        // The slider is not relevant for auto sizing\n        if (props.type === \"slider\") {\n          continue;\n        }\n\n        hint = child.getSizeHint();\n\n        minHeight += hint.minHeight;\n        height += hint.height;\n        maxHeight += hint.maxHeight;\n\n        if (hint.minWidth > minWidth) {\n          minWidth = hint.minWidth;\n        }\n\n        if (hint.width > width) {\n          width = hint.width;\n        }\n\n        if (hint.maxWidth > maxWidth) {\n          maxWidth = hint.maxWidth;\n        }\n      }\n\n      return {\n        minHeight : minHeight,\n        height : height,\n        maxHeight : maxHeight,\n        minWidth : minWidth,\n        width : width,\n        maxWidth : maxWidth\n      };\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Layouter for horizontal split panes.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.splitpane.HLayout\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value)\n      {\n        this.assert(name === \"type\" || name === \"flex\", \"The property '\"+name+\"' is not supported by the split layout!\");\n\n        if (name == \"flex\") {\n          this.assertNumber(value);\n        }\n\n        if (name == \"type\") {\n          this.assertString(value);\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var child, type;\n      var begin, splitter, slider, end;\n      var paddingLeft = padding.left || 0;\n      var paddingTop = padding.top || 0;\n\n      for (var i=0; i<length; i++)\n      {\n        child = children[i];\n        type = child.getLayoutProperties().type;\n\n        if (type === \"splitter\") {\n          splitter = child;\n        } else if (type === \"slider\") {\n          slider = child;\n        } else if (!begin) {\n          begin = child;\n        } else {\n          end = child;\n        }\n      }\n\n      if (begin && end)\n      {\n        var beginFlex = begin.getLayoutProperties().flex;\n        var endFlex = end.getLayoutProperties().flex;\n\n        if (beginFlex == null) {\n          beginFlex = 1;\n        }\n\n        if (endFlex == null) {\n          endFlex = 1;\n        }\n\n        var beginHint = begin.getSizeHint();\n        var splitterHint = splitter.getSizeHint();\n        var endHint = end.getSizeHint();\n\n        var beginWidth = beginHint.width;\n        var splitterWidth = splitterHint.width;\n        var endWidth = endHint.width;\n\n        if (beginFlex > 0 && endFlex > 0)\n        {\n          var flexSum = beginFlex + endFlex;\n          var flexAvailable = availWidth - splitterWidth;\n\n          var beginWidth = Math.round((flexAvailable / flexSum) * beginFlex);\n          var endWidth = flexAvailable - beginWidth;\n\n          var sizes = qx.ui.layout.Util.arrangeIdeals(beginHint.minWidth, beginWidth, beginHint.maxWidth,\n            endHint.minWidth, endWidth, endHint.maxWidth);\n\n          beginWidth = sizes.begin;\n          endWidth = sizes.end;\n        }\n        else if (beginFlex > 0)\n        {\n          beginWidth = availWidth - splitterWidth - endWidth;\n          if (beginWidth < beginHint.minWidth) {\n            beginWidth = beginHint.minWidth;\n          }\n\n          if (beginWidth > beginHint.maxWidth) {\n            beginWidth = beginHint.maxWidth;\n          }\n        }\n        else if (endFlex > 0)\n        {\n          endWidth = availWidth - beginWidth - splitterWidth;\n          if (endWidth < endHint.minWidth) {\n            endWidth = endHint.minWidth;\n          }\n\n          if (endWidth > endHint.maxWidth) {\n            endWidth = endHint.maxWidth;\n          }\n        }\n\n        begin.renderLayout(paddingLeft, paddingTop, beginWidth, availHeight);\n        splitter.renderLayout(beginWidth + paddingLeft, paddingTop, splitterWidth, availHeight);\n        end.renderLayout(beginWidth+splitterWidth + paddingLeft, paddingTop, endWidth, availHeight);\n      }\n      else\n      {\n        // Hide the splitter completely\n        splitter.renderLayout(0, 0, 0, 0);\n\n        // Render one child\n        if (begin) {\n          begin.renderLayout(paddingLeft, paddingTop, availWidth, availHeight);\n        } else if (end) {\n          end.renderLayout(paddingLeft, paddingTop, availWidth, availHeight);\n        }\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var child, hint, props;\n      var minWidth=0, width=0, maxWidth=0;\n      var minHeight=0, height=0, maxHeight=0;\n\n      for (var i=0; i<length; i++)\n      {\n        child = children[i];\n        props = child.getLayoutProperties();\n\n        // The slider is not relevant for auto sizing\n        if (props.type === \"slider\") {\n          continue;\n        }\n\n        hint = child.getSizeHint();\n\n        minWidth += hint.minWidth;\n        width += hint.width;\n        maxWidth += hint.maxWidth;\n\n        if (hint.minHeight > minHeight) {\n          minHeight = hint.minHeight;\n        }\n\n        if (hint.height > height) {\n          height = hint.height;\n        }\n\n        if (hint.maxHeight > maxHeight) {\n          maxHeight = hint.maxHeight;\n        }\n      }\n\n      return {\n        minWidth : minWidth,\n        width : width,\n        maxWidth : maxWidth,\n        minHeight : minHeight,\n        height : height,\n        maxHeight : maxHeight\n      };\n    }\n  }\n});\n"
  ]
}