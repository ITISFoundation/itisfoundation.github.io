{
  "version": 3,
  "sources": [
    "../transpiled/qx/data/controller/Form.js",
    "../transpiled/qx/ui/form/IDateForm.js",
    "../transpiled/qx/ui/form/DateField.js",
    "../transpiled/qx/ui/form/Spinner.js",
    "../transpiled/qx/ui/form/CheckBox.js",
    "../transpiled/qx/ui/form/ComboBox.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-48.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * <h2>Form Controller</h2>\n *\n * *General idea*\n *\n * The form controller is responsible for connecting a form with a model. If no\n * model is given, a model can be created. This created model will fit exactly\n * to the given form and can be used for serialization. All the connections\n * between the form items and the model are handled by an internal\n * {@link qx.data.controller.Object}.\n *\n * *Features*\n *\n * * Connect a form to a model (bidirectional)\n * * Create a model for a given form\n *\n * *Usage*\n *\n * The controller only works if both a controller and a model are set.\n * Creating a model will automatically set the created model.\n *\n * *Cross reference*\n *\n * * If you want to bind single values, use {@link qx.data.controller.Object}\n * * If you want to bind a list like widget, use {@link qx.data.controller.List}\n * * If you want to bind a tree widget, use {@link qx.data.controller.Tree}\n */\nqx.Class.define(\"qx.data.controller.Form\",\n{\n  extend : qx.core.Object,\n  implement: [ qx.core.IDisposable ],\n  \n  /**\n   * @param model {qx.core.Object | null} The model to bind the target to. The\n   *   given object will be set as {@link #model} property.\n   * @param target {qx.ui.form.Form | null} The form which contains the form\n   *   items. The given form will be set as {@link #target} property.\n   * @param selfUpdate {Boolean?false} If set to true, you need to call the\n   *   {@link #updateModel} method to get the data in the form to the model.\n   *   Otherwise, the data will be synced automatically on every change of\n   *   the form.\n   */\n  construct : function(model, target, selfUpdate)\n  {\n    this.base(arguments);\n\n    this._selfUpdate = !!selfUpdate;\n    this.__bindingOptions = {};\n\n    if (model != null) {\n      this.setModel(model);\n    }\n\n    if (target != null) {\n      this.setTarget(target);\n    }\n  },\n\n\n  properties :\n  {\n    /** Data object containing the data which should be shown in the target. */\n    model :\n    {\n      check: \"qx.core.Object\",\n      apply: \"_applyModel\",\n      event: \"changeModel\",\n      nullable: true,\n      dereference: true\n    },\n\n\n    /** The target widget which should show the data. */\n    target :\n    {\n      check: \"qx.ui.form.Form\",\n      apply: \"_applyTarget\",\n      event: \"changeTarget\",\n      nullable: true,\n      init: null,\n      dereference: true\n    }\n  },\n\n\n  members :\n  {\n    __objectController : null,\n    __bindingOptions : null,\n\n\n    /**\n     * The form controller uses for setting up the bindings the fundamental\n     * binding layer, the {@link qx.data.SingleValueBinding}. To achieve a\n     * binding in both directions, two bindings are needed. With this method,\n     * you have the opportunity to set the options used for the bindings.\n     *\n     * @param name {String} The name of the form item for which the options\n     *   should be used.\n     * @param model2target {Map} Options map used for the binding from model\n     *   to target. The possible options can be found in the\n     *   {@link qx.data.SingleValueBinding} class.\n     * @param target2model {Map} Options map used for the binding from target\n     *   to model. The possible options can be found in the\n     *   {@link qx.data.SingleValueBinding} class.\n     */\n    addBindingOptions : function(name, model2target, target2model)\n    {\n      this.__bindingOptions[name] = [model2target, target2model];\n\n      // return if not both, model and target are given\n      if (this.getModel() == null || this.getTarget() == null) {\n        return;\n      }\n\n      // renew the affected binding\n      var item = this.getTarget().getItems()[name];\n      var targetProperty =\n        this.__isModelSelectable(item) ? \"modelSelection[0]\" : \"value\";\n\n      // remove the binding\n      this.__objectController.removeTarget(item, targetProperty, name);\n      // set up the new binding with the options\n      this.__objectController.addTarget(\n        item, targetProperty, name, !this._selfUpdate, model2target, target2model\n      );\n    },\n\n\n    /**\n     * Creates and sets a model using the {@link qx.data.marshal.Json} object.\n     * Remember that this method can only work if the form is set. The created\n     * model will fit exactly that form. Changing the form or adding an item to\n     * the form will need a new model creation.\n     *\n     * @param includeBubbleEvents {Boolean} Whether the model should support\n     *   the bubbling of change events or not.\n     * @return {qx.core.Object} The created model.\n     */\n    createModel : function(includeBubbleEvents) {\n      var target = this.getTarget();\n\n      // throw an error if no target is set\n      if (target == null) {\n        throw new Error(\"No target is set.\");\n      }\n\n      var items = target.getItems();\n      var data = {};\n      for (var name in items) {\n        var names = name.split(\".\");\n        var currentData = data;\n        for (var i = 0; i < names.length; i++) {\n          // if its the last item\n          if (i + 1 == names.length) {\n            // check if the target is a selection\n            var clazz = items[name].constructor;\n            var itemValue = null;\n            if (qx.Class.hasInterface(clazz, qx.ui.core.ISingleSelection)) {\n              // use the first element of the selection because passed to the\n              // marshaler (and its single selection anyway) [BUG #3541]\n              itemValue = items[name].getModelSelection().getItem(0) || null;\n            } else {\n              itemValue = items[name].getValue();\n            }\n            // call the converter if available [BUG #4382]\n            if (this.__bindingOptions[name] && this.__bindingOptions[name][1]) {\n              itemValue = this.__bindingOptions[name][1].converter(itemValue);\n            }\n            currentData[names[i]] = itemValue;\n          } else {\n            // if its not the last element, check if the object exists\n            if (!currentData[names[i]]) {\n              currentData[names[i]] = {};\n            }\n            currentData = currentData[names[i]];\n          }\n        }\n      }\n\n      var model = qx.data.marshal.Json.createModel(data, includeBubbleEvents);\n      this.setModel(model);\n\n      return model;\n    },\n\n\n    /**\n     * Responsible for syncing the data from entered in the form to the model.\n     * Please keep in mind that this method only works if you create the form\n     * with <code>selfUpdate</code> set to true. Otherwise, this method will\n     * do nothing because updates will be synced automatically on every\n     * change.\n     */\n    updateModel: function(){\n      // only do stuff if self update is enabled and a model or target is set\n      if (!this._selfUpdate || !this.getModel() || !this.getTarget()) {\n        return;\n      }\n\n      var items = this.getTarget().getItems();\n      for (var name in items) {\n        var item = items[name];\n        var sourceProperty =\n          this.__isModelSelectable(item) ? \"modelSelection[0]\" : \"value\";\n\n        var options = this.__bindingOptions[name];\n        options = options && this.__bindingOptions[name][1];\n\n        qx.data.SingleValueBinding.updateTarget(\n          item, sourceProperty, this.getModel(), name, options\n        );\n      }\n    },\n\n\n    // apply method\n    _applyTarget : function(value, old) {\n      // if an old target is given, remove the binding\n      if (old != null) {\n        this.__tearDownBinding(old);\n      }\n\n      // do nothing if no target is set\n      if (this.getModel() == null) {\n        return;\n      }\n\n      // target and model are available\n      if (value != null) {\n        this.__setUpBinding();\n      }\n    },\n\n\n    // apply method\n    _applyModel : function(value, old) {\n\n      // set the model to null to reset all items before removing them\n      if (this.__objectController != null && value == null) {\n        this.__objectController.setModel(null);\n      }\n\n      // first, get rid off all bindings (avoids wrong data population)\n      if (this.__objectController != null && this.getTarget() != null) {\n        var items = this.getTarget().getItems();\n        for (var name in items) {\n          var item = items[name];\n          var targetProperty =\n            this.__isModelSelectable(item) ? \"modelSelection[0]\" : \"value\";\n          this.__objectController.removeTarget(item, targetProperty, name);\n        }\n      }\n\n      // set the model of the object controller if available\n      if (this.__objectController != null) {\n        this.__objectController.setModel(value);\n      }\n\n      // do nothing is no target is set\n      if (this.getTarget() == null) {\n        return;\n      }\n      else {\n        // if form was validated with errors and model changes\n        // the errors should be cleared see #8977\n        this.getTarget().getValidationManager().reset();\n      }\n\n      // model and target are available\n      if (value != null) {\n        this.__setUpBinding();\n      }\n    },\n\n\n    /**\n     * Internal helper for setting up the bindings using\n     * {@link qx.data.controller.Object#addTarget}. All bindings are set\n     * up bidirectional.\n     */\n    __setUpBinding : function() {\n      // create the object controller\n      if (this.__objectController == null) {\n        this.__objectController = new qx.data.controller.Object(this.getModel());\n      }\n\n      // get the form items\n      var items = this.getTarget().getItems();\n\n      // connect all items\n      for (var name in items) {\n        var item = items[name];\n        var targetProperty =\n          this.__isModelSelectable(item) ? \"modelSelection[0]\" : \"value\";\n        var options = this.__bindingOptions[name];\n\n        // try to bind all given items in the form\n        try {\n          if (options == null) {\n            this.__objectController.addTarget(item, targetProperty, name, !this._selfUpdate);\n          } else {\n            this.__objectController.addTarget(\n              item, targetProperty, name, !this._selfUpdate, options[0], options[1]\n            );\n          }\n        // ignore not working items\n        } catch (ex) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.warn(\"Could not bind property \" + name + \" of \" + this.getModel() + \":\\n\" + ex.stack);\n          }\n        }\n      }\n      // make sure the initial values of the model are taken for resetting [BUG #5874]\n      this.getTarget().redefineResetter();\n    },\n\n\n    /**\n     * Internal helper for removing all set up bindings using\n     * {@link qx.data.controller.Object#removeTarget}.\n     *\n     * @param oldTarget {qx.ui.form.Form} The form which has been removed.\n     */\n    __tearDownBinding : function(oldTarget) {\n      // do nothing if the object controller has not been created\n      if (this.__objectController == null) {\n        return;\n      }\n\n      // get the items\n      var items = oldTarget.getItems();\n\n      // disconnect all items\n      for (var name in items) {\n        var item = items[name];\n        var targetProperty =\n          this.__isModelSelectable(item) ? \"modelSelection[0]\" : \"value\";\n        this.__objectController.removeTarget(item, targetProperty, name);\n      }\n    },\n\n\n    /**\n     * Returns whether the given item implements\n     * {@link qx.ui.core.ISingleSelection} and\n     * {@link qx.ui.form.IModelSelection}.\n     *\n     * @param item {qx.ui.form.IForm} The form item to check.\n     *\n     * @return {Boolean} true, if given item fits.\n     */\n    __isModelSelectable : function(item) {\n      return qx.Class.hasInterface(item.constructor, qx.ui.core.ISingleSelection) &&\n      qx.Class.hasInterface(item.constructor, qx.ui.form.IModelSelection);\n    }\n\n  },\n\n\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n   */\n\n   destruct : function() {\n     // dispose the object controller because the bindings need to be removed\n     if (this.__objectController) {\n       this.__objectController.dispose();\n     }\n   }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Form interface for all form widgets which have date as their primary\n * data type like datechooser's.\n */\nqx.Interface.define(\"qx.ui.form.IDateForm\",\n{\n  extend : qx.ui.form.IField,\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the value was modified */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      VALUE PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the element's value.\n     *\n     * @param value {Date|null} The new value of the element.\n     */\n    setValue : function(value) {\n      return arguments.length == 1;\n    },\n\n\n    /**\n     * Resets the element's value to its initial value.\n     */\n    resetValue : function() {},\n\n\n    /**\n     * The element's user set value.\n     *\n     * @return {Date|null} The value.\n     */\n    getValue : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A *date field* is like a combo box with the date as popup. As button to\n * open the calendar a calendar icon is shown at the right to the textfield.\n *\n * To be conform with all form widgets, the {@link qx.ui.form.IForm} interface\n * is implemented.\n *\n * The following example creates a date field and sets the current\n * date as selected.\n *\n * <pre class='javascript'>\n * var dateField = new qx.ui.form.DateField();\n * this.getRoot().add(dateField, {top: 20, left: 20});\n * dateField.setValue(new Date());\n * </pre>\n *\n * @childControl list {qx.ui.control.DateChooser} date chooser component\n * @childControl popup {qx.ui.popup.Popup} popup which shows the list control\n * @childControl textfield {qx.ui.form.TextField} text field for manual date entry\n * @childControl button {qx.ui.form.Button} button that opens the list control\n */\nqx.Class.define(\"qx.ui.form.DateField\",\n{\n  extend : qx.ui.core.Widget,\n  include : [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.form.MForm\n  ],\n  implement : [\n    qx.ui.form.IForm,\n    qx.ui.form.IDateForm\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // set the layout\n    var layout = new qx.ui.layout.HBox();\n    this._setLayout(layout);\n    layout.setAlignY(\"middle\");\n\n    // text field\n    var textField = this._createChildControl(\"textfield\");\n    this._createChildControl(\"button\");\n\n    // register listeners\n    this.addListener(\"tap\", this._onTap, this);\n    this.addListener(\"blur\", this._onBlur, this);\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", function(e) {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    }, this);\n\n    this.addListener(\"focusout\", function(e) {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n    }, this);\n\n    // initializes the DateField with the default format\n    this._setDefaultDateFormat();\n\n    // adds a locale change listener\n    this._addLocaleChangeListener();\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Whenever the value is changed this event is fired\n     *\n     *  Event data: The new text value of the field.\n     */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n\n    /** The formatter, which converts the selected date to a string. **/\n    dateFormat :\n    {\n      check : \"qx.util.format.DateFormat\",\n      apply : \"_applyDateFormat\"\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder :\n    {\n      check : \"String\",\n      nullable : true,\n      apply : \"_applyPlaceholder\"\n    },\n\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"datefield\"\n    },\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    // overridden\n    width :\n    {\n      refine : true,\n      init : 120\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    __dateFormat : null,\n    __formatter : null,\n\n    /**\n     * Get the shared default date formatter\n     *\n     * @return {qx.util.format.DateFormat} The shared date formatter\n     */\n    getDefaultDateFormatter : function()\n    {\n      var format = qx.locale.Date.getDateFormat(\"medium\").toString();\n\n      if (format == this.__dateFormat) {\n        return this.__formatter;\n      }\n\n      if (this.__formatter) {\n        this.__formatter.dispose();\n      }\n\n      this.__formatter = new qx.util.format.DateFormat(format, qx.locale.Manager.getInstance().getLocale());\n      this.__dateFormat = format;\n\n      return this.__formatter;\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __localeListenerId : null,\n\n\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      focused : true,\n      invalid : true\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED METHODS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Sets the default date format which is returned by\n     * {@link #getDefaultDateFormatter}. You can override this method to\n     * define your own default format.\n     */\n    _setDefaultDateFormat : function() {\n      this.setDateFormat(qx.ui.form.DateField.getDefaultDateFormatter());\n    },\n\n\n    /**\n     * Checks for \"qx.dynlocale\" and adds a listener to the locale changes.\n     * On every change, {@link #_setDefaultDateFormat} is called to reinitialize\n     * the format. You can easily override that method to prevent that behavior.\n     */\n    _addLocaleChangeListener : function() {\n      // listen for locale changes\n      if (qx.core.Environment.get(\"qx.dynlocale\"))\n      {\n        this.__localeListenerId =\n          qx.locale.Manager.getInstance().addListener(\"changeLocale\", function() {\n            this._setDefaultDateFormat();\n          }, this);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n    * This method sets the date, which will be formatted according to\n    * #dateFormat to the date field. It will also select the date in the\n    * calendar popup.\n    *\n    * @param value {Date} The date to set.\n     */\n    setValue : function(value)\n    {\n      // set the date to the textfield\n      var textField = this.getChildControl(\"textfield\");\n      textField.setValue(this.getDateFormat().format(value));\n\n      // set the date in the datechooser\n      var dateChooser = this.getChildControl(\"list\");\n      dateChooser.setValue(value);\n    },\n\n\n    /**\n     * Returns the current set date, parsed from the input-field\n     * corresponding to the {@link #dateFormat}.\n     * If the given text could not be parsed, <code>null</code> will be returned.\n     *\n     * @return {Date} The currently set date.\n     */\n    getValue : function()\n    {\n      // get the value of the textfield\n      var textfieldValue = this.getChildControl(\"textfield\").getValue();\n\n      // return the parsed date\n      try {\n        if (textfieldValue == null || textfieldValue.length == 0) {\n          return null;\n        }\n        return this.getDateFormat().parse(textfieldValue);\n      } catch (ex) {\n        return null;\n      }\n    },\n\n\n    /**\n     * Resets the DateField. The textfield will be empty and the datechooser\n     * will also have no selection.\n     */\n    resetValue: function()\n    {\n      // set the date to the textfield\n      var textField = this.getChildControl(\"textfield\");\n      textField.setValue(\"\");\n\n      // set the date in the datechooser\n      var dateChooser = this.getChildControl(\"list\");\n      dateChooser.setValue(null);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LIST STUFF\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Shows the date chooser popup.\n     */\n    open : function()\n    {\n      var popup = this.getChildControl(\"popup\");\n\n      popup.placeToWidget(this, true);\n      popup.show();\n    },\n\n\n    /**\n     * Hides the date chooser popup.\n     */\n    close : function() {\n      this.getChildControl(\"popup\").hide();\n    },\n\n\n    /**\n     * Toggles the date chooser popup visibility.\n     */\n    toggle : function()\n    {\n      var isListOpen = this.getChildControl(\"popup\").isVisible();\n      if (isListOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply routine\n    _applyDateFormat : function(value, old)\n    {\n      // if old is undefined or null do nothing\n      if (!old) {\n        return;\n      }\n\n      // get the date with the old date format\n      try\n      {\n        var textfield = this.getChildControl(\"textfield\");\n        var dateStr = textfield.getValue();\n        if (dateStr != null) {\n          var currentDate = old.parse(dateStr);\n          textfield.setValue(value.format(currentDate));\n        }\n      }\n      catch (ex) {\n        // do nothing if the former date could not be parsed\n      }\n    },\n\n\n    // property apply routine\n    _applyPlaceholder : function(value, old) {\n      this.getChildControl(\"textfield\").setPlaceholder(value);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFocusable(false);\n          control.addState(\"inner\");\n          control.addListener(\"changeValue\", this._onTextFieldChangeValue, this);\n          control.addListener(\"blur\", this.close, this);\n          this._add(control, {flex: 1});\n          break;\n\n        case \"button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.setKeepActive(true);\n          control.addState(\"inner\");\n          control.addListener(\"execute\", this.toggle, this);\n          this._add(control);\n          break;\n\n        case \"list\":\n          control = new qx.ui.control.DateChooser();\n          control.setFocusable(false);\n          control.setKeepFocus(true);\n          control.addListener(\"execute\", this._onChangeDate, this);\n          break;\n\n        case \"popup\":\n          control = new qx.ui.popup.Popup(new qx.ui.layout.VBox);\n          control.setAutoHide(false);\n          control.add(this.getChildControl(\"list\"));\n          control.addListener(\"pointerup\", this._onChangeDate, this);\n          control.addListener(\"changeVisibility\", this._onPopupChangeVisibility, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n\n\n   /*\n   ---------------------------------------------------------------------------\n     EVENT LISTENERS\n   ---------------------------------------------------------------------------\n   */\n\n   /**\n    * Handler method which handles the tap on the calender popup.\n    *\n    * @param e {qx.event.type.Pointer} The pointer event.\n    */\n    _onChangeDate : function(e)\n    {\n      var textField = this.getChildControl(\"textfield\");\n\n      var selectedDate = this.getChildControl(\"list\").getValue();\n\n      textField.setValue(this.getDateFormat().format(selectedDate));\n      this.close();\n    },\n\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Pointer} Pointer tap event\n     */\n    _onTap : function(e) {\n      this.close();\n    },\n\n\n    /**\n     * Handler for the blur event of the current widget.\n     *\n     * @param e {qx.event.type.Focus} The blur event.\n     */\n    _onBlur : function(e) {\n      this.close();\n    },\n\n\n    /**\n     * Handler method which handles the key press. It forwards all key event\n     * to the opened date chooser except the escape key event. Escape closes\n     * the popup.\n     * If the list is cloned, all key events will not be processed further.\n     *\n     * @param e {qx.event.type.KeySequence} Keypress event\n     */\n    _onKeyPress : function(e)\n    {\n      // get the key identifier\n      var iden = e.getKeyIdentifier();\n      if (iden == \"Down\" && e.isAltPressed())\n      {\n        this.toggle();\n        e.stopPropagation();\n        return;\n      }\n\n      // if the popup is closed, ignore all\n      var popup = this.getChildControl(\"popup\");\n      if (popup.getVisibility() == \"hidden\") {\n        return;\n      }\n\n      // hide the list always on escape\n      if (iden == \"Escape\")\n      {\n        this.close();\n        e.stopPropagation();\n        return;\n      }\n\n      // Stop navigation keys when popup is open\n      if (iden === \"Left\" || iden === \"Right\" || iden === \"Down\" || iden === \"Up\") {\n        e.preventDefault();\n      }\n\n      // forward the rest of the events to the date chooser\n      this.getChildControl(\"list\").handleKeyPress(e);\n    },\n\n\n    /**\n     * Redirects changeVisibility event from the list to this widget.\n     *\n     * @param e {qx.event.type.Data} Property change event\n     */\n    _onPopupChangeVisibility : function(e)\n    {\n      e.getData() == \"visible\" ? this.addState(\"popupOpen\") : this.removeState(\"popupOpen\");\n\n      // Synchronize the chooser with the current value on every\n      // opening of the popup. This is needed when the value has been\n      // modified and not saved yet (e.g. no blur)\n      var popup = this.getChildControl(\"popup\");\n      if (popup.isVisible())\n      {\n        var chooser = this.getChildControl(\"list\");\n        var date = this.getValue();\n        chooser.setValue(date);\n      }\n    },\n\n\n    /**\n     * Reacts on value changes of the text field and syncs the\n     * value to the combobox.\n     *\n     * @param e {qx.event.type.Data} Change event\n     */\n    _onTextFieldChangeValue : function(e)\n    {\n      // Apply to popup\n      var date = this.getValue();\n      if (date != null)\n      {\n        var list = this.getChildControl(\"list\");\n        list.setValue(date);\n      }\n\n      // Fire event\n      this.fireDataEvent(\"changeValue\", this.getValue());\n    },\n\n\n    /**\n     * Checks if the textfield of the DateField is empty.\n     *\n     * @return {Boolean} True, if the textfield of the DateField is empty.\n     */\n    isEmpty: function()\n    {\n      var value = this.getChildControl(\"textfield\").getValue();\n      return value == null || value == \"\";\n    },\n\n    // overridden\n    focus : function()\n    {\n      this.base(arguments);\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    }\n  },\n\n\n  destruct : function() {\n    // listen for locale changes\n    if (qx.core.Environment.get(\"qx.dynlocale\"))\n    {\n      if (this.__localeListenerId) {\n        qx.locale.Manager.getInstance().removeListenerById(this.__localeListenerId);\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A *spinner* is a control that allows you to adjust a numerical value,\n * typically within an allowed range. An obvious example would be to specify the\n * month of a year as a number in the range 1 - 12.\n *\n * To do so, a spinner encompasses a field to display the current value (a\n * textfield) and controls such as up and down buttons to change that value. The\n * current value can also be changed by editing the display field directly, or\n * using mouse wheel and cursor keys.\n *\n * An optional {@link #numberFormat} property allows you to control the format of\n * how a value can be entered and will be displayed.\n *\n * A brief, but non-trivial example:\n *\n * <pre class='javascript'>\n * var s = new qx.ui.form.Spinner();\n * s.set({\n *   maximum: 3000,\n *   minimum: -3000\n * });\n * var nf = new qx.util.format.NumberFormat();\n * nf.setMaximumFractionDigits(2);\n * s.setNumberFormat(nf);\n * </pre>\n *\n * A spinner instance without any further properties specified in the\n * constructor or a subsequent *set* command will appear with default\n * values and behaviour.\n *\n * @childControl textfield {qx.ui.form.TextField} holds the current value of the spinner\n * @childControl upbutton {qx.ui.form.Button} button to increase the value\n * @childControl downbutton {qx.ui.form.Button} button to decrease the value\n *\n */\nqx.Class.define(\"qx.ui.form.Spinner\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [\n    qx.ui.form.INumberForm,\n    qx.ui.form.IRange,\n    qx.ui.form.IForm\n  ],\n  include : [\n    qx.ui.core.MContentPadding,\n    qx.ui.form.MForm\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param min {Number} Minimum value\n   * @param value {Number} Current value\n   * @param max {Number} Maximum value\n   */\n  construct : function(min, value, max)\n  {\n    this.base(arguments);\n\n    // MAIN LAYOUT\n    var layout = new qx.ui.layout.Grid();\n    layout.setColumnFlex(0, 1);\n    layout.setRowFlex(0,1);\n    layout.setRowFlex(1,1);\n    this._setLayout(layout);\n\n    // EVENTS\n    this.addListener(\"keydown\", this._onKeyDown, this);\n    this.addListener(\"keyup\", this._onKeyUp, this);\n    this.addListener(\"roll\", this._onRoll, this);\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n\n    // CREATE CONTROLS\n    var textField = this._createChildControl(\"textfield\");\n    this._createChildControl(\"upbutton\");\n    this._createChildControl(\"downbutton\");\n\n    // INITIALIZATION\n    if (min != null) {\n      this.setMinimum(min);\n    }\n\n    if (max != null) {\n      this.setMaximum(max);\n    }\n\n    if (value !== undefined) {\n      this.setValue(value);\n    } else {\n      this.initValue();\n    }\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", function(e) {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    }, this);\n\n    this.addListener(\"focusout\", function(e) {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n    }, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties:\n  {\n    // overridden\n    appearance:\n    {\n      refine : true,\n      init : \"spinner\"\n    },\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    /** The amount to increment on each event (keypress or pointerdown) */\n    singleStep:\n    {\n      check : \"Number\",\n      init : 1\n    },\n\n    /** The amount to increment on each pageup/pagedown keypress */\n    pageStep:\n    {\n      check : \"Number\",\n      init : 10\n    },\n\n    /** minimal value of the Range object */\n    minimum:\n    {\n      check : \"Number\",\n      apply : \"_applyMinimum\",\n      init : 0,\n      event: \"changeMinimum\"\n    },\n\n    /** The value of the spinner. */\n    value:\n    {\n      check : \"this._checkValue(value)\",\n      nullable : true,\n      apply : \"_applyValue\",\n      init : 0,\n      event : \"changeValue\"\n    },\n\n    /** maximal value of the Range object */\n    maximum:\n    {\n      check : \"Number\",\n      apply : \"_applyMaximum\",\n      init : 100,\n      event: \"changeMaximum\"\n    },\n\n    /** whether the value should wrap around */\n    wrap:\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyWrap\"\n    },\n\n    /** Controls whether the textfield of the spinner is editable or not */\n    editable :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyEditable\"\n    },\n\n    /** Controls the display of the number in the textfield */\n    numberFormat :\n    {\n      check : \"qx.util.format.NumberFormat\",\n      apply : \"_applyNumberFormat\",\n      nullable : true\n    },\n\n    // overridden\n    allowShrinkY :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /** Saved last value in case invalid text is entered */\n    __lastValidValue : null,\n\n    /** Whether the page-up button has been pressed */\n    __pageUpMode : false,\n\n    /** Whether the page-down button has been pressed */\n    __pageDownMode : false,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET INTERNALS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFilter(this._getFilterRegExp());\n          control.addState(\"inner\");\n          control.setWidth(40);\n          control.setFocusable(false);\n          control.addListener(\"changeValue\", this._onTextChange, this);\n\n          this._add(control, {column: 0, row: 0, rowSpan: 2});\n          break;\n\n        case \"upbutton\":\n          control = new qx.ui.form.RepeatButton();\n          control.addState(\"inner\");\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._countUp, this);\n          this._add(control, {column: 1, row: 0});\n          break;\n\n        case \"downbutton\":\n          control = new qx.ui.form.RepeatButton();\n          control.addState(\"inner\");\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._countDown, this);\n          this._add(control, {column:1, row: 1});\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /**\n     * Returns the regular expression used as the text field's filter\n     *\n     * @return {RegExp} The filter RegExp.\n     */\n    _getFilterRegExp : function()\n    {\n      var decimalSeparator, groupSeparator, locale;\n\n      if (this.getNumberFormat() !== null) {\n        locale = this.getNumberFormat().getLocale();\n      } else {\n        locale = qx.locale.Manager.getInstance().getLocale();\n      }\n\n      decimalSeparator = qx.locale.Number.getDecimalSeparator(locale);\n      groupSeparator = qx.locale.Number.getGroupSeparator(locale);\n\n      var prefix = \"\";\n      var postfix = \"\";\n      if (this.getNumberFormat() !== null) {\n        prefix = this.getNumberFormat().getPrefix() || \"\";\n        postfix = this.getNumberFormat().getPostfix() || \"\";\n      }\n\n      var filterRegExp = new RegExp(\"[0-9\" +\n        qx.lang.String.escapeRegexpChars(decimalSeparator) +\n        qx.lang.String.escapeRegexpChars(groupSeparator) +\n        qx.lang.String.escapeRegexpChars(prefix) +\n        qx.lang.String.escapeRegexpChars(postfix) +\n        \"\\-]\"\n      );\n\n      return filterRegExp;\n    },\n\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      focused : true,\n      invalid : true\n    },\n\n\n    // overridden\n    tabFocus : function()\n    {\n      var field = this.getChildControl(\"textfield\");\n\n      field.getFocusElement().focus();\n      field.selectAllText();\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Apply routine for the minimum property.\n     *\n     * It sets the value of the spinner to the maximum of the current spinner\n     * value and the given min property value.\n     *\n     * @param value {Number} The new value of the min property\n     * @param old {Number} The old value of the min property\n     */\n    _applyMinimum : function(value, old)\n    {\n      if (this.getMaximum() < value) {\n        this.setMaximum(value);\n      }\n\n      if (this.getValue() < value) {\n        this.setValue(value);\n      } else {\n        this._updateButtons();\n      }\n    },\n\n\n    /**\n     * Apply routine for the maximum property.\n     *\n     * It sets the value of the spinner to the minimum of the current spinner\n     * value and the given max property value.\n     *\n     * @param value {Number} The new value of the max property\n     * @param old {Number} The old value of the max property\n     */\n    _applyMaximum : function(value, old)\n    {\n      if (this.getMinimum() > value) {\n        this.setMinimum(value);\n      }\n\n      if (this.getValue() > value) {\n        this.setValue(value);\n      } else {\n        this._updateButtons();\n      }\n    },\n\n\n    // overridden\n    _applyEnabled : function(value, old)\n    {\n      this.base(arguments, value, old);\n\n      this._updateButtons();\n    },\n\n\n    /**\n     * Check whether the value being applied is allowed.\n     *\n     * If you override this to change the allowed type, you will also\n     * want to override {@link #_applyValue}, {@link #_applyMinimum},\n     * {@link #_applyMaximum}, {@link #_countUp}, {@link #_countDown}, and\n     * {@link #_onTextChange} methods as those cater specifically to numeric\n     * values.\n     *\n     * @param value {var}\n     *   The value being set\n     * @return {Boolean}\n     *   <i>true</i> if the value is allowed;\n     *   <i>false> otherwise.\n     */\n    _checkValue : function(value) {\n      return typeof value === \"number\" && value >= this.getMinimum() && value <= this.getMaximum();\n    },\n\n\n    /**\n     * Apply routine for the value property.\n     *\n     * It disables / enables the buttons and handles the wrap around.\n     *\n     * @param value {Number} The new value of the spinner\n     * @param old {Number} The former value of the spinner\n     */\n    _applyValue: function(value, old)\n    {\n      var textField = this.getChildControl(\"textfield\");\n\n      this._updateButtons();\n\n      // save the last valid value of the spinner\n      this.__lastValidValue = value;\n\n      // write the value of the spinner to the textfield\n      if (value !== null) {\n        if (this.getNumberFormat()) {\n          textField.setValue(this.getNumberFormat().format(value));\n        } else {\n          textField.setValue(value + \"\");\n        }\n      } else {\n        textField.setValue(\"\");\n      }\n    },\n\n\n    /**\n     * Apply routine for the editable property.<br/>\n     * It sets the textfield of the spinner to not read only.\n     *\n     * @param value {Boolean} The new value of the editable property\n     * @param old {Boolean} The former value of the editable property\n     */\n    _applyEditable : function(value, old)\n    {\n      var textField = this.getChildControl(\"textfield\");\n\n      if (textField) {\n        textField.setReadOnly(!value);\n      }\n    },\n\n\n    /**\n     * Apply routine for the wrap property.<br/>\n     * Enables all buttons if the wrapping is enabled.\n     *\n     * @param value {Boolean} The new value of the wrap property\n     * @param old {Boolean} The former value of the wrap property\n     */\n    _applyWrap : function(value, old)\n    {\n      this._updateButtons();\n    },\n\n\n    /**\n     * Apply routine for the numberFormat property.<br/>\n     * When setting a number format, the display of the\n     * value in the text-field will be changed immediately.\n     *\n     * @param value {Boolean} The new value of the numberFormat property\n     * @param old {Boolean} The former value of the numberFormat property\n     */\n    _applyNumberFormat : function(value, old) {\n      var textField = this.getChildControl(\"textfield\");\n      textField.setFilter(this._getFilterRegExp());\n\n      if (old) {\n        old.removeListener(\"changeNumberFormat\", this._onChangeNumberFormat, this);\n      }\n\n      var numberFormat = this.getNumberFormat();\n      if (numberFormat !== null) {\n        numberFormat.addListener(\"changeNumberFormat\", this._onChangeNumberFormat, this);\n      }\n\n      this._applyValue(this.__lastValidValue, undefined);\n    },\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget : function() {\n      return this.getChildControl(\"textfield\");\n    },\n\n    /**\n     * Checks the min and max values, disables / enables the\n     * buttons and handles the wrap around.\n     */\n    _updateButtons : function() {\n      var upButton = this.getChildControl(\"upbutton\");\n      var downButton = this.getChildControl(\"downbutton\");\n      var value = this.getValue();\n\n      if (!this.getEnabled())\n      {\n        // If Spinner is disabled -> disable buttons\n        upButton.setEnabled(false);\n        downButton.setEnabled(false);\n      }\n      else\n      {\n        if (this.getWrap())\n        {\n          // If wraped -> always enable buttons\n          upButton.setEnabled(true);\n          downButton.setEnabled(true);\n        }\n        else\n        {\n          // check max value\n          if (value !== null && value < this.getMaximum()) {\n            upButton.setEnabled(true);\n          } else {\n            upButton.setEnabled(false);\n          }\n\n          // check min value\n          if (value !== null && value > this.getMinimum()) {\n            downButton.setEnabled(true);\n          } else {\n            downButton.setEnabled(false);\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      KEY EVENT-HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Callback for \"keyDown\" event.<br/>\n     * Controls the interval mode (\"single\" or \"page\")\n     * and the interval increase by detecting \"Up\"/\"Down\"\n     * and \"PageUp\"/\"PageDown\" keys.<br/>\n     * The corresponding button will be pressed.\n     *\n     * @param e {qx.event.type.KeySequence} keyDown event\n     */\n    _onKeyDown: function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"PageUp\":\n          // mark that the spinner is in page mode and process further\n          this.__pageUpMode = true;\n\n        case \"Up\":\n          this.getChildControl(\"upbutton\").press();\n          break;\n\n        case \"PageDown\":\n          // mark that the spinner is in page mode and process further\n          this.__pageDownMode = true;\n\n        case \"Down\":\n          this.getChildControl(\"downbutton\").press();\n          break;\n\n        default:\n          // Do not stop unused events\n          return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n    },\n\n\n    /**\n     * Callback for \"keyUp\" event.<br/>\n     * Detecting \"Up\"/\"Down\" and \"PageUp\"/\"PageDown\" keys.<br/>\n     * Releases the button and disabled the page mode, if necessary.\n     *\n     * @param e {qx.event.type.KeySequence} keyUp event\n     */\n    _onKeyUp: function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"PageUp\":\n          this.getChildControl(\"upbutton\").release();\n          this.__pageUpMode = false;\n          break;\n\n        case \"Up\":\n          this.getChildControl(\"upbutton\").release();\n          break;\n\n        case \"PageDown\":\n          this.getChildControl(\"downbutton\").release();\n          this.__pageDownMode = false;\n          break;\n\n        case \"Down\":\n          this.getChildControl(\"downbutton\").release();\n          break;\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      OTHER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Callback method for the \"roll\" event.<br/>\n     * Increments or decrements the value of the spinner.\n     *\n     * @param e {qx.event.type.Roll} roll event\n     */\n    _onRoll: function(e)\n    {\n      // only wheel\n      if (e.getPointerType() != \"wheel\") {\n        return;\n      }\n      var delta = e.getDelta().y;\n      if (delta < 0) {\n        this._countUp();\n      } else if (delta > 0) {\n        this._countDown();\n      }\n\n      e.stop();\n    },\n\n\n    /**\n     * Callback method for the \"change\" event of the textfield.\n     *\n     * @param e {qx.event.type.Event} text change event or blur event\n     */\n    _onTextChange : function(e)\n    {\n      var textField = this.getChildControl(\"textfield\");\n      var value;\n\n      // if a number format is set\n      if (this.getNumberFormat())\n      {\n        // try to parse the current number using the number format\n        try {\n          value = this.getNumberFormat().parse(textField.getValue());\n        } catch(ex) {\n          // otherwise, process further\n        }\n      }\n\n      if (value === undefined)\n      {\n        // try to parse the number as a float\n        value = parseFloat(textField.getValue());\n      }\n\n      // if the result is a number\n      if (!isNaN(value))\n      {\n        // Fix value if invalid\n        if (value > this.getMaximum()) {\n          value = this.getMaximum();\n        } else if (value < this.getMinimum()) {\n          value = this.getMinimum();\n        }\n\n        // If value is the same than before, call directly _applyValue()\n        if (value === this.__lastValidValue) {\n          this._applyValue(this.__lastValidValue);\n        } else {\n          this.setValue(value);\n        }\n      }\n      else\n      {\n        // otherwise, reset the last valid value\n        this._applyValue(this.__lastValidValue, undefined);\n      }\n    },\n\n\n    /**\n     * Callback method for the locale Manager's \"changeLocale\" event.\n     *\n     * @param ev {qx.event.type.Event} locale change event\n     */\n\n    _onChangeLocale : function(ev)\n    {\n      if (this.getNumberFormat() !== null) {\n        this.setNumberFormat(this.getNumberFormat());\n        var textfield = this.getChildControl(\"textfield\");\n        textfield.setFilter(this._getFilterRegExp());\n        textfield.setValue(this.getNumberFormat().format(this.getValue()));\n      }\n    },\n\n\n    /**\n     * Callback method for the number format's \"changeNumberFormat\" event.\n     *\n     * @param ev {qx.event.type.Event} number format change event\n     */\n    _onChangeNumberFormat : function(ev) {\n      var textfield = this.getChildControl(\"textfield\");\n      textfield.setFilter(this._getFilterRegExp());\n      textfield.setValue(this.getNumberFormat().format(this.getValue()));\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERVAL HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Checks if the spinner is in page mode and counts either the single\n     * or page Step up.\n     *\n     */\n    _countUp: function()\n    {\n      if (this.__pageUpMode) {\n        var newValue = this.getValue() + this.getPageStep();\n      } else {\n        var newValue = this.getValue() + this.getSingleStep();\n      }\n\n      // handle the case where wrapping is enabled\n      if (this.getWrap())\n      {\n        if (newValue > this.getMaximum())\n        {\n          var diff = this.getMaximum() - newValue;\n          newValue = this.getMinimum() - diff - 1;\n        }\n      }\n\n      this.gotoValue(newValue);\n    },\n\n\n    /**\n     * Checks if the spinner is in page mode and counts either the single\n     * or page Step down.\n     *\n     */\n    _countDown: function()\n    {\n      if (this.__pageDownMode) {\n        var newValue = this.getValue() - this.getPageStep();\n      } else {\n        var newValue = this.getValue() - this.getSingleStep();\n      }\n\n      // handle the case where wrapping is enabled\n      if (this.getWrap())\n      {\n        if (newValue < this.getMinimum())\n        {\n          var diff = this.getMinimum() + newValue;\n          newValue = this.getMaximum() + diff + 1;\n        }\n      }\n\n      this.gotoValue(newValue);\n    },\n\n\n    /**\n     * Normalizes the incoming value to be in the valid range and\n     * applies it to the {@link #value} afterwards.\n     *\n     * @param value {Number} Any number\n     * @return {Number} The normalized number\n     */\n    gotoValue : function(value) {\n      return this.setValue(Math.min(this.getMaximum(), Math.max(this.getMinimum(), value)));\n    },\n\n    // overridden\n    focus : function()\n    {\n      this.base(arguments);\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    }\n  },\n\n\n  destruct : function()\n  {\n    var nf = this.getNumberFormat();\n    if (nf) {\n      nf.removeListener(\"changeNumberFormat\", this._onChangeNumberFormat, this);\n    }\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A check box widget with an optional label.\n */\nqx.Class.define(\"qx.ui.form.CheckBox\",\n{\n  extend : qx.ui.form.ToggleButton,\n  include : [\n    qx.ui.form.MForm,\n    qx.ui.form.MModelProperty\n  ],\n  implement : [\n    qx.ui.form.IForm,\n    qx.ui.form.IModel\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String?null} An optional label for the check box.\n   */\n  construct : function(label)\n  {\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertArgumentsCount(arguments, 0, 1);\n    }\n\n    this.base(arguments, label);\n\n    // Initialize the checkbox to a valid value (the default is null which\n    // is invalid)\n    this.setValue(false);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"checkbox\"\n    },\n\n    // overridden\n    allowGrowX :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n  members :\n  {\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      invalid : true,\n      focused : true,\n      undetermined : true,\n      checked : true,\n      hovered : true\n    },\n\n    /**\n     * overridden (from MExecutable to keep the icon out of the binding)\n     * @lint ignoreReferenceField(_bindableProperties)\n     */\n    _bindableProperties :\n    [\n      \"enabled\",\n      \"label\",\n      \"toolTipText\",\n      \"value\",\n      \"menu\"\n    ]\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Sebastian Werner (wpbasti)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Basically a text fields which allows a selection from a list of\n * preconfigured options. Allows custom user input. Public API is value\n * oriented.\n *\n * To work with selections without custom input the ideal candidates are\n * the {@link SelectBox} or the {@link RadioGroup}.\n *\n * @childControl textfield {qx.ui.form.TextField} textfield component of the combobox\n * @childControl button {qx.ui.form.Button} button to open the list popup\n * @childControl list {qx.ui.form.List} list inside the popup\n */\nqx.Class.define(\"qx.ui.form.ComboBox\",\n{\n  extend  : qx.ui.form.AbstractSelectBox,\n  implement : [qx.ui.form.IStringForm],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    var textField = this._createChildControl(\"textfield\");\n    this._createChildControl(\"button\");\n\n    this.addListener(\"tap\", this._onTap);\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", function(e) {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    }, this);\n\n    this.addListener(\"focusout\", function(e) {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n    }, this);\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"combobox\"\n    },\n\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder :\n    {\n      check : \"String\",\n      nullable : true,\n      apply : \"_applyPlaceholder\"\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Whenever the value is changed this event is fired\n     *\n     *  Event data: The new text value of the field.\n     */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __preSelectedItem : null,\n    __onInputId : null,\n\n\n    // property apply\n    _applyPlaceholder : function(value, old) {\n      this.getChildControl(\"textfield\").setPlaceholder(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFocusable(false);\n          control.addState(\"inner\");\n          control.addListener(\"changeValue\", this._onTextFieldChangeValue, this);\n          control.addListener(\"blur\", this.close, this);\n          this._add(control, {flex: 1});\n          break;\n\n        case \"button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.setKeepActive(true);\n          control.addState(\"inner\");\n          control.addListener(\"execute\", this.toggle, this);\n          this._add(control);\n          break;\n\n        case \"list\":\n          // Get the list from the AbstractSelectBox\n          control = this.base(arguments, id);\n\n          // Change selection mode\n          control.setSelectionMode(\"single\");\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      focused : true,\n      invalid : true\n    },\n\n\n    // overridden\n    tabFocus : function()\n    {\n      var field = this.getChildControl(\"textfield\");\n\n      field.getFocusElement().focus();\n      field.selectAllText();\n    },\n\n\n    // overridden\n    focus : function()\n    {\n      this.base(arguments);\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    },\n\n\n    // interface implementation\n    setValue : function(value)\n    {\n      var textfield = this.getChildControl(\"textfield\");\n      if (textfield.getValue() == value) {\n        return;\n      }\n\n      // Apply to text field\n      textfield.setValue(value);\n    },\n\n\n    // interface implementation\n    getValue : function() {\n      return this.getChildControl(\"textfield\").getValue();\n    },\n\n\n    // interface implementation\n    resetValue : function() {\n      this.getChildControl(\"textfield\").setValue(null);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _onKeyPress : function(e)\n    {\n      var popup = this.getChildControl(\"popup\");\n      var iden = e.getKeyIdentifier();\n\n      if (iden == \"Down\" && e.isAltPressed())\n      {\n        this.getChildControl(\"button\").addState(\"selected\");\n        this.toggle();\n        e.stopPropagation();\n      }\n      else if (iden == \"Enter\")\n      {\n        if (popup.isVisible())\n        {\n          this._setPreselectedItem();\n          this.resetAllTextSelection();\n          this.close();\n          e.stop();\n        }\n      }\n      else if (popup.isVisible())\n      {\n        this.base(arguments, e);\n      }\n    },\n\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Pointer} Pointer tap event\n     */\n    _onTap : function(e) {\n      this.close();\n    },\n\n\n    // overridden\n    _onListPointerDown : function(e) {\n      this._setPreselectedItem();\n    },\n\n\n    /**\n     * Apply pre-selected item\n     */\n    _setPreselectedItem: function() {\n      if (this.__preSelectedItem)\n      {\n        var label = this.__preSelectedItem.getLabel();\n\n        if (this.getFormat()!= null) {\n          label = this.getFormat().call(this, this.__preSelectedItem);\n        }\n\n        // check for translation\n        if (label && label.translate) {\n          label = label.translate();\n        }\n        this.setValue(label);\n        this.__preSelectedItem = null;\n      }\n    },\n\n\n    // overridden\n    _onListChangeSelection : function(e)\n    {\n      var current = e.getData();\n      if (current.length > 0)\n      {\n        // Ignore quick context (e.g. pointerover)\n        // and configure the new value when closing the popup afterwards\n        var list = this.getChildControl(\"list\");\n        var ctx = list.getSelectionContext();\n        if (ctx == \"quick\" || ctx == \"key\" )\n        {\n          this.__preSelectedItem = current[0];\n        }\n        else\n        {\n          var label = current[0].getLabel();\n\n          if (this.getFormat()!= null) {\n            label = this.getFormat().call(this, current[0]);\n          }\n\n          // check for translation\n          if (label && label.translate) {\n            label = label.translate();\n          }\n          this.setValue(label);\n          this.__preSelectedItem = null;\n        }\n      }\n    },\n\n\n    // overridden\n    _onPopupChangeVisibility : function(e)\n    {\n      this.base(arguments, e);\n\n      // Synchronize the list with the current value on every\n      // opening of the popup. This is useful because through\n      // the quick selection mode, the list may keep an invalid\n      // selection on close or the user may enter text while\n      // the combobox is closed and reopen it afterwards.\n      var popup = this.getChildControl(\"popup\");\n      if (popup.isVisible())\n      {\n        var list = this.getChildControl(\"list\");\n        var value = this.getValue();\n        var item = null;\n\n        if (value) {\n          item = list.findItem(value);\n        }\n\n        if (item) {\n          list.setSelection([item]);\n        } else {\n          list.resetSelection();\n        }\n      }\n      else\n      {\n        // When closing the popup text should selected and field should\n        // have the focus. Identical to when reaching the field using the TAB key.\n        //\n        // Only focus if popup was visible before. Fixes [BUG #4453].\n        if (e.getOldData() == \"visible\") {\n          this.tabFocus();\n        }\n      }\n\n      // In all cases: Remove focused state from button\n      this.getChildControl(\"button\").removeState(\"selected\");\n    },\n\n\n    /**\n     * Reacts on value changes of the text field and syncs the\n     * value to the combobox.\n     *\n     * @param e {qx.event.type.Data} Change event\n     */\n    _onTextFieldChangeValue : function(e)\n    {\n      var value = e.getData();\n\n      var list = this.getChildControl(\"list\");\n      if (value != null) {\n        // Select item when possible\n        var item = list.findItem(value, false);\n        if (item) {\n          list.setSelection([item]);\n        } else {\n          list.resetSelection();\n        }\n      } else {\n        list.resetSelection();\n      }\n\n      // Fire event\n      this.fireDataEvent(\"changeValue\", value, e.getOldData());\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {String|null}\n     */\n    getTextSelection : function() {\n      return this.getChildControl(\"textfield\").getTextSelection();\n    },\n\n\n    /**\n     * Returns the current selection length.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength : function() {\n      return this.getChildControl(\"textfield\").getTextSelectionLength();\n    },\n\n\n    /**\n     * Set the selection to the given start and end (zero-based).\n     * If no end value is given the selection will extend to the\n     * end of the textfield's content.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @param start {Integer} start of the selection (zero-based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection : function(start, end) {\n      this.getChildControl(\"textfield\").setTextSelection(start, end);\n    },\n\n\n    /**\n     * Clears the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     */\n    clearTextSelection : function() {\n      this.getChildControl(\"textfield\").clearTextSelection();\n    },\n\n\n    /**\n     * Selects the whole content\n     *\n     */\n    selectAllText : function() {\n      this.getChildControl(\"textfield\").selectAllText();\n    },\n\n\n    /**\n     * Clear any text selection, then select all text\n     *\n     */\n    resetAllTextSelection: function() {\n      this.clearTextSelection();\n      this.selectAllText();\n    }\n  }\n});\n"
  ]
}