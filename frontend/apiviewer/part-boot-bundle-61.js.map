{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/tree/core/AbstractTreeItem.js",
    "../transpiled/qx/ui/tree/TreeFolder.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-61.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * The AbstractTreeItem serves as a common superclass for the {@link\n * qx.ui.tree.TreeFile} and {@link qx.ui.tree.TreeFolder} classes.\n *\n * @childControl label {qx.ui.basic.Label} label of the tree item\n * @childControl icon {qx.ui.basic.Image} icon of the tree item\n * @childControl open {qx.ui.tree.core.FolderOpenButton} button to open/close a subtree\n */\nqx.Class.define(\"qx.ui.tree.core.AbstractTreeItem\",\n{\n  extend : qx.ui.tree.core.AbstractItem,\n  type : \"abstract\",\n\n\n  construct : function(label)\n  {\n    this.base(arguments, label);\n\n    this.__children = [];\n  },\n\n\n  properties :\n  {\n    /**\n     * The parent tree folder.\n     */\n    parent :\n    {\n      check : \"qx.ui.tree.core.AbstractTreeItem\",\n      nullable : true\n    }\n  },\n\n\n  members :\n  {\n    __children : null,\n    __childrenContainer : null,\n\n\n    /**\n     * Returns the tree the tree item is connected to. If the item is not part of\n     * a tree <code>null</code> will be returned.\n     *\n     * @return {qx.ui.tree.Tree|null} The item's tree or <code>null</code>.\n     */\n    getTree : function()\n    {\n      var treeItem = this;\n      while (treeItem.getParent()) {\n        treeItem = treeItem.getParent();\n      }\n\n      var tree = treeItem.getLayoutParent() ? treeItem.getLayoutParent().getLayoutParent() : 0;\n      if (tree && tree instanceof qx.ui.core.scroll.ScrollPane) {\n        return tree.getLayoutParent();\n      }\n      return null;\n    },\n\n\n    // property apply\n    _applyOpen : function(value, old)\n    {\n      if (this.hasChildren()) {\n        this.getChildrenContainer().setVisibility(value ? \"visible\" : \"excluded\");\n      }\n\n      this.base(arguments, value, old);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INDENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _shouldShowOpenSymbol : function()\n    {\n      var open = this.getChildControl(\"open\", true);\n      if (!open) {\n        return false;\n      }\n\n      var tree = this.getTree();\n      if (!tree.getRootOpenClose())\n      {\n        if (tree.getHideRoot())\n        {\n          if (tree.getRoot() == this.getParent()) {\n            return false;\n          }\n        }\n        else\n        {\n          if (tree.getRoot() == this) {\n            return false;\n          }\n        }\n      }\n\n      return this.isOpenable();\n    },\n\n\n    // overridden\n    _updateIndent : function()\n    {\n      if (!this.getTree()) {\n        return;\n      }\n\n      this.base(arguments);\n    },\n\n\n    // overridden\n    getLevel : function()\n    {\n      var tree = this.getTree();\n      if (!tree) {\n        return;\n      }\n\n      var treeItem = this;\n      var level = -1;\n\n      while (treeItem)\n      {\n        treeItem = treeItem.getParent();\n        level += 1;\n      }\n\n      // don't count the hidden root node in the tree widget\n      if (tree.getHideRoot()) {\n        level -= 1;\n      }\n\n      if (!tree.getRootOpenClose()) {\n        level -= 1;\n      }\n\n      return level;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STATE HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    addState : function(state)\n    {\n      this.base(arguments, state);\n\n      var children = this._getChildren();\n      for (var i=0,l=children.length; i<l; i++)\n      {\n        var child = children[i];\n        if (child.addState) {\n          children[i].addState(state);\n        }\n      }\n    },\n\n\n    // overridden\n    removeState : function(state)\n    {\n      this.base(arguments, state);\n\n      var children = this._getChildren();\n      for (var i=0,l=children.length; i<l; i++)\n      {\n        var child = children[i];\n        if (child.removeState) {\n          children[i].removeState(state);\n        }\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN CONTAINER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the widget, which acts as container for the child items.\n     * This widget must have a vertical box layout.\n     *\n     * @return {qx.ui.core.Widget} The children container\n     */\n    getChildrenContainer : function()\n    {\n      if (!this.__childrenContainer)\n      {\n        this.__childrenContainer = new qx.ui.container.Composite(new qx.ui.layout.VBox()).set({\n          visibility : this.isOpen() ? \"visible\" : \"excluded\"\n        });\n      }\n\n      return this.__childrenContainer;\n    },\n\n\n    /**\n     * Whether the tree item has a children container\n     *\n     * @return {Boolean} Whether it has a children container\n     */\n    hasChildrenContainer : function() {\n      return this.__childrenContainer;\n    },\n\n\n    /**\n     * Get the children container of the item's parent. This function will return\n     * <code>null</code>, if the item does not have a parent or is not the root\n     * item.\n     *\n     * @return {qx.ui.core.Widget} The parent's children container.\n     */\n    getParentChildrenContainer : function()\n    {\n      if (this.getParent()) {\n        return this.getParent().getChildrenContainer();\n      } else if (this.getLayoutParent()) {\n        return this.getLayoutParent();\n      } else {\n        return null;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get all child items.\n     *\n     * Note: Don not modify the returned array, since this function does not\n     * return a copy!\n     *\n     * @return {qx.ui.tree.core.AbstractTreeItem[]} An array of all child items.\n     */\n    getChildren : function() {\n      return this.__children;\n    },\n\n\n    // overridden\n    hasChildren : function() {\n      return this.__children ? this.__children.length > 0 : false;\n    },\n\n\n    /**\n     * Returns all children of the folder.\n     *\n     * @param recursive {Boolean ? true} whether children of subfolder should be\n     *     included\n     * @param invisible {Boolean ? true} whether invisible children should be\n     *     included\n     * @param ignoreFirst {Boolean ? true} Whether the current treeItem should\n     *     be excluded from the list.\n     * @return {qx.ui.tree.core.AbstractTreeItem[]} list of children\n     */\n    getItems : function(recursive, invisible, ignoreFirst)\n    {\n      if (ignoreFirst !== false) {\n        var items = [];\n      } else {\n        var items = [this];\n      }\n\n      var addChildren =\n        this.hasChildren() &&\n        (invisible !== false || this.isOpen());\n\n      if (addChildren)\n      {\n        var children = this.getChildren();\n        if (recursive === false)\n        {\n          items = items.concat(children);\n        }\n        else\n        {\n          for (var i=0, chl=children.length; i<chl; i++) {\n            items = items.concat(children[i].getItems(recursive, invisible, false));\n          }\n        }\n      }\n      return items;\n    },\n\n\n    /**\n     * Adds this item and recursively all sub items to the widget queue to\n     * update the indentation.\n     *\n     * @internal\n     */\n    recursiveAddToWidgetQueue : function()\n    {\n      var children = this.getItems(true, true, false);\n      for (var i=0, l=children.length; i<l; i++) {\n        qx.ui.core.queue.Widget.add(children[i]);\n      }\n    },\n\n\n    /**\n     * Adds the item's children container to the parent's children container.\n     */\n    __addChildrenToParent : function()\n    {\n      if (this.getParentChildrenContainer()) {\n        this.getParentChildrenContainer()._addAfter(this.getChildrenContainer(), this);\n      }\n    },\n\n\n    /**\n     * Adds the passed tree items to the end of this item's children list.\n     *\n     * @param varargs {qx.ui.tree.core.AbstractTreeItem} variable number of tree items to add\n     */\n    add : function(varargs)\n    {\n      var container = this.getChildrenContainer();\n      var tree = this.getTree();\n\n\n      for (var i=0, l=arguments.length; i<l; i++)\n      {\n        var treeItem = arguments[i];\n\n        var oldParent = treeItem.getParent();\n        if (oldParent) {\n          oldParent.remove(treeItem);\n        }\n\n        treeItem.setParent(this);\n        var hasChildren = this.hasChildren();\n\n        container.add(treeItem);\n\n        if (treeItem.hasChildren()) {\n          container.add(treeItem.getChildrenContainer());\n        }\n        this.__children.push(treeItem);\n\n        if (!hasChildren) {\n          this.__addChildrenToParent();\n        }\n\n        if (tree)\n        {\n          treeItem.recursiveAddToWidgetQueue();\n          tree.fireNonBubblingEvent(\"addItem\", qx.event.type.Data, [treeItem]);\n        }\n      }\n      if (tree) {\n        qx.ui.core.queue.Widget.add(this);\n      }\n    },\n\n\n    /**\n     * Adds the tree item to the current item, at the given index.\n     *\n     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} new tree item to insert\n     * @param index {Integer} position to insert into\n     */\n    addAt : function(treeItem, index)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assert(\n          index <= this.__children.length && index >= 0,\n          \"Invalid child index: \" + index\n        );\n      }\n\n      if (index == this.__children.length)\n      {\n        this.add(treeItem);\n        return;\n      }\n\n      var oldParent = treeItem.getParent();\n      if (oldParent) {\n        oldParent.remove(treeItem);\n      }\n\n      var container = this.getChildrenContainer();\n\n      treeItem.setParent(this);\n      var hasChildren = this.hasChildren();\n\n      var nextItem = this.__children[index];\n      container.addBefore(treeItem, nextItem);\n\n      if (treeItem.hasChildren()) {\n        container.addAfter(treeItem.getChildrenContainer(), treeItem);\n      }\n      qx.lang.Array.insertAt(this.__children, treeItem, index);\n\n      if (!hasChildren) {\n        this.__addChildrenToParent();\n      }\n\n      if (this.getTree())\n      {\n        treeItem.recursiveAddToWidgetQueue();\n        qx.ui.core.queue.Widget.add(this);\n      }\n    },\n\n\n    /**\n     * Add a tree item to this item before the existing child <code>before</code>.\n     *\n     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add\n     * @param before {qx.ui.tree.core.AbstractTreeItem} existing child to add the item before\n     */\n    addBefore : function(treeItem, before)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assert(this.__children.indexOf(before) >= 0);\n      }\n\n      // It's important to remove the item before the addAt is called\n      // otherwise the index calculation could be wrong\n      var oldParent = treeItem.getParent();\n      if (oldParent) {\n        oldParent.remove(treeItem);\n      }\n\n      this.addAt(treeItem, this.__children.indexOf(before));\n    },\n\n\n    /**\n     * Add a tree item to this item after the existing child <code>before</code>.\n     *\n     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add\n     * @param after {qx.ui.tree.core.AbstractTreeItem} existing child to add the item after\n     */\n    addAfter : function(treeItem, after)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assert(this.__children.indexOf(after) >= 0);\n      }\n\n      // It's important to remove the item before the addAt is called\n      // otherwise the index calculation could be wrong\n      var oldParent = treeItem.getParent();\n      if (oldParent) {\n        oldParent.remove(treeItem);\n      }\n\n      this.addAt(treeItem, this.__children.indexOf(after)+1);\n    },\n\n\n    /**\n     * Add a tree item as the first child of this item.\n     *\n     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add\n     */\n    addAtBegin : function(treeItem) {\n      this.addAt(treeItem, 0);\n    },\n\n\n    /**\n     * Removes the passed tree items from this item.\n     *\n     * @param varargs {qx.ui.tree.core.AbstractTreeItem} variable number of tree items to remove\n     */\n    remove : function(varargs)\n    {\n      for (var i=0, l=arguments.length; i<l; i++)\n      {\n        var treeItem = arguments[i];\n        if (this.__children.indexOf(treeItem) == -1) {\n          this.warn(\"Cannot remove treeitem '\"+treeItem+\"'. It is not a child of this tree item.\");\n          return;\n        }\n\n        var container = this.getChildrenContainer();\n\n        if (treeItem.hasChildrenContainer()) {\n          var treeItemChildContainer = treeItem.getChildrenContainer();\n          if (container.getChildren().indexOf(treeItemChildContainer) >= 0) {\n            // Sometimes not, see bug #3038\n            container.remove(treeItemChildContainer);\n          }\n        }\n        qx.lang.Array.remove(this.__children, treeItem);\n\n        treeItem.setParent(null);\n        container.remove(treeItem);\n      }\n\n      var tree = this.getTree();\n      if (tree) {\n        tree.fireNonBubblingEvent(\"removeItem\", qx.event.type.Data, [treeItem]);\n      }\n\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n\n    /**\n     * Remove the child with the given child index.\n     *\n     * @param index {Integer} Index of the child to remove\n     */\n    removeAt : function(index)\n    {\n      var item = this.__children[index];\n      if (item) {\n        this.remove(item);\n      }\n    },\n\n\n    /**\n     * Remove all child items from this item.\n     */\n    removeAll : function()\n    {\n      // create a copy for returning\n      var children = this.__children.concat();\n      for (var i=this.__children.length-1; i>=0; i--) {\n        this.remove(this.__children[i]);\n      }\n      return children;\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._disposeArray(\"__children\");\n    this._disposeObjects(\"__childrenContainer\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The tree folder is a tree element, which can have nested tree elements.\n */\nqx.Class.define(\"qx.ui.tree.TreeFolder\",\n{\n  extend : qx.ui.tree.core.AbstractTreeItem,\n\n\n  properties :\n  {\n    appearance :\n    {\n      refine : true,\n      init : \"tree-folder\"\n    }\n  },\n\n\n  members :\n  {\n    // overridden\n    _addWidgets : function()\n    {\n      this.addSpacer();\n      this.addOpenButton();\n      this.addIcon();\n      this.addLabel();\n    }\n  }\n});\n"
  ]
}