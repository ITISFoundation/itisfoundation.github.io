{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/toolbar/Button.js"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;AAAC,EAAA,EAAC,CAAC,SAAF,CAAY,oBAAZ,CAAiC,aAAjC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;AAIA,EAAA,EAAC,CAAC,KAAF,CAAQ,MAAR,CAAe,sBAAf,EACA;AACC,IAAA,MAAM,EAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,MADrB;;AAKC;;;;;AAMA,IAAA,SAAS,EAAG,mBAAS,KAAT,EAAgB,IAAhB,EAAsB,OAAtB,EACZ;AACE,+CAAqB,KAArB,EAA4B,IAA5B,EAAkC,OAAlC,EADF,CAGE;;AACA,WAAK,cAAL,CAAoB,SAApB,EAA+B,KAAK,UAApC;AACA,WAAK,cAAL,CAAoB,OAApB,EAA6B,KAAK,QAAlC;AACD,KAlBF;;AAuBC;;;;;AAMA,IAAA,UAAU,EACV;AACE,MAAA,UAAU,EACV;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OAFF;AAOE,MAAA,IAAI,EACJ;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT,OARF;AAaE,MAAA,SAAS,EACT;AACE,QAAA,MAAM,EAAG,IADX;AAEE,QAAA,IAAI,EAAG;AAFT;AAdF,KA9BD;AAkDC,IAAA,OAAO,EAAG;AACR;AACA,MAAA,gBAAgB,EAAG,0BAAS,KAAT,EAAgB,GAAhB,EAAqB;AACtC,wEAAqB,KAArB,EAA4B,GAA5B,EADsC,CAEtC;;;AACA,YAAI,MAAM,GAAG,KAAK,eAAL,EAAb;;AACA,YAAI,MAAM,IAAI,MAAM,YAAY,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,aAA9C,EAA6D;AAC3D,UAAA,EAAE,CAAC,EAAH,CAAM,IAAN,CAAW,KAAX,CAAiB,UAAjB,CAA4B,GAA5B,CAAgC,MAAhC;AACD;AACF;AATO;AAlDX,GADA;AAvBA,EAAA,EAAC,CAAC,EAAF,CAAK,OAAL,CAAa,MAAb,CAAoB,aAApB,GAAoC,aAApC",
  "file": "build-output/apiviewer/part-boot-bundle-40.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * The normal toolbar button. Like a normal {@link qx.ui.form.Button}\n * but with a style matching the toolbar and without keyboard support.\n */\nqx.Class.define(\"qx.ui.toolbar.Button\",\n{\n  extend : qx.ui.form.Button,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function(label, icon, command)\n  {\n    this.base(arguments, label, icon, command);\n\n    // Toolbar buttons should not support the keyboard events\n    this.removeListener(\"keydown\", this._onKeyDown);\n    this.removeListener(\"keyup\", this._onKeyUp);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    appearance :\n    {\n      refine : true,\n      init : \"toolbar-button\"\n    },\n\n    show :\n    {\n      refine : true,\n      init : \"inherit\"\n    },\n\n    focusable :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n  members : {\n    // overridden\n    _applyVisibility : function(value, old) {\n      this.base(arguments, value, old);\n      // trigger a appearance recalculation of the parent\n      var parent = this.getLayoutParent();\n      if (parent && parent instanceof qx.ui.toolbar.PartContainer) {\n        qx.ui.core.queue.Appearance.add(parent);\n      }\n    }\n  }\n});\n"
  ]
}