{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/toolbar/CheckBox.js",
    "../transpiled/qx/ui/toolbar/RadioButton.js",
    "../transpiled/qx/ui/menu/RadioButton.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-59.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A button which is toggle-able for toolbars.\n */\nqx.Class.define(\"qx.ui.toolbar.CheckBox\",\n{\n  extend : qx.ui.form.ToggleButton,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function(label, icon)\n  {\n    this.base(arguments, label, icon);\n\n    // Toolbar buttons should not support the keyboard events\n    this.removeListener(\"keydown\", this._onKeyDown);\n    this.removeListener(\"keyup\", this._onKeyUp);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    appearance :\n    {\n      refine : true,\n      init : \"toolbar-button\"\n    },\n\n    show :\n    {\n      refine : true,\n      init : \"inherit\"\n    },\n\n    focusable :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n  members : {\n    // overridden\n    _applyVisibility : function(value, old) {\n      this.base(arguments, value, old);\n      // trigger a appearance recalculation of the parent\n      var parent = this.getLayoutParent();\n      if (parent && parent instanceof qx.ui.toolbar.PartContainer) {\n        qx.ui.core.queue.Appearance.add(parent);\n      }\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Radio buttons are used to manage a single selection. Radio buttons only\n * make sense used in a group of two or more of them. They are managed (connected)\n * to a {@link qx.ui.form.RadioGroup} to handle the selection.\n */\nqx.Class.define(\"qx.ui.toolbar.RadioButton\",\n{\n  extend : qx.ui.toolbar.CheckBox,\n  include : [qx.ui.form.MModelProperty],\n  implement : [qx.ui.form.IModel, qx.ui.form.IRadioItem],\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _applyValue : function(value, old)\n    {\n      this.base(arguments, value, old);\n\n      if (value)\n      {\n        var grp = this.getGroup();\n        if (grp) {\n          grp.setSelection([this]);\n        }\n      }\n    },\n\n\n    // overridden\n    _onExecute : function(e) {\n      var grp = this.getGroup();\n      if (grp && grp.getAllowEmptySelection()) {\n        this.toggleValue();\n      } else {\n        this.setValue(true);\n      }\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Renders a special radio button inside a menu. The button behaves like\n * a normal {@link qx.ui.form.RadioButton} and shows a radio icon when\n * checked; normally shows no icon when not checked (depends on the theme).\n */\nqx.Class.define(\"qx.ui.menu.RadioButton\",\n{\n  extend : qx.ui.menu.AbstractButton,\n  include : [qx.ui.form.MModelProperty],\n  implement : [qx.ui.form.IRadioItem, qx.ui.form.IBooleanForm, qx.ui.form.IModel],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Initial label\n   * @param menu {qx.ui.menu.Menu} Initial sub menu\n   */\n  construct : function(label, menu)\n  {\n    this.base(arguments);\n\n    // Initialize with incoming arguments\n    if (label != null) {\n      this.setLabel(label);\n    }\n\n    if (menu != null) {\n      this.setMenu(menu);\n    }\n\n    this.addListener(\"execute\", this._onExecute, this);\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"menu-radiobutton\"\n    },\n\n    /** The value of the widget. True, if the widget is checked. */\n    value :\n    {\n      check : \"Boolean\",\n      nullable : true,\n      event : \"changeValue\",\n      apply : \"_applyValue\",\n      init : false\n    },\n\n    /** The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons */\n    group :\n    {\n      check  : \"qx.ui.form.RadioGroup\",\n      nullable : true,\n      apply : \"_applyGroup\"\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden (from MExecutable to keep the icon out of the binding)\n    /**\n     * @lint ignoreReferenceField(_bindableProperties)\n     */\n    _bindableProperties :\n    [\n      \"enabled\",\n      \"label\",\n      \"toolTipText\",\n      \"value\",\n      \"menu\"\n    ],\n\n\n    // property apply\n    _applyValue : function(value, old) {\n      value ? this.addState(\"checked\") : this.removeState(\"checked\");\n    },\n\n\n    // property apply\n    _applyGroup : function(value, old)\n    {\n      if (old) {\n        old.remove(this);\n      }\n\n      if (value) {\n        value.add(this);\n      }\n    },\n\n\n    /**\n     * Handler for the execute event.\n     *\n     * @param e {qx.event.type.Event} The execute event.\n     */\n    _onExecute : function(e) {\n      var grp = this.getGroup();\n      if (grp && grp.getAllowEmptySelection()) {\n        this.toggleValue();\n      } else {\n        this.setValue(true);\n      }\n    }\n  }\n});\n"
  ]
}