{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/virtual/core/Scroller.js",
    "../transpiled/qx/ui/tree/core/IVirtualTree.js",
    "../transpiled/qx/ui/virtual/selection/MModel.js",
    "../transpiled/qx/ui/virtual/core/Pane.js",
    "../transpiled/qx/ui/tree/VirtualTree.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-34.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * The Scroller wraps a {@link Pane} and provides scroll bars to interactively\n * scroll the pane's content.\n *\n * @childControl pane {qx.ui.virtual.core.Pane} Virtual pane.\n */\nqx.Class.define(\"qx.ui.virtual.core.Scroller\",\n{\n  extend : qx.ui.core.scroll.AbstractScrollArea,\n\n\n  /**\n   * @param rowCount {Integer?0} The number of rows of the virtual grid.\n   * @param columnCount {Integer?0} The number of columns of the virtual grid.\n   * @param cellHeight {Integer?10} The default cell height.\n   * @param cellWidth {Integer?10} The default cell width.\n   */\n  construct : function(rowCount, columnCount, cellHeight, cellWidth)\n  {\n    this.base(arguments);\n\n    this.__pane = new qx.ui.virtual.core.Pane(rowCount, columnCount, cellHeight, cellWidth);\n    this.__pane.addListener(\"update\", this._computeScrollbars, this);\n    this.__pane.addListener(\"scrollX\", this._onScrollPaneX, this);\n    this.__pane.addListener(\"scrollY\", this._onScrollPaneY, this);\n\n    if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n      this._add(this.__pane, {edge: 0});\n    } else {\n      this._add(this.__pane, {row: 0, column: 0});\n    }\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.virtual.core.Pane} Virtual pane. */\n    __pane : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ACCESSOR METHODS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Get the scroller's virtual pane.\n     *\n     * @return {qx.ui.virtual.core.Pane} The scroller's pane.\n     */\n    getPane : function() {\n      return this.__pane;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILD CONTROL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      if (id === \"pane\") {\n        return this.__pane;\n      } else {\n        return this.base(arguments, id);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ITEM LOCATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * NOT IMPLEMENTED\n     *\n     * @param item {qx.ui.core.Widget} Item to query.\n     * @return {Integer} Top offset.\n     * @abstract\n     */\n    getItemTop : function(item)\n    {\n      throw new Error(\"The method 'getItemTop' is not implemented!\");\n    },\n\n\n    /**\n     * NOT IMPLEMENTED\n     *\n     * @param item {qx.ui.core.Widget} Item to query.\n     * @return {Integer} Top offset.\n     * @abstract\n     */\n    getItemBottom : function(item)\n    {\n      throw new Error(\"The method 'getItemBottom' is not implemented!\");\n    },\n\n\n    /**\n     * NOT IMPLEMENTED\n     *\n     * @param item {qx.ui.core.Widget} Item to query.\n     * @return {Integer} Top offset.\n     * @abstract\n     */\n    getItemLeft : function(item)\n    {\n      throw new Error(\"The method 'getItemLeft' is not implemented!\");\n    },\n\n\n    /**\n     * NOT IMPLEMENTED\n     *\n     * @param item {qx.ui.core.Widget} Item to query.\n     * @return {Integer} Right offset.\n     * @abstract\n     */\n    getItemRight : function(item)\n    {\n      throw new Error(\"The method 'getItemRight' is not implemented!\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    _onScrollBarX : function(e) {\n      this.__pane.setScrollX(e.getData());\n    },\n\n\n    // overridden\n    _onScrollBarY : function(e) {\n      this.__pane.setScrollY(e.getData());\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.__pane.dispose();\n    this.__pane = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Interface describes the methods which the {@link qx.ui.tree.provider.WidgetProvider}\n * uses for communication.\n */\nqx.Interface.define(\"qx.ui.tree.core.IVirtualTree\",\n{\n  members :\n  {\n    /**\n     * Return whether top level items should have an open/close button. The top\n     * level item item is normally the root item, but when the root is hidden,\n     * the root children are the top level items.\n     *\n     * @return {Boolean} Returns <code>true</code> when top level items should\n     *   show open/close buttons, <code>false</code> otherwise.\n     */\n    isShowTopLevelOpenCloseIcons : function() {},\n\n\n    /**\n     * Returns the internal data structure. The Array index is the row and the\n     * value is the model item.\n     *\n     * @internal\n     * @return {qx.data.Array} The internal data structure.\n     */\n    getLookupTable : function() {},\n\n\n    /**\n     * Returns if the passed item is a note or a leaf.\n     *\n     * @internal\n     * @param item {qx.core.Object} Item to check.\n     * @return {Boolean} <code>True</code> when item is a node,\n     *   </code>false</code> when item is a leaf.\n     */\n    isNode : function(item)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInterface(item, qx.core.Object);\n    },\n\n\n    /**\n     * Return whether the node is opened or closed.\n     *\n     * @param node {qx.core.Object} Node to check.\n     * @return {Boolean} Returns <code>true</code> when the node is opened,\n     *   <code>false</code> otherwise.\n     */\n    isNodeOpen : function(node)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInterface(node, qx.core.Object);\n    },\n\n\n    /**\n     * Returns the row's nesting level.\n     *\n     * @param row {Integer} The row to get the nesting level.\n     * @return {Integer} The row's nesting level or <code>null</code>.\n     */\n    getLevel : function(row)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInteger(row);\n    },\n\n\n    /**\n     * Return whether the node has visible children or not.\n     *\n     * @internal\n     * @param node {qx.core.Object} Node to check.\n     * @return {Boolean} <code>True</code> when the node has visible children,\n     *   <code>false</code> otherwise.\n     */\n    hasChildren : function(node)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInterface(node, qx.core.Object);\n    },\n\n\n    /**\n     * Opens the passed node.\n     *\n     * @param node {qx.core.Object} Node to open.\n     */\n    openNode : function(node)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInterface(node, qx.core.Object);\n    },\n\n\n    /**\n     * Opens the passed node without scrolling selected item into view.\n     *\n     * @param node {qx.core.Object} Node to open.\n     */\n    openNodeWithoutScrolling : function(node)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInterface(node, qx.core.Object);\n    },\n\n\n    /**\n     * Closes the passed node.\n     *\n     * @param node {qx.core.Object} Node to close.\n     */\n    closeNode : function(node)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInterface(node, qx.core.Object);\n    },\n\n\n    /**\n     * Closes the passed node without scrolling selected item into view.\n     *\n     * @param node {qx.core.Object} Node to close.\n     */\n    closeNodeWithoutScrolling : function(node)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInterface(node, qx.core.Object);\n    },\n\n\n    /**\n     * Returns the current selection.\n     *\n     * @return {qx.data.Array} The current selected elements.\n     */\n    getSelection : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Implements the different selection modes single, multi, additive and one\n * selection with there drag and quick selection.\n *\n * Example how to use selection:\n * <pre class=\"javascript\">\n * var rawData = [];\n * for (var i = 0; i < 2500; i++) {\n *  rawData[i] = \"Item No \" + i;\n * }\n *\n * var model = qx.data.marshal.Json.createModel(rawData);\n * var list = new qx.ui.list.List(model);\n *\n * // Pre-Select \"Item No 20\"\n * list.getSelection().push(model.getItem(20));\n *\n * // log change selection\n * list.getSelection().addListener(\"change\", function(e) {\n *   this.debug(\"Selection: \" + list.getSelection().getItem(0));\n * }, this);\n * </pre>\n *\n * @internal\n */\nqx.Mixin.define(\"qx.ui.virtual.selection.MModel\",\n{\n  construct : function()\n  {\n    this._initSelectionManager();\n    this.__defaultSelection = new qx.data.Array();\n    this.initSelection(this.__defaultSelection);\n  },\n\n\n  properties :\n  {\n    /** Current selected items */\n    selection :\n    {\n      check : \"qx.data.Array\",\n      event : \"changeSelection\",\n      apply : \"_applySelection\",\n      nullable : false,\n      deferredInit : true\n    },\n\n\n    /**\n     * The selection mode to use.\n     *\n     * For further details please have a look at:\n     * {@link qx.ui.core.selection.Abstract#mode}\n     */\n    selectionMode :\n    {\n      check : [\"single\", \"multi\", \"additive\", \"one\"],\n      init : \"single\",\n      apply : \"_applySelectionMode\"\n    },\n\n\n    /**\n     * Enable drag selection (multi selection of items through\n     * dragging the pointer in pressed states).\n     *\n     * Only possible for the selection modes <code>multi</code> and <code>additive</code>\n     */\n    dragSelection :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyDragSelection\"\n    },\n\n\n    /**\n     * Enable quick selection mode, where no tap is needed to change the selection.\n     *\n     * Only possible for the modes <code>single</code> and <code>one</code>.\n     */\n    quickSelection :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyQuickSelection\"\n    }\n  },\n\n\n  events : {\n    /**\n     * This event is fired as soon as the content of the selection property changes, but\n     * this is not equal to the change of the selection of the widget. If the selection\n     * of the widget changes, the content of the array stored in the selection property\n     * changes. This means you have to listen to the change event of the selection array\n     * to get an event as soon as the user changes the selected item.\n     * <pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>\n     */\n    \"changeSelection\" : \"qx.event.type.Data\",\n\n    /** Fires after the value was modified */\n    \"changeValue\" : \"qx.event.type.Data\"\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.virtual.selection.Row} selection manager */\n    _manager : null,\n\n\n    /** @type {Boolean} flag to ignore the selection change from {@link #selection} */\n    __ignoreChangeSelection : false,\n\n\n    /** @type {Boolean} flag to ignore the selection change from <code>_manager</code> */\n    __ignoreManagerChangeSelection : false,\n\n    __defaultSelection : null,\n\n\n    /**\n     * setValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @param selection {qx.data.IListData|null} List data to select as value.\n     * @return {null} The status of this operation.\n     */\n    setValue : function(selection) {\n      if (null === selection) {\n        this.resetSelection();\n      } else {\n        this.setSelection(selection);\n      }\n\n      return null;\n    },\n\n\n    /**\n     * getValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @return {qx.data.IListData} The current selection.\n     */\n    getValue : function() {\n      return this.getSelection();\n    },\n\n\n    /**\n     * resetValue implements part of the {@link qx.ui.form.IField} interface.\n     */\n    resetValue : function() {\n      this.resetSelection();\n    },\n\n\n    /**\n     * Initialize the selection manager with his delegate.\n     */\n    _initSelectionManager : function()\n    {\n      var self = this;\n      var selectionDelegate =\n      {\n        isItemSelectable : function(row) {\n          return self._provider.isSelectable(row);\n        },\n\n        styleSelectable : function(row, type, wasAdded)\n        {\n          if (type != \"selected\") {\n            return;\n          }\n\n          if (wasAdded) {\n            self._provider.styleSelectabled(row);\n          } else {\n            self._provider.styleUnselectabled(row);\n          }\n        }\n      };\n\n      this._manager = new qx.ui.virtual.selection.Row(\n        this.getPane(), selectionDelegate\n      );\n      this._manager.attachPointerEvents(this.getPane());\n      this._manager.attachKeyEvents(this);\n      this._manager.addListener(\"changeSelection\", this._onManagerChangeSelection, this);\n    },\n\n\n    /**\n     * Determines, if automatically scrolling of selected item is active.\n     * Set <code>false</code> to suspend auto scrolling.\n     *\n     * @param value {Boolean} Set <code>false</code> to suspend auto scrolling.\n     */\n    setAutoScrollIntoView : function(value)\n    {\n      this._manager._autoScrollIntoView = value;\n    },\n\n\n    /**\n     * Returns true, if automatically scrolling of selected item is active.\n     *\n     * @return {Boolean} Returns <code>false</code> if auto scrolling is suspended.\n     */\n    getAutoScrollIntoView : function()\n    {\n      return this._manager._autoScrollIntoView;\n    },\n\n\n    /**\n     * Method to update the selection, this method can be used when the model has\n     * changes.\n     */\n    _updateSelection : function()\n    {\n      if (this._manager == null) {\n        return;\n      }\n\n      this._onChangeSelection();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // apply method\n    _applySelection : function(value, old)\n    {\n      value.addListener(\"change\", this._onChangeSelection, this);\n\n      if (old != null) {\n        old.removeListener(\"change\", this._onChangeSelection, this);\n      }\n\n      this._onChangeSelection();\n    },\n\n\n    // apply method\n    _applySelectionMode : function(value, old) {\n      this._manager.setMode(value);\n    },\n\n\n    // apply method\n    _applyDragSelection : function(value, old) {\n      this._manager.setDrag(value);\n    },\n\n\n    // apply method\n    _applyQuickSelection : function(value, old) {\n      this._manager.setQuick(value);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the internal selection change {@link #selection}.\n     *\n     * @param e {qx.event.type.Data} the change event.\n     */\n    _onChangeSelection : function(e)\n    {\n      if (this.__ignoreManagerChangeSelection == true) {\n        return;\n      }\n\n      this.__ignoreChangeSelection = true;\n      var selection = this.getSelection();\n\n      var newSelection = [];\n      for (var i = 0; i < selection.getLength(); i++)\n      {\n        var item = selection.getItem(i);\n        var selectables = this._getSelectables();\n        var index = -1;\n\n        if (selectables != null) {\n          index = selectables.indexOf(item);\n        }\n\n        var row = this._reverseLookup(index);\n\n        if (row >= 0) {\n          newSelection.push(row);\n        }\n      }\n\n      if (this._beforeApplySelection != null &&\n          qx.lang.Type.isFunction(this._beforeApplySelection)) {\n        this._beforeApplySelection(newSelection);\n      }\n\n      try {\n        if (!qx.lang.Array.equals(newSelection, this._manager.getSelection())) {\n          this._manager.replaceSelection(newSelection);\n        }\n      }\n      catch(ex)\n      {\n        this._manager.selectItem(newSelection[newSelection.length - 1]);\n      }\n      this.__synchronizeSelection();\n\n      if (this._afterApplySelection != null &&\n          qx.lang.Type.isFunction(this._afterApplySelection)) {\n        this._afterApplySelection();\n      }\n\n      this.__ignoreChangeSelection = false;\n    },\n\n\n    /**\n     * Event handler for the selection change from the <code>_manager</code>.\n     *\n     * @param e {qx.event.type.Data} the change event.\n     */\n    _onManagerChangeSelection : function(e)\n    {\n      if (this.__ignoreChangeSelection == true) {\n        return;\n      }\n\n      this.__ignoreManagerChangeSelection = true;\n\n      this.__synchronizeSelection();\n\n      this.__ignoreManagerChangeSelection = false;\n\n      this.fireDataEvent(\"changeValue\", e.getData(), e.getOldData());\n    },\n\n\n    /**\n     * Synchronized the selection form the manager with the local one.\n     */\n    __synchronizeSelection : function()\n    {\n      if (this.__isSelectionEquals()) {\n        return;\n      }\n\n      var managerSelection = this._manager.getSelection();\n      var newSelection = [];\n\n      for (var i = 0; i < managerSelection.length; i++)\n      {\n        var item = this._getDataFromRow(managerSelection[i]);\n\n        if (item != null) {\n          newSelection.push(item);\n        }\n      }\n\n      this.__replaceSelection(newSelection);\n    },\n\n\n    /**\n     * Replace the current selection with the passed selection Array.\n     *\n     * @param newSelection {qx.data.Array} The new selection.\n     */\n    __replaceSelection : function(newSelection)\n    {\n      var selection = this.getSelection();\n      if (newSelection.length > 0)\n      {\n        var args = [0, selection.getLength()];\n        args = args.concat(newSelection);\n        // dispose data array returned by splice to avoid memory leak\n        var temp = selection.splice.apply(selection, args);\n        temp.dispose();\n      } else {\n        selection.removeAll();\n      }\n    },\n\n\n    /**\n     * Checks whether the local and the manager selection are equal.\n     *\n     * @return {Boolean} <code>true</code> if the selections are equal,\n     *   <code>false</code> otherwise.\n     */\n    __isSelectionEquals : function()\n    {\n      var selection = this.getSelection();\n      var managerSelection = this._manager.getSelection();\n\n      if (selection.getLength() !== managerSelection.length) {\n        return false;\n      }\n\n      for (var i = 0; i < selection.getLength(); i++)\n      {\n        var item = selection.getItem(i);\n        var selectables = this._getSelectables();\n        var index = -1;\n\n        if (selectables != null) {\n          index = selectables.indexOf(item);\n        }\n        var row = this._reverseLookup(index);\n\n        if (row !== managerSelection[i]) {\n          return false;\n        };\n      }\n      return true;\n    },\n\n\n    /**\n     * Helper Method to select default item.\n     */\n    _applyDefaultSelection : function() {\n      if (this._manager != null) {\n        this._manager._applyDefaultSelection();\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._manager.dispose();\n    this._manager = null;\n    if (this.__defaultSelection) {\n      this.__defaultSelection.dispose();\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * The Pane provides a window of a larger virtual grid.\n *\n * The actual rendering is performed by one or several layers ({@link ILayer}.\n * The pane computes, which cells of the virtual area is visible and instructs\n * the layers to render these cells.\n */\nqx.Class.define(\"qx.ui.virtual.core.Pane\",\n{\n  extend : qx.ui.core.Widget,\n\n\n  /**\n   * @param rowCount {Integer?0} The number of rows of the virtual grid.\n   * @param columnCount {Integer?0} The number of columns of the virtual grid.\n   * @param cellHeight {Integer?10} The default cell height.\n   * @param cellWidth {Integer?10} The default cell width.\n   */\n  construct : function(rowCount, columnCount, cellHeight, cellWidth)\n  {\n    this.base(arguments);\n\n    this.__rowConfig = new qx.ui.virtual.core.Axis(cellHeight, rowCount);\n    this.__columnConfig = new qx.ui.virtual.core.Axis(cellWidth, columnCount);\n\n    this.__scrollTop = 0;\n    this.__scrollLeft = 0;\n\n\n    this.__paneHeight = 0;\n    this.__paneWidth = 0;\n\n    this.__layerWindow = {};\n    this.__jobs = {};\n\n    // create layer container. The container does not have a layout manager\n    // layers are positioned using \"setUserBounds\"\n    this.__layerContainer = new qx.ui.container.Composite();\n    this.__layerContainer.setUserBounds(0, 0, 0, 0);\n    this._add(this.__layerContainer);\n\n    this.__layers = [];\n\n    this.__rowConfig.addListener(\"change\", this.fullUpdate, this);\n    this.__columnConfig.addListener(\"change\", this.fullUpdate, this);\n\n    this.addListener(\"resize\", this._onResize, this);\n    this.addListenerOnce(\"appear\", this._onAppear, this);\n\n    this.addListener(\"pointerdown\", this._onPointerDown, this);\n    this.addListener(\"tap\", this._onTap, this);\n    this.addListener(\"dbltap\", this._onDbltap, this);\n    this.addListener(\"contextmenu\", this._onContextmenu, this);\n  },\n\n\n  events :\n  {\n    /** Fired if a cell is tapped. */\n    cellTap : \"qx.ui.virtual.core.CellEvent\",\n\n    /** Fired if a cell is right-clicked. */\n    cellContextmenu : \"qx.ui.virtual.core.CellEvent\",\n\n    /** Fired if a cell is double-tapped. */\n    cellDbltap : \"qx.ui.virtual.core.CellEvent\",\n\n    /** Fired on resize of either the container or the (virtual) content. */\n    update : \"qx.event.type.Event\",\n\n    /** Fired if the pane is scrolled horizontally. */\n    scrollX : \"qx.event.type.Data\",\n\n    /** Fired if the pane is scrolled vertically. */\n    scrollY : \"qx.event.type.Data\"\n  },\n\n\n  properties :\n  {\n    // overridden\n    width :\n    {\n      refine : true,\n      init : 400\n    },\n\n\n    // overridden\n    height :\n    {\n      refine : true,\n      init : 300\n    }\n  },\n\n\n  members :\n  {\n    __rowConfig : null,\n    __columnConfig : null,\n    __scrollTop : null,\n    __scrollLeft : null,\n    __paneHeight : null,\n    __paneWidth : null,\n    __layerWindow : null,\n    __jobs : null,\n    __layerContainer : null,\n    __layers : null,\n    __dontFireUpdate : null,\n    __columnSizes : null,\n    __rowSizes : null,\n    __pointerDownCoords : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ACCESSOR METHODS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Get the axis object, which defines the row numbers and the row sizes.\n     *\n     * @return {qx.ui.virtual.core.Axis} The row configuration.\n     */\n    getRowConfig : function() {\n      return this.__rowConfig;\n    },\n\n\n    /**\n     * Get the axis object, which defines the column numbers and the column sizes.\n     *\n     * @return {qx.ui.virtual.core.Axis} The column configuration.\n     */\n    getColumnConfig : function() {\n      return this.__columnConfig;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYER MANAGEMENT\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns an array containing the layer container.\n     *\n     * @return {Object[]} The layer container array.\n     */\n    getChildren : function() {\n      return [this.__layerContainer];\n    },\n\n\n    /**\n     * Add a layer to the layer container.\n     *\n     * @param layer {qx.ui.virtual.core.ILayer} The layer to add.\n     */\n    addLayer : function(layer)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInterface(layer, qx.ui.virtual.core.ILayer);\n      }\n\n      this.__layers.push(layer);\n      layer.setUserBounds(0, 0, 0, 0);\n      this.__layerContainer.add(layer);\n    },\n\n\n    /**\n     * Get a list of all layers.\n     *\n     * @return {qx.ui.virtual.core.ILayer[]} List of the pane's layers.\n     */\n    getLayers : function() {\n      return this.__layers;\n    },\n\n\n    /**\n     * Get a list of all visible layers.\n     *\n     * @return {qx.ui.virtual.core.ILayer[]} List of the pane's visible layers.\n     */\n    getVisibleLayers : function()\n    {\n      var layers = [];\n      for (var i=0; i<this.__layers.length; i++)\n      {\n        var layer = this.__layers[i];\n        if (layer.isVisible()) {\n          layers.push(layer);\n        }\n      }\n      return layers;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * The maximum horizontal scroll position.\n     *\n     * @return {Integer} Maximum horizontal scroll position.\n     */\n    getScrollMaxX : function()\n    {\n      var paneSize = this.getInnerSize();\n\n      if (paneSize) {\n        return Math.max(0, this.__columnConfig.getTotalSize() - paneSize.width);\n      }\n\n      return 0;\n    },\n\n\n    /**\n     * The maximum vertical scroll position.\n     *\n     * @return {Integer} Maximum vertical scroll position.\n     */\n    getScrollMaxY : function()\n    {\n      var paneSize = this.getInnerSize();\n\n      if (paneSize) {\n        return Math.max(0, this.__rowConfig.getTotalSize() - paneSize.height);\n      }\n\n      return 0;\n    },\n\n\n    /**\n     * Scrolls the content to the given left coordinate.\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     */\n    setScrollY : function(value)\n    {\n      var max = this.getScrollMaxY();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      if (this.__scrollTop !== value)\n      {\n        var old = this.__scrollTop;\n        this.__scrollTop = value;\n        this._deferredUpdateScrollPosition();\n        this.fireDataEvent(\"scrollY\", value, old);\n      }\n    },\n\n\n    /**\n     * Returns the vertical scroll offset.\n     *\n     * @return {Integer} The vertical scroll offset.\n     */\n    getScrollY : function() {\n      return this.__scrollTop;\n    },\n\n\n    /**\n     * Scrolls the content to the given top coordinate.\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     */\n    setScrollX : function(value)\n    {\n      var max = this.getScrollMaxX();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      if (value !== this.__scrollLeft)\n      {\n        var old = this.__scrollLeft;\n        this.__scrollLeft = value;\n        this._deferredUpdateScrollPosition();\n\n        this.fireDataEvent(\"scrollX\", value, old);\n      }\n    },\n\n\n    /**\n     * Returns the horizontal scroll offset.\n     *\n     * @return {Integer} The horizontal scroll offset.\n     */\n    getScrollX : function() {\n      return this.__scrollLeft;\n    },\n\n\n    /**\n     * The (virtual) size of the content.\n     *\n     * @return {Map} Size of the content (keys: <code>width</code> and\n     *     <code>height</code>).\n     */\n    getScrollSize : function()\n    {\n      return {\n        width: this.__columnConfig.getTotalSize(),\n        height: this.__rowConfig.getTotalSize()\n      };\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL INTO VIEW SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Scrolls a row into the visible area of the pane.\n     *\n     * @param row {Integer} The row's index.\n     */\n    scrollRowIntoView : function(row)\n    {\n      var bounds = this.getBounds();\n      if (!bounds)\n      {\n        this.addListenerOnce(\"appear\", function()\n        {\n          // It's important that the registered events are first dispatched.\n          qx.event.Timer.once(function() {\n            this.scrollRowIntoView(row);\n          }, this, 0);\n        }, this);\n        return;\n      }\n\n      var itemTop = this.__rowConfig.getItemPosition(row);\n      var itemBottom = itemTop + this.__rowConfig.getItemSize(row);\n      var scrollTop = this.getScrollY();\n\n      if (itemTop < scrollTop) {\n        this.setScrollY(itemTop);\n      } else if (itemBottom > scrollTop + bounds.height) {\n        this.setScrollY(itemBottom - bounds.height);\n      }\n    },\n\n\n    /**\n     * Scrolls a column into the visible area of the pane.\n     *\n     * @param column {Integer} The column's index.\n     */\n    scrollColumnIntoView : function(column)\n    {\n      var bounds = this.getBounds();\n      if (!bounds)\n      {\n        this.addListenerOnce(\"appear\", function()\n        {\n          // It's important that the registered events are first dispatched.\n          qx.event.Timer.once(function() {\n            this.scrollColumnIntoView(column);\n          }, this, 0);\n        }, this);\n        return;\n      }\n\n      var itemLeft = this.__columnConfig.getItemPosition(column);\n      var itemRight = itemLeft + this.__columnConfig.getItemSize(column);\n      var scrollLeft = this.getScrollX();\n\n      if (itemLeft < scrollLeft) {\n        this.setScrollX(itemLeft);\n      } else if (itemRight > scrollLeft + bounds.width) {\n        this.setScrollX(itemRight - bounds.width);\n      }\n    },\n\n\n    /**\n     * Scrolls a grid cell into the visible area of the pane.\n     *\n     * @param row {Integer} The cell's row index.\n     * @param column {Integer} The cell's column index.\n     */\n    scrollCellIntoView : function(column, row)\n    {\n      var bounds = this.getBounds();\n      if (!bounds)\n      {\n        this.addListenerOnce(\"appear\", function()\n        {\n          // It's important that the registered events are first dispatched.\n          qx.event.Timer.once(function() {\n            this.scrollCellIntoView(column, row);\n          }, this, 0);\n        }, this);\n        return;\n      }\n\n      this.scrollColumnIntoView(column);\n      this.scrollRowIntoView(row);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CELL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Get the grid cell at the given absolute document coordinates. This method\n     * can be used to convert the pointer position returned by\n     * {@link qx.event.type.Pointer#getDocumentLeft} and\n     * {@link qx.event.type.Pointer#getDocumentLeft} into cell coordinates.\n     *\n     * @param documentX {Integer} The x coordinate relative to the viewport\n     *    origin.\n     * @param documentY {Integer} The y coordinate relative to the viewport\n     *    origin.\n     * @return {Map|null} A map containing the <code>row</code> and <code>column</code>\n     *    of the found cell. If the coordinate is outside of the pane's bounds\n     *    or there is no cell at the coordinate <code>null</code> is returned.\n     */\n    getCellAtPosition: function(documentX, documentY)\n    {\n      var rowData, columnData;\n      var paneLocation = this.getContentLocation();\n\n      if (\n        !paneLocation ||\n        documentY < paneLocation.top ||\n        documentY >= paneLocation.bottom ||\n        documentX < paneLocation.left ||\n        documentX >= paneLocation.right\n      ) {\n        return null;\n      }\n\n      rowData = this.__rowConfig.getItemAtPosition(\n        this.getScrollY() + documentY - paneLocation.top\n      );\n\n      columnData = this.__columnConfig.getItemAtPosition(\n        this.getScrollX() + documentX - paneLocation.left\n      );\n\n      if (!rowData || !columnData) {\n        return null;\n      }\n\n      return {\n        row : rowData.index,\n        column : columnData.index\n      };\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PREFETCH SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Increase the layers width beyond the needed width to improve\n     * horizontal scrolling. The layers are only resized if invisible parts\n     * left/right of the pane window are smaller than minLeft/minRight.\n     *\n     * @param minLeft {Integer} Only prefetch if the invisible part left of the\n     *    pane window if smaller than this (pixel) value.\n     * @param maxLeft {Integer} The amount of pixel the layers should reach\n     *    left of the pane window.\n     * @param minRight {Integer} Only prefetch if the invisible part right of the\n     *    pane window if smaller than this (pixel) value.\n     * @param maxRight {Integer} The amount of pixel the layers should reach\n     *    right of the pane window.\n     */\n    prefetchX : function(minLeft, maxLeft, minRight, maxRight)\n    {\n      var layers = this.getVisibleLayers();\n      if (layers.length == 0) {\n        return;\n      }\n\n      var bounds = this.getBounds();\n      if (!bounds) {\n        return;\n      }\n\n      var paneRight = this.__scrollLeft + bounds.width;\n      var rightAvailable = this.__paneWidth - paneRight;\n      if (\n        this.__scrollLeft - this.__layerWindow.left  < Math.min(this.__scrollLeft, minLeft) ||\n        this.__layerWindow.right - paneRight < Math.min(rightAvailable, minRight)\n      )\n      {\n        var left = Math.min(this.__scrollLeft, maxLeft);\n        var right = Math.min(rightAvailable, maxRight);\n        this._setLayerWindow(\n          layers,\n          this.__scrollLeft - left,\n          this.__scrollTop,\n          bounds.width + left + right,\n          bounds.height,\n          false\n        );\n      }\n    },\n\n\n    /**\n     * Increase the layers height beyond the needed height to improve\n     * vertical scrolling. The layers are only resized if invisible parts\n     * above/below the pane window are smaller than minAbove/minBelow.\n     *\n     * @param minAbove {Integer} Only prefetch if the invisible part above the\n     *    pane window if smaller than this (pixel) value.\n     * @param maxAbove {Integer} The amount of pixel the layers should reach\n     *    above the pane window.\n     * @param minBelow {Integer} Only prefetch if the invisible part below the\n     *    pane window if smaller than this (pixel) value.\n     * @param maxBelow {Integer} The amount of pixel the layers should reach\n     *    below the pane window.\n     */\n    prefetchY : function(minAbove, maxAbove, minBelow, maxBelow)\n    {\n      var layers = this.getVisibleLayers();\n      if (layers.length == 0) {\n        return;\n      }\n\n      var bounds = this.getBounds();\n      if (!bounds) {\n        return;\n      }\n\n      var paneBottom = this.__scrollTop + bounds.height;\n      var belowAvailable = this.__paneHeight - paneBottom;\n      if (\n        this.__scrollTop - this.__layerWindow.top  < Math.min(this.__scrollTop, minAbove) ||\n        this.__layerWindow.bottom - paneBottom < Math.min(belowAvailable, minBelow)\n      )\n      {\n        var above = Math.min(this.__scrollTop, maxAbove);\n        var below = Math.min(belowAvailable, maxBelow);\n        this._setLayerWindow(\n          layers,\n          this.__scrollLeft,\n          this.__scrollTop - above,\n          bounds.width,\n          bounds.height + above + below,\n          false\n        );\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Resize event handler.\n     *\n     * Updates the visible window.\n     */\n    _onResize : function()\n    {\n      if (this.getContentElement().getDomElement())\n      {\n        this.__dontFireUpdate = true;\n        this._updateScrollPosition();\n        this.__dontFireUpdate = null;\n        this.fireEvent(\"update\");\n      }\n    },\n\n\n    /**\n     * Resize event handler. Do a full update on first appear.\n     */\n    _onAppear : function() {\n      this.fullUpdate();\n    },\n\n    /**\n     * Event listener for pointer down. Remembers cell position to prevent pointer event when cell position change.\n     *\n     * @param e {qx.event.type.Pointer} The incoming pointer event.\n     */\n    _onPointerDown : function(e) {\n      this.__pointerDownCoords = this.getCellAtPosition(e.getDocumentLeft(), e.getDocumentTop());\n    },\n\n    /**\n     * Event listener for pointer taps. Fires an cellTap event.\n     *\n     * @param e {qx.event.type.Pointer} The incoming pointer event.\n     */\n    _onTap : function(e) {\n      this.__handlePointerCellEvent(e, \"cellTap\");\n    },\n\n\n    /**\n     * Event listener for context menu taps. Fires an cellContextmenu event.\n     *\n     * @param e {qx.event.type.Pointer} The incoming pointer event.\n     */\n    _onContextmenu : function(e) {\n      this.__handlePointerCellEvent(e, \"cellContextmenu\");\n    },\n\n\n    /**\n     * Event listener for double taps. Fires an cellDbltap event.\n     *\n     * @param e {qx.event.type.Pointer} The incoming pointer event.\n     */\n    _onDbltap : function(e) {\n       this.__handlePointerCellEvent(e, \"cellDbltap\");\n    },\n\n    /**\n     * Fixed scrollbar position whenever it is out of range\n     * it can happen when removing an item from the list reducing\n     * the max value for scrollY #8976\n     */\n    _checkScrollBounds: function() {\n      var maxx = this.getScrollMaxX();\n      var maxy = this.getScrollMaxY();\n      if (this.__scrollLeft < 0) {\n        this.__scrollLeft = 0;\n      }\n      else if (this.__scrollLeft > maxx) {\n        this.__scrollLeft = maxx;\n      }\n      if (this.__scrollTop < 0) {\n        this.__scrollTop = 0;\n      }\n      else if (this.__scrollTop > maxy) {\n        this.__scrollTop = maxy;\n      }\n    },\n\n    /**\n     * Converts a pointer event into a cell event and fires the cell event if the\n     * pointer is over a cell.\n     *\n     * @param e {qx.event.type.Pointer} The pointer event.\n     * @param cellEventType {String} The name of the cell event to fire.\n     */\n    __handlePointerCellEvent : function(e, cellEventType)\n    {\n      var coords = this.getCellAtPosition(e.getDocumentLeft(), e.getDocumentTop());\n      if (!coords) {\n        return;\n      }\n\n      var pointerDownCoords = this.__pointerDownCoords;\n      if (pointerDownCoords == null || pointerDownCoords.row !== coords.row || pointerDownCoords.column !== coords.column) {\n        return;\n      }\n\n      this.fireNonBubblingEvent(\n        cellEventType,\n        qx.ui.virtual.core.CellEvent,\n        [this, e, coords.row, coords.column]\n      );\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PANE UPDATE\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    syncWidget : function(jobs)\n    {\n      if (this.__jobs._fullUpdate) {\n        this._checkScrollBounds();\n        this._fullUpdate();\n      } else if (this.__jobs._updateScrollPosition) {\n        this._checkScrollBounds();\n        this._updateScrollPosition();\n      }\n      this.__jobs = {};\n    },\n\n\n    /**\n     * Sets the size of the layers to contain the cells at the pixel position\n     * \"left/right\" up to \"left+minHeight/right+minHeight\". The offset of the\n     * layer container is adjusted to respect the pane's scroll top and scroll\n     * left values.\n     *\n     * @param layers {qx.ui.virtual.core.ILayer[]} List of layers to update.\n     * @param left {Integer} Maximum left pixel coordinate of the layers.\n     * @param top {Integer} Maximum top pixel coordinate of the layers.\n     * @param minWidth {Integer} The minimum end coordinate of the layers will\n     *    be larger than <code>left+minWidth</code>.\n     * @param minHeight {Integer} The minimum end coordinate of the layers will\n     *    be larger than <code>top+minHeight</code>.\n     * @param doFullUpdate {Boolean?false} Whether a full update on the layer\n     *    should be performed of if only the layer window should be updated.\n     */\n    _setLayerWindow : function(layers, left, top, minWidth, minHeight, doFullUpdate)\n    {\n      var rowCellData = this.__rowConfig.getItemAtPosition(top);\n      if (rowCellData)\n      {\n        var firstRow = rowCellData.index;\n        var rowSizes = this.__rowConfig.getItemSizes(firstRow, minHeight + rowCellData.offset);\n        var layerHeight = qx.lang.Array.sum(rowSizes);\n        var layerTop = top - rowCellData.offset;\n        var layerBottom = top - rowCellData.offset + layerHeight;\n      }\n      else\n      {\n        var firstRow = 0;\n        var rowSizes = [];\n        var layerHeight = 0;\n        var layerTop = 0;\n        var layerBottom = 0;\n      }\n\n      var columnCellData = this.__columnConfig.getItemAtPosition(left);\n      if (columnCellData)\n      {\n        var firstColumn = columnCellData.index;\n        var columnSizes = this.__columnConfig.getItemSizes(firstColumn, minWidth + columnCellData.offset);\n        var layerWidth = qx.lang.Array.sum(columnSizes);\n        var layerLeft = left - columnCellData.offset;\n        var layerRight = left - columnCellData.offset + layerWidth;\n      }\n      else\n      {\n        var firstColumn = 0;\n        var columnSizes = [];\n        var layerWidth = 0;\n        var layerLeft = 0;\n        var layerRight = 0;\n      }\n\n      this.__layerWindow = {\n        top: layerTop,\n        bottom: layerBottom,\n        left: layerLeft,\n        right: layerRight\n      };\n\n      this.__layerContainer.setUserBounds(\n        (this.getPaddingLeft() || 0) + (this.__layerWindow.left - this.__scrollLeft),\n        (this.getPaddingTop() || 0) + (this.__layerWindow.top - this.__scrollTop),\n        layerWidth, layerHeight\n      );\n\n      this.__columnSizes = columnSizes;\n      this.__rowSizes = rowSizes;\n\n      for (var i=0; i<this.__layers.length; i++)\n      {\n        var layer = this.__layers[i];\n        layer.setUserBounds(0, 0, layerWidth, layerHeight);\n\n        if (doFullUpdate) {\n          layer.fullUpdate(firstRow, firstColumn, rowSizes, columnSizes);\n        } else {\n          layer.updateLayerWindow(firstRow, firstColumn, rowSizes, columnSizes);\n        }\n      }\n    },\n\n\n\n    /**\n     * Check whether the pane was resized and fire an {@link #update} event if\n     * it was.\n     */\n    __checkPaneResize : function()\n    {\n      if (this.__dontFireUpdate) {\n        return;\n      }\n\n      var scrollSize = this.getScrollSize();\n      if (\n        this.__paneHeight !== scrollSize.height ||\n        this.__paneWidth !== scrollSize.width\n      )\n      {\n        this.__paneHeight = scrollSize.height;\n        this.__paneWidth = scrollSize.width;\n        this.fireEvent(\"update\");\n      }\n    },\n\n\n    /**\n     * Schedule a full update on all visible layers.\n     */\n    fullUpdate : function()\n    {\n      this.__jobs._fullUpdate = 1;\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n\n    /**\n     * Whether a full update is scheduled.\n     *\n     * @return {Boolean} Whether a full update is scheduled.\n     */\n    isUpdatePending : function() {\n      return !!this.__jobs._fullUpdate;\n    },\n\n\n    /**\n     * Perform a full update on all visible layers. All cached data will be\n     * discarded.\n     */\n    _fullUpdate : function()\n    {\n      var layers = this.getVisibleLayers();\n      if (layers.length == 0)\n      {\n        this.__checkPaneResize();\n        return;\n      }\n\n      var bounds = this.getBounds();\n\n      if (!bounds) {\n        return; // the pane has not yet been rendered -> wait for the appear event\n      }\n\n\n\n      this._setLayerWindow(\n        layers,\n        this.__scrollLeft, this.__scrollTop,\n        bounds.width, bounds.height,\n        true\n      );\n\n      this.__checkPaneResize();\n    },\n\n\n    /**\n     * Schedule an update the visible window of the grid according to the top\n     * and left scroll positions.\n     */\n    _deferredUpdateScrollPosition : function()\n    {\n      this.__jobs._updateScrollPosition = 1;\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n\n    /**\n     * Update the visible window of the grid according to the top and left scroll\n     * positions.\n     */\n    _updateScrollPosition : function()\n    {\n      var layers = this.getVisibleLayers();\n      if (layers.length == 0)\n      {\n        this.__checkPaneResize();\n        return;\n      }\n\n      var bounds = this.getBounds();\n      if (!bounds) {\n        return; // the pane has not yet been rendered -> wait for the appear event\n      }\n\n      // the visible window of the virtual coordinate space\n      var paneWindow = {\n        top: this.__scrollTop,\n        bottom: this.__scrollTop + bounds.height,\n        left: this.__scrollLeft,\n        right: this.__scrollLeft + bounds.width\n      };\n\n      if (\n        this.__layerWindow.top <= paneWindow.top &&\n        this.__layerWindow.bottom >= paneWindow.bottom &&\n        this.__layerWindow.left <= paneWindow.left &&\n        this.__layerWindow.right >= paneWindow.right\n      )\n      {\n        // only update layer container offset\n        this.__layerContainer.setUserBounds(\n          (this.getPaddingLeft() || 0) + (this.__layerWindow.left - paneWindow.left),\n          (this.getPaddingTop() || 0) + (this.__layerWindow.top - paneWindow.top),\n          this.__layerWindow.right - this.__layerWindow.left,\n          this.__layerWindow.bottom - this.__layerWindow.top\n        );\n      }\n      else\n      {\n        this._setLayerWindow(\n          layers,\n          this.__scrollLeft, this.__scrollTop,\n          bounds.width, bounds.height,\n          false\n        );\n      }\n\n      this.__checkPaneResize();\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._disposeArray(\"__layers\");\n    this._disposeObjects(\"__rowConfig\", \"__columnConfig\", \"__layerContainer\");\n    this.__layerWindow = this.__jobs = this.__columnSizes =\n      this.__rowSizes = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/*\n * Virtual tree implementation.\n *\n * The virtual tree can be used to render node and leafs. Nodes and leafs are\n * both items for a tree. The difference between a node and a leaf is that a\n * node has child items, but a leaf not.\n *\n * With the {@link qx.ui.tree.core.IVirtualTreeDelegate} interface it is possible\n * to configure the tree's behavior (item renderer configuration, etc.).\n *\n * Here's an example of how to use the widget, including using a model\n * property to open/close branches. See the two timers at the end. The first\n * one opens all branches after two seconds; the second cleans up the tree\n * after five seconds.\n *\n * <pre class=\"javascript\">\n *   var nodes = \n *   [\n *     {\n *       name : \"Root\",\n *       open : false,\n *       children :\n *       [\n *         {\n *           name : \"Branch 1\",\n *           open : false,\n *           children :\n *           [\n *             {\n *               name : \"Leaf 1.1\"\n *             },\n *             {\n *               name : \"Leaf 1.2\"\n *             },\n *             {\n *               name : \"Branch 1.3\",\n *               open : false,\n *               children :\n *               [\n *                 {\n *                   name : \"Branch 1.3.1\",\n *                   open : false,\n *                   children :\n *                   [\n *                     {\n *                       name : \"Leaf 1.3.1.1\"\n *                     }\n *                   ]\n *                 }\n *               ]\n *             }\n *           ]\n *         }\n *       ]\n *     }\n *   ];\n *\n *   // convert the raw nodes to qooxdoo objects\n *   nodes = qx.data.marshal.Json.createModel(nodes, true);\n *\n *   // create the tree and synchronize the model property 'open'\n *   // to nodes being open\n *   var tree =\n *     new qx.ui.tree.VirtualTree(\n *       nodes.getItem(0), \"name\", \"children\", \"open\").set({\n *         width : 200,\n *         height : 400\n *       });\n *\n *   //log selection changes\n *   tree.getSelection().addListener(\"change\", function(e) {\n *     this.debug(\"Selection: \" + tree.getSelection().getItem(0).getName());\n *   }, this);\n *\n *   tree.set(\n *     {\n *       width : 200,\n *       height : 400,\n *       showTopLevelOpenCloseIcons : true\n *     });\n *\n *   var doc = this.getRoot();\n *   doc.add(tree,\n *   {\n *     left : 100,\n *     top  : 50\n *   });\n *\n *   // After two seconds, open up all branches by setting their open\n *   // property to true.\n *   qx.event.Timer.once(\n *     function()\n *     {\n *       ;(function allOpen(root)\n *         {\n *           if (root.setOpen)     root.setOpen(true);\n *           if (root.getChildren) root.getChildren().forEach(allOpen);\n *         })(nodes.getItem(0));\n *     },\n *     this,\n *     2000);\n *\n *   // After five seconds, remove and dispose the tree.\n *   qx.event.Timer.once(\n *     function()\n *     {\n *       doc.remove(tree);\n *       tree.dispose();\n *       console.warn(\"All cleaned up.\");\n *     },\n *     this,\n *     5000);\n * </pre>\n */\nqx.Class.define(\"qx.ui.tree.VirtualTree\",\n{\n  extend : qx.ui.virtual.core.Scroller,\n  implement : [qx.ui.tree.core.IVirtualTree, qx.data.controller.ISelection],\n  include : [\n    qx.ui.virtual.selection.MModel,\n    qx.ui.core.MContentPadding\n  ],\n\n  /**\n   * @param rootModel {qx.core.Object?null} The model structure representing\n   *   the root of the tree, for more details have a look at the 'model'\n   *   property.\n   * @param labelPath {String?null} The name of the label property, for more\n   *   details have a look at the 'labelPath' property.\n   * @param childProperty {String?null} The name of the child property, for\n   *   more details have a look at the 'childProperty' property.\n   * @param openProperty {String|null} the name of the model property which\n   *   represents the open state of a branch. If this value is provided, so, \n   *   too, must be rootModel.\n   */\n  construct : function(\n    rootModel, labelPath, childProperty, openProperty)\n  {\n    this.base(arguments, 0, 1, 20, 100);\n\n    this._init();\n\n    if (labelPath != null) {\n      this.setLabelPath(labelPath);\n    }\n\n    if (childProperty != null) {\n      this.setChildProperty(childProperty);\n    }\n\n    if(rootModel != null) {\n      this.initModel(rootModel);\n    }\n\n    this.initItemHeight();\n    this.initOpenMode();\n\n    this.addListener(\"keypress\", this._onKeyPress, this);\n\n    // If an open property and root model are provided, start up the open-close controller.\n    if (openProperty && rootModel) {\n      this.openViaModelChanges(openProperty);\n    }\n  },\n\n  events :\n  {\n    /**\n     * Fired when a node is opened.\n     */\n    open : \"qx.event.type.Data\",\n\n\n    /**\n     * Fired when a node is closed.\n     */\n    close : \"qx.event.type.Data\"\n  },\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine: true,\n      init: \"virtual-tree\"\n    },\n\n\n    // overridden\n    focusable :\n    {\n      refine: true,\n      init: true\n    },\n\n\n    // overridden\n    width :\n    {\n      refine : true,\n      init : 100\n    },\n\n\n    // overridden\n    height :\n    {\n      refine : true,\n      init : 200\n    },\n\n\n    /** Default item height. */\n    itemHeight :\n    {\n      check : \"Integer\",\n      init : 25,\n      apply : \"_applyRowHeight\",\n      themeable : true\n    },\n\n\n     /**\n     * Control whether tap or double tap should open or close the tapped\n     * item.\n     */\n    openMode :\n    {\n      check: [\"tap\", \"dbltap\", \"none\"],\n      init: \"dbltap\",\n      apply: \"_applyOpenMode\",\n      event: \"changeOpenMode\",\n      themeable: true\n    },\n\n    \n    /**\n     * Hides *only* the root node, not the node's children when the property is\n     * set to <code>true</code>.\n     */\n    hideRoot :\n    {\n      check: \"Boolean\",\n      init: false,\n      apply:\"_applyHideRoot\"\n    },\n\n\n    /**\n     * Whether top level items should have an open/close button. The top level\n     * item item is normally the root item, but when the root is hidden, the\n     * root children are the top level items.\n     */\n    showTopLevelOpenCloseIcons :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyShowTopLevelOpenCloseIcons\"\n    },\n\n\n    /**\n     * Configures the tree to show also the leafs. When the property is set to\n     * <code>false</code> *only* the nodes are shown.\n     */\n    showLeafs :\n    {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyShowLeafs\"\n    },\n\n\n    /**\n     * The name of the property, where the children are stored in the model.\n     * Instead of the {@link #labelPath} must the child property a direct\n     * property form the model instance.\n     */\n    childProperty :\n    {\n      check: \"String\",\n      apply: \"_applyChildProperty\",\n      nullable: true\n    },\n\n\n    /**\n     * The name of the property, where the value for the tree folders label\n     * is stored in the model classes.\n     */\n    labelPath :\n    {\n      check: \"String\",\n      apply: \"_applyLabelPath\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon.\n     */\n    iconPath :\n    {\n      check: \"String\",\n      apply: \"_applyIconPath\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions :\n    {\n      apply: \"_applyLabelOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions :\n    {\n      apply: \"_applyIconOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * The model containing the data (nodes and/or leafs) which should be shown\n     * in the tree.\n     */\n    model :\n    {\n      check : \"qx.core.Object\",\n      apply : \"_applyModel\",\n      event: \"changeModel\",\n      nullable : true,\n      deferredInit : true\n    },\n\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.tree.core.IVirtualTreeDelegate} interface.\n     */\n    delegate :\n    {\n      event: \"changeDelegate\",\n      apply: \"_applyDelegate\",\n      init: null,\n      nullable: true\n    }\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.tree.provider.WidgetProvider} Provider for widget rendering. */\n    _provider : null,\n\n\n    /** @type {qx.ui.virtual.layer.Abstract} Layer which contains the items. */\n    _layer : null,\n\n\n    /**\n     * @type {qx.data.Array} The internal lookup table data structure to get the model item\n     * from a row.\n     */\n    __lookupTable : null,\n\n\n    /** @type {Array} HashMap which contains all open nodes. */\n    __openNodes : null,\n\n\n    /**\n     * @type {Array} The internal data structure to get the nesting level from a\n     * row.\n     */\n    __nestingLevel : null,\n\n\n    /**\n     * @type {qx.util.DeferredCall} Adds this instance to the widget queue on a\n     * deferred call.\n     */\n    __deferredCall : null,\n\n\n    /** @type {Integer} Holds the max item width from a rendered widget. */\n    _itemWidth : 0,\n\n\n    /** @type {Array} internal parent chain form the last selected node */\n    __parentChain : null,\n\n    /** \n     * @type {String|null} the name of the model property which represents the\n     *   open state of a branch.\n     */\n    __openProperty : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    syncWidget : function(jobs)\n    {\n      var firstRow = this._layer.getFirstRow();\n      var rowSize = this._layer.getRowSizes().length;\n\n      for (var row = firstRow; row < firstRow + rowSize; row++)\n      {\n        var widget = this._layer.getRenderedCellWidget(row, 0);\n        if (widget != null) {\n          this._itemWidth = Math.max(this._itemWidth, widget.getSizeHint().width);\n        }\n      }\n      var paneWidth = this.getPane().getInnerSize().width;\n      this.getPane().getColumnConfig().setItemSize(0, Math.max(this._itemWidth, paneWidth));\n    },\n\n\n    // Interface implementation\n    openNode : function(node)\n    {\n      this.__openNode(node);\n      this.buildLookupTable();\n    },\n\n\n    // Interface implementation\n    openNodeWithoutScrolling : function(node)\n    {\n      var autoscroll = this.getAutoScrollIntoView();\n      // suspend automatically scrolling selection into view\n      this.setAutoScrollIntoView(false);\n\n      this.openNode(node);\n\n      // re set to original value\n      this.setAutoScrollIntoView(autoscroll);\n    },\n\n\n    /**\n     * Trigger a rebuild from the internal data structure.\n     */\n    refresh : function() {\n      this.buildLookupTable();\n    },\n\n\n    /**\n     * Opens the passed node and all his parents. *Note!* The algorithm\n     * implements a depth-first search with a complexity: <code>O(n)</code> and\n     * <code>n</code> are all model items.\n     *\n     * @param node {qx.core.Object} Node to open.\n     */\n    openNodeAndParents : function(node)\n    {\n      this.__openNodeAndAllParents(this.getModel(), node);\n      this.buildLookupTable();\n    },\n\n\n    // Interface implementation\n    closeNode : function(node)\n    {\n      if (this.__openNodes.includes(node))\n      {\n        qx.lang.Array.remove(this.__openNodes, node);\n        this.fireDataEvent(\"close\", node);\n        this.buildLookupTable();\n      }\n    },\n\n\n    // Interface implementation\n    closeNodeWithoutScrolling : function(node)\n    {\n      var autoscroll = this.getAutoScrollIntoView();\n      // suspend automatically scrolling selection into view\n      this.setAutoScrollIntoView(false);\n\n      this.closeNode(node);\n\n      // re set to original value\n      this.setAutoScrollIntoView(autoscroll);\n    },\n\n\n    // Interface implementation\n    isNodeOpen : function(node) {\n      return this.__openNodes.includes(node);\n    },\n\n\n    /**\n     * Open and close branches via changes to a property in the model.\n     * \n     * @param openProperty {String|null} \n     *   The name of the open property, which determines the open state of a\n     *   branch in the tree. If null, turn off opening and closing branches\n     *   via changes to the model.\n     */\n    openViaModelChanges : function(openProperty) {\n      // Save the open property\n      this.__openProperty = openProperty;\n\n      // if no name is provided, just remove any prior open-close controller\n      if (! openProperty) {\n        if (this._openCloseController) {\n          this._openCloseController.dispose();\n          this._openCloseController = null;\n        }\n\n        return;\n      }\n\n      // we have a property name, so create controller\n      this._openCloseController =\n        new qx.ui.tree.core.OpenCloseController(this, this.getModel(), openProperty);\n    },\n\n\n    /**\n     * Getter for the open property\n     */\n    getOpenProperty : function()\n    {\n      return this.__openProperty;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Initializes the virtual tree.\n     */\n    _init : function()\n    {\n      this.__lookupTable = new qx.data.Array();\n      this.__openNodes = [];\n      this.__nestingLevel = [];\n      this._initLayer();\n    },\n\n\n    /**\n     * Initializes the virtual tree layer.\n     */\n    _initLayer : function()\n    {\n      this._provider = new qx.ui.tree.provider.WidgetProvider(this);\n      this._layer = this._provider.createLayer();\n      this._layer.addListener(\"updated\", this._onUpdated, this);\n      this.getPane().addLayer(this._layer);\n      this.getPane().addListenerOnce(\"resize\", function(e) {\n        // apply width to pane on first rendering pass\n        // to avoid visible flickering\n        this.getPane().getColumnConfig().setItemSize(0, e.getData().width);\n      }, this);\n    },\n\n\n    // Interface implementation\n    getLookupTable : function() {\n      return this.__lookupTable;\n    },\n    \n    \n    // Interface implementation\n    isShowTopLevelOpenCloseIcons : function() {\n      return true;\n    },\n\n\n    /**\n     * Performs a lookup from model index to row.\n     *\n     * @param index {Number} The index to look at.\n     * @return {Number} The row or <code>-1</code>\n     *  if the index is not a model index.\n     */\n    _reverseLookup : function(index) {\n      return index;\n    },\n\n\n    /**\n     * Returns the model data for the given row.\n     *\n     * @param row {Integer} row to get data for.\n     * @return {var|null} the row's model data.\n     */\n    _getDataFromRow : function(row) {\n      return this.__lookupTable.getItem(row);\n    },\n\n    /**\n     * Returns the selectable model items.\n     *\n     * @return {qx.data.Array} The selectable items.\n     */\n    _getSelectables : function() {\n      return this.__lookupTable;\n    },\n\n\n    /**\n     * Returns all open nodes.\n     *\n     * @internal\n     * @return {Array} All open nodes.\n     */\n    getOpenNodes : function() {\n      return this.__openNodes;\n    },\n\n\n    // Interface implementation\n    isNode : function(item) {\n      return qx.ui.tree.core.Util.isNode(item, this.getChildProperty());\n    },\n\n\n    // Interface implementation\n    getLevel : function(row) {\n      return this.__nestingLevel[row];\n    },\n\n\n    // Interface implementation\n    hasChildren : function(node) {\n      return qx.ui.tree.core.Util.hasChildren(node, this.getChildProperty(), !this.isShowLeafs());\n    },\n\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget : function() {\n      return this.getPane();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY METHODS\n    ---------------------------------------------------------------------------\n    */\n\n\n    // property apply\n    _applyRowHeight : function(value, old) {\n      this.getPane().getRowConfig().setDefaultItemSize(value);\n    },\n\n\n    // property apply\n    _applyOpenMode : function(value, old)\n    {\n      var pane = this.getPane();\n\n      //\"tap\", \"dbltap\", \"none\"\n      if (value === \"dbltap\") {\n        pane.addListener(\"cellDbltap\", this._onOpen, this);\n      } else if (value === \"tap\") {\n        pane.addListener(\"cellTap\", this._onOpen, this);\n      }\n\n      if (old === \"dbltap\") {\n        pane.removeListener(\"cellDbltap\", this._onOpen, this);\n      } else if (old === \"tap\") {\n        pane.removeListener(\"cellTap\", this._onOpen, this);\n      }\n    },\n\n\n    // property apply\n    _applyHideRoot : function(value, old) {\n      this.buildLookupTable();\n    },\n\n\n    // property apply\n    _applyShowTopLevelOpenCloseIcons : function(value, old) {\n      // force rebuild of the lookup table\n      // fixes https://github.com/qooxdoo/qooxdoo/issues/9128\n      this.getLookupTable().removeAll();\n      this.buildLookupTable();\n    },\n\n\n    // property apply\n    _applyShowLeafs : function(value, old) {\n      // force rebuild of the lookup table\n      // fixes https://github.com/qooxdoo/qooxdoo/issues/9128\n      this.getLookupTable().removeAll();\n      this.buildLookupTable();\n    },\n\n\n    // property apply\n    _applyChildProperty : function(value, old) {\n      this._provider.setChildProperty(value);\n    },\n\n\n    // property apply\n    _applyLabelPath : function(value, old) {\n      this._provider.setLabelPath(value);\n    },\n\n\n    // property apply\n    _applyIconPath : function(value, old) {\n      this._provider.setIconPath(value);\n    },\n\n\n    // property apply\n    _applyLabelOptions : function(value, old) {\n      this._provider.setLabelOptions(value);\n    },\n\n\n    // property apply\n    _applyIconOptions : function(value, old) {\n      this._provider.setIconOptions(value);\n    },\n\n\n    // property apply\n    _applyModel : function(value, old)\n    {\n      this.__openNodes = [];\n\n      if (value != null)\n      {\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (!qx.Class.hasMixin(value.constructor,\n                qx.data.marshal.MEventBubbling))\n          {\n            this.warn(\"The model item doesn't support the Mixin 'qx.data.\" +\n              \"marshal.MEventBubbling'. Therefore the tree can not update \" +\n              \"the view automatically on model changes.\");\n          }\n        }\n        value.addListener(\"changeBubble\", this._onChangeBubble, this);\n        this.__openNode(value);\n      }\n\n      // If the model changes, an existing OpenCloseController is no longer\n      // valid, so dispose it. The user should call openViaModelChanges again.\n      if (this._openCloseController) {\n        this._openCloseController.dispose();\n        this._openCloseController = null;\n      }\n\n      if (old != null) {\n        old.removeListener(\"changeBubble\", this._onChangeBubble, this);\n      }\n\n      this.__applyModelChanges();\n    },\n\n\n    // property apply\n    _applyDelegate : function(value, old)\n    {\n      this._provider.setDelegate(value);\n      this.buildLookupTable();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the changeBubble event. The handler rebuild the lookup\n     * table when the child structure changed.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    _onChangeBubble : function(event)\n    {\n      var data = event.getData();\n      var propertyName = data.name;\n      var index = propertyName.lastIndexOf(\".\");\n\n      if (index != -1) {\n        propertyName = propertyName.substr(index + 1, propertyName.length);\n      }\n\n      // only continue when the effected property is the child property\n      if ( propertyName.startsWith(this.getChildProperty()) )\n      {\n        var item = data.item;\n\n        if (qx.Class.isSubClassOf(item.constructor, qx.data.Array))\n        {\n          if (index === -1)\n          {\n            item = this.getModel();\n          }\n          else\n          {\n            var propertyChain = data.name.substr(0, index);\n            item = qx.data.SingleValueBinding.resolvePropertyChain(this.getModel(), propertyChain);\n          }\n        }\n\n        if (this.__lookupTable.indexOf(item) != -1) {\n          this.__applyModelChanges();\n        }\n      }\n    },\n\n\n    /**\n     * Event handler for the update event.\n     *\n     * @param event {qx.event.type.Event} The event.\n     */\n    _onUpdated : function(event)\n    {\n      if (this.__deferredCall == null) {\n        this.__deferredCall = new qx.util.DeferredCall(function() {\n          qx.ui.core.queue.Widget.add(this);\n        }, this);\n      }\n      this.__deferredCall.schedule();\n    },\n\n\n    /**\n     * Event handler to open/close tapped nodes.\n     *\n     * @param event {qx.ui.virtual.core.CellEvent} The cell tap event.\n     */\n    _onOpen : function(event)\n    {\n      var row = event.getRow();\n      var item = this.__lookupTable.getItem(row);\n\n      if (this.isNode(item))\n      {\n        if (this.isNodeOpen(item)) {\n          this.closeNode(item);\n        } else {\n          this.openNode(item);\n        }\n      }\n    },\n\n\n    /**\n     * Event handler for key press events. Open and close the current selected\n     * item on key left and right press. Jump to parent on key left if already\n     * closed.\n     *\n     * @param e {qx.event.type.KeySequence} key event.\n     */\n    _onKeyPress : function(e)\n    {\n      var selection = this.getSelection();\n\n      if (selection.getLength() > 0)\n      {\n        var item = selection.getItem(0);\n        var isNode = this.isNode(item);\n\n        switch(e.getKeyIdentifier())\n        {\n          case \"Left\":\n            if (isNode && this.isNodeOpen(item)) {\n              this.closeNode(item);\n            } else {\n              var parent = this.getParent(item);\n              if (parent != null) {\n                selection.splice(0, 1, parent);\n              }\n            }\n            break;\n\n          case \"Right\":\n            if (isNode && !this.isNodeOpen(item)) {\n              this.openNode(item);\n            }\n            else\n            {\n              if (isNode)\n              {\n                var children = item.get(this.getChildProperty());\n                if (children != null && children.getLength() > 0) {\n                  selection.splice(0, 1, children.getItem(0));\n                }\n              }\n            }\n            break;\n\n          case \"Enter\":\n          case \"Space\":\n            if (!isNode) {\n              return;\n            }\n            if (this.isNodeOpen(item)) {\n              this.closeNode(item);\n            } else {\n              this.openNode(item);\n            }\n            break;\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION HOOK METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Hook method which is called from the {@link qx.ui.virtual.selection.MModel}.\n     * The hook method sets the first visible parent not as new selection when\n     * the current selection is empty and the selection mode is one selection.\n     *\n     * @param newSelection {Array} The newSelection which will be set to the selection manager.\n     */\n    _beforeApplySelection : function(newSelection)\n    {\n      if (newSelection.length === 0 &&\n          this.getSelectionMode() === \"one\")\n      {\n        var visibleParent = this.__getVisibleParent();\n        var row = this.getLookupTable().indexOf(visibleParent);\n\n        if (row >= 0) {\n          newSelection.push(row);\n        }\n      }\n    },\n\n\n    /**\n     * Hook method which is called from the {@link qx.ui.virtual.selection.MModel}.\n     * The hook method builds the parent chain form the current selected item.\n     */\n    _afterApplySelection : function()\n    {\n      var selection = this.getSelection();\n\n      if (selection.getLength() > 0 &&\n          this.getSelectionMode() === \"one\") {\n        this.__buildParentChain(selection.getItem(0));\n      } else {\n        this.__parentChain = [];\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Helper method to apply model changes. Normally build the lookup table and\n     * apply the default selection.\n     */\n    __applyModelChanges : function()\n    {\n      this.buildLookupTable();\n      this._applyDefaultSelection();\n    },\n\n\n    /**\n     * Helper method to build the internal data structure.\n     *\n     * @internal\n     */\n    buildLookupTable : function()\n    {\n      if (\n        this.getModel() != null &&\n        (this.getChildProperty() == null || this.getLabelPath() == null)\n      )\n      {\n        throw new Error(\"Could not build tree, because 'childProperty' and/\" +\n          \"or 'labelPath' is 'null'!\");\n      }\n\n      this._itemWidth = 0;\n      var lookupTable = [];\n      this.__nestingLevel = [];\n      var nestedLevel = -1;\n\n      var root = this.getModel();\n      if (root != null)\n      {\n        if (!this.isHideRoot())\n        {\n          nestedLevel++;\n          lookupTable.push(root);\n          this.__nestingLevel.push(nestedLevel);\n        }\n\n        if (this.isNodeOpen(root))\n        {\n          var visibleChildren = this.__getVisibleChildrenFrom(root, nestedLevel);\n          lookupTable = lookupTable.concat(visibleChildren);\n        }\n      }\n\n      if (!qx.lang.Array.equals(this.__lookupTable.toArray(), lookupTable))\n      {\n        this._provider.removeBindings();\n        this.__lookupTable.removeAll();\n        this.__lookupTable.append(lookupTable);\n        this.__updateRowCount();\n        this._updateSelection();\n      }\n    },\n\n\n    /**\n     * Helper method to get all visible children form the passed parent node.\n     * The algorithm implements a depth-first search with a complexity:\n     * <code>O(n)</code> and <code>n</code> are all visible items.\n     *\n     * @param node {qx.core.Object} The start node to start search.\n     * @param nestedLevel {Integer} The nested level from the start node.\n     * @return {Array} All visible children form the parent.\n     */\n    __getVisibleChildrenFrom : function(node, nestedLevel)\n    {\n      var visible = [];\n      nestedLevel++;\n\n      if (!this.isNode(node)) {\n        return visible;\n      }\n\n      var children = node.get(this.getChildProperty());\n      if (children == null) {\n        return visible;\n      }\n\n      // clone children to keep original model unmodified\n      children = children.copy();\n\n      var delegate = this.getDelegate();\n      var filter = qx.util.Delegate.getMethod(delegate, \"filter\");\n      var sorter = qx.util.Delegate.getMethod(delegate, \"sorter\");\n\n      if (sorter != null) {\n        children.sort(sorter);\n      }\n\n      for (var i = 0; i < children.getLength(); i++)\n      {\n        var child = children.getItem(i);\n\n        if (filter && !filter(child)) {\n          continue;\n        }\n\n        if (this.isNode(child))\n        {\n          this.__nestingLevel.push(nestedLevel);\n          visible.push(child);\n\n          if (this.isNodeOpen(child))\n          {\n            var visibleChildren = this.__getVisibleChildrenFrom(child, nestedLevel);\n            visible = visible.concat(visibleChildren);\n          }\n        }\n        else\n        {\n          if (this.isShowLeafs())\n          {\n            this.__nestingLevel.push(nestedLevel);\n            visible.push(child);\n          }\n        }\n      }\n\n      // dispose children clone\n      children.dispose();\n\n      return visible;\n    },\n\n\n    /**\n     * Helper method to set the node to the open nodes data structure when it\n     * is not included.\n     *\n     * @param node {qx.core.Object} Node to set to open nodes.\n     */\n    __openNode : function(node)\n    {\n      if (!this.__openNodes.includes(node)) {\n        this.__openNodes.push(node);\n        this.fireDataEvent(\"open\", node);\n      }\n    },\n\n\n    /**\n     * Helper method to set the target node and all his parents to the open\n     * nodes data structure. The algorithm implements a depth-first search with\n     * a complexity: <code>O(n)</code> and <code>n</code> are all model items.\n     *\n     * @param startNode {qx.core.Object} Start (root) node to search.\n     * @param targetNode {qx.core.Object} Target node to open (and his parents).\n     * @return {Boolean} <code>True</code> when the targetNode and his\n     *  parents could opened, <code>false</code> otherwise.\n     */\n    __openNodeAndAllParents : function(startNode, targetNode)\n    {\n      if (startNode === targetNode)\n      {\n        this.__openNode(targetNode);\n        return true;\n      }\n\n      if (!this.isNode(startNode)) {\n        return false;\n      }\n\n      var children = startNode.get(this.getChildProperty());\n      if (children == null) {\n        return false;\n      }\n\n      for (var i = 0; i < children.getLength(); i++)\n      {\n        var child = children.getItem(i);\n        var result = this.__openNodeAndAllParents(child, targetNode);\n\n        if (result === true)\n        {\n          this.__openNode(child);\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Helper method to update the row count.\n     */\n    __updateRowCount : function()\n    {\n      this.getPane().getRowConfig().setItemCount(this.__lookupTable.getLength());\n      this.getPane().fullUpdate();\n    },\n\n\n    /**\n     * Helper method to get the parent node. Node! This only works with leaf and\n     * nodes which are in the internal lookup table.\n     *\n     * @param item {qx.core.Object} Node or leaf to get parent.\n     * @return {qx.core.Object|null} The parent note or <code>null</code> when\n     *   no parent found.\n     *\n     * @internal\n     */\n    getParent : function(item)\n    {\n      var index = this.__lookupTable.indexOf(item);\n      if (index < 0) {\n        return null;\n      }\n\n      var level = this.__nestingLevel[index];\n      while(index > 0)\n      {\n        index--;\n        var levelBefore = this.__nestingLevel[index];\n        if (levelBefore < level) {\n          return this.__lookupTable.getItem(index);\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Builds the parent chain form the passed item.\n     *\n     * @param item {var} Item to build parent chain.\n     */\n    __buildParentChain : function(item)\n    {\n      this.__parentChain = [];\n      var parent = this.getParent(item);\n      while(parent != null)\n      {\n        this.__parentChain.unshift(parent);\n        parent = this.getParent(parent);\n      }\n    },\n\n\n    /**\n     * Return the first visible parent node from the last selected node.\n     *\n     * @return {var} The first visible node.\n     */\n    __getVisibleParent : function()\n    {\n      if (this.__parentChain == null) {\n        return this.getModel();\n      }\n\n      var lookupTable = this.getLookupTable();\n      var parent = this.__parentChain.pop();\n\n      while(parent != null)\n      {\n        if (lookupTable.contains(parent)) {\n          return parent;\n        }\n        parent = this.__parentChain.pop();\n      }\n      return this.getModel();\n    }\n  },\n\n\n  destruct : function()\n  {\n    if (this._openCloseController) {\n      this._openCloseController.dispose();\n    }\n\n    var pane = this.getPane();\n    if (pane != null)\n    {\n      if (pane.hasListener(\"cellDbltap\")) {\n        pane.removeListener(\"cellDbltap\", this._onOpen, this);\n      }\n      if (pane.hasListener(\"cellTap\")) {\n        pane.removeListener(\"cellTap\", this._onOpen, this);\n      }\n    }\n\n    if (!qx.core.ObjectRegistry.inShutDown && this.__deferredCall != null)\n    {\n      this.__deferredCall.cancel();\n      this.__deferredCall.dispose();\n    }\n\n    var model = this.getModel();\n    if (model != null) {\n      model.removeListener(\"changeBubble\", this._onChangeBubble, this);\n    }\n\n    this._layer.removeListener(\"updated\", this._onUpdated, this);\n    this._layer.destroy();\n    this._provider.dispose();\n    this.__lookupTable.dispose();\n\n    this._layer = this._provider = this.__lookupTable = this.__openNodes =\n      this.__deferredCall = null;\n  }\n});\n"
  ]
}