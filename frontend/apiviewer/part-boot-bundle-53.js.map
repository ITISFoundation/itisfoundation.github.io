{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/virtual/layer/AbstractBackground.js",
    "../transpiled/qx/ui/virtual/layer/Row.js",
    "../transpiled/qx/ui/list/provider/IListProvider.js",
    "../transpiled/qx/ui/list/core/MWidgetController.js",
    "../transpiled/qx/ui/list/provider/WidgetProvider.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-53.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * Abstract base class for the {@link Row} and {@link Column} layers.\n */\nqx.Class.define(\"qx.ui.virtual.layer.AbstractBackground\",\n{\n  extend : qx.ui.virtual.layer.Abstract,\n\n\n  /*\n   *****************************************************************************\n      CONSTRUCTOR\n   *****************************************************************************\n   */\n\n   /**\n    * @param colorEven {Color?null} color for even indexes\n    * @param colorOdd {Color?null} color for odd indexes\n    */\n   construct : function(colorEven, colorOdd)\n   {\n     this.base(arguments);\n\n     if (colorEven) {\n       this.setColorEven(colorEven);\n     }\n\n     if (colorOdd) {\n       this.setColorOdd(colorOdd);\n     }\n\n     this.__customColors = {};\n     this.__decorators = {};\n   },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** color for event indexes */\n    colorEven :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyColorEven\",\n      themeable : true\n    },\n\n    /** color for odd indexes */\n    colorOdd :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyColorOdd\",\n      themeable : true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __colorEven : null,\n    __colorOdd : null,\n    __customColors : null,\n    __decorators : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      COLOR HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the color for the given index\n     *\n     * @param index {Integer} Index to set the color for\n     * @param color {Color|null} the color to set. A value of <code>null</code>\n     *    will reset the color.\n     */\n    setColor : function(index, color)\n    {\n      if (color) {\n        this.__customColors[index] = qx.theme.manager.Color.getInstance().resolve(color);\n      } else {\n        delete(this.__customColors[index]);\n      }\n    },\n\n\n    /**\n     * Clear all colors set using {@link #setColor}.\n     */\n    clearCustomColors : function()\n    {\n      this.__customColors = {};\n      this.updateLayerData();\n    },\n\n\n    /**\n     * Get the color at the given index\n     *\n     * @param index {Integer} The index to get the color for.\n     * @return {Color} The color at the given index\n     */\n    getColor : function(index)\n    {\n      var customColor = this.__customColors[index];\n      if (customColor) {\n        return customColor;\n      } else {\n        return index % 2 == 0 ? this.__colorEven : this.__colorOdd;\n      }\n    },\n\n\n    // property apply\n    _applyColorEven : function(value, old)\n    {\n      if (value) {\n        this.__colorEven = qx.theme.manager.Color.getInstance().resolve(value);\n      } else {\n        this.__colorEven = null;\n      }\n      this.updateLayerData();\n    },\n\n\n    // property apply\n    _applyColorOdd : function(value, old)\n    {\n      if (value) {\n        this.__colorOdd = qx.theme.manager.Color.getInstance().resolve(value);\n      } else {\n        this.__colorOdd = null;\n      }\n      this.updateLayerData();\n    },\n\n\n    /**\n     * Sets the decorator for the given index\n     *\n     * @param index {Integer} Index to set the color for\n     * @param decorator {qx.ui.decoration.IDecorator|null} the decorator to set. A value of\n     *    <code>null</code> will reset the decorator.\n     */\n    setBackground : function(index, decorator)\n    {\n      if (decorator) {\n        this.__decorators[index] = qx.theme.manager.Decoration.getInstance().resolve(decorator);\n      } else {\n        delete(this.__decorators[index]);\n      }\n      this.updateLayerData();\n    },\n\n\n    /**\n     * Get the decorator at the given index\n     *\n     * @param index {Integer} The index to get the decorator for.\n     * @return {qx.ui.decoration.IDecorator} The decorator at the given index\n     */\n    getBackground : function(index) {\n      return this.__decorators[index];\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct : function() {\n    this.__customColors = this.__decorators = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * The Row layer renders row background colors.\n */\nqx.Class.define(\"qx.ui.virtual.layer.Row\",\n{\n  extend : qx.ui.virtual.layer.AbstractBackground,\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"row-layer\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    _fullUpdate : function(firstRow, firstColumn, rowSizes, columnSizes)\n    {\n      var html = [];\n\n      var width = qx.lang.Array.sum(columnSizes);\n\n      var top = 0;\n      var row = firstRow;\n      var childIndex = 0;\n\n      for (var y=0; y<rowSizes.length; y++)\n      {\n        var color = this.getColor(row);\n        var backgroundColor = color ? \"background-color:\" + color + \";\" : \"\";\n\n        var decorator = this.getBackground(row);\n        var styles = decorator ? qx.bom.element.Style.compile(decorator.getStyles()) : \"\";\n\n        html.push(\n          \"<div style='\",\n          \"position: absolute;\",\n          \"left: 0;\",\n          \"top:\", top, \"px;\",\n          \"height:\", rowSizes[y], \"px;\",\n          \"width:\", width, \"px;\",\n          backgroundColor,\n          styles,\n          \"'>\",\n          \"</div>\"\n        );\n        childIndex++;\n\n        top += rowSizes[y];\n        row += 1;\n      }\n\n      var el = this.getContentElement().getDomElement();\n      // hide element before changing the child nodes to avoid\n      // premature reflow calculations\n      el.style.display = \"none\";\n      el.innerHTML = html.join(\"\");\n\n      el.style.display = \"block\";\n      this._width = width;\n    },\n\n\n    // overridden\n    _updateLayerWindow : function(firstRow, firstColumn, rowSizes, columnSizes)\n    {\n      if (\n        firstRow !== this.getFirstRow() ||\n        rowSizes.length !== this.getRowSizes().length ||\n        this._width < qx.lang.Array.sum(columnSizes)\n      ) {\n        this._fullUpdate(firstRow, firstColumn, rowSizes, columnSizes);\n      }\n    },\n\n\n    // overridden\n    setColor : function(index, color)\n    {\n      this.base(arguments, index, color);\n\n      if (this.__isRowRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n\n    // overridden\n    setBackground : function(index, decorator)\n    {\n      this.base(arguments, index, decorator);\n      if (this.__isRowRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n\n    /**\n     * Whether the row with the given index is currently rendered (i.e. in the\n     * layer's view port).\n     *\n     * @param index {Integer} The row's index\n     * @return {Boolean} Whether the row is rendered\n     */\n    __isRowRendered : function(index)\n    {\n      var firstRow = this.getFirstRow();\n      var lastRow = firstRow + this.getRowSizes().length - 1;\n      return index >= firstRow && index <= lastRow;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This interface needs to implemented from all {@link qx.ui.list.List} providers.\n *\n * @internal\n */\nqx.Interface.define(\"qx.ui.list.provider.IListProvider\",\n{\n  members :\n  {\n    /**\n     * Creates a layer for item and group rendering.\n     *\n     * @return {qx.ui.virtual.layer.Abstract} new layer.\n     */\n    createLayer : function() {},\n\n\n    /**\n     * Creates a renderer for item rendering.\n     *\n     * @return {var} new item renderer.\n     */\n    createItemRenderer : function() {},\n\n\n    /**\n     * Creates a renderer for group rendering.\n     *\n     * @return {var} new group renderer.\n     */\n    createGroupRenderer : function() {},\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleSelectabled : function(row) {},\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleUnselectabled : function(row) {},\n\n\n    /**\n     * Returns if the passed row can be selected or not.\n     *\n     * @param row {Integer} row to select.\n     * @return {Boolean} <code>true</code> when the row can be selected,\n     *    <code>false</code> otherwise.\n     */\n    isSelectable : function(row) {},\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as a label. This is only needed if objects are stored in the model.\n     *\n     * @param path {String} path to the property.\n     */\n    setLabelPath : function(path) {},\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon. This is only needed if objects are stored in the model\n     * and if the icon should be shown.\n     *\n     * @param path {String} path to the property.\n     */\n    setIconPath : function(path) {},\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     *\n     * @param options {Map} options for the label binding.\n     */\n    setLabelOptions : function(options) {},\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     *\n     * @param options {Map} options for the icon binding.\n     */\n    setIconOptions : function(options) {},\n\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     *\n     * @param delegate {Object} delegation object.\n     */\n    setDelegate : function(delegate) {},\n\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings : function() {}\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The mixin controls the binding between model and item.\n *\n * @internal\n */\nqx.Mixin.define(\"qx.ui.list.core.MWidgetController\",\n{\n  construct : function() {\n    this.__boundItems = [];\n  },\n\n\n  properties :\n  {\n    /**\n     * The path to the property which holds the information that should be\n     * shown as a label. This is only needed if objects are stored in the model.\n     */\n    labelPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon. This is only needed if objects are stored in the model\n     * and if the icon should be shown.\n     */\n    iconPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a group label. This is only needed if objects are stored in the\n     * model.\n     */\n    groupLabelPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the group label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    groupLabelOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     */\n    delegate :\n    {\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    }\n  },\n\n\n  members :\n  {\n    /** @type {Array} which contains the bounded items */\n    __boundItems : null,\n\n\n    /**\n     * Helper-Method for binding the default properties from\n     * the model to the target widget. The used default properties\n     * depends on the passed item. When the passed item is\n     * a list item the \"label\" and \"icon\" property is used.\n     * When the passed item is a group item the \"value\" property is\n     * used.\n     *\n     * This method should only be called in the\n     * {@link IListDelegate#bindItem} function\n     * implemented by the {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used\n     *   list or group item.\n     * @param index {Integer} The index of the item.\n     */\n    bindDefaultProperties : function(item, index)\n    {\n      if(item.getUserData(\"cell.type\") != \"group\")\n      {\n        // bind model first\n        this.bindProperty(\n            \"\", \"model\", null, item, index\n        );\n\n        this.bindProperty(\n          this.getLabelPath(), \"label\", this.getLabelOptions(), item, index\n        );\n\n        if (this.getIconPath() != null) {\n          this.bindProperty(\n            this.getIconPath(), \"icon\", this.getIconOptions(), item, index\n          );\n        }\n      }\n      else\n      {\n        this.bindProperty(\n          this.getGroupLabelPath(), \"value\", this.getGroupLabelOptions(), item, index\n        );\n      }\n    },\n\n\n    /**\n     * Helper-Method for binding a given property from the model to the target\n     * widget.\n     * This method should only be called in the\n     * {@link IListDelegate#bindItem} function implemented by the\n     * {@link #delegate} property.\n     *\n     * @param sourcePath {String | null} The path to the property in the model.\n     *   If you use an empty string, the whole model item will be bound.\n     * @param targetProperty {String} The name of the property in the target widget.\n     * @param options {Map | null} The options to use for the binding.\n     * @param targetWidget {qx.ui.core.Widget} The target widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindProperty : function(sourcePath, targetProperty, options, targetWidget, index)\n    {\n      var type = targetWidget.getUserData(\"cell.type\");\n      var bindPath = this.__getBindPath(index, sourcePath, type);\n\n      if (options) {\n        options.ignoreConverter = \"model\";\n      }\n\n      var id = this._list.bind(bindPath, targetWidget, targetProperty, options);\n      this.__addBinding(targetWidget, id);\n    },\n\n\n    /**\n     * Helper-Method for binding a given property from the target widget to\n     * the model.\n     * This method should only be called in the\n     * {@link IListDelegate#bindItem} function implemented by the\n     * {@link #delegate} property.\n     *\n     * @param targetPath {String | null} The path to the property in the model.\n     * @param sourceProperty {String} The name of the property in the target.\n     * @param options {Map | null} The options to use for the binding.\n     * @param sourceWidget {qx.ui.core.Widget} The source widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindPropertyReverse : function(targetPath, sourceProperty, options, sourceWidget, index)\n    {\n      var type = sourceWidget.getUserData(\"cell.type\");\n      var bindPath = this.__getBindPath(index, targetPath, type);\n\n      var id = sourceWidget.bind(sourceProperty, this._list, bindPath, options);\n      this.__addBinding(sourceWidget, id);\n    },\n\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings : function()\n    {\n      while(this.__boundItems.length > 0) {\n        var item = this.__boundItems.pop();\n        this._removeBindingsFrom(item);\n      }\n    },\n\n\n    /**\n     * Configure the passed item if a delegate is set and the needed\n     * function {@link IListDelegate#configureItem} is available.\n     *\n     * @param item {qx.ui.core.Widget} item to configure.\n     */\n    _configureItem : function(item)\n    {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.configureItem != null) {\n        delegate.configureItem(item);\n      }\n    },\n\n\n    /**\n     * Configure the passed item if a delegate is set and the needed\n     * function {@link IListDelegate#configureGroupItem} is available.\n     *\n     * @param item {qx.ui.core.Widget} item to configure.\n     */\n    _configureGroupItem : function(item)\n    {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.configureGroupItem != null) {\n        delegate.configureGroupItem(item);\n      }\n    },\n\n\n    /**\n     * Sets up the binding for the given item and index.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used item.\n     * @param index {Integer} The index of the item.\n     */\n    _bindItem : function(item, index) {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.bindItem != null) {\n        delegate.bindItem(this, item, index);\n      } else {\n        this.bindDefaultProperties(item, index);\n      }\n    },\n\n\n    /**\n     * Sets up the binding for the given group item and index.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used item.\n     * @param index {Integer} The index of the item.\n     */\n    _bindGroupItem : function(item, index) {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.bindGroupItem != null) {\n        delegate.bindGroupItem(this, item, index);\n      } else {\n        this.bindDefaultProperties(item, index);\n      }\n    },\n\n\n    /**\n     * Removes the binding of the given item.\n     *\n     * @param item {qx.ui.core.Widget} The item which the binding should\n     *   be removed.\n     */\n    _removeBindingsFrom : function(item) {\n      var bindings = this.__getBindings(item);\n\n      while (bindings.length > 0) {\n        var id = bindings.pop();\n\n        try {\n          this._list.removeBinding(id);\n        } catch(e) {\n          item.removeBinding(id);\n        }\n      }\n\n      if (this.__boundItems.includes(item)) {\n        qx.lang.Array.remove(this.__boundItems, item);\n      }\n    },\n\n\n    /**\n     * Helper method to create the path for binding.\n     *\n     * @param index {Integer} The index of the item.\n     * @param path {String|null} The path to the property.\n     * @param type {String} The type <code>[\"item\", \"group\"]</code>.\n     * @return {String} The binding path\n     */\n    __getBindPath : function(index, path, type)\n    {\n      var bindPath = \"model[\" + index + \"]\";\n      if (type == \"group\") {\n        bindPath = \"groups[\" + index + \"]\";\n      }\n\n      if (path != null && path != \"\") {\n        bindPath += \".\" + path;\n      }\n\n      return bindPath;\n    },\n\n\n    /**\n     * Helper method to save the binding for the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to save binding.\n     * @param id {var} the id from the binding.\n     */\n    __addBinding : function(widget, id)\n    {\n      var bindings = this.__getBindings(widget);\n\n      if (!bindings.includes(id)) {\n        bindings.push(id);\n      }\n\n      if (!this.__boundItems.includes(widget)) {\n        this.__boundItems.push(widget);\n      }\n    },\n\n\n    /**\n     * Helper method which returns all bound id from the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to get all binding.\n     * @return {Array} all bound id's.\n     */\n    __getBindings : function(widget)\n    {\n      var bindings = widget.getUserData(\"BindingIds\");\n\n      if (bindings == null) {\n        bindings = [];\n        widget.setUserData(\"BindingIds\", bindings);\n      }\n\n      return bindings;\n    }\n  },\n\n\n  destruct : function() {\n    this.__boundItems = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The provider implements the {@link qx.ui.virtual.core.IWidgetCellProvider} API,\n * which can be used as delegate for the widget cell rendering and it\n * provides a API to bind the model with the rendered item.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.list.provider.WidgetProvider\",\n{\n  extend : qx.core.Object,\n\n  implement : [\n   qx.ui.virtual.core.IWidgetCellProvider,\n   qx.ui.list.provider.IListProvider\n  ],\n\n  include : [qx.ui.list.core.MWidgetController],\n\n\n  /**\n   * Creates the <code>WidgetProvider</code>\n   *\n   * @param list {qx.ui.list.List} list to provide.\n   */\n  construct : function(list)\n  {\n    this.base(arguments);\n\n    this._list = list;\n\n    this._itemRenderer = this.createItemRenderer();\n    this._groupRenderer = this.createGroupRenderer();\n\n    this._itemRenderer.addListener(\"created\", this._onItemCreated, this);\n    this._groupRenderer.addListener(\"created\", this._onGroupItemCreated, this);\n    this._list.addListener(\"changeDelegate\", this._onChangeDelegate, this);\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.virtual.cell.WidgetCell} the used item renderer */\n    _itemRenderer : null,\n\n\n    /** @type {qx.ui.virtual.cell.WidgetCell} the used group renderer */\n    _groupRenderer : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // interface implementation\n    getCellWidget : function(row, column)\n    {\n      var widget = null;\n\n      if (!this._list._isGroup(row))\n      {\n        widget = this._itemRenderer.getCellWidget();\n        widget.setUserData(\"cell.type\", \"item\");\n        this._bindItem(widget, this._list._lookup(row));\n\n        if(this._list._manager.isItemSelected(row)) {\n          this._styleSelectabled(widget);\n        } else {\n          this._styleUnselectabled(widget);\n        }\n      }\n      else\n      {\n        widget = this._groupRenderer.getCellWidget();\n        widget.setUserData(\"cell.type\", \"group\");\n        this._bindGroupItem(widget, this._list._lookupGroup(row));\n      }\n\n      return widget;\n    },\n\n\n    // interface implementation\n    poolCellWidget : function(widget) {\n      this._removeBindingsFrom(widget);\n\n      if (widget.getUserData(\"cell.type\") == \"item\") {\n        this._itemRenderer.pool(widget);\n      } else if (widget.getUserData(\"cell.type\") == \"group\") {\n        this._groupRenderer.pool(widget);\n      }\n      this._onPool(widget);\n    },\n\n\n    // interface implementation\n    createLayer : function() {\n      return new qx.ui.virtual.layer.WidgetCell(this);\n    },\n\n\n    // interface implementation\n    createItemRenderer : function()\n    {\n      var createWidget = qx.util.Delegate.getMethod(this.getDelegate(), \"createItem\");\n\n      if (createWidget == null) {\n        createWidget = function() {\n          return new qx.ui.form.ListItem();\n        };\n      }\n\n      var renderer = new qx.ui.virtual.cell.WidgetCell();\n      renderer.setDelegate({\n        createWidget : createWidget\n      });\n\n      return renderer;\n    },\n\n\n    // interface implementation\n    createGroupRenderer : function() {\n      var createWidget = qx.util.Delegate.getMethod(this.getDelegate(), \"createGroupItem\");\n\n      if (createWidget == null)\n      {\n        createWidget = function()\n        {\n          var group = new qx.ui.basic.Label();\n          group.setAppearance(\"group-item\");\n\n          return group;\n        };\n      }\n\n      var renderer = new qx.ui.virtual.cell.WidgetCell();\n      renderer.setDelegate({\n        createWidget : createWidget\n      });\n\n      return renderer;\n    },\n\n\n    // interface implementation\n    styleSelectabled : function(row)\n    {\n      var widget = this.__getWidgetFrom(row);\n      this._styleSelectabled(widget);\n    },\n\n\n    // interface implementation\n    styleUnselectabled : function(row)\n    {\n      var widget = this.__getWidgetFrom(row);\n      this._styleUnselectabled(widget);\n    },\n\n\n    // interface implementation\n    isSelectable : function(row)\n    {\n      if (this._list._isGroup(row)) {\n        return false;\n      }\n\n      var widget = this._list._layer.getRenderedCellWidget(row, 0);\n\n      if (widget != null) {\n        return widget.isEnabled();\n      } else {\n        return true;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleSelectabled : function(widget) {\n      this.__updateStates(widget, {selected: 1});\n    },\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleUnselectabled : function(widget) {\n      this.__updateStates(widget, {});\n    },\n\n\n    /**\n     * Calls the delegate <code>onPool</code> method when it is used in the\n     * {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} Item to modify.\n     */\n    _onPool : function(item)\n    {\n      var onPool = qx.util.Delegate.getMethod(this.getDelegate(), \"onPool\");\n\n      if (onPool != null) {\n        onPool(item);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the created item widget event.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onItemCreated : function(event)\n    {\n      var widget = event.getData();\n      this._configureItem(widget);\n    },\n\n\n    /**\n     * Event handler for the created item widget event.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onGroupItemCreated : function(event)\n    {\n      var widget = event.getData();\n      this._configureGroupItem(widget);\n    },\n\n\n    /**\n     * Event handler for the change delegate event.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onChangeDelegate : function(event)\n    {\n      this._itemRenderer.dispose();\n      this._itemRenderer = this.createItemRenderer();\n      this._itemRenderer.addListener(\"created\", this._onItemCreated, this);\n      this._groupRenderer.dispose();\n      this._groupRenderer = this.createGroupRenderer();\n      this._groupRenderer.addListener(\"created\", this._onGroupItemCreated, this);\n      this.removeBindings();\n      this._list.getPane().fullUpdate();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Helper method to get the widget from the passed row.\n     *\n     * @param row {Integer} row to search.\n     * @return {qx.ui.core.Widget|null} The found widget or <code>null</code> when no widget found.\n     */\n    __getWidgetFrom : function(row) {\n      return this._list._layer.getRenderedCellWidget(row, 0);\n    },\n\n\n    /**\n     * Helper method to update the states from a widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to set states.\n     * @param states {Map} the state to set.\n     */\n    __updateStates : function(widget, states)\n    {\n      if(widget == null) {\n        return;\n      }\n\n      this._itemRenderer.updateStates(widget, states);\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._itemRenderer.dispose();\n    this._groupRenderer.dispose();\n    this._itemRenderer = this._groupRenderer = null;\n  }\n});\n"
  ]
}