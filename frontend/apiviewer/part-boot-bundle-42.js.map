{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/virtual/selection/Abstract.js",
    "../transpiled/qx/ui/virtual/selection/Row.js",
    "../transpiled/qx/ui/tree/core/OpenCloseController.js",
    "../transpiled/qx/ui/virtual/core/IWidgetCellProvider.js",
    "../transpiled/qx/ui/tree/provider/IVirtualTreeProvider.js",
    "../transpiled/qx/ui/tree/core/MWidgetController.js",
    "../transpiled/qx/ui/tree/provider/WidgetProvider.js",
    "../transpiled/qx/ui/tree/core/Util.js",
    "../transpiled/qx/util/Delegate.js",
    "../transpiled/qx/ui/virtual/core/Axis.js",
    "../transpiled/qx/ui/virtual/core/ILayer.js",
    "../transpiled/qx/ui/virtual/core/CellEvent.js",
    "../transpiled/qx/ui/tree/core/AbstractItem.js",
    "../transpiled/qx/ui/tree/VirtualTreeItem.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-42.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * Abstract base class for selection manager, which manage selectable items\n * rendered in a virtual {@link qx.ui.virtual.core.Pane}.\n */\nqx.Class.define(\"qx.ui.virtual.selection.Abstract\",\n{\n  extend : qx.ui.core.selection.Abstract,\n\n\n  /*\n   *****************************************************************************\n      CONSTRUCTOR\n   *****************************************************************************\n   */\n\n  /**\n   * @param pane {qx.ui.virtual.core.Pane} The virtual pane on which the\n   *    selectable item are rendered\n   * @param selectionDelegate {qx.ui.virtual.selection.ISelectionDelegate?null} An optional delegate,\n   *    which can be used to customize the behavior of the selection manager\n   *    without sub classing it.\n   */\n  construct : function(pane, selectionDelegate)\n  {\n    this.base(arguments);\n\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertInstance(pane, qx.ui.virtual.core.Pane);\n    }\n\n    this._pane = pane;\n    this._delegate = selectionDelegate || {};\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // Determines if automatically scrolling of selected item into view is active.\n    _autoScrollIntoView : true,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DELEGATE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _isSelectable : function(item) {\n      return this._delegate.isItemSelectable ?\n        this._delegate.isItemSelectable(item) :\n        true;\n    },\n\n\n    // overridden\n    _styleSelectable : function(item, type, enabled)\n    {\n      if (this._delegate.styleSelectable) {\n        this._delegate.styleSelectable(item, type, enabled);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Attach pointer events to the managed pane.\n     */\n    attachPointerEvents : function()\n    {\n      var paneElement = this._pane.getContentElement();\n      paneElement.addListener(\"pointerdown\", this.handlePointerDown, this);\n      paneElement.addListener(\"tap\", this.handleTap, this);\n      paneElement.addListener(\"pointerover\", this.handlePointerOver, this);\n      paneElement.addListener(\"pointermove\", this.handlePointerMove, this);\n      paneElement.addListener(\"losecapture\", this.handleLoseCapture, this);\n    },\n\n\n    /**\n     * Detach pointer events from the managed pane.\n     */\n    detatchPointerEvents : function()\n    {\n      var paneElement = this._pane.getContentElement();\n      paneElement.removeListener(\"pointerdown\", this.handlePointerDown, this);\n      paneElement.removeListener(\"tap\", this.handleTap, this);\n      paneElement.removeListener(\"pointerover\", this.handlePointerOver, this);\n      paneElement.removeListener(\"pointermove\", this.handlePointerMove, this);\n      paneElement.removeListener(\"losecapture\", this.handleLoseCapture, this);\n    },\n\n\n    /**\n     * Attach key events to manipulate the selection using the keyboard. The\n     * event target doesn't need to be the pane itself. It can be an widget,\n     * which received key events. Usually the key event target is the\n     * {@link qx.ui.virtual.core.Scroller}.\n     *\n     * @param target {qx.core.Object} the key event target.\n     *\n     */\n    attachKeyEvents : function(target) {\n      target.addListener(\"keypress\", this.handleKeyPress, this);\n    },\n\n\n    /**\n     * Detach key events.\n     *\n     * @param target {qx.core.Object} the key event target.\n     */\n    detachKeyEvents : function(target) {\n      target.removeListener(\"keypress\", this.handleKeyPress, this);\n    },\n\n\n    /**\n     * Attach list events. The selection mode <code>one</code> need to know,\n     * when selectable items are added or removed. If this mode is used the\n     * <code>list</code> parameter must fire <code>addItem</code> and\n     * <code>removeItem</code> events.\n     *\n     * @param list {qx.core.Object} the event target for <code>addItem</code> and\n     *    <code>removeItem</code> events\n     */\n    attachListEvents : function(list)\n    {\n      list.addListener(\"addItem\", this.handleAddItem, this);\n      list.addListener(\"removeItem\", this.handleRemoveItem, this);\n    },\n\n\n    /**\n     * Detach list events.\n     *\n     * @param list {qx.core.Object} the event target for <code>addItem</code> and\n     *    <code>removeItem</code> events\n     */\n    detachListEvents : function(list)\n    {\n      list.removeListener(\"addItem\", this.handleAddItem, this);\n      list.removeListener(\"removeItem\", this.handleRemoveItem, this);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _capture : function() {\n      this._pane.capture();\n    },\n\n\n    // overridden\n    _releaseCapture : function() {\n      this._pane.releaseCapture();\n    },\n\n\n    // overridden\n    _getScroll : function()\n    {\n      return {\n        left : this._pane.getScrollX(),\n        top: this._pane.getScrollY()\n      };\n    },\n\n\n    // overridden\n    _scrollBy : function(xoff, yoff)\n    {\n      this._pane.setScrollX(this._pane.getScrollX() + xoff);\n      this._pane.setScrollY(this._pane.getScrollY() + yoff);\n    },\n\n\n    // overridden\n    _getLocation : function()\n    {\n      var elem = this._pane.getContentElement().getDomElement();\n      return elem ? qx.bom.element.Location.get(elem) : null;\n    },\n\n\n    // overridden\n    _getDimension : function() {\n      return this._pane.getInnerSize();\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct : function() {\n    this._pane = this._delegate = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n\n/**\n * EXPERIMENTAL!\n *\n * Row selection manager\n */\nqx.Class.define(\"qx.ui.virtual.selection.Row\",\n{\n  extend : qx.ui.virtual.selection.Abstract,\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Returns the number of all items in the pane. This number may contain\n     * unselectable items as well.\n     *\n     * @return {Integer} number of items\n     */\n    _getItemCount : function() {\n      return this._pane.getRowConfig().getItemCount();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getSelectableFromPointerEvent : function(event)\n    {\n      var cell = this._pane.getCellAtPosition(\n        event.getDocumentLeft(),\n        event.getDocumentTop()\n      );\n\n      if (!cell) {\n        return null;\n      }\n\n      return this._isSelectable(cell.row) ? cell.row : null;\n    },\n\n\n    // overridden\n    getSelectables : function(all)\n    {\n      var selectables = [];\n\n      for (var i=0, l=this._getItemCount(); i<l; i++)\n      {\n        if (this._isSelectable(i)) {\n          selectables.push(i);\n        }\n      }\n\n      return selectables;\n    },\n\n\n    // overridden\n    _getSelectableRange : function(item1, item2)\n    {\n      var selectables = [];\n      var min = Math.min(item1, item2);\n      var max = Math.max(item1, item2);\n\n      for (var i=min; i<=max; i++)\n      {\n        if (this._isSelectable(i)) {\n          selectables.push(i);\n        }\n      }\n\n      return selectables;\n    },\n\n\n    // overridden\n    _getFirstSelectable : function()\n    {\n      var count = this._getItemCount();\n      for (var i=0; i<count; i++)\n      {\n        if (this._isSelectable(i)) {\n          return i;\n        }\n      }\n      return null;\n    },\n\n\n    // overridden\n    _getLastSelectable : function()\n    {\n      var count = this._getItemCount();\n      for (var i=count-1; i>=0; i--)\n      {\n        if (this._isSelectable(i)) {\n          return i;\n        }\n      }\n      return null;\n    },\n\n\n    // overridden\n    _getRelatedSelectable : function(item, relation)\n    {\n      if (relation == \"above\")\n      {\n        var startIndex = item-1;\n        var endIndex = 0;\n        var increment = -1;\n      }\n      else if (relation == \"under\")\n      {\n        var startIndex = item+1;\n        var endIndex = this._getItemCount()-1;\n        var increment = 1;\n      }\n      else\n      {\n        return null;\n      }\n\n      for (var i=startIndex; i !== endIndex+increment; i += increment)\n      {\n        if (this._isSelectable(i)) {\n          return i;\n        }\n      }\n      return null;\n    },\n\n\n    // overridden\n    _getPage : function(lead, up)\n    {\n      if (up) {\n        return this._getFirstSelectable();\n      } else {\n        return this._getLastSelectable();\n      }\n    },\n\n\n    // overridden\n    _selectableToHashCode : function(item) {\n      return item;\n    },\n\n\n    // overridden\n    _scrollItemIntoView : function(item) {\n      if (this._autoScrollIntoView) {\n        this._pane.scrollRowIntoView(item);\n      }\n    },\n\n\n    // overridden\n    _getSelectableLocationX : function(item)\n    {\n      return {\n        left: 0,\n        right: this._pane.getColumnConfig().getTotalSize() - 1\n      };\n    },\n\n\n    // overridden\n    _getSelectableLocationY : function(item)\n    {\n      var rowConfig = this._pane.getRowConfig();\n\n      var itemTop = rowConfig.getItemPosition(item);\n      var itemBottom = itemTop + rowConfig.getItemSize(item) - 1;\n\n      return {\n        top: itemTop,\n        bottom: itemBottom\n      };\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Cajus Pollmeier\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Cajus Pollmeier\n     * Derrell Lipman\n\n************************************************************************ */\n\n/**\n * Because of the virtual nature of the VirtualTree, and the fact that\n * rendering occurs asynchronously, it is not a simple matter to bind a\n * property in the model that will open or close branches in the\n * tree. Instead, this controller listens to both the model and the tree, and\n * synchronizes the openness of branches in the tree.\n * \n * To use this controller, simply instantiate it with the requisite\n * constructor arguments.\n */\nqx.Class.define(\"qx.ui.tree.core.OpenCloseController\",\n{\n  extend: qx.core.Object,\n  \n  /**\n   * @param tree {qx.ui.tree.VirtualTree}\n   *   The tree whose branch open or closed state is to be synchronized to a\n   *   model property.\n   * \n   * @param rootModel {qx.data.Array}\n   *   The tree root model wherein a property is to be synchronized to the\n   *   tree branches' open or closed states\n   */\n  construct: function(tree, rootModel)\n  {\n    var             openProperty = tree.getOpenProperty();\n\n    this.base(arguments);\n    \n    // Save the tree and initialize storage of listener IDs\n    this._tree = tree;\n    this._lids = [];\n    \n    // Sync tree nodes\n    var sync = function(node) {\n      if (qx.Class.hasProperty(node.constructor, \"children\")) {\n        node.getChildren().forEach(sync);\n      }\n      \n      if (qx.Class.hasProperty(node.constructor, openProperty)) {\n        if (node.get(openProperty)) {\n          tree.openNode(node);\n        }\n        else {\n          tree.closeNode(node);\n        }\n      }\n    }.bind(this);\n    sync(rootModel);\n    \n    // Wire change listeners\n    var lid = tree.addListener(\"open\", this._onOpen, this);\n    this._lids.push([tree, lid]);\n    lid = tree.addListener(\"close\", this._onClose, this);\n    this._lids.push([tree, lid]);\n    lid = rootModel.addListener(\"changeBubble\", this._onChangeBubble, this);\n    this._lids.push([rootModel, lid]);\n  },\n  \n  members:\n  {\n    /** The tree which is synced to the model */\n    _tree: null,\n\n    /** Listener IDs that we manage */\n    _lids: null,\n    \n    // event listener for \"open\" on the tree\n    _onOpen: function(ev)\n    {\n      ev.getData().set(this._tree.getOpenProperty(), true);\n    },\n    \n    // event listener for \"close\" on the tree\n    _onClose: function(ev)\n    {\n      ev.getData().set(this._tree.getOpenProperty(), false);\n    },\n    \n    // event listener for model changes\n    _onChangeBubble: function(ev)\n    {\n      var index;\n      var item;\n      var isOpen;\n      var bubble = ev.getData();\n\n      // Extract the index of the current item\n      index = bubble.name.replace(/.*\\[([0-9]+)\\]$/, \"$1\");\n\n      // Retrieve that indexed array item if it's an array; otherwise the item itself\n      item = bubble.item.getItem ? bubble.item.getItem(index) : bubble.item;\n\n      // If this item isn't being deleted and has an open property...\n      if (item && qx.Class.hasProperty(item.constructor, this._tree.getOpenProperty())) {\n        // ... then find out if this branch is open\n        isOpen = item.get(this._tree.getOpenProperty());\n\n        // Open or close the tree branch as necessary\n        if (isOpen && !this._tree.isNodeOpen(item)) {\n          this._tree.openNode(item);\n        }\n        else if (! isOpen && this._tree.isNodeOpen(item)) {\n          this._tree.closeNode(item);\n        }\n      }\n\n      // Rebuild the internal lookup table\n      this._tree.refresh();\n    }\n  },\n  \n  destruct: function()\n  {\n    this._tree = null;\n    this._lids.forEach(function(data) {\n      data[0].removeListenerById(data[1]);\n    });\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * A widget cell provider provides the {@link qx.ui.virtual.layer.WidgetCell}\n * with configured widgets to render the cells and pools/releases unused\n * cell widgets.\n */\nqx.Interface.define(\"qx.ui.virtual.core.IWidgetCellProvider\",\n{\n  members :\n  {\n    /**\n     * This method returns the configured cell for the given cell. The return\n     * value may be <code>null</code> to indicate that the cell should be empty.\n     *\n     * @param row {Integer} The cell's row index.\n     * @param column {Integer} The cell's column index.\n     * @return {qx.ui.core.LayoutItem} The configured widget for the given cell.\n     */\n    getCellWidget : function(row, column) {},\n\n    /**\n     * Release the given cell widget. Either pool or destroy the widget.\n     *\n     * @param widget {qx.ui.core.LayoutItem} The cell widget to pool.\n     */\n    poolCellWidget : function(widget) {}\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This interface needs to implemented from all {@link qx.ui.tree.VirtualTree}\n * providers.\n *\n * @internal\n */\nqx.Interface.define(\"qx.ui.tree.provider.IVirtualTreeProvider\",\n{\n  members :\n  {\n    /**\n     * Creates a layer for node and leaf rendering.\n     *\n     * @return {qx.ui.virtual.layer.Abstract} new layer.\n     */\n    createLayer : function() {},\n\n\n    /**\n     * Creates a renderer for rendering.\n     *\n     * @return {var} new node renderer.\n     */\n    createRenderer : function() {},\n\n\n    /**\n     * Sets the name of the property, where the children are stored in the model.\n     *\n     * @param value {String} The child property name.\n     */\n    setChildProperty : function(value)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertString(value);\n    },\n\n\n    /**\n     * Sets the name of the property, where the value for the tree folders label\n     * is stored in the model classes.\n     *\n     * @param value {String} The label path.\n     */\n    setLabelPath : function(value)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertString(value);\n    },\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleSelectabled : function(row)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInteger(row);\n    },\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleUnselectabled : function(row)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInteger(row);\n    },\n\n\n    /**\n     * Returns if the passed row can be selected or not.\n     *\n     * @param row {Integer} row to select.\n     * @return {Boolean} <code>true</code> when the row can be selected,\n     *    <code>false</code> otherwise.\n     */\n    isSelectable : function(row)\n    {\n      this.assertArgumentsCount(arguments, 1, 1);\n      this.assertInteger(row);\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The mixin controls the binding between model and item.\n *\n * @internal\n */\nqx.Mixin.define(\"qx.ui.tree.core.MWidgetController\",\n{\n  construct : function() {\n    this.__boundItems = [];\n  },\n\n\n  properties :\n  {\n    /**\n     * The name of the property, where the value for the tree node/leaf label\n     * is stored in the model classes.\n     */\n    labelPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon.\n     */\n    iconPath :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions :\n    {\n      nullable: true\n    },\n\n\n    /**\n     * The name of the property, where the children are stored in the model.\n     * Instead of the {@link #labelPath} must the child property a direct\n     * property form the model instance.\n     */\n    childProperty :\n    {\n      check: \"String\",\n      nullable: true\n    },\n\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.tree.core.IVirtualTreeDelegate} interface.\n     */\n    delegate :\n    {\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    }\n  },\n\n\n  members :\n  {\n    /** @type {Array} which contains the bounded items */\n    __boundItems : null,\n\n\n    /**\n     * Helper-Method for binding the default properties from the model to the\n     * target widget. The used default properties  depends on the passed item.\n     *\n     * This method should only be called in the {@link IVirtualTreeDelegate#bindItem}\n     * function implemented by the {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used node or\n     *   leaf.\n     * @param index {Integer} The index of the item (node or leaf).\n     */\n    bindDefaultProperties : function(item, index)\n    {\n      // bind model first\n      this.bindProperty(\"\", \"model\", null, item, index);\n\n      this.bindProperty(\n        this.getLabelPath(), \"label\", this.getLabelOptions(), item, index\n      );\n\n      var bindPath = this.__getBindPath(index);\n      var bindTarget = this._tree.getLookupTable();\n      bindTarget = qx.data.SingleValueBinding.resolvePropertyChain(bindTarget, bindPath);\n\n      if (qx.util.OOUtil.hasProperty(bindTarget.constructor, this.getChildProperty())) {\n        this.bindProperty(\n          this.getChildProperty() + \".length\", \"appearance\",\n          {\n            converter : function() {\n              return \"virtual-tree-folder\";\n            }\n          }, item, index\n        );\n      } else {\n        item.setAppearance(\"virtual-tree-file\");\n      }\n\n      if (this.getIconPath() != null)\n      {\n        this.bindProperty(\n          this.getIconPath(), \"icon\", this.getIconOptions(), item, index\n        );\n      }\n    },\n\n\n    /**\n     * Helper-Method for binding a given property from the model to the target\n     * widget.\n     *\n     * This method should only be called in the {@link IVirtualTreeDelegate#bindItem}\n     * function implemented by the {@link #delegate} property.\n     *\n     * @param sourcePath {String | null} The path to the property in the model.\n     *   If you use an empty string, the whole model item will be bound.\n     * @param targetProperty {String} The name of the property in the target widget.\n     * @param options {Map | null} The options to use for the binding.\n     * @param targetWidget {qx.ui.core.Widget} The target widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindProperty : function(sourcePath, targetProperty, options, targetWidget, index)\n    {\n      var bindPath = this.__getBindPath(index, sourcePath);\n      var bindTarget = this._tree.getLookupTable();\n\n      var id = bindTarget.bind(bindPath, targetWidget, targetProperty, options);\n      this.__addBinding(targetWidget, id);\n    },\n\n\n    /**\n     * Helper-Method for binding a given property from the target widget to\n     * the model.\n     * This method should only be called in the\n     * {@link qx.ui.tree.core.IVirtualTreeDelegate#bindItem} function implemented by the\n     * {@link #delegate} property.\n     *\n     * @param targetPath {String | null} The path to the property in the model.\n     * @param sourceProperty {String} The name of the property in the target.\n     * @param options {Map | null} The options to use for the binding.\n     * @param sourceWidget {qx.ui.core.Widget} The source widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindPropertyReverse : function(targetPath, sourceProperty, options, sourceWidget, index)\n    {\n      var bindPath = this.__getBindPath(index, targetPath);\n      var bindTarget = this._tree.getLookupTable();\n\n      var id = sourceWidget.bind(sourceProperty, bindTarget, bindPath, options);\n      this.__addBinding(sourceWidget, id);\n    },\n\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings : function()\n    {\n      while(this.__boundItems.length > 0) {\n        var item = this.__boundItems.pop();\n        this._removeBindingsFrom(item);\n      }\n    },\n\n\n    /**\n     * Sets up the binding for the given item and index.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used item.\n     * @param index {Integer} The index of the item.\n     */\n    _bindItem : function(item, index)\n    {\n      var bindItem = qx.util.Delegate.getMethod(this.getDelegate(), \"bindItem\");\n\n      if (bindItem != null) {\n        bindItem(this, item, index);\n      } else {\n        this.bindDefaultProperties(item, index);\n      }\n    },\n\n\n    /**\n     * Removes the binding of the given item.\n     *\n     * @param item {qx.ui.core.Widget} The item which the binding should be\n     *   removed.\n     */\n    _removeBindingsFrom : function(item)\n    {\n      var bindings = this.__getBindings(item);\n\n      while (bindings.length > 0)\n      {\n        var id = bindings.pop();\n\n        try {\n          this._tree.getLookupTable().removeBinding(id);\n        } catch(e) {\n          item.removeBinding(id);\n        }\n      }\n\n      if (this.__boundItems.includes(item)) {\n        qx.lang.Array.remove(this.__boundItems, item);\n      }\n    },\n\n\n    /**\n     * Helper method to create the path for binding.\n     *\n     * @param index {Integer} The index of the item.\n     * @param path {String|null} The path to the property.\n     * @return {String} The binding path\n     */\n    __getBindPath : function(index, path)\n    {\n      var bindPath = \"[\" + index + \"]\";\n      if (path != null && path != \"\") {\n        bindPath += \".\" + path;\n      }\n      return bindPath;\n    },\n\n\n    /**\n     * Helper method to save the binding for the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to save binding.\n     * @param id {var} the id from the binding.\n     */\n    __addBinding : function(widget, id)\n    {\n      var bindings = this.__getBindings(widget);\n\n      if (!bindings.includes(id)) {\n        bindings.push(id);\n      }\n\n      if (!this.__boundItems.includes(widget)) {\n        this.__boundItems.push(widget);\n      }\n    },\n\n\n    /**\n     * Helper method which returns all bound id from the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to get all binding.\n     * @return {Array} all bound id's.\n     */\n    __getBindings : function(widget)\n    {\n      var bindings = widget.getUserData(\"BindingIds\");\n\n      if (bindings == null) {\n        bindings = [];\n        widget.setUserData(\"BindingIds\", bindings);\n      }\n\n      return bindings;\n    }\n  },\n\n\n  destruct : function() {\n    this.__boundItems = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The provider implements the {@link qx.ui.virtual.core.IWidgetCellProvider}\n * API, which can be used as delegate for the widget cell rendering and it\n * provides a API to bind the model with the rendered item.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.tree.provider.WidgetProvider\",\n{\n  extend : qx.core.Object,\n\n  implement : [\n   qx.ui.virtual.core.IWidgetCellProvider,\n   qx.ui.tree.provider.IVirtualTreeProvider\n  ],\n\n  include : [qx.ui.tree.core.MWidgetController],\n\n\n  /**\n   * @param tree {qx.ui.tree.VirtualTree} tree to provide.\n   */\n  construct : function(tree)\n  {\n    this.base(arguments);\n\n    this._tree = tree;\n\n    this.addListener(\"changeDelegate\", this._onChangeDelegate, this);\n    this._onChangeDelegate();\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.tree.VirtualTree} tree to provide. */\n    _tree : null,\n\n\n    /** @type {qx.ui.virtual.cell.WidgetCell} the used item renderer. */\n    _renderer : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n\n    // interface implementation\n    getCellWidget : function(row, column)\n    {\n      var item = this._tree.getLookupTable().getItem(row);\n\n      var hasChildren = false;\n      if (this._tree.isNode(item)) {\n        hasChildren = this._tree.hasChildren(item);\n      }\n\n      var widget = this._renderer.getCellWidget();\n      widget.setOpen(hasChildren && this._tree.isNodeOpen(item));\n      widget.addListener(\"changeOpen\", this.__onOpenChanged, this);\n      widget.setUserData(\"cell.childProperty\", this.getChildProperty());\n      widget.setUserData(\"cell.showLeafs\", this._tree.isShowLeafs());\n\n      if(this._tree.getSelection().contains(item)) {\n        this._styleSelectabled(widget);\n      } else {\n        this._styleUnselectabled(widget);\n      }\n\n      var level = this._tree.getLevel(row);\n      if (!this._tree.isShowTopLevelOpenCloseIcons()) {\n        level -= 1;\n      }\n      widget.setUserData(\"cell.level\", level);\n\n      if (!this._tree.isShowTopLevelOpenCloseIcons() && level == -1) {\n        widget.setOpenSymbolMode(\"never\");\n      } else {\n        widget.setOpenSymbolMode(\"auto\");\n      }\n\n      if (this._tree.getOpenProperty()) {\n        widget.setModel(item);\n      }\n\n      this._bindItem(widget, row);\n      qx.ui.core.queue.Widget.add(widget);\n\n      return widget;\n    },\n\n\n    // interface implementation\n    poolCellWidget : function(widget)\n    {\n      widget.removeListener(\"changeOpen\", this.__onOpenChanged, this);\n      this._removeBindingsFrom(widget);\n      this._renderer.pool(widget);\n      this._onPool(widget);\n    },\n\n\n    // Interface implementation\n    createLayer : function() {\n      return new qx.ui.virtual.layer.WidgetCell(this);\n    },\n\n\n    // Interface implementation\n    createRenderer : function()\n    {\n      var createItem = qx.util.Delegate.getMethod(this.getDelegate(), \"createItem\");\n\n      if (createItem == null) {\n        createItem = function() {\n          return new qx.ui.tree.VirtualTreeItem();\n        };\n      }\n\n      var renderer = new qx.ui.virtual.cell.WidgetCell();\n      renderer.setDelegate({\n        createWidget : createItem\n      });\n\n      return renderer;\n    },\n\n\n    // interface implementation\n    styleSelectabled : function(row)\n    {\n      var widget = this._tree._layer.getRenderedCellWidget(row, 0);\n      this._styleSelectabled(widget);\n    },\n\n\n    // interface implementation\n    styleUnselectabled : function(row)\n    {\n      var widget = this._tree._layer.getRenderedCellWidget(row, 0);\n      this._styleUnselectabled(widget);\n    },\n\n\n    // interface implementation\n    isSelectable : function(row)\n    {\n      var widget = this._tree._layer.getRenderedCellWidget(row, 0);\n      if (widget != null) {\n        return widget.isEnabled();\n      } else {\n        return true;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Styles a selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleSelectabled : function(widget) {\n      if(widget == null) {\n        return;\n      }\n\n      this._renderer.updateStates(widget, {selected: 1});\n    },\n\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param widget {qx.ui.core.Widget} widget to style.\n     */\n    _styleUnselectabled : function(widget) {\n      if(widget == null) {\n        return;\n      }\n\n      this._renderer.updateStates(widget, {});\n    },\n\n\n    /**\n     * Calls the delegate <code>onPool</code> method when it is used in the\n     * {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} Item to modify.\n     */\n    _onPool : function(item)\n    {\n      var onPool = qx.util.Delegate.getMethod(this.getDelegate(), \"onPool\");\n\n      if (onPool != null) {\n        onPool(item);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the created item's.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onItemCreated : function(event)\n    {\n      var configureItem = qx.util.Delegate.getMethod(this.getDelegate(), \"configureItem\");\n\n      if (configureItem != null) {\n        var leaf = event.getData();\n        configureItem(leaf);\n      }\n    },\n\n\n    /**\n     * Event handler for the change delegate event.\n     *\n     * @param event {qx.event.type.Data} fired event.\n     */\n    _onChangeDelegate : function(event)\n    {\n      if (this._renderer != null) {\n        this._renderer.dispose();\n        this.removeBindings();\n      }\n\n      this._renderer = this.createRenderer();\n      this._renderer.addListener(\"created\", this._onItemCreated, this);\n    },\n\n\n    /**\n     * Handler when a node changes opened or closed state.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    __onOpenChanged : function(event)\n    {\n      var widget = event.getTarget();\n\n      var row = widget.getUserData(\"cell.row\");\n      var item = this._tree.getLookupTable().getItem(row);\n\n      if (event.getData()) {\n        this._tree.openNodeWithoutScrolling(item);\n      } else {\n        this._tree.closeNodeWithoutScrolling(item);\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.removeBindings();\n    this._renderer.dispose();\n    this._tree = this._renderer = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This utility class implements some methods for the <code>VirtualTree</code>.\n */\nqx.Class.define(\"qx.ui.tree.core.Util\",\n{\n  statics :\n  {\n    /**\n     * Returns if the passed item is a node or a leaf.\n     *\n     * @param node {qx.core.Object} Node to check.\n     * @param childProperty {String} The property name to find the children.\n     * @return {Boolean} <code>True</code> when the passed item is a node,\n     *   </code>false</code> when it is a leaf.\n     */\n    isNode : function(node, childProperty)\n    {\n      if (node == null || childProperty == null) {\n        return false;\n      }\n      return qx.Class.hasProperty(node.constructor, childProperty);\n    },\n\n\n    /**\n     * Returns whether the node has visible children or not.\n     *\n     * @param node {qx.core.Object} Node to check.\n     * @param childProperty {String} The property name to find the children.\n     * @param ignoreLeafs {Boolean?} Indicates whether leafs are ignored. This means when it is set to\n     *    <code>true</code> a node which contains only leafs has no children. The default value is <code>false</code>.\n     * @return {Boolean} <code>True</code> when the node has visible children,\n     *   <code>false</code> otherwise.\n     */\n    hasChildren : function(node, childProperty, ignoreLeafs)\n    {\n      if (node == null || childProperty == null || !this.isNode(node, childProperty)) {\n        return false;\n      }\n\n      var children = node.get(childProperty);\n      if (children == null) {\n        return false;\n      }\n\n      if (!ignoreLeafs) {\n        return children.length > 0;\n      }\n      else\n      {\n        for (var i = 0; i < children.getLength(); i++)\n        {\n          var child = children.getItem(i);\n          if (this.isNode(child, childProperty)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n});",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Methods to work with the delegate pattern.\n */\nqx.Class.define(\"qx.util.Delegate\",\n{\n  statics :\n  {\n    /**\n     * Returns the delegate method given my its name.\n     *\n     * @param delegate {Object} The delegate object to check the method.\n     * @param specificMethod {String} The name of the delegate method.\n     * @return {Function|null} The requested method or null, if no method is set.\n     */\n    getMethod : function(delegate, specificMethod)\n    {\n      if (qx.util.Delegate.containsMethod(delegate, specificMethod)) {\n        return qx.lang.Function.bind(delegate[specificMethod], delegate);\n      }\n\n      return null;\n    },\n\n\n\n    /**\n     * Checks, if the given delegate is valid or if a specific method is given.\n     *\n     * @param delegate {Object} The delegate object.\n     * @param specificMethod {String} The name of the method to search for.\n     * @return {Boolean} True, if everything was ok.\n     */\n    containsMethod : function (delegate, specificMethod)\n    {\n      var Type = qx.lang.Type;\n\n      if (Type.isObject(delegate)) {\n        return Type.isFunction(delegate[specificMethod]);\n      }\n\n      return false;\n    }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * The axis maps virtual screen coordinates to item indexes. By default all\n * items have the same size but it is also possible to give specific items\n * a different size.\n */\nqx.Class.define(\"qx.ui.virtual.core.Axis\",\n{\n  extend : qx.core.Object,\n\n  /**\n   * @param defaultItemSize {Integer} The default size of the items.\n   * @param itemCount {Integer} The number of item on the axis.\n   */\n  construct : function(defaultItemSize, itemCount)\n  {\n    this.base(arguments);\n\n    this.itemCount = itemCount;\n    this.defaultItemSize = defaultItemSize;\n\n    // sparse array\n    this.customSizes = {};\n  },\n\n\n  events :\n  {\n    /** Every change to the axis configuration triggers this event. */\n    \"change\" : \"qx.event.type.Event\"\n  },\n\n\n  members :\n  {\n    __ranges : null,\n\n\n    /**\n     * Get the default size of the items.\n     *\n     * @return {Integer} The default item size.\n     */\n    getDefaultItemSize : function() {\n      return this.defaultItemSize;\n    },\n\n\n    /**\n     * Set the default size the items.\n     *\n     * @param defaultItemSize {Integer} The default size of the items.\n     */\n    setDefaultItemSize : function(defaultItemSize)\n    {\n      if (this.defaultItemSize !== defaultItemSize)\n      {\n        this.defaultItemSize = defaultItemSize;\n        this.__ranges = null;\n        this.fireNonBubblingEvent(\"change\");\n      }\n    },\n\n\n    /**\n     * Get the number of items in the axis.\n     *\n     * @return {Integer} The number of items.\n     */\n    getItemCount : function() {\n      return this.itemCount;\n    },\n\n\n    /**\n     * Set the number of items in the axis.\n     *\n     * @param itemCount {Integer} The new item count.\n     */\n    setItemCount : function(itemCount)\n    {\n      if (this.itemCount !== itemCount)\n      {\n        this.itemCount = itemCount;\n        this.__ranges = null;\n        this.fireNonBubblingEvent(\"change\");\n      }\n    },\n\n\n    /**\n     * Sets the size of a specific item. This allow item, which have a size\n     * different from the default size.\n     *\n     * @param index {Integer} Index of the item to change.\n     * @param size {Integer} New size of the item.\n     */\n    setItemSize : function(index, size)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertArgumentsCount(arguments, 2, 2);\n        this.assert(\n          size >= 0 || size === null,\n          \"'size' must be 'null' or an integer larger than 0.\"\n        );\n      }\n      if (this.customSizes[index] == size) {\n        return;\n      }\n\n      if (size === null) {\n        delete this.customSizes[index];\n      } else {\n        this.customSizes[index] = size;\n      }\n      this.__ranges = null;\n      this.fireNonBubblingEvent(\"change\");\n    },\n\n\n    /**\n     * Get the size of the item at the given index.\n     *\n     * @param index {Integer} Index of the item to get the size for.\n     * @return {Integer} Size of the item.\n     */\n    getItemSize : function(index)\n    {\n      // custom size of 0 is not allowed\n      return this.customSizes[index] || this.defaultItemSize;\n    },\n\n\n    /**\n     * Reset all custom sizes set with {@link #setItemSize}.\n     */\n    resetItemSizes : function()\n    {\n      this.customSizes = {};\n      this.__ranges = null;\n      this.fireNonBubblingEvent(\"change\");\n    },\n\n\n    /**\n     * Split the position range into disjunct intervals. Each interval starts\n     * with a custom sized cell. Each position is contained in exactly one range.\n     * The ranges are sorted according to their start position.\n     *\n     * Complexity: O(n log n) (n = number of custom sized cells)\n     *\n     * @return {Map[]} The sorted list of ranges.\n     */\n    __getRanges : function()\n    {\n      if (this.__ranges) {\n        return this.__ranges;\n      }\n\n      var defaultSize = this.defaultItemSize;\n      var itemCount = this.itemCount;\n\n      var indexes = [];\n      for (var key in this.customSizes)\n      {\n        var index = parseInt(key, 10);\n        if (index < itemCount) {\n          indexes.push(index);\n        }\n      }\n      if (indexes.length == 0)\n      {\n        var ranges = [{\n          startIndex: 0,\n          endIndex: itemCount - 1,\n          firstItemSize: defaultSize,\n          rangeStart: 0,\n          rangeEnd: itemCount * defaultSize - 1\n        }];\n        this.__ranges = ranges;\n        return ranges;\n      }\n\n      indexes.sort(function(a,b) { return a > b ? 1 : -1;});\n\n      var ranges = [];\n      var correctionSum = 0;\n\n      for (var i=0; i<indexes.length; i++)\n      {\n        var index = indexes[i];\n        if (index >= itemCount) {\n          break;\n        }\n\n        var cellSize = this.customSizes[index];\n        var rangeStart = index * defaultSize + correctionSum;\n\n        correctionSum += cellSize - defaultSize;\n\n        ranges[i] = {\n          startIndex: index,\n          firstItemSize: cellSize,\n          rangeStart: rangeStart\n        };\n        if (i > 0) {\n          ranges[i-1].rangeEnd = rangeStart-1;\n          ranges[i-1].endIndex = index-1;\n        }\n      }\n\n      // fix first range\n      if (ranges[0].rangeStart > 0)\n      {\n        ranges.unshift({\n          startIndex: 0,\n          endIndex: ranges[0].startIndex-1,\n          firstItemSize: defaultSize,\n          rangeStart: 0,\n          rangeEnd: ranges[0].rangeStart-1\n        });\n      }\n\n      // fix last range\n      var lastRange = ranges[ranges.length-1];\n      var remainingItemsSize = (itemCount - lastRange.startIndex - 1) * defaultSize;\n      lastRange.rangeEnd = lastRange.rangeStart + lastRange.firstItemSize + remainingItemsSize - 1;\n      lastRange.endIndex = itemCount - 1;\n\n      this.__ranges = ranges;\n      return ranges;\n    },\n\n\n    /**\n     * Returns the range, which contains the position\n     *\n     * Complexity: O(log n) (n = number of custom sized cells)\n     *\n     * @param position {Integer} The position.\n     * @return {Map} The range, which contains the given position.\n     */\n    __findRangeByPosition : function(position)\n    {\n      var ranges = this.__ranges || this.__getRanges();\n\n      var start = 0;\n      var end = ranges.length-1;\n\n      // binary search in the sorted ranges list\n      while (true)\n      {\n        var pivot = start + ((end - start) >> 1);\n        var range = ranges[pivot];\n\n        if (range.rangeEnd < position) {\n          start = pivot + 1;\n        } else if (range.rangeStart > position) {\n          end = pivot - 1;\n        } else {\n          return range;\n        }\n      }\n    },\n\n\n    /**\n     * Get the item and the offset into the item at the given position.\n     *\n     * @param position {Integer|null} The position to get the item for.\n     * @return {Map} A map with the keys <code>index</code> and\n     *    <code>offset</code>. The index is the index of the item containing the\n     *    position and offsets specifies offset into this item. If the position\n     *    is outside of the range, <code>null</code> is returned.\n     */\n    getItemAtPosition : function(position)\n    {\n      if (position < 0 || position >= this.getTotalSize()) {\n        return null;\n      }\n\n      var range = this.__findRangeByPosition(position);\n\n      var startPos = range.rangeStart;\n      var index = range.startIndex;\n      var firstItemSize = range.firstItemSize;\n\n      if (startPos + firstItemSize > position)\n      {\n        return {\n          index: index,\n          offset: position - startPos\n        };\n      }\n      else\n      {\n        var defaultSize = this.defaultItemSize;\n        return {\n          index: index + 1 + Math.floor((position - startPos - firstItemSize) / defaultSize),\n          offset: (position - startPos - firstItemSize) % defaultSize\n        };\n      }\n    },\n\n\n    /**\n     * Returns the range, which contains the position.\n     *\n     * Complexity: O(log n) (n = number of custom sized cells)\n     *\n     * @param index {Integer} The index of the item to get the range for.\n     * @return {Map} The range for the index.\n     */\n    __findRangeByIndex : function(index)\n    {\n      var ranges = this.__ranges || this.__getRanges();\n\n      var start = 0;\n      var end = ranges.length-1;\n\n      // binary search in the sorted ranges list\n      while (true)\n      {\n        var pivot = start + ((end - start) >> 1);\n        var range = ranges[pivot];\n\n        if (range.endIndex < index) {\n          start = pivot + 1;\n        } else if (range.startIndex > index) {\n          end = pivot - 1;\n        } else {\n          return range;\n        }\n      }\n    },\n\n\n    /**\n     * Get the start position of the item with the given index.\n     *\n     * @param index {Integer} The item's index.\n     * @return {Integer|null} The start position of the item. If the index is outside\n     *    of the axis range <code>null</code> is returned.\n     */\n    getItemPosition : function(index)\n    {\n      if (index < 0 || index >= this.itemCount) {\n        return null;\n      }\n\n      var range = this.__findRangeByIndex(index);\n      if (range.startIndex == index) {\n        return range.rangeStart;\n      } else {\n        return range.rangeStart + range.firstItemSize + (index-range.startIndex-1) * this.defaultItemSize;\n      }\n    },\n\n\n    /**\n     * Returns the sum of all cell sizes.\n     *\n     * @return {Integer} The sum of all item sizes.\n     */\n    getTotalSize : function()\n    {\n      var ranges = this.__ranges || this.__getRanges();\n      return ranges[ranges.length-1].rangeEnd + 1;\n    },\n\n\n    /**\n     * Get an array of item sizes starting with the item at \"startIndex\". The\n     * sum of all sizes in the returned array is at least \"minSizeSum\".\n     *\n     * @param startIndex {Integer} The index of the first item.\n     * @param minSizeSum {Integer} The minimum sum of the item sizes.\n     * @return {Integer[]} List of item sizes starting with the size of the item\n     *    at index <code>startIndex</code>. The sum of the item sizes is at least\n     *    <code>minSizeSum</code>.\n     */\n    getItemSizes : function(startIndex, minSizeSum)\n    {\n      var customSizes = this.customSizes;\n      var defaultSize = this.defaultItemSize;\n\n      var sum = 0;\n      var sizes = [];\n      var i=0;\n      while (sum < minSizeSum)\n      {\n        var itemSize = customSizes[startIndex] != null ? customSizes[startIndex] : defaultSize;\n        startIndex++;\n\n        sum += itemSize;\n        sizes[i++] = itemSize;\n        if (startIndex >= this.itemCount) {\n          break;\n        }\n      }\n      return sizes;\n    }\n  },\n\n\n  destruct : function() {\n    this.customSizes = this.__ranges = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * A layer is responsible to render one aspect of a virtual pane. The pane tells\n * each layer to render/update a specific window of the virtual grid.\n */\nqx.Interface.define(\"qx.ui.virtual.core.ILayer\",\n{\n  members :\n  {\n    /**\n     * Do a complete update of the layer. All cached data should be discarded.\n     * This method is called e.g. after changes to the grid geometry\n     * (row/column sizes, row/column count, ...).\n     *\n     * Note: This method can only be called after the widgets initial appear\n     * event has been fired because it may work with the widget's DOM elements.\n     *\n     * @param firstRow {Integer} Index of the first row to display.\n     * @param firstColumn {Integer} Index of the first column to display.\n     * @param rowSizes {Integer[]} Array of heights for each row to display.\n     * @param columnSizes {Integer[]} Array of widths for each column to display.\n     */\n    fullUpdate : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    ) {\n      this.assertArgumentsCount(arguments, 6, 6);\n      this.assertPositiveInteger(firstRow);\n      this.assertPositiveInteger(firstColumn);\n      this.assertArray(rowSizes);\n      this.assertArray(columnSizes);\n    },\n\n\n    /**\n     * Update the layer to display a different window of the virtual grid.\n     * This method is called if the pane is scrolled, resized or cells\n     * are prefetched. The implementation can assume that no other grid\n     * data has been changed since the last \"fullUpdate\" of \"updateLayerWindow\"\n     * call.\n     *\n     * Note: This method can only be called after the widgets initial appear\n     * event has been fired because it may work with the widget's DOM elements.\n     *\n     * @param firstRow {Integer} Index of the first row to display.\n     * @param firstColumn {Integer} Index of the first column to display.\n     * @param rowSizes {Integer[]} Array of heights for each row to display.\n     * @param columnSizes {Integer[]} Array of widths for each column to display.\n     */\n    updateLayerWindow : function(\n      firstRow, firstColumn,\n      rowSizes, columnSizes\n    ) {\n      this.assertArgumentsCount(arguments, 6, 6);\n      this.assertPositiveInteger(firstRow);\n      this.assertPositiveInteger(firstColumn);\n      this.assertArray(rowSizes);\n      this.assertArray(columnSizes);\n    },\n\n\n    /**\n     * Update the layer to reflect changes in the data the layer displays.\n     */\n    updateLayerData : function() {}\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * David Perez Carmona (david-perez)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * EXPERIMENTAL!\n *\n * A cell event instance contains all data for pointer events related to cells in\n * a pane.\n **/\nqx.Class.define(\"qx.ui.virtual.core.CellEvent\",\n{\n  extend : qx.event.type.Pointer,\n\n\n  properties :\n  {\n    /** The table row of the event target. */\n    row :\n    {\n      check : \"Integer\",\n      nullable: true\n    },\n\n    /** The table column of the event target. */\n    column :\n    {\n      check : \"Integer\",\n      nullable: true\n    }\n  },\n\n\n  members :\n  {\n     /**\n      * Initialize the event.\n      *\n      * @param scroller {qx.ui.table.pane.Scroller} The tables pane scroller.\n      * @param me {qx.event.type.Pointer} The original pointer event.\n      * @param row {Integer?null} The cell's row index.\n      * @param column {Integer?null} The cell's column index.\n      */\n     init : function(scroller, me, row, column)\n     {\n       me.clone(this);\n       this.setBubbles(false);\n\n       this.setRow(row);\n       this.setColumn(column);\n     }\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The AbstractItem serves as a common superclass for the {@link\n * qx.ui.tree.core.AbstractTreeItem} and {@link qx.ui.tree.VirtualTreeItem} classes.\n *\n * @childControl label {qx.ui.basic.Label} label of the tree item\n * @childControl icon {qx.ui.basic.Image} icon of the tree item\n * @childControl open {qx.ui.tree.core.FolderOpenButton} button to open/close a subtree\n */\nqx.Class.define(\"qx.ui.tree.core.AbstractItem\",\n{\n  extend : qx.ui.core.Widget,\n  type : \"abstract\",\n  include : [qx.ui.form.MModelProperty],\n  implement : [qx.ui.form.IModel],\n\n\n  /**\n   * @param label {String?null} The tree item's caption text\n   */\n  construct : function(label)\n  {\n    this.base(arguments);\n\n    if (label != null) {\n      this.setLabel(label);\n    }\n\n    this._setLayout(new qx.ui.layout.HBox());\n    this._addWidgets();\n\n    this.initOpen();\n  },\n\n\n  properties :\n  {\n    /**\n     * Whether the tree item is opened.\n     */\n    open :\n    {\n      check : \"Boolean\",\n      init : false,\n      event : \"changeOpen\",\n      apply : \"_applyOpen\"\n    },\n\n\n    /**\n     * Controls, when to show the open symbol. If the mode is \"auto\" , the open\n     * symbol is shown only if the item has child items.\n     */\n    openSymbolMode :\n    {\n      check : [\"always\", \"never\", \"auto\"],\n      init : \"auto\",\n      event : \"changeOpenSymbolMode\",\n      apply : \"_applyOpenSymbolMode\"\n    },\n\n\n    /**\n     * The number of pixel to indent the tree item for each level.\n     */\n    indent :\n    {\n      check : \"Integer\",\n      init : 19,\n      apply : \"_applyIndent\",\n      event : \"changeIndent\",\n      themeable : true\n    },\n\n\n    /**\n     * URI of \"closed\" icon. Can be any URI String supported by qx.ui.basic.Image.\n     **/\n    icon :\n    {\n      check : \"String\",\n      apply : \"_applyIcon\",\n      event : \"changeIcon\",\n      nullable : true,\n      themeable : true\n    },\n\n\n    /**\n     * URI of \"opened\" icon. Can be any URI String supported by qx.ui.basic.Image.\n     **/\n    iconOpened :\n    {\n      check : \"String\",\n      apply : \"_applyIconOpened\",\n      event : \"changeIconOpened\",\n      nullable : true,\n      themeable : true\n    },\n\n\n    /**\n     * The label/caption/text\n     */\n    label :\n    {\n      check : \"String\",\n      apply : \"_applyLabel\",\n      event : \"changeLabel\",\n      init : \"\"\n    }\n  },\n\n\n  members :\n  {\n    __labelAdded : null,\n    __iconAdded : null,\n    __spacer : null,\n\n\n    /**\n     * This method configures the tree item by adding its sub widgets like\n     * label, icon, open symbol, ...\n     *\n     * This method must be overridden by sub classes.\n     */\n    _addWidgets : function() {\n      throw new Error(\"Abstract method call.\");\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"label\":\n          control = new qx.ui.basic.Label().set({\n            alignY: \"middle\",\n            anonymous: true,\n            value: this.getLabel()\n          });\n          break;\n\n        case \"icon\":\n          control = new qx.ui.basic.Image().set({\n            alignY: \"middle\",\n            anonymous: true,\n            source: this.getIcon()\n          });\n          break;\n\n        case \"open\":\n          control = new qx.ui.tree.core.FolderOpenButton().set({\n            alignY: \"middle\"\n          });\n          control.addListener(\"changeOpen\", this._onChangeOpen, this);\n          control.addListener(\"resize\", this._updateIndent, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TREE ITEM CONFIGURATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a sub widget to the tree item's horizontal box layout.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to add\n     * @param options {Map?null} The (optional) layout options to use for the widget\n     */\n    addWidget : function(widget, options) {\n      this._add(widget, options);\n    },\n\n\n    /**\n     * Adds the spacer used to render the indentation to the item's horizontal\n     * box layout. If the spacer has been added before, it is removed from its\n     * old position and added to the end of the layout.\n     */\n    addSpacer : function()\n    {\n      if (!this.__spacer) {\n        this.__spacer = new qx.ui.core.Spacer();\n      } else {\n        this._remove(this.__spacer);\n      }\n\n      this._add(this.__spacer);\n    },\n\n\n    /**\n     * Adds the open button to the item's horizontal box layout. If the open\n     * button has been added before, it is removed from its old position and\n     * added to the end of the layout.\n     */\n    addOpenButton : function() {\n      this._add(this.getChildControl(\"open\"));\n    },\n\n\n    /**\n     * Event handler, which listens to open state changes of the open button\n     *\n     * @param e {qx.event.type.Data} The event object\n     */\n    _onChangeOpen : function(e)\n    {\n      if (this.isOpenable()) {\n        this.setOpen(e.getData());\n      }\n    },\n\n\n    /**\n     * Adds the icon widget to the item's horizontal box layout. If the icon\n     * widget has been added before, it is removed from its old position and\n     * added to the end of the layout.\n     */\n    addIcon : function()\n    {\n      var icon = this.getChildControl(\"icon\");\n\n      if (this.__iconAdded) {\n        this._remove(icon);\n      }\n\n      this._add(icon);\n      this.__iconAdded = true;\n    },\n\n\n    /**\n     * Adds the label to the item's horizontal box layout. If the label\n     * has been added before, it is removed from its old position and\n     * added to the end of the layout.\n     *\n     * @param text {String?0} The label's contents\n     */\n    addLabel : function(text)\n    {\n      var label = this.getChildControl(\"label\");\n\n      if (this.__labelAdded) {\n        this._remove(label);\n      }\n\n      if (text) {\n        this.setLabel(text);\n      } else {\n        label.setValue(this.getLabel());\n      }\n\n      this._add(label);\n      this.__labelAdded = true;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyIcon : function(value, old)\n    {\n      // Set \"closed\" icon - even when \"opened\" - if no \"opened\" icon was\n      // user-defined\n      if (!this.__getUserValueIconOpened()) {\n        this.__setIconSource(value);\n      }\n\n      else if (!this.isOpen()) {\n        this.__setIconSource(value);\n      }\n\n    },\n\n\n    // property apply\n    _applyIconOpened : function(value, old)\n    {\n\n      if (this.isOpen()) {\n\n        // ... both \"closed\" and \"opened\" icon were user-defined\n        if (this.__getUserValueIcon() && this.__getUserValueIconOpened()) {\n          this.__setIconSource(value);\n        }\n\n        // .. only \"opened\" icon was user-defined\n        else if (!this.__getUserValueIcon() && this.__getUserValueIconOpened()) {\n          this.__setIconSource(value);\n        }\n      }\n\n    },\n\n\n    // property apply\n    _applyLabel : function(value, old)\n    {\n      var label = this.getChildControl(\"label\", true);\n      if (label) {\n        label.setValue(value);\n      }\n    },\n\n    // property apply\n    _applyOpen : function(value, old)\n    {\n      var open = this.getChildControl(\"open\", true);\n      if (open) {\n        open.setOpen(value);\n      }\n\n      //\n      // Determine source of icon for \"opened\" or \"closed\" state\n      //\n      var source;\n\n      // Opened\n      if (value) {\n        // Never overwrite user-defined icon with themed \"opened\" icon\n        source = this.__getUserValueIconOpened() ? this.getIconOpened() : null;\n      }\n\n      // Closed\n      else {\n        source = this.getIcon();\n      }\n\n      if (source) {\n        this.__setIconSource(source);\n      }\n\n      value ? this.addState(\"opened\") : this.removeState(\"opened\");\n\n    },\n\n    /**\n    * Get user-defined value of \"icon\" property\n    *\n    * @return {var} The user value of the property \"icon\"\n    */\n    __getUserValueIcon : function() {\n      return qx.util.PropertyUtil.getUserValue(this, \"icon\");\n    },\n\n    /**\n    * Get user-defined value of \"iconOpened\" property\n    *\n    * @return {var} The user value of the property \"iconOpened\"\n    */\n    __getUserValueIconOpened : function() {\n      return qx.util.PropertyUtil.getUserValue(this, \"iconOpened\");\n    },\n\n    /**\n    * Set source of icon child control\n    *\n    * @param url {String} The URL of the icon\n    */\n    __setIconSource : function(url) {\n      var icon = this.getChildControl(\"icon\", true);\n      if (icon) {\n        icon.setSource(url);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INDENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Whether the tree item can be opened.\n     *\n     * @return {Boolean} Whether the tree item can be opened.\n     */\n    isOpenable : function()\n    {\n      var openMode = this.getOpenSymbolMode();\n      return (\n        openMode === \"always\" ||\n        openMode === \"auto\" && this.hasChildren()\n      );\n    },\n\n\n    /**\n     * Whether the open symbol should be shown\n     *\n     * @return {Boolean} Whether the open symbol should be shown.\n     */\n    _shouldShowOpenSymbol : function() {\n      throw new Error(\"Abstract method call.\");\n    },\n\n\n    // property apply\n    _applyOpenSymbolMode : function(value, old) {\n      this._updateIndent();\n    },\n\n\n    /**\n     * Update the indentation of the tree item.\n     */\n    _updateIndent : function()\n    {\n      var openWidth = 0;\n      var open = this.getChildControl(\"open\", true);\n\n      if (open)\n      {\n        if (this._shouldShowOpenSymbol())\n        {\n          open.show();\n\n          var openBounds = open.getBounds();\n          if (openBounds) {\n            openWidth = openBounds.width;\n          } else {\n            return;\n          }\n        }\n        else\n        {\n          open.exclude();\n        }\n      }\n\n      if (this.__spacer) {\n        this.__spacer.setWidth((this.getLevel() + 1) * this.getIndent() - openWidth);\n      }\n    },\n\n\n    // property apply\n    _applyIndent : function(value, old) {\n      this._updateIndent();\n    },\n\n\n    /**\n     * Computes the item's nesting level. If the item is not part of a tree\n     * this function will return <code>null</code>.\n     *\n     * @return {Integer|null} The item's nesting level or <code>null</code>.\n     */\n    getLevel : function() {\n      throw new Error(\"Abstract method call.\");\n    },\n\n\n    // overridden\n    syncWidget : function(jobs) {\n      this._updateIndent();\n    },\n\n\n    /**\n     * Whether the item has any children\n     *\n     * @return {Boolean} Whether the item has any children.\n     */\n    hasChildren : function() {\n      throw new Error(\"Abstract method call.\");\n    }\n  },\n\n\n  destruct : function() {\n    this._disposeObjects(\"__spacer\");\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The tree item is a tree element for the {@link VirtualTree}, which can have\n * nested tree elements.\n */\nqx.Class.define(\"qx.ui.tree.VirtualTreeItem\",\n{\n  extend : qx.ui.tree.core.AbstractItem,\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"virtual-tree-folder\"\n    }\n  },\n\n\n  members :\n  {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      selected : true\n    },\n\n\n    // overridden\n    _addWidgets : function()\n    {\n      this.addSpacer();\n      this.addOpenButton();\n      this.addIcon();\n      this.addLabel();\n    },\n\n\n    // overridden\n    _shouldShowOpenSymbol : function()\n    {\n      var open = this.getChildControl(\"open\", true);\n      if (open == null) {\n        return false;\n      }\n\n      return this.isOpenable();\n    },\n\n\n    // overridden\n    getLevel : function() {\n      return this.getUserData(\"cell.level\");\n    },\n\n\n    // overridden\n    hasChildren : function()\n    {\n      var model = this.getModel();\n      var childProperty = this.getUserData(\"cell.childProperty\");\n      var showLeafs = this.getUserData(\"cell.showLeafs\");\n\n      return qx.ui.tree.core.Util.hasChildren(model, childProperty, !showLeafs);\n    },\n\n\n    // apply method\n    _applyModel : function(value, old)\n    {\n      var childProperty = this.getUserData(\"cell.childProperty\");\n      var showLeafs = this.getUserData(\"cell.showLeafs\");\n\n      if (value != null && qx.ui.tree.core.Util.isNode(value, childProperty))\n      {\n        var eventType = \"change\" + qx.lang.String.firstUp(childProperty);\n        // listen to children property changes\n        if (qx.Class.hasProperty(value.constructor, childProperty)) {\n          value.addListener(eventType, this._onChangeChildProperty, this);\n        }\n\n\n        // children property has been set already, immediately add\n        // listener for indent updating\n        if (qx.ui.tree.core.Util.hasChildren(value, childProperty, !showLeafs)) {\n          value.get(childProperty).addListener(\"changeLength\",\n            this._onChangeLength, this);\n          this._updateIndent();\n        }\n      }\n\n\n      if (old != null && qx.ui.tree.core.Util.isNode(old, childProperty))\n      {\n        var eventType = \"change\" + qx.lang.String.firstUp(childProperty);\n        old.removeListener(eventType, this._onChangeChildProperty, this);\n\n        var oldChildren = old.get(childProperty);\n        if (oldChildren) {\n          oldChildren.removeListener(\"changeLength\", this._onChangeLength, this);\n        }\n      }\n    },\n\n\n    /**\n     * Handler to update open/close icon when model length changed.\n     */\n    _onChangeLength : function() {\n      this._updateIndent();\n    },\n\n\n    /**\n     * Handler to add listener to array of children property.\n     *\n     * @param e {qx.event.type.Data} Data event; provides children array\n     */\n    _onChangeChildProperty : function(e)\n    {\n      var children = e.getData();\n      var old = e.getOldData();\n\n      if (children) {\n        this._updateIndent();\n        children.addListener(\"changeLength\", this._onChangeLength, this);\n      }\n\n      if (old) {\n        old.removeListener(\"changeLength\", this._onChangeLength, this);\n      }\n    }\n  }\n});"
  ]
}