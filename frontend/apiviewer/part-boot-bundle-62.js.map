{
  "version": 3,
  "sources": [
    "../transpiled/qx/ui/table/cellrenderer/AbstractImage.js",
    "../transpiled/qx/ui/table/cellrenderer/Image.js",
    "../transpiled/qx/io/remote/Request.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "build-output/apiviewer/part-boot-bundle-62.js.map",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Carsten Lergenmueller (carstenl)\n\n************************************************************************ */\n\n/**\n * A template class for cell renderer, which display images. Concrete\n * implementations must implement the method {@link #_identifyImage}.\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.AbstractImage\",\n{\n  extend : qx.ui.table.cellrenderer.Abstract,\n  type : \"abstract\",\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    var clazz = this.self(arguments);\n    if (!clazz.stylesheet)\n    {\n      clazz.stylesheet = qx.bom.Stylesheet.createElement(\n        \".qooxdoo-table-cell-icon {\" +\n        \"  text-align:center;\" +\n        \"  padding-top:1px;\" +\n        \"}\"\n      );\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties :\n  {\n    /**\n     * Whether to repeat or scale the image.\n     *\n     * @param repeat {String}\n     *   One of\n     *     <code>scale</code>,\n     *     <code>scale-x</code>,\n     *     <code>scale-y</code>,\n     *     <code>repeat</code>,\n     *     <code>repeat-x</code>,\n     *     <code>repeat-y</code>,\n     *     <code>no-repeat</code>\n    */\n    repeat :\n    {\n      check : function(value)\n      {\n        var valid =\n          [\n            \"scale\",\n            \"scale-x\",\n            \"scale-y\",\n            \"repeat\",\n            \"repeat-x\",\n            \"repeat-y\",\n            \"no-repeat\"\n          ];\n        return valid.includes(value);\n      },\n      init  : \"no-repeat\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __defaultWidth : 16,\n    __defaultHeight : 16,\n    __imageData : null,\n\n    // overridden\n    _insetY : 2,\n\n    /**\n     * Identifies the Image to show. This is a template method, which must be\n     * implemented by sub classes.\n     *\n     * @abstract\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {Map} A map having the following attributes:\n     *           <ul>\n     *           <li>\n     *             \"url\": (type string) must be the URL of the image to show.\n     *             The url given must either be managed by the {@link qx.util.ResourceManager}\n     *             or pre-loaded with {@link qx.io.ImageLoader}. This is to make sure that\n     *             the renderer knows the dimensions and the format of the image.\n     *           </li>\n     *           <li>\"imageWidth\": (type int) the width of the image in pixels.</li>\n     *           <li>\"imageHeight\": (type int) the height of the image in pixels.</li>\n     *           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n     *           </ul>\n     * @throws {Error} the abstract function warning.\n     */\n    _identifyImage : function(cellInfo) {\n      throw new Error(\"_identifyImage is abstract\");\n    },\n\n\n    /**\n     * Retrieves the image infos.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {Map} Map with an \"url\" attribute (type string)\n     *                 holding the URL of the image to show\n     *                 and a \"tooltip\" attribute\n     *                 (type string) being the tooltip text (or null if none was specified)\n     */\n    _getImageInfos : function(cellInfo)\n    {\n      // Query the subclass about image and tooltip\n      var imageData = this._identifyImage(cellInfo);\n\n      // If subclass refuses to give map, construct it with required properties\n      // If no map is given, but instead a string, assume that this string is\n      // the URL of the image [BUG #4289]\n      if (imageData == null || typeof imageData == \"string\")\n      {\n        imageData =\n        {\n          url : imageData,\n          tooltip : null\n        };\n      }\n\n      // If sizes are not included in map given by subclass,\n      // fall-back to calculated image size\n      if (!imageData.imageWidth || !imageData.imageHeight)\n      {\n        var sizes = this.__getImageSize(imageData.url);\n\n        imageData.imageWidth = sizes.width;\n        imageData.imageHeight = sizes.height;\n      }\n\n      // Add width and height keys to map [BUG #4289]\n      // - [width|height] is read by _getContentHtml()\n      // - [imageWidth|imageHeight] is possibly read in legacy applications\n      imageData.width = imageData.imageWidth;\n      imageData.height = imageData.imageHeight;\n\n      return imageData;\n    },\n\n\n    /**\n     * Compute the size of the given image\n     *\n     * @param source {String} the image URL\n     * @return {Map} A map containing the image's <code>width</code> and\n     *    <code>height</code>\n     */\n    __getImageSize : function(source)\n    {\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n      var ImageLoader = qx.io.ImageLoader;\n      var width, height;\n\n      // Detect if the image registry knows this image\n      if (ResourceManager.has(source))\n      {\n        width = ResourceManager.getImageWidth(source);\n        height = ResourceManager.getImageHeight(source);\n      }\n      else if (ImageLoader.isLoaded(source))\n      {\n        width = ImageLoader.getWidth(source);\n        height = ImageLoader.getHeight(source);\n      }\n      else\n      {\n        width = this.__defaultWidth;\n        height = this.__defaultHeight;\n      }\n\n      return {width : width, height : height};\n    },\n\n\n    // overridden\n    createDataCellHtml : function(cellInfo, htmlArr)\n    {\n      this.__imageData = this._getImageInfos(cellInfo);\n      return this.base(arguments, cellInfo, htmlArr);\n    },\n\n\n    // overridden\n    _getCellClass : function(cellInfo) {\n      return this.base(arguments) + \" qooxdoo-table-cell-icon\";\n    },\n\n\n    // overridden\n    _getContentHtml : function(cellInfo) {\n      var content = \"<div></div>\";\n      // set image\n      if (this.__imageData.url) {\n        var srcUrl = this.__imageData.url;\n        var highResolutionSource = qx.util.ResourceManager.getInstance().findHighResolutionSource(this.__imageData.url);\n        if (highResolutionSource) {\n          srcUrl = highResolutionSource;\n        }\n        var style = {\n          width: this.__imageData.width + \"px\",\n          height: this.__imageData.height + \"px\",\n          display: qx.core.Environment.get(\"css.inlineblock\"),\n          verticalAlign: \"top\",\n          position: \"static\"\n        }\n        if (qx.util.ResourceManager.getInstance().getCombinedFormat(this.__imageData.url) === \"\") {\n          // background size is critical for high-resolution images but breaks combined images\n          style[\"background-size\"] = this.__imageData.width + \"px \" + this.__imageData.height + \"px\";\n        }\n        content = qx.bom.element.Decoration.create(srcUrl, this.getRepeat(), style);\n      }\n      return content;\n    },\n\n\n    // overridden\n    _getCellAttributes : function(cellInfo)\n    {\n      var tooltip = this.__imageData.tooltip;\n\n      if (tooltip) {\n        return \"title='\" + tooltip + \"'\";\n      } else {\n        return \"\";\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this.__imageData = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 by Tartan Solutions, Inc, http://www.tartansolutions.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Dan Hummon\n\n************************************************************************ */\n\n/**\n * The image cell renderer renders image into table cells.\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Image\",\n{\n  extend : qx.ui.table.cellrenderer.AbstractImage,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  /**\n   * @param height {Integer?16} The height of the image. The default is 16.\n   * @param width {Integer?16} The width of the image. The default is 16.\n   */\n  construct : function(width, height)\n  {\n    this.base(arguments);\n\n    if (width) {\n      this.__imageWidth = width;\n    }\n\n    if (height) {\n      this.__imageHeight = height;\n    }\n\n    this.__am = qx.util.AliasManager.getInstance();\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __am : null,\n    __imageHeight : 16,\n    __imageWidth : 16,\n\n\n    // overridden\n    _identifyImage : function(cellInfo)\n    {\n      var imageHints =\n      {\n        imageWidth  : this.__imageWidth,\n        imageHeight : this.__imageHeight\n      };\n\n      if (cellInfo.value == \"\") {\n        imageHints.url = null;\n      } else {\n        imageHints.url = this.__am.resolve(cellInfo.value);\n      }\n\n      imageHints.tooltip = cellInfo.tooltip;\n\n      return imageHints;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.__am = null;\n  }\n});\n",
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * This class is used to send HTTP requests to the server.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * Note: This class will be deprecated in a future release. Instead,\n * please use classes found in {@link qx.io.request}.\n */\nqx.Class.define(\"qx.io.remote.Request\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param vUrl {String}\n   *   Target url to issue the request to.\n   *\n   * @param vMethod {String}\n   *   Determines http method (GET, POST, PUT, etc.) to use. See \"method\" property\n   *   for valid values and default value.\n   *\n   * @param vResponseType {String}\n   *   The mime type of the response. Default is text/plain.\n   */\n  construct : function(vUrl, vMethod, vResponseType)\n  {\n    this.base(arguments);\n\n    this.__requestHeaders = {};\n    this.__urlParameters = {};\n    this.__dataParameters = {};\n    this.__formFields = {};\n\n    if (vUrl !== undefined) {\n      this.setUrl(vUrl);\n    }\n\n    if (vMethod !== undefined) {\n      this.setMethod(vMethod);\n    }\n\n    if (vResponseType !== undefined) {\n      this.setResponseType(vResponseType);\n    }\n\n    this.setProhibitCaching(true);\n\n    // Get the next sequence number for this request\n    this.__seqNum = ++qx.io.remote.Request.__seqNum;\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events : {\n\n    /** Fired when the Request object changes its state to 'created' */\n    \"created\" : \"qx.event.type.Event\",\n\n    /** Fired when the Request object changes its state to 'configured' */\n    \"configured\" : \"qx.event.type.Event\",\n\n    /** Fired when the Request object changes its state to 'sending' */\n    \"sending\" : \"qx.event.type.Event\",\n\n    /** Fired when the Request object changes its state to 'receiving' */\n    \"receiving\" : \"qx.event.type.Event\",\n\n    /**\n     * Fired once the request has finished successfully. The event object\n     * can be used to read the transferred data.\n     */\n    \"completed\" : \"qx.io.remote.Response\",\n\n    /** Fired when the pending request has been aborted. */\n    \"aborted\" : \"qx.event.type.Event\",\n\n    /** Fired when the pending request fails. */\n    \"failed\" : \"qx.io.remote.Response\",\n\n    /** Fired when the pending request times out. */\n    \"timeout\" : \"qx.io.remote.Response\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      SEQUENCE NUMBER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sequence (id) number of a request, used to associate a response or error\n     * with its initiating request.\n     */\n    __seqNum : 0,\n\n    /**\n     * Returns true if the given HTTP method allows a request body being transferred to the server.\n     * This is currently POST and PUT. Other methods require their data being encoded into\n     * the URL\n     *\n     * @param httpMethod {String} one of the values of the method property\n     * @return {Boolean}\n     */\n    methodAllowsRequestBody : function(httpMethod) {\n      return (httpMethod == \"POST\") || (httpMethod == \"PUT\");\n    }\n\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Target url to issue the request to.\n     */\n    url :\n    {\n      check : \"String\",\n      init : \"\"\n    },\n\n\n    /**\n     * Determines what type of request to issue (GET, POST, PUT, HEAD, DELETE).\n     */\n    method :\n    {\n      check : [ \"GET\", \"POST\", \"PUT\", \"HEAD\", \"DELETE\" ],\n      apply : \"_applyMethod\",\n      init : \"GET\"\n    },\n\n\n    /**\n     * Set the request to asynchronous.\n     */\n    asynchronous :\n    {\n      check : \"Boolean\",\n      init : true\n    },\n\n\n    /**\n     * Set the data to be sent via this request\n     */\n    data :\n    {\n      check : \"String\",\n      nullable : true\n    },\n\n\n    /**\n     * Username to use for HTTP authentication.\n     * Set to NULL if HTTP authentication is not used.\n     */\n    username :\n    {\n      check : \"String\",\n      nullable : true\n    },\n\n\n    /**\n     * Password to use for HTTP authentication.\n     * Set to NULL if HTTP authentication is not used.\n     */\n    password :\n    {\n      check : \"String\",\n      nullable : true\n    },\n\n\n    /**\n     * The state that the request is in, while being processed.\n     */\n    state :\n    {\n      check : [ \"configured\", \"queued\", \"sending\", \"receiving\", \"completed\", \"aborted\", \"timeout\", \"failed\" ],\n      init : \"configured\",\n      apply : \"_applyState\",\n      event : \"changeState\"\n    },\n\n\n    /**\n     * Response type of request.\n     *\n     * The response type is a MIME type, default is text/plain. Other supported\n     * MIME types are text/javascript, text/html, application/json,\n     * application/xml.\n     */\n    responseType :\n    {\n      check : [ \"text/plain\", \"text/javascript\", \"application/json\", \"application/xml\", \"text/html\" ],\n      init : \"text/plain\",\n      apply : \"_applyResponseType\"\n    },\n\n\n    /**\n     * Number of milliseconds before the request is being timed out.\n     *\n     * If this property is null, the timeout for the request comes is the\n     * qx.io.remote.RequestQueue's property defaultTimeout.\n     */\n    timeout :\n    {\n      check : \"Integer\",\n      nullable : true\n    },\n\n\n    /**\n     * Prohibit request from being cached.\n     *\n     * Setting the value to <i>true</i> adds a parameter \"nocache\" to the\n     * request URL with a value of the current time, as well as adding request\n     * headers Pragma:no-cache and Cache-Control:no-cache.\n     *\n     * Setting the value to <i>false</i> removes the parameter and request\n     * headers.\n     *\n     * As a special case, this property may be set to the string value\n     * \"no-url-params-on-post\" which will prevent the nocache parameter from\n     * being added to the URL if the POST method is used but will still add\n     * the Pragma and Cache-Control headers.  This is useful if your backend\n     * does nasty things like mixing parameters specified in the URL into\n     * form fields in the POST request.  (One example of this nasty behavior\n     * is known as \"mixed mode\" in Oracle, as described here:\n     * http://docs.oracle.com/cd/B32110_01/web.1013/b28963/concept.htm#i1005684)\n     */\n    prohibitCaching :\n    {\n      check : function(v)\n      {\n        return typeof v == \"boolean\" || v === \"no-url-params-on-post\";\n      },\n      init : true,\n      apply : \"_applyProhibitCaching\"\n    },\n\n\n    /**\n     * Indicate that the request is cross domain.\n     *\n     * A request is cross domain if the request's URL points to a host other than\n     * the local host. This switches the concrete implementation that is used for\n     * sending the request from qx.io.remote.transport.XmlHttp to\n     * qx.io.remote.transport.Script, because only the latter can handle cross\n     * domain requests.\n     */\n    crossDomain :\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n\n    /**\n     * Indicate that the request will be used for a file upload.\n     *\n     * The request will be used for a file upload.  This switches the concrete\n     * implementation that is used for sending the request from\n     * qx.io.remote.transport.XmlHttp to qx.io.remote.IFrameTransport, because only\n     * the latter can handle file uploads.\n     */\n    fileUpload :\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n\n    /**\n     * The transport instance used for the request.\n     *\n     * This is necessary to be able to abort an asynchronous request.\n     */\n    transport :\n    {\n      check : \"qx.io.remote.Exchange\",\n      nullable : true\n    },\n\n\n    /**\n     * Use Basic HTTP Authentication.\n     */\n    useBasicHttpAuth :\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n    /**\n     * If true and the responseType property is set to \"application/json\", getContent() will\n     * return a Javascript map containing the JSON contents, i. e. the result qx.lang.Json.parse().\n     * If false, the raw string data will be returned and the parsing must be done manually.\n     * This is useful for special JSON dialects / extensions which are not supported by\n     * qx.lang.Json.\n     *\n     * Note that this is currently only respected by qx.io.remote.transport.XmlHttp, i. e.\n     * if the transport used is the one using XMLHttpRequests. The other transports\n     * do not support JSON parsing, so this property has no effect.\n     */\n    parseJson :\n    {\n      check : \"Boolean\",\n      init : true\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    __requestHeaders : null,\n    __urlParameters : null,\n    __dataParameters : null,\n    __formFields : null,\n    __seqNum : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      CORE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Schedule this request for transport to server.\n     *\n     * The request is added to the singleton class qx.io.remote.RequestQueue's\n     * list of pending requests.\n     *\n     */\n    send : function() {\n      qx.io.remote.RequestQueue.getInstance().add(this);\n    },\n\n\n    /**\n     * Abort sending this request.\n     *\n     * The request is removed from the singleton class qx.io.remote.RequestQueue's\n     * list of pending events. If the request haven't been scheduled this\n     * method is a noop.\n     *\n     */\n    abort : function() {\n      qx.io.remote.RequestQueue.getInstance().abort(this);\n    },\n\n\n    /**\n     * Abort sending this request if it has not already been aborted.\n     *\n     */\n    reset : function()\n    {\n      switch(this.getState())\n      {\n        case \"sending\":\n        case \"receiving\":\n          this.error(\"Aborting already sent request!\");\n\n          // no break\n\n        case \"queued\":\n          this.abort();\n          break;\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STATE ALIASES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Determine if this request is in the configured state.\n     *\n     * @return {Boolean} <true> if the request is in the configured state; <false> otherwise.\n     */\n    isConfigured : function() {\n      return this.getState() === \"configured\";\n    },\n\n\n    /**\n     * Determine if this request is in the queued state.\n     *\n     * @return {Boolean} <true> if the request is in the queued state; <false> otherwise.\n     */\n    isQueued : function() {\n      return this.getState() === \"queued\";\n    },\n\n\n    /**\n     * Determine if this request is in the sending state.\n     *\n     * @return {Boolean} <true> if the request is in the sending state; <false> otherwise.\n     */\n    isSending : function() {\n      return this.getState() === \"sending\";\n    },\n\n\n    /**\n     * Determine if this request is in the receiving state.\n     *\n     * @return {Boolean} <true> if the request is in the receiving state; <false> otherwise.\n     */\n    isReceiving : function() {\n      return this.getState() === \"receiving\";\n    },\n\n\n    /**\n     * Determine if this request is in the completed state.\n     *\n     * @return {Boolean} <true> if the request is in the completed state; <false> otherwise.\n     */\n    isCompleted : function() {\n      return this.getState() === \"completed\";\n    },\n\n\n    /**\n     * Determine if this request is in the aborted state.\n     *\n     * @return {Boolean} <true> if the request is in the aborted state; <false> otherwise.\n     */\n    isAborted : function() {\n      return this.getState() === \"aborted\";\n    },\n\n\n    /**\n     * Determine if this request is in the timeout state.\n     *\n     * @return {Boolean} <true> if the request is in the timeout state; <false> otherwise.\n     */\n    isTimeout : function() {\n      return this.getState() === \"timeout\";\n    },\n\n\n    /**\n     * Determine if this request is in the failed state.\n     *\n     * @return {Boolean} <true> if the request is in the failed state; <false> otherwise.\n     */\n    isFailed : function() {\n      return this.getState() === \"failed\";\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Dispatches a clone of the given event on this instance\n     *\n     * @param e {qx.event.type.Event} The original event\n     */\n    __forwardEvent : qx.event.GlobalError.observeMethod(function(e)\n    {\n      var clonedEvent = e.clone();\n      clonedEvent.setTarget(this);\n      this.dispatchEvent(clonedEvent);\n    }),\n\n\n\n    /**\n     * Event handler called when the request enters the queued state.\n     *\n     * @param e {qx.event.type.Event} Event indicating state change\n     */\n    _onqueued : function(e)\n    {\n      // Modify internal state\n      this.setState(\"queued\");\n\n      // Bubbling up\n      this.__forwardEvent(e);\n    },\n\n\n    /**\n     * Event handler called when the request enters the sending state.\n     *\n     * @param e {qx.event.type.Event} Event indicating state change\n     */\n    _onsending : function(e)\n    {\n      // Modify internal state\n      this.setState(\"sending\");\n\n      // Bubbling up\n      this.__forwardEvent(e);\n    },\n\n\n    /**\n     * Event handler called when the request enters the receiving state.\n     *\n     * @param e {qx.event.type.Event} Event indicating state change\n     */\n    _onreceiving : function(e)\n    {\n      // Modify internal state\n      this.setState(\"receiving\");\n\n      // Bubbling up\n      this.__forwardEvent(e);\n    },\n\n\n    /**\n     * Event handler called when the request enters the completed state.\n     *\n     * @param e {qx.event.type.Event} Event indicating state change\n     */\n    _oncompleted : function(e)\n    {\n      // Modify internal state\n      this.setState(\"completed\");\n\n      // Bubbling up\n      this.__forwardEvent(e);\n\n      // Automatically dispose after event completion\n      this.dispose();\n    },\n\n\n    /**\n     * Event handler called when the request enters the aborted state.\n     *\n     * @param e {qx.event.type.Event} Event indicating state change\n     */\n    _onaborted : function(e)\n    {\n      // Modify internal state\n      this.setState(\"aborted\");\n\n      // Bubbling up\n      this.__forwardEvent(e);\n\n      // Automatically dispose after event completion\n      this.dispose();\n    },\n\n\n    /**\n     * Event handler called when the request enters the timeout state.\n     *\n     * @param e {qx.event.type.Event} Event indicating state change\n     */\n    _ontimeout : function(e)\n    {\n      /*\n        // User's handler can block until timeout.\n        switch(this.getState())\n        {\n          // If we're no longer running...\n          case \"completed\":\n          case \"timeout\":\n          case \"aborted\":\n          case \"failed\":\n            // then don't bubble up the timeout event\n            return;\n        }\n\n\n    */  // Modify internal state\n      this.setState(\"timeout\");\n\n      // Bubbling up\n      this.__forwardEvent(e);\n\n      // Automatically dispose after event completion\n      this.dispose();\n    },\n\n\n    /**\n     * Event handler called when the request enters the failed state.\n     *\n     * @param e {qx.event.type.Event} Event indicating state change\n     */\n    _onfailed : function(e)\n    {\n      // Modify internal state\n      this.setState(\"failed\");\n\n      // Bubbling up\n      this.__forwardEvent(e);\n\n      // Automatically dispose after event completion\n      this.dispose();\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyState : function(value, old)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          this.debug(\"State: \" + value);\n        }\n      }\n    },\n\n\n    // property apply\n    _applyProhibitCaching : function(value, old)\n    {\n      if (! value)\n      {\n        this.removeParameter(\"nocache\");\n        this.removeRequestHeader(\"Pragma\");\n        this.removeRequestHeader(\"Cache-Control\");\n        return;\n      }\n\n      // If value isn't \"no-url-params-on-post\" or this isn't a POST request\n      if (value !== \"no-url-params-on-post\" ||\n          this.getMethod() != \"POST\")\n      {\n        // ... then add a parameter to the URL to make it unique on each\n        // request.  The actual id, \"nocache\" is irrelevant; it's the fact\n        // that a (usually) different date is added to the URL on each request\n        // that prevents caching.\n        this.setParameter(\"nocache\", new Date().valueOf());\n      }\n      else\n      {\n        // Otherwise, we don't want the nocache parameter in the URL.\n        this.removeParameter(\"nocache\");\n      }\n\n      // Add the HTTP 1.0 request to avoid use of a cache\n      this.setRequestHeader(\"Pragma\", \"no-cache\");\n\n      // Add the HTTP 1.1 request to avoid use of a cache\n      this.setRequestHeader(\"Cache-Control\", \"no-cache\");\n    },\n\n\n    // property apply\n    _applyMethod : function(value, old)\n    {\n      if (qx.io.remote.Request.methodAllowsRequestBody(value)) {\n        this.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      } else {\n        this.removeRequestHeader(\"Content-Type\");\n      }\n\n      // Re-test the prohibit caching property.  We may need to add or remove\n      // the \"nocache\" parameter.  We explicitly call the _apply method since\n      // it wouldn't be called normally when setting the value to its already\n      // existant value.\n      var prohibitCaching = this.getProhibitCaching();\n      this._applyProhibitCaching(prohibitCaching, prohibitCaching);\n    },\n\n\n    // property apply\n    _applyResponseType : function(value, old) {\n      this.setRequestHeader(\"X-Qooxdoo-Response-Type\", value);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      REQUEST HEADER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add a request header to the request.\n     *\n     * Example: request.setRequestHeader(\"Content-Type\", \"text/html\")\n     *\n     * Please note: Some browsers, such as Safari 3 and 4, will capitalize\n     * header field names. This is in accordance with RFC 2616[1], which states\n     * that HTTP 1.1 header names are case-insensitive, so your server backend\n     * should be case-agnostic when dealing with request headers.\n     *\n     * [1]<a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\">RFC 2616: HTTP Message Headers</a>\n     *\n     * @param vId {String} The identifier to use for this added header\n     * @param vValue {String} The value to use for this added header\n     */\n    setRequestHeader : function(vId, vValue) {\n      this.__requestHeaders[vId] = vValue;\n    },\n\n\n    /**\n     * Remove a previously-added request header\n     *\n     * @param vId {String} The id of the header to be removed\n     */\n    removeRequestHeader : function(vId) {\n      delete this.__requestHeaders[vId];\n    },\n\n\n    /**\n     * Retrieve the value of a header which was previously set\n     *\n     * @param vId {String} The id of the header value being requested\n     * @return {String} The value of the header with the specified id\n     */\n    getRequestHeader : function(vId) {\n      return this.__requestHeaders[vId] || null;\n    },\n\n\n    /**\n     * Return the object containing all of the headers which have been added.\n     *\n     * @return {Object} The returned object has as its property names each of the ids of headers\n     *     which have been added, and as each property value, the value of the\n     *     property corresponding to that id.\n     */\n    getRequestHeaders : function() {\n      return this.__requestHeaders;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PARAMETERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add a parameter to the request.\n     *\n     * @param vId {String}\n     *   String identifier of the parameter to add.\n     *\n     * @param vValue {var}\n     *   Value of parameter. May be a string (for one parameter) or an array\n     *   of strings (for setting multiple parameter values with the same\n     *   parameter name).\n     *\n     * @param bAsData {Boolean}\n     *   If <i>false</i>, add the parameter to the URL.  If <i>true</i> then\n     *   instead the parameters added by calls to this method will be combined\n     *   into a string added as the request data, as if the entire set of\n     *   parameters had been pre-build and passed to setData().\n     *\n     * Note: Parameters requested to be sent as data will be silently dropped\n     *       if data is manually added via a call to setData().\n     *\n     * Note: Some transports, e.g. Script, do not support passing parameters\n     *       as data.\n     *\n     */\n    setParameter : function(vId, vValue, bAsData)\n    {\n      if (bAsData)\n      {\n        this.__dataParameters[vId] = vValue;\n      }\n      else\n      {\n        this.__urlParameters[vId] = vValue;\n      }\n    },\n\n\n    /**\n     * Remove a parameter from the request.\n     *\n     * @param vId {String}\n     *   Identifier of the parameter to remove.\n     *\n     * @param bFromData {Boolean}\n     *   If <i>false</i> then remove the parameter of the URL parameter list.\n     *   If <i>true</i> then remove it from the list of parameters to be sent\n     *   as request data.\n     *\n     */\n    removeParameter : function(vId, bFromData)\n    {\n      if (bFromData)\n      {\n        delete this.__dataParameters[vId];\n      }\n      else\n      {\n        delete this.__urlParameters[vId];\n      }\n    },\n\n\n    /**\n     * Get a parameter in the request.\n     *\n     * @param vId {String}\n     *   Identifier of the parameter to get.\n     *\n     * @param bFromData {Boolean}\n     *   If <i>false</i> then retrieve the parameter from the URL parameter\n     *   list. If <i>true</i> then retrieve it from the list of parameters to\n     *   be sent as request data.\n     *\n     * @return {var}\n     *   The requested parameter value\n     *\n     */\n    getParameter : function(vId, bFromData)\n    {\n      if (bFromData)\n      {\n        return this.__dataParameters[vId] || null;\n      }\n      else\n      {\n        return this.__urlParameters[vId] || null;\n      }\n    },\n\n\n    /**\n     * Returns the object containing all parameters for the request.\n     *\n     * @param bFromData {Boolean}\n     *   If <i>false</i> then retrieve the URL parameter list.\n     *   If <i>true</i> then retrieve the data parameter list.\n     *\n     * @return {Object}\n     *   The returned object has as its property names each of the ids of\n     *   parameters which have been added, and as each property value, the\n     *   value of the property corresponding to that id.\n     */\n    getParameters : function(bFromData)\n    {\n      return (bFromData ? this.__dataParameters : this.__urlParameters);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FORM FIELDS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add a form field to the POST request.\n     *\n     * NOTE: Adding any programmatic form fields using this method will switch the\n     *       Transport implementation to IframeTransport.\n     *\n     * NOTE: Use of these programmatic form fields disallow use of synchronous\n     *       requests and cross-domain requests.  Be sure that you do not need\n     *       those features when setting these programmatic form fields.\n     *\n     * @param vId {String} String identifier of the form field to add.\n     * @param vValue {String} Value of form field\n     */\n    setFormField : function(vId, vValue) {\n      this.__formFields[vId] = vValue;\n    },\n\n\n    /**\n     * Remove a form field from the POST request.\n     *\n     * @param vId {String} Identifier of the form field to remove.\n     */\n    removeFormField : function(vId) {\n      delete this.__formFields[vId];\n    },\n\n\n    /**\n     * Get a form field in the POST request.\n     *\n     * @param vId {String} Identifier of the form field to get.\n     * @return {String|null} Value of form field or <code>null</code> if no value\n     *    exists for the passed identifier.\n     */\n    getFormField : function(vId) {\n      return this.__formFields[vId] || null;\n    },\n\n\n    /**\n     * Returns the object containing all form fields for the POST request.\n     *\n     * @return {Object} The returned object has as its property names each of the ids of\n     *     form fields which have been added, and as each property value, the value\n     *     of the property corresponding to that id.\n     */\n    getFormFields : function() {\n      return this.__formFields;\n    },\n\n\n    /**\n     * Obtain the sequence (id) number used for this request\n     *\n     * @return {Integer} The sequence number of this request\n     */\n    getSequenceNumber : function() {\n      return this.__seqNum;\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this.setTransport(null);\n    this.__requestHeaders = this.__urlParameters = this.__dataParameters =\n      this.__formFields = null;\n  }\n});\n"
  ]
}