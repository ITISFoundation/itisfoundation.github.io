{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/wrapper/Plotly.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "statics",
    "NAME",
    "VERSION",
    "URL",
    "construct",
    "__data",
    "__layout",
    "properties",
    "libReady",
    "nullable",
    "init",
    "check",
    "events",
    "members",
    "__plotId",
    "plotlyPath",
    "dynLoader",
    "util",
    "DynamicScriptLoader",
    "addListenerOnce",
    "e",
    "console",
    "log",
    "setLibReady",
    "fireDataEvent",
    "addListener",
    "data",
    "getData",
    "script",
    "start",
    "createEmptyPlot",
    "id",
    "margin",
    "bigFont",
    "qxapp",
    "ui",
    "basic",
    "Label",
    "getFont",
    "smallFont",
    "titlefont",
    "color",
    "size",
    "getSize",
    "family",
    "getFamily",
    "font",
    "l",
    "r",
    "t",
    "b",
    "pad",
    "Plotly",
    "newPlot",
    "resize",
    "d3",
    "gd3",
    "select",
    "gd",
    "node",
    "Plots",
    "setData",
    "ids",
    "labels",
    "values",
    "tooltips",
    "title",
    "text",
    "textinfo",
    "hoverinfo",
    "showlegend",
    "type",
    "react",
    "wrapper"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/* global Plotly */\n\n/**\n * @asset(plotly/plotly.min.js)\n * @ignore(Plotly)\n */\n\n/**\n * A qooxdoo wrapper for\n * <a href='https://github.com/plotly/plotly.js' target='_blank'>Plotly</a>\n */\n\nqx.Class.define(\"qxapp.wrapper.Plotly\", {\n  extend: qx.core.Object,\n\n  statics: {\n    NAME: \"plotly\",\n    VERSION: \"1.49.1\",\n    URL: \"https://github.com/plotly/plotly.js\"\n  },\n\n  construct: function() {\n    this.base(arguments);\n\n    this.__data = [];\n    this.__layout = {};\n  },\n\n  properties: {\n    libReady: {\n      nullable: false,\n      init: false,\n      check: \"Boolean\"\n    }\n  },\n\n  events: {\n    \"plotlyLibReady\": \"qx.event.type.Data\"\n  },\n\n  members: {\n    __layout: null,\n    __data: null,\n    __plotId: null,\n\n    init: function() {\n      // initialize the script loading\n      let plotlyPath = \"plotly/plotly.min.js\";\n      let dynLoader = new qx.util.DynamicScriptLoader([\n        plotlyPath\n      ]);\n\n      dynLoader.addListenerOnce(\"ready\", e => {\n        console.log(plotlyPath + \" loaded\");\n        this.setLibReady(true);\n        this.fireDataEvent(\"plotlyLibReady\", true);\n      }, this);\n\n      dynLoader.addListener(\"failed\", e => {\n        let data = e.getData();\n        console.log(\"failed to load \" + data.script);\n        this.fireDataEvent(\"plotlyLibReady\", false);\n      }, this);\n\n      dynLoader.start();\n    },\n\n    createEmptyPlot: function(id) {\n      this.__plotId = id;\n      const margin = 25;\n      const bigFont = qxapp.ui.basic.Label.getFont(14);\n      const smallFont = qxapp.ui.basic.Label.getFont(12);\n      this.__layout = {\n        titlefont: {\n          color: \"#bfbfbf\",\n          size: bigFont.getSize(),\n          family: bigFont.getFamily()\n        },\n        font: {\n          color: \"#bfbfbf\",\n          size: smallFont.getSize(),\n          family: smallFont.getFamily()\n        },\n        margin: {\n          l: margin,\n          r: margin,\n          t: margin,\n          b: margin,\n          pad: 0\n        },\n        \"plot_bgcolor\": \"rgba(0, 0, 0, 0)\",\n        \"paper_bgcolor\": \"rgba(0, 0, 0, 0)\"\n      };\n      this.__data = [];\n      Plotly.newPlot(this.__plotId, this.__data, this.__layout);\n    },\n\n    resize: function() {\n      let d3 = Plotly.d3;\n      var gd3 = d3.select(\"div[id=\"+this.__plotId+\"]\");\n      let gd = gd3.node();\n      Plotly.Plots.resize(gd);\n    },\n\n    setData: function(ids, labels, values, tooltips, title) {\n      this.__data = [{\n        ids: ids,\n        labels: labels,\n        values: values,\n        text: tooltips,\n        textinfo: \"label+percent\",\n        hoverinfo: \"text\",\n        showlegend: false,\n        type: \"pie\"\n      }];\n      this.__layout[\"title\"] = title;\n\n      Plotly.react(this.__plotId, this.__data, this.__layout);\n    }\n  }\n});\n"
  ]
}