{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/wrapper/WebSocket.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "statics",
    "NAME",
    "VERSION",
    "URL",
    "events",
    "properties",
    "libReady",
    "nullable",
    "init",
    "check",
    "url",
    "port",
    "namespace",
    "socket",
    "reconnect",
    "connectTimeout",
    "reconnectionDelay",
    "maxReconnectionAttemps",
    "construct",
    "undefined",
    "setNamespace",
    "__name",
    "members",
    "connect",
    "socketIOPath",
    "dynLoader",
    "util",
    "DynamicScriptLoader",
    "addListenerOnce",
    "e",
    "console",
    "log",
    "setLibReady",
    "getSocket",
    "disconnect",
    "dir",
    "getUrl",
    "getPort",
    "mySocket",
    "io",
    "getReconnect",
    "getConnectTimeout",
    "getReconnectionDelay",
    "getMaxReconnectionAttemps",
    "setSocket",
    "forEach",
    "event",
    "on",
    "ev",
    "fireDataEvent",
    "start",
    "removeAllListeners",
    "emit",
    "name",
    "jsonObject",
    "fn",
    "that",
    "push",
    "lang",
    "Function",
    "bind",
    "slotExists",
    "i",
    "length",
    "removeSlot",
    "index",
    "indexOf",
    "splice",
    "destruct",
    "removeAllBindings",
    "qxapp",
    "wrapper",
    "WebSocket"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/* global io */\n\n/**\n * @asset(socketio/socket.io.js)\n * @ignore(io)\n */\n\n/**\n * A qooxdoo wrapper for\n * <a href='https://github.com/socketio/socket.io' target='_blank'>WebSocket</a>\n */\n\nqx.Class.define(\"qxapp.wrapper.WebSocket\", {\n  extend: qx.core.Object,\n\n  type : \"singleton\",\n\n  statics: {\n    NAME: \"socket.io\",\n    VERSION: \"2.2.0\",\n    URL: \"https://github.com/socketio/socket.io\"\n  },\n\n  // Socket.io events\n  events: {\n    /** socket.io connect event */\n    \"connect\": \"qx.event.type.Event\",\n    /** socket.io connecting event */\n    \"connecting\": \"qx.event.type.Data\",\n    /** socket.io connect_failed event */\n    \"connect_failed\": \"qx.event.type.Event\",\n    /** socket.io message event */\n    \"message\": \"qx.event.type.Data\",\n    /** socket.io close event */\n    \"close\": \"qx.event.type.Data\",\n    /** socket.io disconnect event */\n    \"disconnect\": \"qx.event.type.Event\",\n    /** socket.io reconnect event */\n    \"reconnect\": \"qx.event.type.Data\",\n    /** socket.io reconnecting event */\n    \"reconnecting\": \"qx.event.type.Data\",\n    /** socket.io reconnect_failed event */\n    \"reconnect_failed\": \"qx.event.type.Event\",\n    /** socket.io error event */\n    \"error\": \"qx.event.type.Data\"\n  },\n\n  properties: {\n    libReady: {\n      nullable: false,\n      init: false,\n      check: \"Boolean\"\n    },\n\n    /**\n     * The url used to connect to socket.io\n     */\n    url: {\n      nullable: false,\n      init: \"/\",\n      check: \"String\"\n    },\n    /** The port used to connect */\n    port: {\n      nullable: true,\n      init: null,\n      check: \"Number\"\n    },\n    /** The namespace (socket.io namespace), can be empty */\n    namespace: {\n      nullable: true,\n      init: \"\",\n      check: \"String\"\n    },\n    /** The socket (socket.io), can be null */\n    socket: {\n      nullable: true,\n      init: null,\n      check: \"Object\"\n    },\n    /** Parameter for socket.io indicating if we should reconnect or not */\n    reconnect: {\n      nullable: true,\n      init: true,\n      check: \"Boolean\"\n    },\n    connectTimeout: {\n      nullable: true,\n      init: 10000,\n      check: \"Number\"\n    },\n    /** Reconnection delay for socket.io. */\n    reconnectionDelay: {\n      nullable: false,\n      init: 500,\n      check: \"Number\"\n    },\n    /** Max reconnection attemps */\n    maxReconnectionAttemps: {\n      nullable: false,\n      init: 1000,\n      check: \"Number\"\n    }\n  },\n\n  /** Constructor\n   * @param {string} [namespace] The namespace to connect on\n   * @returns {void}\n   */\n  construct(namespace) {\n    // this.base();\n    if (namespace === undefined) {\n      namespace = \"app\";\n    }\n    if (namespace) {\n      this.setNamespace(namespace);\n    }\n    this.__name = [];\n  },\n\n  members: {\n    // The name store an array of events\n    __name: null,\n\n    /**\n     * Trying to using socket.io to connect and plug every event from socket.io to qooxdoo one\n     * @returns {void}\n     */\n    connect: function() {\n      // initialize the script loading\n      let socketIOPath = \"socketio/socket.io.js\";\n      let dynLoader = new qx.util.DynamicScriptLoader([\n        socketIOPath\n      ]);\n\n      dynLoader.addListenerOnce(\"ready\", e => {\n        console.log(socketIOPath + \" loaded\");\n        this.setLibReady(true);\n\n\n        if (this.getSocket() !== null) {\n          this.disconnect();\n        }\n\n        let dir = this.getUrl();\n        if (this.getPort() > 0) {\n          dir += \":\" + this.getPort();\n        }\n        console.log(\"socket in\", dir);\n        let mySocket = io.connect(dir, {\n          \"reconnect\": this.getReconnect(),\n          \"connect timeout\": this.getConnectTimeout(),\n          \"reconnection delay\": this.getReconnectionDelay(),\n          \"max reconnection attempts\": this.getMaxReconnectionAttemps(),\n          \"force new connection\": true\n        });\n        this.setSocket(mySocket);\n\n        [\n          \"connecting\",\n          \"message\",\n          \"close\",\n          \"reconnect\",\n          \"reconnecting\",\n          \"error\"\n        ].forEach(event => {\n          this.on(event, ev => {\n            this.fireDataEvent(event, ev);\n          }, this);\n        }, this);\n\n        [\n          \"connect\",\n          \"connect_failed\",\n          \"disconnect\",\n          \"reconnect_failed\"\n        ].forEach(event => {\n          this.on(event, () => {\n            this.fireDataEvent(event);\n          }, this);\n        }, this);\n      }, this);\n\n      dynLoader.start();\n    },\n\n    disconnect: function() {\n      if (this.getSocket() !== null) {\n        this.getSocket().removeAllListeners();\n        this.getSocket().disconnect();\n      }\n    },\n\n    /**\n     * Emit an event using socket.io\n     *\n     * @param {string} name The event name to send to Node.JS\n     * @param {object} jsonObject The JSON object to send to socket.io as parameters\n     * @returns {void}\n     */\n    emit: function(name, jsonObject) {\n      console.log(\"emit\", name);\n      this.getSocket().emit(name, jsonObject);\n    },\n\n    /**\n     * Connect and event from socket.io like qooxdoo event\n     *\n     * @param {string} name The event name to watch\n     * @param {function} fn The function wich will catch event response\n     * @param {mixed} that A link to this\n     * @returns {void}\n     */\n    on: function(name, fn, that) {\n      this.__name.push(name);\n      if (typeof (that) !== \"undefined\" && that !== null) {\n        this.getSocket().on(name, qx.lang.Function.bind(fn, that));\n      } else {\n        this.getSocket().on(name, fn);\n      }\n    },\n\n    slotExists: function(name) {\n      for (let i = 0; i < this.__name.length; ++i) {\n        if (this.__name[i] === name) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    removeSlot: function(name) {\n      var index = this.__name.indexOf(name);\n      if (index > -1) {\n        this.getSocket().removeAllListeners(this.__name[index]);\n        this.__name.splice(index, 1);\n      }\n    }\n  },\n\n  /**\n   * Destructor\n   * @returns {void}\n   */\n  destruct() {\n    if (this.getSocket() !== null) {\n      // Deleting listeners\n      if (this.__name !== null && this.__name.length >= 1) {\n        for (let i = 0; i < this.__name.length; ++i) {\n          this.getSocket().removeAllListeners(this.__name[i]);\n        }\n      }\n      this.__name = null;\n\n      this.removeAllBindings();\n\n      // Disconnecting socket.io\n      try {\n        this.getSocket().socket.disconnect();\n      } catch (e) {}\n\n      try {\n        this.getSocket().disconnect();\n      } catch (e) {}\n\n      this.getSocket().removeAllListeners(\"connect\");\n      this.getSocket().removeAllListeners(\"connecting\");\n      this.getSocket().removeAllListeners(\"connect_failed\");\n      this.getSocket().removeAllListeners(\"message\");\n      this.getSocket().removeAllListeners(\"close\");\n      this.getSocket().removeAllListeners(\"disconnect\");\n      this.getSocket().removeAllListeners(\"reconnect\");\n      this.getSocket().removeAllListeners(\"reconnecting\");\n      this.getSocket().removeAllListeners(\"reconnect_failed\");\n      this.getSocket().removeAllListeners(\"error\");\n    }\n  }\n});\n"
  ]
}