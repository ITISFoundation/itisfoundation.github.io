{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/wrapper/Gridster.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "statics",
    "NAME",
    "VERSION",
    "URL",
    "buildHeader",
    "cellOutput",
    "html",
    "getTitle",
    "buildContent",
    "getOutput",
    "buildHtmlCode",
    "buildHtmlCodeInList",
    "construct",
    "addListenerOnce",
    "__init",
    "properties",
    "libReady",
    "nullable",
    "init",
    "check",
    "atomWidth",
    "atomHeight",
    "events",
    "members",
    "__gridster",
    "jQueryPath",
    "extras",
    "gridsterPath",
    "gridsterCss",
    "gridsterDemoCss",
    "gridsterOsparcCss",
    "gridsterCssUri",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "gridsterDemoCssUri",
    "gridsterOsparcCssUri",
    "module",
    "Css",
    "includeStylesheet",
    "dynLoader",
    "DynamicScriptLoader",
    "e",
    "console",
    "log",
    "setLibReady",
    "__createEmptyLayout",
    "fireDataEvent",
    "addListener",
    "data",
    "getData",
    "error",
    "script",
    "start",
    "gridsterPlaceholder",
    "dom",
    "Element",
    "create",
    "bom",
    "element",
    "Attribute",
    "set",
    "Style",
    "domEl",
    "getContentElement",
    "getDomElement",
    "hasChildNodes",
    "removeChild",
    "lastChild",
    "appendChild",
    "cellsList",
    "maxSize",
    "__getMaxSize",
    "nColsMax",
    "nRowsMax",
    "$",
    "gridster",
    "getAtomWidth",
    "getAtomHeight",
    "Math",
    "floor",
    "getBounds",
    "width",
    "height",
    "addWidget",
    "jQueryElement",
    "add_widget",
    "htmlElement",
    "get",
    "addEventListener",
    "getHandler",
    "getUuid",
    "rebuildWidget",
    "innerHTML",
    "qxapp",
    "wrapper",
    "Gridster"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2019 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * @asset(gridsterjs/*)\n */\n\n/* global $ */\n\n/**\n * A qooxdoo wrapper for\n * <a href='https://github.com/dsmorse/gridster.js' target='_blank'>gridsterjs</a>\n */\n\nqx.Class.define(\"qxapp.wrapper.Gridster\", {\n  extend: qx.ui.core.Widget,\n\n  statics: {\n    NAME: \"gridster\",\n    VERSION: \"0.7.0\",\n    URL: \"https://github.com/dsmorse/gridster.js\",\n\n    buildHeader: function(cellOutput) {\n      let html = \"<header>\";\n      html += cellOutput.getTitle();\n      html += \"</header>\";\n      return html;\n    },\n\n    buildContent: function(cellOutput) {\n      let html = \"<content>\";\n      html += cellOutput.getOutput();\n      html += \"</content>\";\n      return html;\n    },\n\n    buildHtmlCode: function(cellOutput) {\n      let html = this.buildHeader(cellOutput);\n      html += this.buildContent(cellOutput);\n      return html;\n    },\n\n    buildHtmlCodeInList: function(cellOutput) {\n      let html = \"<li>\";\n      html += this.buildHtmlCode(cellOutput);\n      html += \"</li>\";\n      return html;\n    }\n  },\n\n  construct: function() {\n    this.base(arguments);\n\n    this.addListenerOnce(\"appear\", () => {\n      this.__init();\n    }, this);\n  },\n\n  properties: {\n    libReady: {\n      nullable: false,\n      init: false,\n      check: \"Boolean\"\n    },\n\n    atomWidth: {\n      nullable: false,\n      init: 25,\n      check: \"Number\"\n    },\n\n    atomHeight: {\n      nullable: false,\n      init: 25,\n      check: \"Number\"\n    }\n  },\n\n  events: {\n    \"gridsterLibReady\": \"qx.event.type.Data\",\n    \"widgetSelected\": \"qx.event.type.Data\"\n  },\n\n  members: {\n    __gridster: null,\n\n    __init: function() {\n      // initialize the script loading\n      const jQueryPath = \"qxapp/gridsterjs/jquery-3.3.1.min.js\";\n      const extras = false;\n      const gridsterPath = extras ? \"qxapp/gridsterjs/jquery.gridster.with-extras-0.7.0.min.js\" : \"qxapp/gridsterjs/jquery.gridster-0.7.0.min.js\";\n      const gridsterCss = \"qxapp/gridsterjs/jquery.gridster-0.7.0.min.css\";\n      const gridsterDemoCss = \"qxapp/gridsterjs/jquery.gridster.demo.css\";\n      const gridsterOsparcCss = \"qxapp/gridsterjs/jquery.gridster.osparc.css\";\n      const gridsterCssUri = qx.util.ResourceManager.getInstance().toUri(gridsterCss);\n      const gridsterDemoCssUri = qx.util.ResourceManager.getInstance().toUri(gridsterDemoCss);\n      const gridsterOsparcCssUri = qx.util.ResourceManager.getInstance().toUri(gridsterOsparcCss);\n      qx.module.Css.includeStylesheet(gridsterCssUri);\n      qx.module.Css.includeStylesheet(gridsterDemoCssUri);\n      qx.module.Css.includeStylesheet(gridsterOsparcCssUri);\n      let dynLoader = new qx.util.DynamicScriptLoader([\n        jQueryPath,\n        gridsterPath\n      ]);\n\n      dynLoader.addListenerOnce(\"ready\", e => {\n        console.log(gridsterPath + \" loaded\");\n        this.setLibReady(true);\n        this.__createEmptyLayout();\n        this.fireDataEvent(\"gridsterLibReady\", true);\n      }, this);\n\n      dynLoader.addListener(\"failed\", e => {\n        let data = e.getData();\n        console.error(\"failed to load \" + data.script);\n        this.fireDataEvent(\"gridsterLibReady\", false);\n      }, this);\n\n      dynLoader.start();\n    },\n\n    __createEmptyLayout: function() {\n      let gridsterPlaceholder = qx.dom.Element.create(\"div\");\n      qx.bom.element.Attribute.set(gridsterPlaceholder, \"id\", \"gridster\");\n      qx.bom.element.Attribute.set(gridsterPlaceholder, \"class\", \"gridster\");\n      qx.bom.element.Style.set(gridsterPlaceholder, \"width\", \"100%\");\n      qx.bom.element.Style.set(gridsterPlaceholder, \"height\", \"100%\");\n      const domEl = this.getContentElement().getDomElement();\n      while (domEl.hasChildNodes()) {\n        domEl.removeChild(domEl.lastChild);\n      }\n      domEl.appendChild(gridsterPlaceholder);\n\n      let cellsList = qx.dom.Element.create(\"ul\");\n      gridsterPlaceholder.appendChild(cellsList);\n\n      const maxSize = this.__getMaxSize();\n      const nColsMax = maxSize.nColsMax;\n      const nRowsMax = maxSize.nRowsMax;\n      this.__gridster = $(\".gridster ul\").gridster({\n        \"widget_base_dimensions\": [this.getAtomWidth(), this.getAtomHeight()],\n        \"widget_margins\": [5, 5],\n        \"max_cols\": nColsMax,\n        \"max_rows\": nRowsMax,\n        // \"helper\": \"clone\",\n        \"resize\": {\n          \"enabled\": true,\n          \"max_size\": [nColsMax, nRowsMax]\n        },\n        \"draggable\": {\n          \"handle\": \"header\"\n        }\n      })\n        .data(\"gridster\");\n    },\n\n    __getMaxSize: function() {\n      return {\n        nColsMax: Math.floor(this.getBounds().width/this.getAtomWidth()),\n        nRowsMax: Math.floor(2*this.getBounds().height/this.getAtomHeight())\n      };\n    },\n\n    addWidget: function(cellOutput) {\n      const html = this.self().buildHtmlCodeInList(cellOutput);\n      let jQueryElement = this.__gridster.add_widget(html, 400/this.getAtomWidth(), 300/this.getAtomHeight());\n      if (jQueryElement) {\n        let htmlElement = jQueryElement.get(0);\n        htmlElement.addEventListener(\"dblclick\", e => {\n          this.fireDataEvent(\"widgetSelected\", cellOutput.getHandler().getUuid());\n        }, this);\n        return htmlElement;\n      }\n      return null;\n    },\n\n    rebuildWidget: function(cellOutput, htmlElement) {\n      let html = this.self().buildHtmlCode(cellOutput);\n      html += \"<span class='gs-resize-handle gs-resize-handle-both'></span>\";\n      htmlElement.innerHTML = html;\n    }\n  }\n});\n"
  ]
}