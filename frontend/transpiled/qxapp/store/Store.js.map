{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/store/Store.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__reloadingServices",
    "__servicesCached",
    "events",
    "members",
    "__matchPortType",
    "typeA",
    "typeB",
    "mtA",
    "qxapp",
    "data",
    "MimeType",
    "getMimeType",
    "mtB",
    "match",
    "areNodesCompatible",
    "topLevelPort1",
    "topLevelPort2",
    "console",
    "log",
    "isInput",
    "arePortsCompatible",
    "port1",
    "port2",
    "getNodeMetaData",
    "key",
    "version",
    "metaData",
    "utils",
    "Services",
    "getFromObject",
    "Utils",
    "deepCloneObject",
    "outputs",
    "allServices",
    "getFakeServices",
    "concat",
    "getBuiltInServices",
    "getFromArray",
    "builtInServices",
    "name",
    "description",
    "authors",
    "email",
    "contact",
    "inputs",
    "outFile",
    "displayOrder",
    "label",
    "getBuiltInServices2",
    "dedicatedWidget",
    "innerNodes",
    "inputNodes",
    "outputNode",
    "inputsDefault",
    "defaultNeuromanModels",
    "inModel",
    "modeler",
    "defaultStimulationSelectivity",
    "mapper",
    "maps",
    "leaf",
    "stimulationFactor",
    "materialDB",
    "frequency",
    "defaultValue",
    "setupSetting",
    "defaultLFMaterials",
    "updateDispersive",
    "branch",
    "materialSetting",
    "defaultLFBoundaries",
    "boundarySetting",
    "defaultLFSensors",
    "sensorSetting",
    "sensorSettingAPI",
    "homogeneous",
    "resolution",
    "gridSetting",
    "voxelEngine",
    "maximumFraction",
    "congruentSubgrid",
    "voxelSetting",
    "parallelization",
    "processes",
    "priority",
    "convergence",
    "additionalOptions",
    "inFile",
    "temperature",
    "titration",
    "actionPotential",
    "threshold",
    "defaultNeurons",
    "neuronsSetting",
    "defaultNeuronSources",
    "lfSimulation",
    "sourceSetting",
    "defaultNeuronPointProcesses",
    "pointProcesses",
    "defaultNeuronNetworkConnection",
    "networkConnectionSetting",
    "defaultNeuronSensors",
    "threads",
    "duration",
    "timeStep",
    "sectionName",
    "dev",
    "fake",
    "Data",
    "getServices",
    "reload",
    "keys",
    "length",
    "req",
    "io",
    "request",
    "ApiRequest",
    "addListener",
    "e",
    "requ",
    "getTarget",
    "getResponse",
    "filteredServices",
    "filterOutUnavailableGroups",
    "services",
    "convertArrayToObject",
    "__servicesToCache",
    "error",
    "send",
    "fromServer",
    "__addCategoryToServices",
    "assign",
    "fireDataEvent",
    "cats",
    "serviceKey",
    "prototype",
    "hasOwnProperty",
    "call",
    "service",
    "serv",
    "getItemList",
    "nodeKey",
    "portKey",
    "getItem",
    "nodeInstanceUUID",
    "itemUuid",
    "stopInteractiveService",
    "nodeId",
    "url",
    "query",
    "encodeURIComponent",
    "store",
    "Store"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;AAcAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mBAAhB,EAAqC;AACnCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADmB;AAGnCC,IAAAA,IAAI,EAAG,WAH4B;AAKnCC,IAAAA,SAAS,EAAE,qBAAW;AACpB,WAAKC,mBAAL,GAA2B,KAA3B;AACA,WAAKC,gBAAL,GAAwB,EAAxB;AACD,KARkC;AAUnCC,IAAAA,MAAM,EAAE;AACN,4BAAsB,oBADhB;AAEN,uBAAiB;AAFX,KAV2B;AAenCC,IAAAA,OAAO,EAAE;AACPH,MAAAA,mBAAmB,EAAE,IADd;AAEPC,MAAAA,gBAAgB,EAAE,IAFX;AAIPG,MAAAA,eAAe,EAAE,yBAASC,KAAT,EAAgBC,KAAhB,EAAuB;AACtC,YAAID,KAAK,KAAKC,KAAd,EAAqB;AACnB,iBAAO,IAAP;AACD;;AACD,YAAIC,GAAG,GAAGC,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,WAApB,CAAgCN,KAAhC,CAAV;AACA,YAAIO,GAAG,GAAGJ,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,WAApB,CAAgCL,KAAhC,CAAV;AACA,eAAOC,GAAG,IAAIK,GAAP,IACL,IAAIJ,KAAK,CAACC,IAAN,CAAWC,QAAf,CAAwBH,GAAxB,EAA6BM,KAA7B,CAAmC,IAAIL,KAAK,CAACC,IAAN,CAAWC,QAAf,CAAwBE,GAAxB,CAAnC,CADF;AAED,OAZM;AAcPE,MAAAA,kBAAkB,EAAE,4BAASC,aAAT,EAAwBC,aAAxB,EAAuC;AACzDC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,aAAlC,EAAiDC,aAAjD;AACA,eAAOD,aAAa,CAACI,OAAd,KAA0BH,aAAa,CAACG,OAA/C;AACD,OAjBM;AAmBPC,MAAAA,kBAAkB,EAAE,4BAASC,KAAT,EAAgBC,KAAhB,EAAuB;AACzC,eAAOD,KAAK,CAACvB,IAAN,IAAcwB,KAAK,CAACxB,IAApB,IAA4B,KAAKM,eAAL,CAAqBiB,KAAK,CAACvB,IAA3B,EAAiCwB,KAAK,CAACxB,IAAvC,CAAnC;AACD,OArBM;AAuBPyB,MAAAA,eAAe,EAAE,yBAASC,GAAT,EAAcC,OAAd,EAAuB;AACtC,YAAIC,QAAQ,GAAG,IAAf;;AACA,YAAIF,GAAG,IAAIC,OAAX,EAAoB;AAClBC,UAAAA,QAAQ,GAAGlB,KAAK,CAACmB,KAAN,CAAYC,QAAZ,CAAqBC,aAArB,CAAmC,KAAK5B,gBAAxC,EAA0DuB,GAA1D,EAA+DC,OAA/D,CAAX;;AACA,cAAIC,QAAJ,EAAc;AACZA,YAAAA,QAAQ,GAAGlB,KAAK,CAACmB,KAAN,CAAYG,KAAZ,CAAkBC,eAAlB,CAAkCL,QAAlC,CAAX;;AACA,gBAAIA,QAAQ,CAACF,GAAT,KAAiB,4CAArB,EAAmE;AACjEE,cAAAA,QAAQ,CAACM,OAAT,CAAiB,SAAjB,IAA8B;AAC5B,yBAAS,SADmB;AAE5B,gCAAe,CAFa;AAG5B,+BAAe,SAHa;AAI5B,wBAAQ;AAJoB,eAA9B;AAMA,qBAAON,QAAQ,CAACM,OAAT,CAAiB,UAAjB,CAAP;AACD;;AACD,mBAAON,QAAP;AACD;;AACD,cAAMO,WAAW,GAAG,KAAKC,eAAL,GAAuBC,MAAvB,CAA8B,KAAKC,kBAAL,EAA9B,CAApB;AACAV,UAAAA,QAAQ,GAAGlB,KAAK,CAACmB,KAAN,CAAYC,QAAZ,CAAqBS,YAArB,CAAkCJ,WAAlC,EAA+CT,GAA/C,EAAoDC,OAApD,CAAX;;AACA,cAAIC,QAAJ,EAAc;AACZ,mBAAOlB,KAAK,CAACmB,KAAN,CAAYG,KAAZ,CAAkBC,eAAlB,CAAkCL,QAAlC,CAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD,OA/CM;AAiDPU,MAAAA,kBAAkB,EAAE,8BAAW;AAC7B,YAAME,eAAe,GAAG,CAAC;AACvBd,UAAAA,GAAG,EAAE,uCADkB;AAEvBC,UAAAA,OAAO,EAAE,OAFc;AAGvB3B,UAAAA,IAAI,EAAE,SAHiB;AAIvByC,UAAAA,IAAI,EAAE,aAJiB;AAKvBC,UAAAA,WAAW,EAAE,aALU;AAMvBC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANc;AAUvBC,UAAAA,OAAO,EAAE,mBAVc;AAWvBC,UAAAA,MAAM,EAAE,EAXe;AAYvBZ,UAAAA,OAAO,EAAE;AACPa,YAAAA,OAAO,EAAE;AACPC,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,MAFA;AAGPP,cAAAA,WAAW,EAAE,aAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC;AADF;AAZc,SAAD,CAAxB;AAqBA,eAAOwC,eAAP;AACD,OAxEM;AA0EPU,MAAAA,mBAAmB,EAAE,+BAAW;AAC9B,YAAMV,eAAe,GAAG,CAAC;AACvBd,UAAAA,GAAG,EAAE,uCADkB;AAEvBC,UAAAA,OAAO,EAAE,OAFc;AAGvB3B,UAAAA,IAAI,EAAE,OAHiB;AAIvByC,UAAAA,IAAI,EAAE,gBAJiB;AAKvBC,UAAAA,WAAW,EAAE,+CALU;AAMvBC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANc;AAUvBC,UAAAA,OAAO,EAAE;AAVc,SAAD,EAWrB;AACDnB,UAAAA,GAAG,EAAE,sCADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,OAHL;AAIDmD,UAAAA,eAAe,EAAE,IAJhB;AAKDV,UAAAA,IAAI,EAAE,iBALL;AAMDC,UAAAA,WAAW,EAAE,iBANZ;AAODC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CAPR;AAWDC,UAAAA,OAAO,EAAE,mBAXR;AAYDC,UAAAA,MAAM,EAAE;AACN,uBAAW;AACT,uBAAS,SADA;AAET,8BAAgB,CAFP;AAGT,6BAAe,SAHN;AAIT,sBAAQ;AAJC,aADL;AAON,uBAAW;AACT,uBAAS,SADA;AAET,8BAAgB,CAFP;AAGT,6BAAe,SAHN;AAIT,sBAAQ;AAJC,aAPL;AAaN,uBAAW;AACT,uBAAS,SADA;AAET,8BAAgB,CAFP;AAGT,6BAAe,SAHN;AAIT,sBAAQ;AAJC,aAbL;AAmBN,uBAAW;AACT,uBAAS,SADA;AAET,8BAAgB,CAFP;AAGT,6BAAe,SAHN;AAIT,sBAAQ;AAJC,aAnBL;AAyBN,uBAAW;AACT,uBAAS,SADA;AAET,8BAAgB,CAFP;AAGT,6BAAe,SAHN;AAIT,sBAAQ;AAJC;AAzBL,WAZP;AA4CDZ,UAAAA,OAAO,EAAE,EA5CR;AA6CDkB,UAAAA,UAAU,EAAE;AACV,0BAAc;AACZ1B,cAAAA,GAAG,EAAE,qCADO;AAEZC,cAAAA,OAAO,EAAE,OAFG;AAGZ0B,cAAAA,UAAU,EAAE,EAHA;AAIZC,cAAAA,UAAU,EAAE;AAJA;AADJ;AA7CX,SAXqB,EAgErB;AACD5B,UAAAA,GAAG,EAAE,oDADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,SAHL;AAIDyC,UAAAA,IAAI,EAAE,UAJL;AAKDC,UAAAA,WAAW,EAAE,UALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACbC,YAAAA,qBAAqB,EAAE;AACrBR,cAAAA,YAAY,EAAE,CADO;AAErBC,cAAAA,KAAK,EAAE,iBAFc;AAGrBP,cAAAA,WAAW,EAAE,iBAHQ;AAIrB1C,cAAAA,IAAI,EAAE;AAJe;AADV,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNW,YAAAA,OAAO,EAAE;AACPT,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,aAFA;AAGPP,cAAAA,WAAW,EAAE,oBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC;AADH,WAnBP;AA2BDkC,UAAAA,OAAO,EAAE;AACPwB,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,mBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC;AADF;AA3BR,SAhEqB,EAmGrB;AACD0B,UAAAA,GAAG,EAAE,kEADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,mCAJL;AAKDC,UAAAA,WAAW,EAAE,kCALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACbI,YAAAA,6BAA6B,EAAE;AAC7BX,cAAAA,YAAY,EAAE,CADe;AAE7BC,cAAAA,KAAK,EAAE,WAFsB;AAG7BP,cAAAA,WAAW,EAAE,WAHgB;AAI7B1C,cAAAA,IAAI,EAAE;AAJuB;AADlB,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAON4D,YAAAA,MAAM,EAAE;AACNZ,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,WAFD;AAGNP,cAAAA,WAAW,EAAE,oCAHP;AAIN1C,cAAAA,IAAI,EAAE,QAJA;AAKN6D,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AALA;AAPF,WAnBP;AAoCD5B,UAAAA,OAAO,EAAE;AACP6B,YAAAA,iBAAiB,EAAE;AACjBf,cAAAA,YAAY,EAAE,CADG;AAEjBC,cAAAA,KAAK,EAAE,oBAFU;AAGjBP,cAAAA,WAAW,EAAE,oBAHI;AAIjB1C,cAAAA,IAAI,EAAE;AAJW;AADZ;AApCR,SAnGqB,EA+IrB;AACD0B,UAAAA,GAAG,EAAE,mDADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,SAHL;AAIDyC,UAAAA,IAAI,EAAE,SAJL;AAKDC,UAAAA,WAAW,EAAE,SALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE,EAXP;AAYDZ,UAAAA,OAAO,EAAE;AACPwB,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,mBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC;AADF;AAZR,SA/IqB,EAmKrB;AACD0B,UAAAA,GAAG,EAAE,sDADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,YAJL;AAKDC,UAAAA,WAAW,EAAE,mBALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE,EAXP;AAYDZ,UAAAA,OAAO,EAAE;AACP8B,YAAAA,UAAU,EAAE;AACVhB,cAAAA,YAAY,EAAE,CADJ;AAEVC,cAAAA,KAAK,EAAE,YAFG;AAGVP,cAAAA,WAAW,EAAE,sBAHH;AAIV1C,cAAAA,IAAI,EAAE;AAJI;AADL;AAZR,SAnKqB,EAuLrB;AACD0B,UAAAA,GAAG,EAAE,0DADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,WAHL;AAIDyC,UAAAA,IAAI,EAAE,cAJL;AAKDC,UAAAA,WAAW,EAAE,cALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAONgE,YAAAA,UAAU,EAAE;AACVhB,cAAAA,YAAY,EAAE,CADJ;AAEVC,cAAAA,KAAK,EAAE,YAFG;AAGVP,cAAAA,WAAW,EAAE,0BAHH;AAIV1C,cAAAA,IAAI,EAAE;AAJI;AAPN,WAXP;AAyBDkC,UAAAA,OAAO,EAAE;AACPa,YAAAA,OAAO,EAAE;AACPC,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,MAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC;AADF,WAzBR;AAiCDoD,UAAAA,UAAU,EAAE;AACV,sBAAU;AACR1B,cAAAA,GAAG,EAAE,8DADG;AAERC,cAAAA,OAAO,EAAE,OAFD;AAGR0B,cAAAA,UAAU,EAAE,EAHJ;AAIRC,cAAAA,UAAU,EAAE;AAJJ,aADA;AAOV,sBAAU;AACR5B,cAAAA,GAAG,EAAE,kEADG;AAERC,cAAAA,OAAO,EAAE,OAFD;AAGR0B,cAAAA,UAAU,EAAE,CACV,SADU,EAEV,YAFU,CAHJ;AAORC,cAAAA,UAAU,EAAE;AAPJ,aAPA;AAgBV,sBAAU;AACR5B,cAAAA,GAAG,EAAE,iEADG;AAERC,cAAAA,OAAO,EAAE,OAFD;AAGR0B,cAAAA,UAAU,EAAE,CACV,SADU,CAHJ;AAMRC,cAAAA,UAAU,EAAE;AANJ,aAhBA;AAwBV,sBAAU;AACR5B,cAAAA,GAAG,EAAE,gEADG;AAERC,cAAAA,OAAO,EAAE,OAFD;AAGR0B,cAAAA,UAAU,EAAE,CACV,SADU,CAHJ;AAMRC,cAAAA,UAAU,EAAE;AANJ,aAxBA;AAgCV,sBAAU;AACR5B,cAAAA,GAAG,EAAE,6DADG;AAERC,cAAAA,OAAO,EAAE,OAFD;AAGR0B,cAAAA,UAAU,EAAE,CACV,SADU,CAHJ;AAMRC,cAAAA,UAAU,EAAE;AANJ,aAhCA;AAwCV,sBAAU;AACR5B,cAAAA,GAAG,EAAE,8DADG;AAERC,cAAAA,OAAO,EAAE,OAFD;AAGR0B,cAAAA,UAAU,EAAE,CACV,SADU,CAHJ;AAMRC,cAAAA,UAAU,EAAE;AANJ,aAxCA;AAgDV,sBAAU;AACR5B,cAAAA,GAAG,EAAE,uEADG;AAERC,cAAAA,OAAO,EAAE,OAFD;AAGR0B,cAAAA,UAAU,EAAE,EAHJ;AAIRC,cAAAA,UAAU,EAAE;AAJJ;AAhDA;AAjCX,SAvLqB,EA+QrB;AACD5B,UAAAA,GAAG,EAAE,8DADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,UAJL;AAKDC,UAAAA,WAAW,EAAE,6BALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE;AACNmB,YAAAA,SAAS,EAAE;AACTjB,cAAAA,YAAY,EAAE,CADL;AAETC,cAAAA,KAAK,EAAE,WAFE;AAGTP,cAAAA,WAAW,EAAE,gBAHJ;AAIT1C,cAAAA,IAAI,EAAE,QAJG;AAKTkE,cAAAA,YAAY,EAAE;AALL;AADL,WAXP;AAoBDhC,UAAAA,OAAO,EAAE;AACPiC,YAAAA,YAAY,EAAE;AACZnB,cAAAA,YAAY,EAAE,CADF;AAEZC,cAAAA,KAAK,EAAE,UAFK;AAGZP,cAAAA,WAAW,EAAE,mBAHD;AAIZ1C,cAAAA,IAAI,EAAE;AAJM;AADP;AApBR,SA/QqB,EA2SrB;AACD0B,UAAAA,GAAG,EAAE,kEADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,cAJL;AAKDC,UAAAA,WAAW,EAAE,gCALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACba,YAAAA,kBAAkB,EAAE;AAClBpB,cAAAA,YAAY,EAAE,CADI;AAElBC,cAAAA,KAAK,EAAE,2BAFW;AAGlBP,cAAAA,WAAW,EAAE,2BAHK;AAIlB1C,cAAAA,IAAI,EAAE;AAJY;AADP,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNuB,YAAAA,gBAAgB,EAAE;AAChBrB,cAAAA,YAAY,EAAE,CADE;AAEhBC,cAAAA,KAAK,EAAE,iDAFS;AAGhBP,cAAAA,WAAW,EAAE,iDAHG;AAIhB1C,cAAAA,IAAI,EAAE,SAJU;AAKhBkE,cAAAA,YAAY,EAAE;AALE,aADZ;AAQNR,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aARH;AAcNgE,YAAAA,UAAU,EAAE;AACVhB,cAAAA,YAAY,EAAE,CADJ;AAEVC,cAAAA,KAAK,EAAE,YAFG;AAGVP,cAAAA,WAAW,EAAE,0BAHH;AAIV1C,cAAAA,IAAI,EAAE;AAJI,aAdN;AAoBN4D,YAAAA,MAAM,EAAE;AACNZ,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,mBAFD;AAGNP,cAAAA,WAAW,EAAE,oCAHP;AAIN1C,cAAAA,IAAI,EAAE,QAJA;AAKN6D,cAAAA,IAAI,EAAE;AACJS,gBAAAA,MAAM,EAAE,sDADJ;AAEJR,gBAAAA,IAAI,EAAE;AAFF,eALA;AASNI,cAAAA,YAAY,EAAE,CAAC;AACb,4BAAY,CACV,YADU;AADC,eAAD;AATR;AApBF,WAnBP;AAuDDhC,UAAAA,OAAO,EAAE;AACPqC,YAAAA,eAAe,EAAE;AACfvB,cAAAA,YAAY,EAAE,CADC;AAEfC,cAAAA,KAAK,EAAE,kBAFQ;AAGfP,cAAAA,WAAW,EAAE,mBAHE;AAIf1C,cAAAA,IAAI,EAAE;AAJS;AADV;AAvDR,SA3SqB,EA0WrB;AACD0B,UAAAA,GAAG,EAAE,iEADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,wBAJL;AAKDC,UAAAA,WAAW,EAAE,kCALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACbiB,YAAAA,mBAAmB,EAAE;AACnBxB,cAAAA,YAAY,EAAE,CADK;AAEnBC,cAAAA,KAAK,EAAE,2BAFY;AAGnBP,cAAAA,WAAW,EAAE,2BAHM;AAInB1C,cAAAA,IAAI,EAAE;AAJa;AADR,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAON4D,YAAAA,MAAM,EAAE;AACNZ,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,qBAFD;AAGNP,cAAAA,WAAW,EAAE,8CAHP;AAIN1C,cAAAA,IAAI,EAAE,QAJA;AAKN6D,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF,eALA;AAQNI,cAAAA,YAAY,EAAE,CAAC;AACb,gCAAgB,CACd,UADc,EAEd,UAFc,EAGd,UAHc,EAId,UAJc,EAKd,UALc,EAMd,UANc;AADH,eAAD;AARR;AAPF,WAnBP;AA8CDhC,UAAAA,OAAO,EAAE;AACPuC,YAAAA,eAAe,EAAE;AACfzB,cAAAA,YAAY,EAAE,CADC;AAEfC,cAAAA,KAAK,EAAE,oBAFQ;AAGfP,cAAAA,WAAW,EAAE,qBAHE;AAIf1C,cAAAA,IAAI,EAAE;AAJS;AADV;AA9CR,SA1WqB,EAgarB;AACD0B,UAAAA,GAAG,EAAE,gEADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,YAJL;AAKDC,UAAAA,WAAW,EAAE,+BALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACbmB,YAAAA,gBAAgB,EAAE;AAChB1B,cAAAA,YAAY,EAAE,CADE;AAEhBC,cAAAA,KAAK,EAAE,iBAFS;AAGhBP,cAAAA,WAAW,EAAE,iBAHG;AAIhB1C,cAAAA,IAAI,EAAE;AAJU;AADL,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAON4D,YAAAA,MAAM,EAAE;AACNZ,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,iBAFD;AAGNP,cAAAA,WAAW,EAAE,0CAHP;AAIN1C,cAAAA,IAAI,EAAE,QAJA;AAKN6D,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF,eALA;AAQNI,cAAAA,YAAY,EAAE,CAAC;AACb,qCAAqB,CACnB,eADmB;AADR,eAAD;AARR;AAPF,WAnBP;AAyCDhC,UAAAA,OAAO,EAAE;AACPyC,YAAAA,aAAa,EAAE;AACb3B,cAAAA,YAAY,EAAE,CADD;AAEbC,cAAAA,KAAK,EAAE,gBAFM;AAGbP,cAAAA,WAAW,EAAE,iBAHA;AAIb1C,cAAAA,IAAI,EAAE;AAJO,aADR;AAOP4E,YAAAA,gBAAgB,EAAE;AAChB5B,cAAAA,YAAY,EAAE,CADE;AAEhBC,cAAAA,KAAK,EAAE,YAFS;AAGhBP,cAAAA,WAAW,EAAE,YAHG;AAIhB1C,cAAAA,IAAI,EAAE;AAJU;AAPX;AAzCR,SAhaqB,EAudrB;AACD0B,UAAAA,GAAG,EAAE,6DADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,SAJL;AAKDC,UAAAA,WAAW,EAAE,4BALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAON6E,YAAAA,WAAW,EAAE;AACX7B,cAAAA,YAAY,EAAE,CADH;AAEXC,cAAAA,KAAK,EAAE,kBAFI;AAGXP,cAAAA,WAAW,EAAE,kBAHF;AAIX1C,cAAAA,IAAI,EAAE,SAJK;AAKXkE,cAAAA,YAAY,EAAE;AALH,aAPP;AAcNY,YAAAA,UAAU,EAAE;AACV9B,cAAAA,YAAY,EAAE,CADJ;AAEVC,cAAAA,KAAK,EAAE,iBAFG;AAGVP,cAAAA,WAAW,EAAE,kBAHH;AAIV1C,cAAAA,IAAI,EAAE,QAJI;AAKVkE,cAAAA,YAAY,EAAE;AALJ;AAdN,WAXP;AAiCDhC,UAAAA,OAAO,EAAE;AACP6C,YAAAA,WAAW,EAAE;AACX/B,cAAAA,YAAY,EAAE,CADH;AAEXC,cAAAA,KAAK,EAAE,cAFI;AAGXP,cAAAA,WAAW,EAAE,eAHF;AAIX1C,cAAAA,IAAI,EAAE;AAJK;AADN;AAjCR,SAvdqB,EAggBrB;AACD0B,UAAAA,GAAG,EAAE,8DADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,WAJL;AAKDC,UAAAA,WAAW,EAAE,6BALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAONgF,YAAAA,WAAW,EAAE;AACXhC,cAAAA,YAAY,EAAE,CADH;AAEXC,cAAAA,KAAK,EAAE,mBAFI;AAGXP,cAAAA,WAAW,EAAE,mBAHF;AAIX1C,cAAAA,IAAI,EAAE,QAJK;AAKXkE,cAAAA,YAAY,EAAE;AALH,aAPP;AAcNe,YAAAA,eAAe,EAAE;AACfjC,cAAAA,YAAY,EAAE,CADC;AAEfC,cAAAA,KAAK,EAAE,kBAFQ;AAGfP,cAAAA,WAAW,EAAE,kBAHE;AAIf1C,cAAAA,IAAI,EAAE,QAJS;AAKfkE,cAAAA,YAAY,EAAE;AALC,aAdX;AAqBNgB,YAAAA,gBAAgB,EAAE;AAChBlC,cAAAA,YAAY,EAAE,CADE;AAEhBC,cAAAA,KAAK,EAAE,4BAFS;AAGhBP,cAAAA,WAAW,EAAE,4BAHG;AAIhB1C,cAAAA,IAAI,EAAE,SAJU;AAKhBkE,cAAAA,YAAY,EAAE;AALE;AArBZ,WAXP;AAwCDhC,UAAAA,OAAO,EAAE;AACPiD,YAAAA,YAAY,EAAE;AACZnC,cAAAA,YAAY,EAAE,CADF;AAEZC,cAAAA,KAAK,EAAE,eAFK;AAGZP,cAAAA,WAAW,EAAE,gBAHD;AAIZ1C,cAAAA,IAAI,EAAE;AAJM;AADP;AAxCR,SAhgBqB,EAgjBrB;AACD0B,UAAAA,GAAG,EAAE,uEADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,oBAJL;AAKDC,UAAAA,WAAW,EAAE,8BALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE;AACNsC,YAAAA,eAAe,EAAE;AACfpC,cAAAA,YAAY,EAAE,CADC;AAEfC,cAAAA,KAAK,EAAE,0BAFQ;AAGfP,cAAAA,WAAW,EAAE,0BAHE;AAIf1C,cAAAA,IAAI,EAAE,QAJS;AAKfkE,cAAAA,YAAY,EAAE;AALC,aADX;AAQNmB,YAAAA,SAAS,EAAE;AACTrC,cAAAA,YAAY,EAAE,CADL;AAETC,cAAAA,KAAK,EAAE,qBAFE;AAGTP,cAAAA,WAAW,EAAE,qBAHJ;AAIT1C,cAAAA,IAAI,EAAE,QAJG;AAKTkE,cAAAA,YAAY,EAAE;AALL,aARL;AAeNoB,YAAAA,QAAQ,EAAE;AACRtC,cAAAA,YAAY,EAAE,CADN;AAERC,cAAAA,KAAK,EAAE,mBAFC;AAGRP,cAAAA,WAAW,EAAE,mBAHL;AAIR1C,cAAAA,IAAI,EAAE,QAJE;AAKRkE,cAAAA,YAAY,EAAE;AALN,aAfJ;AAsBNqB,YAAAA,WAAW,EAAE;AACXvC,cAAAA,YAAY,EAAE,CADH;AAEXC,cAAAA,KAAK,EAAE,uBAFI;AAGXP,cAAAA,WAAW,EAAE,uBAHF;AAIX1C,cAAAA,IAAI,EAAE,QAJK;AAKXkE,cAAAA,YAAY,EAAE;AALH,aAtBP;AA6BNsB,YAAAA,iBAAiB,EAAE;AACjBxC,cAAAA,YAAY,EAAE,CADG;AAEjBC,cAAAA,KAAK,EAAE,2BAFU;AAGjBP,cAAAA,WAAW,EAAE,2BAHI;AAIjB1C,cAAAA,IAAI,EAAE,QAJW;AAKjBkE,cAAAA,YAAY,EAAE;AALG;AA7Bb,WAXP;AAgDDhC,UAAAA,OAAO,EAAE;AACPa,YAAAA,OAAO,EAAE;AACPC,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,YAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC;AADF;AAhDR,SAhjBqB,EAwmBrB;AACD0B,UAAAA,GAAG,EAAE,uDADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,WAJL;AAKDC,UAAAA,WAAW,EAAE,WALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE;AACN2C,YAAAA,MAAM,EAAE;AACNzC,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,YAFD;AAGNP,cAAAA,WAAW,EAAE,sBAHP;AAIN1C,cAAAA,IAAI,EAAE;AAJA;AADF,WAXP;AAmBDkC,UAAAA,OAAO,EAAE;AACPa,YAAAA,OAAO,EAAE;AACPC,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,aAFA;AAGPP,cAAAA,WAAW,EAAE,uBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC;AADF;AAnBR,SAxmBqB,EAmoBrB;AACD0B,UAAAA,GAAG,EAAE,kEADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,cAJL;AAKDC,UAAAA,WAAW,EAAE,iCALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE;AACN4C,YAAAA,WAAW,EAAE;AACX1C,cAAAA,YAAY,EAAE,CADH;AAEXC,cAAAA,KAAK,EAAE,yBAFI;AAGXP,cAAAA,WAAW,EAAE,yBAHF;AAIX1C,cAAAA,IAAI,EAAE,QAJK;AAKXkE,cAAAA,YAAY,EAAE;AALH,aADP;AAQNyB,YAAAA,SAAS,EAAE;AACT3C,cAAAA,YAAY,EAAE,CADL;AAETC,cAAAA,KAAK,EAAE,mBAFE;AAGTP,cAAAA,WAAW,EAAE,mBAHJ;AAIT1C,cAAAA,IAAI,EAAE,SAJG;AAKTkE,cAAAA,YAAY,EAAE;AALL,aARL;AAeNqB,YAAAA,WAAW,EAAE;AACXvC,cAAAA,YAAY,EAAE,CADH;AAEXC,cAAAA,KAAK,EAAE,iCAFI;AAGXP,cAAAA,WAAW,EAAE,iCAHF;AAIX1C,cAAAA,IAAI,EAAE,QAJK;AAKXkE,cAAAA,YAAY,EAAE;AALH,aAfP;AAsBN0B,YAAAA,eAAe,EAAE;AACf5C,cAAAA,YAAY,EAAE,CADC;AAEfC,cAAAA,KAAK,EAAE,mCAFQ;AAGfP,cAAAA,WAAW,EAAE,mCAHE;AAIf1C,cAAAA,IAAI,EAAE,QAJS;AAKfkE,cAAAA,YAAY,EAAE;AALC,aAtBX;AA6BN2B,YAAAA,SAAS,EAAE;AACT7C,cAAAA,YAAY,EAAE,CADL;AAETC,cAAAA,KAAK,EAAE,mCAFE;AAGTP,cAAAA,WAAW,EAAE,mCAHJ;AAIT1C,cAAAA,IAAI,EAAE,QAJG;AAKTkE,cAAAA,YAAY,EAAE;AALL;AA7BL,WAXP;AAgDDhC,UAAAA,OAAO,EAAE;AACPiC,YAAAA,YAAY,EAAE;AACZnB,cAAAA,YAAY,EAAE,CADF;AAEZC,cAAAA,KAAK,EAAE,cAFK;AAGZP,cAAAA,WAAW,EAAE,uBAHD;AAIZ1C,cAAAA,IAAI,EAAE;AAJM;AADP;AAhDR,SAnoBqB,EA2rBrB;AACD0B,UAAAA,GAAG,EAAE,oEADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,gBAJL;AAKDC,UAAAA,WAAW,EAAE,0BALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACbuC,YAAAA,cAAc,EAAE;AACd9C,cAAAA,YAAY,EAAE,CADA;AAEdC,cAAAA,KAAK,EAAE,iBAFO;AAGdP,cAAAA,WAAW,EAAE,iBAHC;AAId1C,cAAAA,IAAI,EAAE;AAJQ;AADH,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAON4D,YAAAA,MAAM,EAAE;AACNZ,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,SAFD;AAGNP,cAAAA,WAAW,EAAE,kCAHP;AAIN1C,cAAAA,IAAI,EAAE,QAJA;AAKN6D,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AALA;AAPF,WAnBP;AAoCD5B,UAAAA,OAAO,EAAE;AACP6D,YAAAA,cAAc,EAAE;AACd/C,cAAAA,YAAY,EAAE,CADA;AAEdC,cAAAA,KAAK,EAAE,iBAFO;AAGdP,cAAAA,WAAW,EAAE,kBAHC;AAId1C,cAAAA,IAAI,EAAE;AAJQ;AADT;AApCR,SA3rBqB,EAuuBrB;AACD0B,UAAAA,GAAG,EAAE,oEADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,gBAJL;AAKDC,UAAAA,WAAW,EAAE,0BALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACbyC,YAAAA,oBAAoB,EAAE;AACpBhD,cAAAA,YAAY,EAAE,CADM;AAEpBC,cAAAA,KAAK,EAAE,0BAFa;AAGpBP,cAAAA,WAAW,EAAE,0BAHO;AAIpB1C,cAAAA,IAAI,EAAE;AAJc;AADT,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNmD,YAAAA,YAAY,EAAE;AACZjD,cAAAA,YAAY,EAAE,CADF;AAEZC,cAAAA,KAAK,EAAE,eAFK;AAGZP,cAAAA,WAAW,EAAE,4BAHD;AAIZ1C,cAAAA,IAAI,EAAE;AAJM,aADR;AAON4D,YAAAA,MAAM,EAAE;AACNZ,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,oBAFD;AAGNP,cAAAA,WAAW,EAAE,6BAHP;AAIN1C,cAAAA,IAAI,EAAE,QAJA;AAKN6D,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AALA;AAPF,WAnBP;AAoCD5B,UAAAA,OAAO,EAAE;AACPgE,YAAAA,aAAa,EAAE;AACblD,cAAAA,YAAY,EAAE,CADD;AAEbC,cAAAA,KAAK,EAAE,SAFM;AAGbP,cAAAA,WAAW,EAAE,SAHA;AAIb1C,cAAAA,IAAI,EAAE;AAJO;AADR;AApCR,SAvuBqB,EAmxBrB;AACD0B,UAAAA,GAAG,EAAE,2EADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,wBAJL;AAKDC,UAAAA,WAAW,EAAE,kCALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACb4C,YAAAA,2BAA2B,EAAE;AAC3BnD,cAAAA,YAAY,EAAE,CADa;AAE3BC,cAAAA,KAAK,EAAE,yBAFoB;AAG3BP,cAAAA,WAAW,EAAE,yBAHc;AAI3B1C,cAAAA,IAAI,EAAE;AAJqB;AADhB,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAON4D,YAAAA,MAAM,EAAE;AACNZ,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,iBAFD;AAGNP,cAAAA,WAAW,EAAE,0CAHP;AAIN1C,cAAAA,IAAI,EAAE,QAJA;AAKN6D,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AALA;AAPF,WAnBP;AAoCD5B,UAAAA,OAAO,EAAE;AACPkE,YAAAA,cAAc,EAAE;AACdpD,cAAAA,YAAY,EAAE,CADA;AAEdC,cAAAA,KAAK,EAAE,iBAFO;AAGdP,cAAAA,WAAW,EAAE,iBAHC;AAId1C,cAAAA,IAAI,EAAE;AAJQ;AADT;AApCR,SAnxBqB,EA+zBrB;AACD0B,UAAAA,GAAG,EAAE,8EADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,2BAJL;AAKDC,UAAAA,WAAW,EAAE,8CALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACb8C,YAAAA,8BAA8B,EAAE;AAC9BrD,cAAAA,YAAY,EAAE,CADgB;AAE9BC,cAAAA,KAAK,EAAE,4BAFuB;AAG9BP,cAAAA,WAAW,EAAE,4BAHiB;AAI9B1C,cAAAA,IAAI,EAAE;AAJwB;AADnB,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAON4D,YAAAA,MAAM,EAAE;AACNZ,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,oBAFD;AAGNP,cAAAA,WAAW,EAAE,6CAHP;AAIN1C,cAAAA,IAAI,EAAE,QAJA;AAKN6D,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AALA;AAPF,WAnBP;AAoCD5B,UAAAA,OAAO,EAAE;AACPoE,YAAAA,wBAAwB,EAAE;AACxBtD,cAAAA,YAAY,EAAE,CADU;AAExBC,cAAAA,KAAK,EAAE,6BAFiB;AAGxBP,cAAAA,WAAW,EAAE,6BAHW;AAIxB1C,cAAAA,IAAI,EAAE;AAJkB;AADnB;AApCR,SA/zBqB,EA22BrB;AACD0B,UAAAA,GAAG,EAAE,oEADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,gBAJL;AAKDC,UAAAA,WAAW,EAAE,mCALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDU,UAAAA,aAAa,EAAE;AACbgD,YAAAA,oBAAoB,EAAE;AACpBvD,cAAAA,YAAY,EAAE,CADM;AAEpBC,cAAAA,KAAK,EAAE,iBAFa;AAGpBP,cAAAA,WAAW,EAAE,iBAHO;AAIpB1C,cAAAA,IAAI,EAAE;AAJc;AADT,WAXd;AAmBD8C,UAAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE;AACPV,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,SAFA;AAGPP,cAAAA,WAAW,EAAE,sBAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC,aADH;AAON4D,YAAAA,MAAM,EAAE;AACNZ,cAAAA,YAAY,EAAE,CADR;AAENC,cAAAA,KAAK,EAAE,SAFD;AAGNP,cAAAA,WAAW,EAAE,kCAHP;AAIN1C,cAAAA,IAAI,EAAE,QAJA;AAKN6D,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF;AALA;AAPF,WAnBP;AAoCD5B,UAAAA,OAAO,EAAE;AACPyC,YAAAA,aAAa,EAAE;AACb3B,cAAAA,YAAY,EAAE,CADD;AAEbC,cAAAA,KAAK,EAAE,kBAFM;AAGbP,cAAAA,WAAW,EAAE,kBAHA;AAIb1C,cAAAA,IAAI,EAAE;AAJO;AADR;AApCR,SA32BqB,EAu5BrB;AACD0B,UAAAA,GAAG,EAAE,2EADJ;AAEDC,UAAAA,OAAO,EAAE,OAFR;AAGD3B,UAAAA,IAAI,EAAE,eAHL;AAIDyC,UAAAA,IAAI,EAAE,wBAJL;AAKDC,UAAAA,WAAW,EAAE,kCALZ;AAMDC,UAAAA,OAAO,EAAE,CAAC;AACRF,YAAAA,IAAI,EAAE,WADE;AAERG,YAAAA,KAAK,EAAE;AAFC,WAAD,CANR;AAUDC,UAAAA,OAAO,EAAE,mBAVR;AAWDC,UAAAA,MAAM,EAAE;AACNsC,YAAAA,eAAe,EAAE;AACfpC,cAAAA,YAAY,EAAE,CADC;AAEfC,cAAAA,KAAK,EAAE,0BAFQ;AAGfP,cAAAA,WAAW,EAAE,0BAHE;AAIf1C,cAAAA,IAAI,EAAE,QAJS;AAKfkE,cAAAA,YAAY,EAAE;AALC,aADX;AAQNsC,YAAAA,OAAO,EAAE;AACPxD,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,mBAFA;AAGPP,cAAAA,WAAW,EAAE,mBAHN;AAIP1C,cAAAA,IAAI,EAAE,QAJC;AAKPkE,cAAAA,YAAY,EAAE;AALP,aARH;AAeNoB,YAAAA,QAAQ,EAAE;AACRtC,cAAAA,YAAY,EAAE,CADN;AAERC,cAAAA,KAAK,EAAE,mBAFC;AAGRP,cAAAA,WAAW,EAAE,mBAHL;AAIR1C,cAAAA,IAAI,EAAE,QAJE;AAKRkE,cAAAA,YAAY,EAAE;AALN,aAfJ;AAsBNuC,YAAAA,QAAQ,EAAE;AACRzD,cAAAA,YAAY,EAAE,CADN;AAERC,cAAAA,KAAK,EAAE,eAFC;AAGRP,cAAAA,WAAW,EAAE,eAHL;AAIR1C,cAAAA,IAAI,EAAE,QAJE;AAKRkE,cAAAA,YAAY,EAAE;AALN,aAtBJ;AA6BNwC,YAAAA,QAAQ,EAAE;AACR1D,cAAAA,YAAY,EAAE,CADN;AAERC,cAAAA,KAAK,EAAE,gBAFC;AAGRP,cAAAA,WAAW,EAAE,gBAHL;AAIR1C,cAAAA,IAAI,EAAE,QAJE;AAKRkE,cAAAA,YAAY,EAAE;AALN,aA7BJ;AAoCNyC,YAAAA,WAAW,EAAE;AACX3D,cAAAA,YAAY,EAAE,CADH;AAEXC,cAAAA,KAAK,EAAE,mCAFI;AAGXP,cAAAA,WAAW,EAAE,mCAHF;AAIX1C,cAAAA,IAAI,EAAE,QAJK;AAKXkE,cAAAA,YAAY,EAAE;AALH;AApCP,WAXP;AAuDDhC,UAAAA,OAAO,EAAE;AACPa,YAAAA,OAAO,EAAE;AACPC,cAAAA,YAAY,EAAE,CADP;AAEPC,cAAAA,KAAK,EAAE,YAFA;AAGPP,cAAAA,WAAW,EAAE,0BAHN;AAIP1C,cAAAA,IAAI,EAAE;AAJC;AADF;AAvDR,SAv5BqB,CAAxB;AAu9BA,eAAOwC,eAAP;AACD,OAniCM;AAqiCPJ,MAAAA,eAAe,EAAE,2BAAW;AAC1B,eAAO1B,KAAK,CAACkG,GAAN,CAAUC,IAAV,CAAeC,IAAf,CAAoB1E,eAApB,EAAP;AACD,OAviCM;AAyiCP2E,MAAAA,WAAW,EAAE,qBAASC,MAAT,EAAiB;AAAA;;AAC5B,YAAI,CAAC,KAAK9G,mBAAN,KAA8B8G,MAAM,IAAIjH,MAAM,CAACkH,IAAP,CAAY,KAAK9G,gBAAjB,EAAmC+G,MAAnC,KAA8C,CAAtF,CAAJ,EAA8F;AAC5F,eAAKhH,mBAAL,GAA2B,IAA3B;AACA,cAAIiH,GAAG,GAAG,IAAIzG,KAAK,CAAC0G,EAAN,CAASC,OAAT,CAAiBC,UAArB,CAAgC,WAAhC,EAA6C,KAA7C,CAAV;AACAH,UAAAA,GAAG,CAACI,WAAJ,CAAgB,SAAhB,EAA2B,UAAAC,CAAC,EAAI;AAC9B,gBAAIC,IAAI,GAAGD,CAAC,CAACE,SAAF,EAAX;;AAD8B,oCAI1BD,IAAI,CAACE,WAAL,EAJ0B;AAAA,gBAG5BhH,IAH4B,qBAG5BA,IAH4B;;AAK9B,gBAAMwB,WAAW,GAAGxB,IAAI,CAAC0B,MAAL,CAAY,KAAI,CAACC,kBAAL,EAAZ,CAApB;AACA,gBAAMsF,gBAAgB,GAAGlH,KAAK,CAACmB,KAAN,CAAYC,QAAZ,CAAqB+F,0BAArB,CAAgD1F,WAAhD,CAAzB;AACA,gBAAM2F,QAAQ,GAAGpH,KAAK,CAACmB,KAAN,CAAYC,QAAZ,CAAqBiG,oBAArB,CAA0CH,gBAA1C,CAAjB;;AACA,YAAA,KAAI,CAACI,iBAAL,CAAuBF,QAAvB,EAAiC,IAAjC;AACD,WATD,EASG,IATH;AAWAX,UAAAA,GAAG,CAACI,WAAJ,CAAgB,MAAhB,EAAwB,UAAAC,CAAC,EAAI;AAAA,wCAGvBA,CAAC,CAACE,SAAF,GAAcC,WAAd,EAHuB;AAAA,gBAEzBM,KAFyB,yBAEzBA,KAFyB;;AAI3B9G,YAAAA,OAAO,CAAC8G,KAAR,CAAc,oBAAd,EAAoCA,KAApC;;AACA,gBAAM9F,WAAW,GAAG,KAAI,CAACC,eAAL,GAAuBC,MAAvB,CAA8B,KAAI,CAACC,kBAAL,EAA9B,CAApB;;AACA,gBAAMsF,gBAAgB,GAAGlH,KAAK,CAACmB,KAAN,CAAYC,QAAZ,CAAqB+F,0BAArB,CAAgD1F,WAAhD,CAAzB;AACA,gBAAM2F,QAAQ,GAAGpH,KAAK,CAACmB,KAAN,CAAYC,QAAZ,CAAqBiG,oBAArB,CAA0CH,gBAA1C,CAAjB;;AACA,YAAA,KAAI,CAACI,iBAAL,CAAuBF,QAAvB,EAAiC,KAAjC;AACD,WATD,EASG,IATH;AAUAX,UAAAA,GAAG,CAACe,IAAJ;AACA,iBAAO,IAAP;AACD;;AACD,eAAO,KAAK/H,gBAAZ;AACD,OAtkCM;AAwkCP6H,MAAAA,iBAAiB,EAAE,2BAASF,QAAT,EAAmBK,UAAnB,EAA+B;AAChD,aAAKhI,gBAAL,GAAwB,EAAxB;;AACA,aAAKiI,uBAAL,CAA6BN,QAA7B;;AACA,aAAK3H,gBAAL,GAAwBJ,MAAM,CAACsI,MAAP,CAAc,KAAKlI,gBAAnB,EAAqC2H,QAArC,CAAxB;AACA,YAAMnH,IAAI,GAAG;AACXmH,UAAAA,QAAQ,EAAEA,QADC;AAEXK,UAAAA,UAAU,EAAEA;AAFD,SAAb;AAIA,aAAKG,aAAL,CAAmB,oBAAnB,EAAyC3H,IAAzC;AACA,aAAKT,mBAAL,GAA2B,KAA3B;AACD,OAllCM;AAolCPkI,MAAAA,uBAAuB,EAAE,iCAASN,QAAT,EAAmB;AAC1C,YAAMS,IAAI,GAAG;AACX,mDAAyC;AACvC,wBAAY;AAD2B,WAD9B;AAIX,sDAA4C;AAC1C,wBAAY;AAD8B,WAJjC;AAOX,uDAA6C;AAC3C,wBAAY;AAD+B,WAPlC;AAUX,mDAAyC;AACvC,wBAAY;AAD2B,WAV9B;AAaX,mDAAyC;AACvC,wBAAY;AAD2B,WAb9B;AAgBX,mDAAyC;AACvC,wBAAY;AAD2B,WAhB9B;AAmBX,iDAAuC;AACrC,wBAAY;AADyB,WAnB5B;AAsBX,gDAAsC;AACpC,wBAAY;AADwB,WAtB3B;AAyBX,oDAA0C;AACxC,wBAAY;AAD4B,WAzB/B;AA4BX,yDAA+C;AAC7C,wBAAY;AADiC,WA5BpC;AA+BX,4DAAkD;AAChD,wBAAY;AADoC,WA/BvC;AAkCX,6DAAmD;AACjD,wBAAY;AADqC,WAlCxC;AAqCX,8DAAoD;AAClD,wBAAY;AADsC,WArCzC;AAwCX,8DAAoD;AAClD,wBAAY;AADsC,WAxCzC;AA2CX,8DAAoD;AAClD,wBAAY;AADsC,WA3CzC;AA8CX,6DAAmD;AACjD,wBAAY;AADqC,WA9CxC;AAiDX,6DAAmD;AACjD,wBAAY;AADqC,WAjDxC;AAoDX,6DAAmD;AACjD,wBAAY;AADqC,WApDxC;AAuDX,8DAAoD;AAClD,wBAAY;AADsC,WAvDzC;AA0DX,8DAAoD;AAClD,wBAAY;AADsC,WA1DzC;AA6DX,8DAAoD;AAClD,wBAAY;AADsC,WA7DzC;AAgEX,kDAAwC;AACtC,wBAAY;AAD0B,WAhE7B;AAoEX,gDAAsC;AACpC,wBAAY;AADwB,WApE3B;AAuEX,oDAA0C;AACxC,wBAAY;AAD4B,WAvE/B;AA0EX,sDAA4C;AAC1C,wBAAY;AAD8B,WA1EjC;AA6EX,oEAA0D;AACxD,wBAAY;AAD4C,WA7E/C;AAgFX,4DAAkD;AAChD,wBAAY;AADoC,WAhFvC;AAmFX,4DAAkD;AAChD,wBAAY;AADoC,WAnFvC;AAsFX,wDAA8C;AAC5C,wBAAY;AADgC,WAtFnC;AAyFX,mEAAyD;AACvD,wBAAY;AAD2C,WAzF9C;AA4FX,sEAA4D;AAC1D,wBAAY;AAD8C,WA5FjD;AA+FX,kEAAwD;AACtD,wBAAY;AAD0C,WA/F7C;AAkGX,+DAAqD;AACnD,wBAAY;AADuC,WAlG1C;AAqGX,6EAAmE;AACjE,wBAAY;AADqD,WArGxD;AAwGX,yEAA+D;AAC7D,wBAAY;AADiD,WAxGpD;AA2GX,8EAAoE;AAClE,wBAAY;AADsD,WA3GzD;AA8GX,4EAAkE;AAChE,wBAAY;AADoD,WA9GvD;AAiHX,0EAAgE;AAC9D,wBAAY;AADkD,WAjHrD;AAoHX,mFAAyE;AACvE,wBAAY;AAD2D,WApH9D;AAuHX,0EAAgE;AAC9D,wBAAY;AADkD,WAvHrD;AA0HX,0FAAgF;AAC9E,wBAAY;AADkE,WA1HrE;AA6HX,gFAAsE;AACpE,wBAAY;AADwD,WA7H3D;AAgIX,uFAA6E;AAC3E,wBAAY;AAD+D,WAhIlE;AAmIX,gFAAsE;AACpE,wBAAY;AADwD,WAnI3D;AAsIX,8EAAoE;AAClE,wBAAY;AADsD,WAtIzD;AAyIX,uFAA6E;AAC3E,wBAAY;AAD+D,WAzIlE;AA4IX,gFAAsE;AACpE,wBAAY;AADwD,WA5I3D;AA+IX,8EAAoE;AAClE,wBAAY;AADsD,WA/IzD;AAkJX,gEAAsD;AACpD,wBAAY;AADwC,WAlJ3C;AAqJX,oDAA0C;AACxC,wBAAY;AAD4B,WArJ/B;AAwJX,wDAA8C;AAC5C,wBAAY;AADgC,WAxJnC;AA2JX,+DAAqD;AACnD,wBAAY;AADuC,WA3J1C;AA8JX,kDAAwC;AACtC,wBAAY;AAD0B;AA9J7B,SAAb;;AAkKA,aAAK,IAAMC,UAAX,IAAyBV,QAAzB,EAAmC;AACjC,cAAI/H,MAAM,CAAC0I,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCb,QAArC,EAA+CU,UAA/C,CAAJ,EAAgE;AAC9D,gBAAII,OAAO,GAAGd,QAAQ,CAACU,UAAD,CAAtB;;AACA,gBAAIA,UAAU,IAAID,IAAlB,EAAwB;AACtB,mBAAK,IAAM5G,OAAX,IAAsBiH,OAAtB,EAA+B;AAC7B,oBAAIC,IAAI,GAAGD,OAAO,CAACjH,OAAD,CAAlB;;AACA,oBAAI5B,MAAM,CAAC0I,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,OAArC,EAA8CjH,OAA9C,CAAJ,EAA4D;AAC1DkH,kBAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmBN,IAAI,CAACC,UAAD,CAAJ,CAAiB,UAAjB,CAAnB;AACD,iBAFD,MAEO;AACLK,kBAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmB,SAAnB;AACD;AACF;AACF,aATD,MASO;AACL,mBAAK,IAAMlH,QAAX,IAAsBiH,OAAtB,EAA+B;AAC7BA,gBAAAA,OAAO,CAACjH,QAAD,CAAP,CAAiB,UAAjB,IAA+B,SAA/B;AACD;AACF;AACF;AACF;AACF,OA1wCM;AA4wCPmH,MAAAA,WAAW,EAAE,qBAASC,OAAT,EAAkBC,OAAlB,EAA2B;AACtC,eAAOtI,KAAK,CAACkG,GAAN,CAAUC,IAAV,CAAeC,IAAf,CAAoBgC,WAApB,CAAgCC,OAAhC,EAAyCC,OAAzC,CAAP;AACD,OA9wCM;AAgxCPC,MAAAA,OAAO,EAAE,iBAASC,gBAAT,EAA2BF,OAA3B,EAAoCG,QAApC,EAA8C;AACrD,eAAOzI,KAAK,CAACkG,GAAN,CAAUC,IAAV,CAAeC,IAAf,CAAoBmC,OAApB,CAA4BC,gBAA5B,EAA8CF,OAA9C,EAAuDG,QAAvD,CAAP;AACD,OAlxCM;AAoxCPC,MAAAA,sBApxCO,kCAoxCgBC,MApxChB,EAoxCwB;AAC7B,YAAMC,GAAG,GAAG,+BAAZ;AACA,YAAMC,KAAK,GAAG,MAAIC,kBAAkB,CAACH,MAAD,CAApC;AACA,YAAMhC,OAAO,GAAG,IAAI3G,KAAK,CAAC0G,EAAN,CAASC,OAAT,CAAiBC,UAArB,CAAgCgC,GAAG,GAACC,KAApC,EAA2C,QAA3C,CAAhB;AACAlC,QAAAA,OAAO,CAACa,IAAR;AACD;AAzxCM;AAf0B,GAArC;AA/BAxH,EAAAA,KAAK,CAAC+I,KAAN,CAAYC,KAAZ,CAAkBhK,aAAlB,GAAkCA,aAAlC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * Singleton class that is used as entrypoint to the webserver.\n *\n * All data transfer communication goes through the qxapp.store.Store.\n *\n * *Example*\n *\n * Here is a little example of how to use the class.\n *\n * <pre class='javascript'>\n *   let services = qxapp.store.Store.getInstance().getServices();\n * </pre>\n */\n\nqx.Class.define(\"qxapp.store.Store\", {\n  extend: qx.core.Object,\n\n  type : \"singleton\",\n\n  construct: function() {\n    this.__reloadingServices = false;\n    this.__servicesCached = {};\n  },\n\n  events: {\n    \"servicesRegistered\": \"qx.event.type.Data\",\n    \"presignedLink\": \"qx.event.type.Data\"\n  },\n\n  members: {\n    __reloadingServices: null,\n    __servicesCached: null,\n\n    __matchPortType: function(typeA, typeB) {\n      if (typeA === typeB) {\n        return true;\n      }\n      let mtA = qxapp.data.MimeType.getMimeType(typeA);\n      let mtB = qxapp.data.MimeType.getMimeType(typeB);\n      return mtA && mtB &&\n        new qxapp.data.MimeType(mtA).match(new qxapp.data.MimeType(mtB));\n    },\n\n    areNodesCompatible: function(topLevelPort1, topLevelPort2) {\n      console.log(\"areNodesCompatible\", topLevelPort1, topLevelPort2);\n      return topLevelPort1.isInput !== topLevelPort2.isInput;\n    },\n\n    arePortsCompatible: function(port1, port2) {\n      return port1.type && port2.type && this.__matchPortType(port1.type, port2.type);\n    },\n\n    getNodeMetaData: function(key, version) {\n      let metaData = null;\n      if (key && version) {\n        metaData = qxapp.utils.Services.getFromObject(this.__servicesCached, key, version);\n        if (metaData) {\n          metaData = qxapp.utils.Utils.deepCloneObject(metaData);\n          if (metaData.key === \"simcore/services/dynamic/modeler/webserver\") {\n            metaData.outputs[\"modeler\"] = {\n              \"label\": \"Modeler\",\n              \"displayOrder\":0,\n              \"description\": \"Modeler\",\n              \"type\": \"node-output-tree-api-v0.0.1\"\n            };\n            delete metaData.outputs[\"output_1\"];\n          }\n          return metaData;\n        }\n        const allServices = this.getFakeServices().concat(this.getBuiltInServices());\n        metaData = qxapp.utils.Services.getFromArray(allServices, key, version);\n        if (metaData) {\n          return qxapp.utils.Utils.deepCloneObject(metaData);\n        }\n      }\n      return null;\n    },\n\n    getBuiltInServices: function() {\n      const builtInServices = [{\n        key: \"simcore/services/frontend/file-picker\",\n        version: \"1.0.0\",\n        type: \"dynamic\",\n        name: \"File Picker\",\n        description: \"File Picker\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {},\n        outputs: {\n          outFile: {\n            displayOrder: 0,\n            label: \"File\",\n            description: \"Chosen File\",\n            type: \"data:*/*\"\n          }\n        }\n      }];\n      return builtInServices;\n    },\n\n    getBuiltInServices2: function() {\n      const builtInServices = [{\n        key: \"simcore/services/frontend/nodes-group\",\n        version: \"1.0.0\",\n        type: \"group\",\n        name: \"Group of nodes\",\n        description: \"Groups a collection of nodes in a single node\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\"\n      }, {\n        key: \"simcore/services/frontend/multi-plot\",\n        version: \"1.0.0\",\n        type: \"group\",\n        dedicatedWidget: true,\n        name: \"2D plot - Multi\",\n        description: \"2D plot - Multi\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {\n          \"input_1\": {\n            \"label\": \"input 1\",\n            \"displayOrder\": 0,\n            \"description\": \"Input 1\",\n            \"type\": \"data:*/*\"\n          },\n          \"input_2\": {\n            \"label\": \"input 2\",\n            \"displayOrder\": 1,\n            \"description\": \"Input 2\",\n            \"type\": \"data:*/*\"\n          },\n          \"input_3\": {\n            \"label\": \"input 3\",\n            \"displayOrder\": 2,\n            \"description\": \"Input 3\",\n            \"type\": \"data:*/*\"\n          },\n          \"input_4\": {\n            \"label\": \"input 4\",\n            \"displayOrder\": 3,\n            \"description\": \"Input 4\",\n            \"type\": \"data:*/*\"\n          },\n          \"input_5\": {\n            \"label\": \"input 5\",\n            \"displayOrder\": 4,\n            \"description\": \"Input 5\",\n            \"type\": \"data:*/*\"\n          }\n        },\n        outputs: {},\n        innerNodes: {\n          \"inner1_raw\": {\n            key: \"simcore/services/dynamic/raw-graphs\",\n            version: \"2.8.0\",\n            inputNodes: [],\n            outputNode: true\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/neuroman\",\n        version: \"0.0.0\",\n        type: \"dynamic\",\n        name: \"Neuroman\",\n        description: \"Neuroman\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultNeuromanModels: {\n            displayOrder: 0,\n            label: \"Neuroman models\",\n            description: \"Neuroman models\",\n            type: \"node-output-list-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          inModel: {\n            displayOrder: 0,\n            label: \"Input model\",\n            description: \"Model to be loaded\",\n            type: \"data:*/*\"\n          }\n        },\n        outputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Modeler Live link\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/StimulationSelectivity\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"Stimulation Selectivity Evaluator\",\n        description: \"Evalutes Stimulation Selectivity\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultStimulationSelectivity: {\n            displayOrder: 0,\n            label: \"Subgroups\",\n            description: \"Subgroups\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          mapper: {\n            displayOrder: 1,\n            label: \"Subgroups\",\n            description: \"Maps Model entities into Subgroups\",\n            type: \"mapper\",\n            maps: {\n              leaf: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/Neurons\"\n            }\n          }\n        },\n        outputs: {\n          stimulationFactor: {\n            displayOrder: 0,\n            label: \"Stimulation factor\",\n            description: \"Stimulation factor\",\n            type: \"number\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Modeler\",\n        version: \"0.0.0\",\n        type: \"dynamic\",\n        name: \"Modeler\",\n        description: \"Modeler\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {},\n        outputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Modeler Live link\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/MaterialDB\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"MaterialDB\",\n        description: \"Material Database\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {},\n        outputs: {\n          materialDB: {\n            displayOrder: 0,\n            label: \"MaterialDB\",\n            description: \"MaterialDB Live link\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/container/itis/s4l/Simulator/LF\",\n        version: \"0.0.0\",\n        type: \"container\",\n        name: \"LF Simulator\",\n        description: \"LF Simulator\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          materialDB: {\n            displayOrder: 1,\n            label: \"MaterialDB\",\n            description: \"Live link to Material DB\",\n            type: \"data:application/s4l-api/materialDB\"\n          }\n        },\n        outputs: {\n          outFile: {\n            displayOrder: 0,\n            label: \"File\",\n            description: \"LF Solver Input File\",\n            type: \"data:application/hdf5\"\n          }\n        },\n        innerNodes: {\n          \"inner1\": {\n            key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Setup\",\n            version: \"0.0.0\",\n            inputNodes: [],\n            outputNode: false\n          },\n          \"inner2\": {\n            key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Materials\",\n            version: \"0.0.0\",\n            inputNodes: [\n              \"modeler\",\n              \"materialDB\"\n            ],\n            outputNode: false\n          },\n          \"inner3\": {\n            key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Boundary\",\n            version: \"0.0.0\",\n            inputNodes: [\n              \"modeler\"\n            ],\n            outputNode: false\n          },\n          \"inner4\": {\n            key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Sensors\",\n            version: \"0.0.0\",\n            inputNodes: [\n              \"modeler\"\n            ],\n            outputNode: false\n          },\n          \"inner5\": {\n            key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Grid\",\n            version: \"0.0.0\",\n            inputNodes: [\n              \"modeler\"\n            ],\n            outputNode: false\n          },\n          \"inner6\": {\n            key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Voxel\",\n            version: \"0.0.0\",\n            inputNodes: [\n              \"modeler\"\n            ],\n            outputNode: false\n          },\n          \"inner7\": {\n            key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/SolverSettings\",\n            version: \"0.0.0\",\n            inputNodes: [],\n            outputNode: true\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Setup\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"LF Setup\",\n        description: \"LF Simulator Setup Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {\n          frequency: {\n            displayOrder: 0,\n            label: \"Frequency\",\n            description: \"Frequency (Hz)\",\n            type: \"number\",\n            defaultValue: 1000\n          }\n        },\n        outputs: {\n          setupSetting: {\n            displayOrder: 0,\n            label: \"LF-Setup\",\n            description: \"LF Setup Settings\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Materials\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"LF Materials\",\n        description: \"LF Simulator Material Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultLFMaterials: {\n            displayOrder: 0,\n            label: \"Default Material Settings\",\n            description: \"Default Material Settings\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          updateDispersive: {\n            displayOrder: 0,\n            label: \"Enable automatic update of dispersive materials\",\n            description: \"Enable automatic update of dispersive materials\",\n            type: \"boolean\",\n            defaultValue: false\n          },\n          modeler: {\n            displayOrder: 1,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          materialDB: {\n            displayOrder: 2,\n            label: \"MaterialDB\",\n            description: \"Live Link to Material DB\",\n            type: \"data:application/s4l-api/materialDB\"\n          },\n          mapper: {\n            displayOrder: 3,\n            label: \"Material Settings\",\n            description: \"Maps Model entities into Materials\",\n            type: \"mapper\",\n            maps: {\n              branch: \"simcore/services/demodec/dynamic/itis/s4l/MaterialDB\",\n              leaf: \"simcore/services/dynamic/modeler/webserver\"\n            },\n            defaultValue: [{\n              \"Air-UUID\": [\n                \"Background\"\n              ]\n            }]\n          }\n        },\n        outputs: {\n          materialSetting: {\n            displayOrder: 0,\n            label: \"MaterialSettings\",\n            description: \"Material Settings\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Boundary\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"LF Boundary Conditions\",\n        description: \"LF Simulator Boundary Conditions\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultLFBoundaries: {\n            displayOrder: 0,\n            label: \"Default Boundary Settings\",\n            description: \"Default Boundary Settings\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          mapper: {\n            displayOrder: 1,\n            label: \"Boundary Conditions\",\n            description: \"Maps Model entities into Boundary Conditions\",\n            type: \"mapper\",\n            maps: {\n              leaf: \"simcore/services/dynamic/modeler/webserver\"\n            },\n            defaultValue: [{\n              \"Neumann-UUID\": [\n                \"Plane X+\",\n                \"Plane X-\",\n                \"Plane Y+\",\n                \"Plane Y-\",\n                \"Plane Z+\",\n                \"Plane Z-\"\n              ]\n            }]\n          }\n        },\n        outputs: {\n          boundarySetting: {\n            displayOrder: 0,\n            label: \"BoundaryConditions\",\n            description: \"Boundary Conditions\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Sensors\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"LF Sensors\",\n        description: \"LF Simulator Sensors Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultLFSensors: {\n            displayOrder: 0,\n            label: \"Default Sensors\",\n            description: \"Default Sensors\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          mapper: {\n            displayOrder: 1,\n            label: \"Sensor Settings\",\n            description: \"Maps Model entities into Sensor Settings\",\n            type: \"mapper\",\n            maps: {\n              leaf: \"simcore/services/dynamic/modeler/webserver\"\n            },\n            defaultValue: [{\n              \"Field-Sensor-UUID\": [\n                \"Overall Field\"\n              ]\n            }]\n          }\n        },\n        outputs: {\n          sensorSetting: {\n            displayOrder: 0,\n            label: \"SensorSettings\",\n            description: \"Sensor Settings\",\n            type: \"data:application/s4l-api/settings\"\n          },\n          sensorSettingAPI: {\n            displayOrder: 1,\n            label: \"LF Sensors\",\n            description: \"LF Sensors\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Grid\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"LF Grid\",\n        description: \"LF Simulator Grid Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          homogeneous: {\n            displayOrder: 1,\n            label: \"Homogeneous grid\",\n            description: \"Homogeneous grid\",\n            type: \"boolean\",\n            defaultValue: true\n          },\n          resolution: {\n            displayOrder: 2,\n            label: \"Resolution (mm)\",\n            description: \"Resolution in mm\",\n            type: \"number\",\n            defaultValue: 1\n          }\n        },\n        outputs: {\n          gridSetting: {\n            displayOrder: 0,\n            label: \"GridSettings\",\n            description: \"Grid Settings\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Voxel\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"LF Voxels\",\n        description: \"LF Simulator Voxel Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          voxelEngine: {\n            displayOrder: 1,\n            label: \"Used Voxel Engine\",\n            description: \"Used Voxel Engine\",\n            type: \"string\",\n            defaultValue: \"Topological Voxeler\"\n          },\n          maximumFraction: {\n            displayOrder: 2,\n            label: \"Maximum Fraction\",\n            description: \"Maximum Fraction\",\n            type: \"number\",\n            defaultValue: 21\n          },\n          congruentSubgrid: {\n            displayOrder: 3,\n            label: \"Congruent Subgrid Voxeling\",\n            description: \"Congruent Subgrid Voxeling\",\n            type: \"boolean\",\n            defaultValue: true\n          }\n        },\n        outputs: {\n          voxelSetting: {\n            displayOrder: 0,\n            label: \"VoxelSettings\",\n            description: \"Voxel Settings\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/SolverSettings\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"LF Solver Settings\",\n        description: \"LF Simulator Solver Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {\n          parallelization: {\n            displayOrder: 0,\n            label: \"Parallelization Handling\",\n            description: \"Parallelization Handling\",\n            type: \"string\",\n            defaultValue: \"Manual\"\n          },\n          processes: {\n            displayOrder: 1,\n            label: \"Number of processes\",\n            description: \"Number of processes\",\n            type: \"number\",\n            defaultValue: 1\n          },\n          priority: {\n            displayOrder: 2,\n            label: \"Priority in queue\",\n            description: \"Priority in queue\",\n            type: \"number\",\n            defaultValue: 0\n          },\n          convergence: {\n            displayOrder: 3,\n            label: \"Convergence Tolerance\",\n            description: \"Convergence Tolerance\",\n            type: \"string\",\n            defaultValue: \"Medium\"\n          },\n          additionalOptions: {\n            displayOrder: 4,\n            label: \"Additional Solver Options\",\n            description: \"Additional Solver Options\",\n            type: \"string\",\n            defaultValue: \"\"\n          }\n        },\n        outputs: {\n          outFile: {\n            displayOrder: 0,\n            label: \"Input file\",\n            description: \"LF Solver Input File\",\n            type: \"data:application/hdf5\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/computational/itis/Solver-LF\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"LF Solver\",\n        description: \"LF Solver\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {\n          inFile: {\n            displayOrder: 0,\n            label: \"Input file\",\n            description: \"LF Solver Input File\",\n            type: \"data:application/hdf5\"\n          }\n        },\n        outputs: {\n          outFile: {\n            displayOrder: 0,\n            label: \"Output file\",\n            description: \"LF Solver Output File\",\n            type: \"data:application/hdf5\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/Setup\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"Neuron Setup\",\n        description: \"Neuron Simulator Setup Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {\n          temperature: {\n            displayOrder: 0,\n            label: \"Global Temperature (°C)\",\n            description: \"Global Temperature (°C)\",\n            type: \"number\",\n            defaultValue: 37\n          },\n          titration: {\n            displayOrder: 1,\n            label: \"Perform Titration\",\n            description: \"Perform Titration\",\n            type: \"boolean\",\n            defaultValue: false\n          },\n          convergence: {\n            displayOrder: 2,\n            label: \"Titration convergence criterion\",\n            description: \"Titration convergence criterion\",\n            type: \"number\",\n            defaultValue: 1\n          },\n          actionPotential: {\n            displayOrder: 3,\n            label: \"Action Potential detection method\",\n            description: \"Action Potential detection method\",\n            type: \"string\",\n            defaultValue: \"Threshold\"\n          },\n          threshold: {\n            displayOrder: 4,\n            label: \"Threshold for depolarization (mV)\",\n            description: \"Threshold for depolarization (mV)\",\n            type: \"number\",\n            defaultValue: 80\n          }\n        },\n        outputs: {\n          setupSetting: {\n            displayOrder: 0,\n            label: \"Neuron-Setup\",\n            description: \"Neuron Setup Settings\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/Neurons\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"Neuron Neurons\",\n        description: \"Neuron Simulator Neurons\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultNeurons: {\n            displayOrder: 0,\n            label: \"Default Neurons\",\n            description: \"Default Neurons\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          mapper: {\n            displayOrder: 1,\n            label: \"Neurons\",\n            description: \"Maps Model entities into Neurons\",\n            type: \"mapper\",\n            maps: {\n              leaf: \"simcore/services/dynamic/modeler/webserver\"\n            }\n          }\n        },\n        outputs: {\n          neuronsSetting: {\n            displayOrder: 0,\n            label: \"NeuronsSettings\",\n            description: \"Neurons Settings\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/Sources\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"Neuron Sources\",\n        description: \"Neuron Simulator Sources\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultNeuronSources: {\n            displayOrder: 0,\n            label: \"Default Sources Settings\",\n            description: \"Default Sources Settings\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          lfSimulation: {\n            displayOrder: 0,\n            label: \"LF Simulation\",\n            description: \"Live Link to LF Simulation\",\n            type: \"data:application/s4l-api/lf-sensor\"\n          },\n          mapper: {\n            displayOrder: 1,\n            label: \"Sources Conditions\",\n            description: \"Maps LF Fields into Sources\",\n            type: \"mapper\",\n            maps: {\n              leaf: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Sensors\"\n            }\n          }\n        },\n        outputs: {\n          sourceSetting: {\n            displayOrder: 0,\n            label: \"Sources\",\n            description: \"Sources\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/PointProcesses\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"Neuron Point Processes\",\n        description: \"Neuron Simulator Point Processes\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultNeuronPointProcesses: {\n            displayOrder: 0,\n            label: \"Default Point Processes\",\n            description: \"Default Point Processes\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          mapper: {\n            displayOrder: 1,\n            label: \"Point Processes\",\n            description: \"Maps Model entities into Point Processes\",\n            type: \"mapper\",\n            maps: {\n              leaf: \"simcore/services/dynamic/modeler/webserver\"\n            }\n          }\n        },\n        outputs: {\n          pointProcesses: {\n            displayOrder: 0,\n            label: \"Point Processes\",\n            description: \"Point Processes\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/NetworkConnection\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"Neuron Network Connection\",\n        description: \"Neuron Simulator Network Connection Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultNeuronNetworkConnection: {\n            displayOrder: 0,\n            label: \"Default Network Connection\",\n            description: \"Default Network Connection\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          mapper: {\n            displayOrder: 1,\n            label: \"Network Connection\",\n            description: \"Maps Model entities into Network Connection\",\n            type: \"mapper\",\n            maps: {\n              leaf: \"simcore/services/dynamic/modeler/webserver\"\n            }\n          }\n        },\n        outputs: {\n          networkConnectionSetting: {\n            displayOrder: 0,\n            label: \"Network Connection Settings\",\n            description: \"Network Connection Settings\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/Sensors\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"Neuron Sensors\",\n        description: \"Neuron Simulator Sensors Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputsDefault: {\n          defaultNeuronSensors: {\n            displayOrder: 0,\n            label: \"Default Sensors\",\n            description: \"Default Sensors\",\n            type: \"node-output-tree-api-v0.0.1\"\n          }\n        },\n        inputs: {\n          modeler: {\n            displayOrder: 0,\n            label: \"Modeler\",\n            description: \"Live Link to Modeler\",\n            type: \"data:application/s4l-api/modeler\"\n          },\n          mapper: {\n            displayOrder: 1,\n            label: \"Sensors\",\n            description: \"Maps Model entities into Sensors\",\n            type: \"mapper\",\n            maps: {\n              leaf: \"simcore/services/dynamic/modeler/webserver\"\n            }\n          }\n        },\n        outputs: {\n          sensorSetting: {\n            displayOrder: 0,\n            label: \"Sensors Settings\",\n            description: \"Sensors Settings\",\n            type: \"data:application/s4l-api/settings\"\n          }\n        }\n      }, {\n        key: \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/SolverSettings\",\n        version: \"0.0.0\",\n        type: \"computational\",\n        name: \"Neuron Solver Settings\",\n        description: \"Neuron Simulator Solver Settings\",\n        authors: [{\n          name: \"Odei Maiz\",\n          email: \"maiz@itis.ethz.ch\"\n        }],\n        contact: \"maiz@itis.ethz.ch\",\n        inputs: {\n          parallelization: {\n            displayOrder: 0,\n            label: \"Parallelization Handling\",\n            description: \"Parallelization Handling\",\n            type: \"string\",\n            defaultValue: \"Manual\"\n          },\n          threads: {\n            displayOrder: 1,\n            label: \"Number of threads\",\n            description: \"Number of threads\",\n            type: \"number\",\n            defaultValue: 1\n          },\n          priority: {\n            displayOrder: 2,\n            label: \"Priority in queue\",\n            description: \"Priority in queue\",\n            type: \"number\",\n            defaultValue: 0\n          },\n          duration: {\n            displayOrder: 3,\n            label: \"Duration (ms)\",\n            description: \"Duration (ms)\",\n            type: \"number\",\n            defaultValue: 1\n          },\n          timeStep: {\n            displayOrder: 4,\n            label: \"Time Step (ms)\",\n            description: \"Time Step (ms)\",\n            type: \"number\",\n            defaultValue: 0.0025\n          },\n          sectionName: {\n            displayOrder: 5,\n            label: \"Section names for spike detection\",\n            description: \"Section names for spike detection\",\n            type: \"string\",\n            defaultValue: \"\"\n          }\n        },\n        outputs: {\n          outFile: {\n            displayOrder: 0,\n            label: \"Input file\",\n            description: \"Neuron Solver Input File\",\n            type: \"data:application/hdf5\"\n          }\n        }\n      }];\n      return builtInServices;\n    },\n\n    getFakeServices: function() {\n      return qxapp.dev.fake.Data.getFakeServices();\n    },\n\n    getServices: function(reload) {\n      if (!this.__reloadingServices && (reload || Object.keys(this.__servicesCached).length === 0)) {\n        this.__reloadingServices = true;\n        let req = new qxapp.io.request.ApiRequest(\"/services\", \"GET\");\n        req.addListener(\"success\", e => {\n          let requ = e.getTarget();\n          const {\n            data\n          } = requ.getResponse();\n          const allServices = data.concat(this.getBuiltInServices());\n          const filteredServices = qxapp.utils.Services.filterOutUnavailableGroups(allServices);\n          const services = qxapp.utils.Services.convertArrayToObject(filteredServices);\n          this.__servicesToCache(services, true);\n        }, this);\n\n        req.addListener(\"fail\", e => {\n          const {\n            error\n          } = e.getTarget().getResponse();\n          console.error(\"getServices failed\", error);\n          const allServices = this.getFakeServices().concat(this.getBuiltInServices());\n          const filteredServices = qxapp.utils.Services.filterOutUnavailableGroups(allServices);\n          const services = qxapp.utils.Services.convertArrayToObject(filteredServices);\n          this.__servicesToCache(services, false);\n        }, this);\n        req.send();\n        return null;\n      }\n      return this.__servicesCached;\n    },\n\n    __servicesToCache: function(services, fromServer) {\n      this.__servicesCached = {};\n      this.__addCategoryToServices(services);\n      this.__servicesCached = Object.assign(this.__servicesCached, services);\n      const data = {\n        services: services,\n        fromServer: fromServer\n      };\n      this.fireDataEvent(\"servicesRegistered\", data);\n      this.__reloadingServices = false;\n    },\n\n    __addCategoryToServices: function(services) {\n      const cats = {\n        \"simcore/services/frontend/file-picker\": {\n          \"category\": \"Data\"\n        },\n        \"simcore/services/dynamic/mattward-viewer\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/dynamic/bornstein-viewer\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/dynamic/cc-0d-viewer\": {\n          \"category\": \"PostPro\"\n        },\n        \"simcore/services/dynamic/cc-1d-viewer\": {\n          \"category\": \"PostPro\"\n        },\n        \"simcore/services/dynamic/cc-2d-viewer\": {\n          \"category\": \"PostPro\"\n        },\n        \"simcore/services/dynamic/raw-graphs\": {\n          \"category\": \"PostPro\"\n        },\n        \"simcore/services/dynamic/3d-viewer\": {\n          \"category\": \"PostPro\"\n        },\n        \"simcore/services/dynamic/3d-viewer-gpu\": {\n          \"category\": \"PostPro\"\n        },\n        \"simcore/services/dynamic/jupyter-r-notebook\": {\n          \"category\": \"Notebook\"\n        },\n        \"simcore/services/dynamic/jupyter-base-notebook\": {\n          \"category\": \"Notebook\"\n        },\n        \"simcore/services/dynamic/jupyter-scipy-notebook\": {\n          \"category\": \"Notebook\"\n        },\n        \"simcore/services/comp/rabbit-ss-0d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/rabbit-ss-1d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/rabbit-ss-2d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/human-gb-0d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/human-gb-1d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/human-gb-2d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/human-ord-0d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/human-ord-1d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/human-ord-2d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/osparc-opencor\": {\n          \"category\": \"Solver\"\n        },\n\n        \"simcore/services/comp/itis/sleeper\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/itis/isolve-emlf\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/itis/neuron-isolve\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/ucdavis-singlecell-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/ucdavis-1d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/ucdavis-2d-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/comp/kember-cardiac-model\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/demodec/computational/itis/Solver-LF\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/demodec/container/itis/s4l/Simulator/LF\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/MaterialDB\": {\n          \"category\": \"Solver\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Modeler\": {\n          \"category\": \"Modeling\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Boundary\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Grid\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Materials\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Sensors\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Setup\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/SolverSettings\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/LF/Voxel\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/NetworkConnection\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/Neurons\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/PointProcesses\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/Sensors\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/Setup\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/SolverSettings\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/Simulator/Neuron/Sources\": {\n          \"category\": \"Simulator\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/StimulationSelectivity\": {\n          \"category\": \"PostPro\"\n        },\n        \"simcore/services/demodec/dynamic/itis/s4l/neuroman\": {\n          \"category\": \"Modeling\"\n        },\n        \"simcore/services/dynamic/kember-viewer\": {\n          \"category\": \"PostPro\"\n        },\n        \"simcore/services/dynamic/modeler/webserver\": {\n          \"category\": \"Modeling\"\n        },\n        \"simcore/services/dynamic/modeler/webserverwithrat\": {\n          \"category\": \"Modeling\"\n        },\n        \"simcore/services/frontend/multi-plot\": {\n          \"category\": \"PostPro\"\n        }\n      };\n      for (const serviceKey in services) {\n        if (Object.prototype.hasOwnProperty.call(services, serviceKey)) {\n          let service = services[serviceKey];\n          if (serviceKey in cats) {\n            for (const version in service) {\n              let serv = service[version];\n              if (Object.prototype.hasOwnProperty.call(service, version)) {\n                serv[\"category\"] = cats[serviceKey][\"category\"];\n              } else {\n                serv[\"category\"] = \"Unknown\";\n              }\n            }\n          } else {\n            for (const version in service) {\n              service[version][\"category\"] = \"Unknown\";\n            }\n          }\n        }\n      }\n    },\n\n    getItemList: function(nodeKey, portKey) {\n      return qxapp.dev.fake.Data.getItemList(nodeKey, portKey);\n    },\n\n    getItem: function(nodeInstanceUUID, portKey, itemUuid) {\n      return qxapp.dev.fake.Data.getItem(nodeInstanceUUID, portKey, itemUuid);\n    },\n\n    stopInteractiveService(nodeId) {\n      const url = \"/running_interactive_services\";\n      const query = \"/\"+encodeURIComponent(nodeId);\n      const request = new qxapp.io.request.ApiRequest(url+query, \"DELETE\");\n      request.send();\n    }\n  }\n});\n"
  ]
}