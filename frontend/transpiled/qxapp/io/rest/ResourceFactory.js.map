{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/io/rest/ResourceFactory.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "statics",
    "API",
    "members",
    "__config",
    "requestConfig",
    "basePath",
    "qxapp",
    "io",
    "rest",
    "ResourceFactory",
    "configCheck",
    "Resource",
    "get",
    "method",
    "url",
    "addListener",
    "e",
    "getRequest",
    "getResponse",
    "data",
    "console",
    "error",
    "registerWithInvitation",
    "createHealthCheck",
    "healthCheck",
    "createStudyResources",
    "study",
    "put",
    "del",
    "studies",
    "post",
    "postFromTemplate",
    "postSaveAsTemplate",
    "templates",
    "createUserResources",
    "profile",
    "createTokenResources",
    "token",
    "tokens"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Pedro Crespo (pcrespov)\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\nqx.Class.define(\"qxapp.io.rest.ResourceFactory\", {\n  extend: qx.core.Object,\n  type : \"singleton\",\n\n  statics: {\n    API: \"/v0\"\n  },\n\n  members: {\n    __config: null,\n\n    requestConfig: function() {\n      if (this.__config === null) {\n        // SEE: https://www.qooxdoo.org/current/pages/communication/rest.html\n        // SEE: api/specs/webserver/v0/openapi.yaml\n        const basePath = qxapp.io.rest.ResourceFactory.API;\n        const configCheck = new qxapp.io.rest.Resource({\n          get: {\n            method: \"GET\",\n            url: basePath+\"/config\"\n          }\n        });\n        configCheck.addListener(\"getSuccess\", e => {\n          this.__config = e.getRequest().getResponse().data;\n        }, this);\n        configCheck.addListener(\"getError\", e => {\n          console.error(e);\n          this.__config === null;\n        }, this);\n        configCheck.get();\n        this.__config === false;\n      }\n    },\n\n    registerWithInvitation: function() {\n      if (this.__config === null) {\n        this.requestConfig();\n        return null;\n      }\n      if (!(\"invitation_required\" in this.__config)) {\n        this.requestConfig();\n        return null;\n      }\n      return this.__config[\"invitation_required\"];\n    },\n\n    createHealthCheck: function() {\n      // SEE: https://www.qooxdoo.org/current/pages/communication/rest.html\n      // SEE: api/specs/webserver/v0/openapi-user.yaml\n      const basePath = qxapp.io.rest.ResourceFactory.API;\n\n      // Singular resource\n      let healthCheck = new qxapp.io.rest.Resource({\n        // Get health check\n        get: {\n          method: \"GET\",\n          url: basePath+\"/\"\n        }\n      });\n\n      return {\n        \"healthCheck\": healthCheck\n      };\n    },\n\n    createStudyResources: function() {\n      // SEE: https://www.qooxdoo.org/current/pages/communication/rest.html\n      // SEE: api/specs/webserver/v0/openapi-projects.yaml\n      const basePath = qxapp.io.rest.ResourceFactory.API;\n\n      // Singular resource\n      const study = new qxapp.io.rest.Resource({\n        // Retrieve study\n        get: {\n          method: \"GET\",\n          url: basePath+\"/projects/{project_id}\"\n        },\n\n        // Update study\n        put: {\n          method: \"PUT\",\n          url: basePath+\"/projects/{project_id}\"\n        },\n\n        // Delete study\n        del: {\n          method: \"DELETE\",\n          url: basePath+\"/projects/{project_id}\"\n        }\n      });\n\n      // Plural resource\n      const studies = new qxapp.io.rest.Resource({\n        // Retrieve list of studies\n        get: {\n          method: \"GET\",\n          url: basePath+\"/projects?type=user\"\n        },\n\n        // Create study\n        // NOTE: When calling \".post(null, payload)\" the first argument needs to be filled in\n        // so that the second argument contains the payload\n        post: {\n          method: \"POST\",\n          url: basePath+\"/projects\"\n        },\n\n        postFromTemplate: {\n          method: \"POST\",\n          url: basePath+\"/projects?from_template={template_id}\"\n        },\n\n        postSaveAsTemplate: {\n          method: \"POST\",\n          url: basePath+\"/projects?as_template={study_id}\"\n        }\n      });\n\n      var templates = new qxapp.io.rest.Resource({\n        // Retrieve list of studies\n        get: {\n          method: \"GET\",\n          url: basePath+\"/projects?type=template\"\n        }\n      });\n\n\n      return {\n        \"project\": study,\n        \"projects\": studies,\n        \"templates\": templates\n      };\n    },\n\n    createUserResources: function() {\n      // SEE: https://www.qooxdoo.org/current/pages/communication/rest.html\n      // SEE: api/specs/webserver/v0/openapi-user.yaml\n      const basePath = qxapp.io.rest.ResourceFactory.API;\n\n      // Singular resource\n      let profile = new qxapp.io.rest.Resource({\n        // Get token\n        get: {\n          method: \"GET\",\n          url: basePath+\"/me\"\n        }\n      });\n\n      return {\n        \"profile\": profile\n      };\n    },\n\n    createTokenResources: function() {\n      // SEE: https://www.qooxdoo.org/current/pages/communication/rest.html\n      // SEE: api/specs/webserver/v0/openapi-user.yaml\n      const basePath = qxapp.io.rest.ResourceFactory.API;\n\n      // Singular resource\n      let token = new qxapp.io.rest.Resource({\n        // Get token\n        get: {\n          method: \"GET\",\n          url: basePath+\"/me/tokens/{service}\"\n        },\n\n        // Update token\n        put: {\n          method: \"PUT\",\n          url: basePath+\"/me/tokens/{service}\"\n        },\n\n        // Delete token\n        del: {\n          method: \"DELETE\",\n          url: basePath+\"/me/tokens/{service}\"\n        }\n      });\n\n      // Plural resource\n      var tokens = new qxapp.io.rest.Resource({\n        // Retrieve tokens\n        get: {\n          method: \"GET\",\n          url: basePath+\"/me/tokens\"\n        },\n\n        // Create token\n        post: {\n          method: \"POST\",\n          url: basePath+\"/me/tokens\"\n        }\n      });\n\n      return {\n        \"token\": token,\n        \"tokens\": tokens\n      };\n    }\n\n  } // members\n});\n"
  ]
}