{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/desktop/ServiceBrowser.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "_setLayout",
    "layout",
    "HBox",
    "iframe",
    "qxapp",
    "utils",
    "Utils",
    "createLoadingIFrame",
    "tr",
    "_add",
    "flex",
    "interval",
    "userTimer",
    "event",
    "Timer",
    "addListener",
    "__servicesReady",
    "stop",
    "_removeAll",
    "dispose",
    "__createServicesLayout",
    "__attachEventHandlers",
    "start",
    "__initResources",
    "members",
    "__serviceFilters",
    "__allServices",
    "__servicesList",
    "__versionsList",
    "__searchTextfield",
    "resetSelection",
    "reset",
    "setSelection",
    "__getServicesPreload",
    "store",
    "Store",
    "getInstance",
    "e",
    "getData",
    "getServices",
    "servicesList",
    "__createServicesListLayout",
    "serviceDescription",
    "__createServiceDescriptionLayout",
    "servicesLayout",
    "__createVBoxWLabel",
    "serviceFilters",
    "desktop",
    "ServiceFilters",
    "add",
    "form",
    "List",
    "set",
    "orientation",
    "minWidth",
    "appearance",
    "length",
    "selectedKey",
    "getModel",
    "__serviceSelected",
    "latestServices",
    "services",
    "serviceKey",
    "push",
    "Services",
    "getLatest",
    "latestServicesModel",
    "data",
    "Array",
    "map",
    "s",
    "marshal",
    "Json",
    "createModel",
    "servCtrl",
    "controller",
    "setDelegate",
    "createItem",
    "item",
    "ServiceBrowserListItem",
    "subscribeToFilterGroup",
    "bindItem",
    "ctrl",
    "id",
    "bindProperty",
    "selectedService",
    "toArray",
    "descriptionView",
    "container",
    "Composite",
    "VBox",
    "marginTop",
    "titleContainer",
    "label",
    "basic",
    "Label",
    "font",
    "bom",
    "Font",
    "fromConfig",
    "theme",
    "fonts",
    "Atom",
    "versions",
    "SelectBox",
    "setIdToWidget",
    "__versionSelected",
    "getLabel",
    "descriptionContainer",
    "__serviceDescription",
    "Scroll",
    "text",
    "vBoxLayout",
    "textfield",
    "getTextFilter",
    "getChildControl",
    "component",
    "filter",
    "UIFilterController",
    "resetGroup",
    "focus",
    "getKeyIdentifier",
    "selectables",
    "getSelectables",
    "versionsList",
    "removeAll",
    "getVersions",
    "lastItem",
    "forEach",
    "version",
    "ListItem",
    "__updateServiceDescription",
    "versionKey",
    "serviceSelection",
    "getSelection",
    "getFromObject",
    "serviceInfo",
    "metadata",
    "ServiceInfo",
    "__nodeCheck",
    "nodeCheck",
    "io",
    "request",
    "Xhr",
    "getTarget",
    "getResponse",
    "ajv",
    "wrapper",
    "Ajv",
    "srvId",
    "service",
    "check",
    "validate",
    "console",
    "log",
    "key",
    "err",
    "error",
    "send",
    "ServiceBrowser"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2019 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * Widget that shows all the information available regarding services.\n *\n * It has three main focuses:\n * - Services list (ServiceBrowserListItem) on the left side with some filter\n *   - Filter as you type\n *   - Filter by service type\n *   - Filter by service type\n * - List of versions of the selected service\n * - Description of the selected service using JsonTreeWidget\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   let servicesView = this.__serviceBrowser = new qxapp.desktop.ServiceBrowser();\n *   this.getRoot().add(servicesView);\n * </pre>\n */\n\nqx.Class.define(\"qxapp.desktop.ServiceBrowser\", {\n  extend: qx.ui.core.Widget,\n\n  construct: function() {\n    this.base(arguments);\n\n    this._setLayout(new qx.ui.layout.HBox(10));\n\n    const iframe = qxapp.utils.Utils.createLoadingIFrame(this.tr(\"Services\"));\n    this._add(iframe, {\n      flex: 1\n    });\n\n    const interval = 1000;\n    const userTimer = new qx.event.Timer(interval);\n    userTimer.addListener(\"interval\", () => {\n      if (this.__servicesReady) {\n        userTimer.stop();\n        this._removeAll();\n        iframe.dispose();\n        this.__createServicesLayout();\n        this.__attachEventHandlers();\n      }\n    }, this);\n    userTimer.start();\n\n    this.__initResources();\n  },\n\n  members: {\n    __servicesReady: null,\n    __serviceFilters: null,\n    __allServices: null,\n    __servicesList: null,\n    __versionsList: null,\n    __searchTextfield: null,\n\n    /**\n     * Function that resets the selected item by reseting the filters and the service selection\n     */\n    resetSelection: function() {\n      if (this.__serviceFilters) {\n        this.__serviceFilters.reset();\n      }\n      if (this.__servicesList) {\n        this.__servicesList.setSelection([]);\n      }\n    },\n\n    __initResources: function() {\n      this.__getServicesPreload();\n    },\n\n    __getServicesPreload: function() {\n      const store = qxapp.store.Store.getInstance();\n      store.addListener(\"servicesRegistered\", e => {\n        // Do not validate if are not taking actions\n        // this.__nodeCheck(e.getData());\n        this.__servicesReady = e.getData();\n      }, this);\n      store.getServices(true);\n    },\n\n    __createServicesLayout: function() {\n      const servicesList = this.__createServicesListLayout();\n      this._add(servicesList);\n\n      const serviceDescription = this.__createServiceDescriptionLayout();\n      this._add(serviceDescription, {\n        flex: 1\n      });\n    },\n\n    __createServicesListLayout: function() {\n      const servicesLayout = this.__createVBoxWLabel(this.tr(\"Services\"));\n\n      const serviceFilters = this.__serviceFilters = new qxapp.desktop.ServiceFilters(\"serviceBrowser\");\n      servicesLayout.add(serviceFilters);\n\n      const servicesList = this.__servicesList = new qx.ui.form.List().set({\n        orientation: \"vertical\",\n        minWidth: 400,\n        appearance: \"pb-list\"\n      });\n      servicesList.addListener(\"changeSelection\", e => {\n        if (e.getData() && e.getData().length>0) {\n          const selectedKey = e.getData()[0].getModel();\n          this.__serviceSelected(selectedKey);\n        }\n      }, this);\n      const store = qxapp.store.Store.getInstance();\n      const latestServices = [];\n      const services = this.__allServices = store.getServices();\n      for (const serviceKey in services) {\n        latestServices.push(qxapp.utils.Services.getLatest(services, serviceKey));\n      }\n      const latestServicesModel = new qx.data.Array(\n        latestServices.map(s => qx.data.marshal.Json.createModel(s))\n      );\n      const servCtrl = new qx.data.controller.List(latestServicesModel, servicesList, \"name\");\n      servCtrl.setDelegate({\n        createItem: () => {\n          const item = new qxapp.desktop.ServiceBrowserListItem();\n          item.subscribeToFilterGroup(\"serviceBrowser\");\n          item.addListener(\"tap\", e => {\n            servicesList.setSelection([item]);\n          });\n          return item;\n        },\n        bindItem: (ctrl, item, id) => {\n          ctrl.bindProperty(\"key\", \"model\", null, item, id);\n          ctrl.bindProperty(\"key\", \"key\", null, item, id);\n          ctrl.bindProperty(\"name\", \"title\", null, item, id);\n          ctrl.bindProperty(\"description\", \"description\", null, item, id);\n          ctrl.bindProperty(\"type\", \"type\", null, item, id);\n          ctrl.bindProperty(\"category\", \"category\", null, item, id);\n          ctrl.bindProperty(\"contact\", \"contact\", null, item, id);\n        }\n      });\n      servicesLayout.add(servicesList, {\n        flex: 1\n      });\n\n      // Workaround to the list.changeSelection\n      servCtrl.addListener(\"changeValue\", e => {\n        if (e.getData() && e.getData().length>0) {\n          const selectedService = e.getData().toArray()[0];\n          this.__serviceSelected(selectedService);\n        } else {\n          this.__serviceSelected(null);\n        }\n      }, this);\n\n      return servicesLayout;\n    },\n\n    __createServiceDescriptionLayout: function() {\n      const descriptionView = new qx.ui.container.Composite(new qx.ui.layout.VBox(10)).set({\n        marginTop: 20\n      });\n\n      const titleContainer = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n\n      const label = new qx.ui.basic.Label(this.tr(\"Description\")).set({\n        font: qx.bom.Font.fromConfig(qxapp.theme.Font.fonts[\"nav-bar-label\"]),\n        minWidth: 150\n      });\n      titleContainer.add(label);\n\n      titleContainer.add(new qx.ui.basic.Atom(this.tr(\"Version\")));\n\n      const versions = this.__versionsList = new qx.ui.form.SelectBox();\n      qxapp.utils.Utils.setIdToWidget(versions, \"serviceBrowserVersionsDrpDwn\");\n      titleContainer.add(versions);\n      versions.addListener(\"changeSelection\", e => {\n        if (e.getData() && e.getData().length) {\n          this.__versionSelected(e.getData()[0].getLabel());\n        }\n      }, this);\n      descriptionView.add(titleContainer);\n\n      const descriptionContainer = this.__serviceDescription = new qx.ui.container.Scroll();\n      descriptionView.add(descriptionContainer, {\n        flex: 1\n      });\n      return descriptionView;\n    },\n\n    __createVBoxWLabel: function(text) {\n      const vBoxLayout = new qx.ui.container.Composite(new qx.ui.layout.VBox(10)).set({\n        marginTop: 20\n      });\n\n      const label = new qx.ui.basic.Label(text).set({\n        font: qx.bom.Font.fromConfig(qxapp.theme.Font.fonts[\"nav-bar-label\"]),\n        minWidth: 150\n      });\n      vBoxLayout.add(label);\n\n      return vBoxLayout;\n    },\n\n    __attachEventHandlers: function() {\n      const textfield = this.__serviceFilters.getTextFilter().getChildControl(\"textfield\", true);\n      textfield.addListener(\"appear\", () => {\n        qxapp.component.filter.UIFilterController.getInstance().resetGroup(\"serviceCatalog\");\n        textfield.focus();\n      }, this);\n      textfield.addListener(\"keypress\", e => {\n        if (e.getKeyIdentifier() === \"Enter\") {\n          const selectables = this.__servicesList.getSelectables();\n          if (selectables) {\n            this.__servicesList.setSelection([selectables[0]]);\n          }\n        }\n      }, this);\n    },\n\n    __serviceSelected: function(serviceKey) {\n      if (this.__versionsList) {\n        const versionsList = this.__versionsList;\n        versionsList.removeAll();\n        if (serviceKey in this.__allServices) {\n          const versions = qxapp.utils.Services.getVersions(this.__allServices, serviceKey);\n          if (versions) {\n            let lastItem = null;\n            versions.forEach(version => {\n              lastItem = new qx.ui.form.ListItem(version);\n              versionsList.add(lastItem);\n            });\n            if (lastItem) {\n              versionsList.setSelection([lastItem]);\n              this.__versionSelected(lastItem.getLabel());\n            }\n          }\n        } else {\n          this.__updateServiceDescription(null);\n        }\n      }\n    },\n\n    __versionSelected: function(versionKey) {\n      const serviceSelection = this.__servicesList.getSelection();\n      if (serviceSelection.length > 0) {\n        const serviceKey = serviceSelection[0].getModel();\n        const selectedService = qxapp.utils.Services.getFromObject(this.__allServices, serviceKey, versionKey);\n        this.__updateServiceDescription(selectedService);\n      }\n    },\n\n    __updateServiceDescription: function(selectedService) {\n      const serviceDescription = this.__serviceDescription;\n      if (serviceDescription) {\n        if (selectedService) {\n          const serviceInfo = new qxapp.component.metadata.ServiceInfo(selectedService);\n          serviceDescription.add(serviceInfo);\n        } else {\n          serviceDescription.add(null);\n        }\n      }\n    },\n\n    __nodeCheck: function(services) {\n      /** a little ajv test */\n      let nodeCheck = new qx.io.request.Xhr(\"/resource/qxapp/node-meta-v0.0.1.json\");\n      nodeCheck.addListener(\"success\", e => {\n        let data = e.getTarget().getResponse();\n        try {\n          let ajv = new qxapp.wrapper.Ajv(data);\n          for (const srvId in services) {\n            const service = services[srvId];\n            let check = ajv.validate(service);\n            console.log(\"services validation result \" + service.key + \":\", check);\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }, this);\n      nodeCheck.send();\n    }\n  }\n});\n"
  ]
}