{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/desktop/StudyEditor.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "splitpane",
    "Pane",
    "construct",
    "study",
    "qxapp",
    "utils",
    "UuidToName",
    "getInstance",
    "setStudy",
    "__studyResources",
    "io",
    "rest",
    "ResourceFactory",
    "createStudyResources",
    "mainPanel",
    "__mainPanel",
    "desktop",
    "MainPanel",
    "set",
    "minWidth",
    "sidePanel",
    "__sidePanel",
    "SidePanel",
    "maxWidth",
    "width",
    "scroll",
    "__scrollContainer",
    "container",
    "Scroll",
    "add",
    "initDefault",
    "connectEvents",
    "__startAutoSaveTimer",
    "__attachEventHandlers",
    "properties",
    "check",
    "nullable",
    "events",
    "members",
    "__pipelineId",
    "__workbenchUI",
    "__nodesTree",
    "__extraView",
    "__loggerView",
    "__nodeView",
    "__currentNodeId",
    "__autoSaveTimer",
    "destruct",
    "__stopAutoSaveTimer",
    "getStudy",
    "nodesTree",
    "component",
    "widget",
    "NodesTree",
    "getName",
    "getWorkbench",
    "addListener",
    "__addNode",
    "e",
    "nodeId",
    "getData",
    "__removeNode",
    "addOrReplaceAt",
    "PanelView",
    "tr",
    "extraView",
    "metadata",
    "StudyInfo",
    "setMaxHeight",
    "loggerView",
    "logger",
    "LoggerView",
    "workbenchUI",
    "workbench",
    "WorkbenchUI",
    "edgeId",
    "currentNode",
    "getNode",
    "edge",
    "getEdge",
    "removed",
    "isContainer",
    "getOutputNodeId",
    "getNodeId",
    "inputNode",
    "getInputNodeId",
    "setIsOutputNode",
    "cNodeId",
    "allNodes",
    "getNodes",
    "node",
    "isInputNode",
    "isInnerNode",
    "removeEdge",
    "clearEdge",
    "showInMainView",
    "nodeView",
    "NodeView",
    "minHeight",
    "setWorkbench",
    "getControls",
    "__startPipeline",
    "__stopPipeline",
    "__workbenchChanged",
    "data",
    "portKey",
    "__updatePipelineAndRetrieve",
    "ev",
    "msg",
    "getLogger",
    "info",
    "forEach",
    "wb",
    "nodeSelected",
    "getNodeUI",
    "classname",
    "includes",
    "setActive",
    "openNodeAndParents",
    "setCurrentNodeId",
    "restoreIFrame",
    "__getWidgetForNode",
    "isInKey",
    "filePicker",
    "window",
    "Window",
    "getLabel",
    "layout",
    "Grow",
    "contentPadding",
    "height",
    "appearance",
    "showMinimize",
    "modal",
    "showParentWorkbench",
    "getParentNodeId",
    "core",
    "Init",
    "getApplication",
    "getRoot",
    "show",
    "center",
    "close",
    "loadModel",
    "hasDedicatedWidget",
    "showDedicatedWidget",
    "DashGrid",
    "file",
    "FilePicker",
    "getUuid",
    "setNode",
    "buildLayout",
    "getMainView",
    "openServiceCatalog",
    "connectedEdges",
    "getConnectedEdges",
    "removeNode",
    "i",
    "length",
    "clearNode",
    "__removeEdge",
    "populateTree",
    "dedicatedWrapper",
    "Composite",
    "VBox",
    "dedicatedWidget",
    "getDedicatedWidget",
    "btnLabel",
    "btnIcon",
    "expertModeBtn",
    "form",
    "Button",
    "label",
    "icon",
    "gap",
    "alignX",
    "setDedicatedWidget",
    "flex",
    "setMainView",
    "nodesPath",
    "getPathIds",
    "fireDataEvent",
    "__getCurrentPipeline",
    "saveContainers",
    "savePosition",
    "currentPipeline",
    "serializeWorkbench",
    "key",
    "version",
    "modelSelected",
    "inputs",
    "updateStudyDocument",
    "__retrieveInputs",
    "bind",
    "debug",
    "retrieveInputs",
    "Permissions",
    "canDo",
    "__doStartPipeline",
    "clearProgressData",
    "socket",
    "wrapper",
    "WebSocket",
    "slotName",
    "removeSlot",
    "on",
    "d",
    "JSON",
    "parse",
    "msgs",
    "infos",
    "emit",
    "slotName2",
    "progress",
    "Number",
    "parseFloat",
    "toFixed",
    "setProgress",
    "url",
    "encodeURIComponent",
    "req",
    "request",
    "ApiRequest",
    "__onPipelinesubmitted",
    "error",
    "send",
    "requestData",
    "util",
    "Serializer",
    "toJson",
    "__onPipelineStopped",
    "resp",
    "getTarget",
    "getResponse",
    "pipelineId",
    "notGood",
    "undefined",
    "diffPatcher",
    "JsonDiffPatch",
    "interval",
    "timer",
    "event",
    "Timer",
    "newObj",
    "serializeStudy",
    "delta",
    "diff",
    "__lastSavedPrj",
    "deltaKeys",
    "Object",
    "keys",
    "index",
    "indexOf",
    "splice",
    "start",
    "isEnabled",
    "stop",
    "setEnabled",
    "run",
    "cbSuccess",
    "cbError",
    "setLastChangeDate",
    "Date",
    "prjUuid",
    "resource",
    "project",
    "addListenerOnce",
    "clone",
    "call",
    "put",
    "closeStudy",
    "__blocker",
    "toggleCollapsed",
    "maximizeIframeCb",
    "setStyles",
    "display",
    "setVisibility",
    "message",
    "Bus",
    "subscribe",
    "unsubscribe",
    "StudyEditor"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/* eslint newline-per-chained-call: 0 */\n\nqx.Class.define(\"qxapp.desktop.StudyEditor\", {\n  extend: qx.ui.splitpane.Pane,\n\n  construct: function(study) {\n    this.base(arguments, \"horizontal\");\n\n    qxapp.utils.UuidToName.getInstance().setStudy(study);\n\n    this.__studyResources = qxapp.io.rest.ResourceFactory.getInstance().createStudyResources();\n\n    this.setStudy(study);\n\n    let mainPanel = this.__mainPanel = new qxapp.desktop.MainPanel().set({\n      minWidth: 1000\n    });\n    let sidePanel = this.__sidePanel = new qxapp.desktop.SidePanel().set({\n      minWidth: 0,\n      maxWidth: 800,\n      width: 500\n    });\n\n    const scroll = this.__scrollContainer = new qx.ui.container.Scroll().set({\n      minWidth: 0\n    });\n    scroll.add(sidePanel);\n\n    this.add(mainPanel, 1); // flex 1\n    this.add(scroll, 0); // flex 0\n\n    this.initDefault();\n    this.connectEvents();\n\n    this.__startAutoSaveTimer();\n    this.__attachEventHandlers();\n  },\n\n  properties: {\n    study: {\n      check: \"qxapp.data.model.Study\",\n      nullable: false\n    }\n  },\n\n  events: {\n    \"changeMainViewCaption\": \"qx.event.type.Data\",\n    \"studySaved\": \"qx.event.type.Data\"\n  },\n\n  members: {\n    __studyResources: null,\n    __pipelineId: null,\n    __mainPanel: null,\n    __sidePanel: null,\n    __scrollContainer: null,\n    __workbenchUI: null,\n    __nodesTree: null,\n    __extraView: null,\n    __loggerView: null,\n    __nodeView: null,\n    __currentNodeId: null,\n    __autoSaveTimer: null,\n\n    /**\n     * Destructor\n     */\n    destruct: function() {\n      this.__stopAutoSaveTimer();\n    },\n\n    initDefault: function() {\n      const study = this.getStudy();\n\n      const nodesTree = this.__nodesTree = new qxapp.component.widget.NodesTree(study.getName(), study.getWorkbench());\n      nodesTree.addListener(\"addNode\", () => {\n        this.__addNode();\n      }, this);\n      nodesTree.addListener(\"removeNode\", e => {\n        const nodeId = e.getData();\n        this.__removeNode(nodeId);\n      }, this);\n      this.__sidePanel.addOrReplaceAt(new qxapp.desktop.PanelView(this.tr(\"Service tree\"), nodesTree), 0);\n\n      const extraView = this.__extraView = new qxapp.component.metadata.StudyInfo(study);\n      extraView.setMaxHeight(300);\n      this.__sidePanel.addOrReplaceAt(new qxapp.desktop.PanelView(this.tr(\"Study information\"), extraView), 1);\n\n      const loggerView = this.__loggerView = new qxapp.component.widget.logger.LoggerView(study.getWorkbench());\n      this.__sidePanel.addOrReplaceAt(new qxapp.desktop.PanelView(this.tr(\"Logger\"), loggerView), 2);\n\n      const workbenchUI = this.__workbenchUI = new qxapp.component.workbench.WorkbenchUI(study.getWorkbench());\n      workbenchUI.addListener(\"removeNode\", e => {\n        const nodeId = e.getData();\n        this.__removeNode(nodeId);\n      }, this);\n      workbenchUI.addListener(\"removeEdge\", e => {\n        const edgeId = e.getData();\n        const workbench = this.getStudy().getWorkbench();\n        const currentNode = workbench.getNode(this.__currentNodeId);\n        const edge = workbench.getEdge(edgeId);\n        let removed = false;\n        if (currentNode && currentNode.isContainer() && edge.getOutputNodeId() === currentNode.getNodeId()) {\n          let inputNode = workbench.getNode(edge.getInputNodeId());\n          inputNode.setIsOutputNode(false);\n\n          // Remove also dependencies from outter nodes\n          const cNodeId = inputNode.getNodeId();\n          const allNodes = workbench.getNodes(true);\n          for (const nodeId in allNodes) {\n            let node = allNodes[nodeId];\n            if (node.isInputNode(cNodeId) && !currentNode.isInnerNode(node.getNodeId())) {\n              workbench.removeEdge(edgeId);\n            }\n          }\n          removed = true;\n        } else {\n          removed = workbench.removeEdge(edgeId);\n        }\n        if (removed) {\n          this.__workbenchUI.clearEdge(edgeId);\n        }\n      }, this);\n      this.showInMainView(workbenchUI, \"root\");\n\n      const nodeView = this.__nodeView = new qxapp.component.widget.NodeView().set({\n        minHeight: 200\n      });\n      nodeView.setWorkbench(study.getWorkbench());\n    },\n\n    connectEvents: function() {\n      this.__mainPanel.getControls().addListener(\"startPipeline\", this.__startPipeline, this);\n      this.__mainPanel.getControls().addListener(\"stopPipeline\", this.__stopPipeline, this);\n\n      let workbench = this.getStudy().getWorkbench();\n      workbench.addListener(\"workbenchChanged\", this.__workbenchChanged, this);\n\n      workbench.addListener(\"retrieveInputs\", e => {\n        const data = e.getData();\n        const node = data[\"node\"];\n        const portKey = data[\"portKey\"];\n        this.__updatePipelineAndRetrieve(node, portKey);\n      }, this);\n\n      workbench.addListener(\"showInLogger\", ev => {\n        const data = ev.getData();\n        const nodeId = data.nodeId;\n        const msg = data.msg;\n        this.getLogger().info(nodeId, msg);\n      }, this);\n\n      [\n        this.__nodesTree,\n        this.__workbenchUI\n      ].forEach(wb => {\n        wb.addListener(\"nodeDoubleClicked\", e => {\n          let nodeId = e.getData();\n          this.nodeSelected(nodeId, true);\n        }, this);\n      });\n\n      const workbenchUI = this.__workbenchUI;\n      const nodesTree = this.__nodesTree;\n      nodesTree.addListener(\"changeSelectedNode\", e => {\n        const node = workbenchUI.getNodeUI(e.getData());\n        if (node && node.classname.includes(\"NodeUI\")) {\n          node.setActive(true);\n        }\n      });\n      workbenchUI.addListener(\"changeSelectedNode\", e => {\n        nodesTree.nodeSelected(e.getData());\n      });\n    },\n\n    nodeSelected: function(nodeId, openNodeAndParents = false) {\n      if (!nodeId) {\n        this.__loggerView.setCurrentNodeId();\n        return;\n      }\n      if (this.__nodeView) {\n        this.__nodeView.restoreIFrame();\n      }\n      this.__currentNodeId = nodeId;\n      const widget = this.__getWidgetForNode(nodeId);\n      const workbench = this.getStudy().getWorkbench();\n      if (widget != this.__workbenchUI && workbench.getNode(nodeId).isInKey(\"file-picker\")) {\n        // open file picker in window\n        const filePicker = new qx.ui.window.Window(widget.getNode().getLabel()).set({\n          layout: new qx.ui.layout.Grow(),\n          contentPadding: 0,\n          width: 570,\n          height: 450,\n          appearance: \"service-window\",\n          showMinimize: false,\n          modal: true\n        });\n        const showParentWorkbench = () => {\n          const node = widget.getNode();\n          this.nodeSelected(node.getParentNodeId() || \"root\");\n        };\n        filePicker.add(widget);\n        qx.core.Init.getApplication().getRoot().add(filePicker);\n        filePicker.show();\n        filePicker.center();\n\n        widget.addListener(\"finished\", () => filePicker.close(), this);\n        filePicker.addListener(\"close\", () => showParentWorkbench());\n      } else {\n        this.showInMainView(widget, nodeId);\n      }\n      if (widget === this.__workbenchUI) {\n        if (nodeId === \"root\") {\n          this.__workbenchUI.loadModel(workbench);\n        } else {\n          let node = workbench.getNode(nodeId);\n          this.__workbenchUI.loadModel(node);\n        }\n      }\n\n      this.__nodesTree.nodeSelected(nodeId, openNodeAndParents);\n      this.__loggerView.setCurrentNodeId(nodeId);\n    },\n\n    __getWidgetForNode: function(nodeId) {\n      // Find widget for the given nodeId\n      const workbench = this.getStudy().getWorkbench();\n      let widget = null;\n      if (nodeId === \"root\") {\n        widget = this.__workbenchUI;\n      } else {\n        let node = workbench.getNode(nodeId);\n        if (node.isContainer()) {\n          if (node.hasDedicatedWidget() && node.showDedicatedWidget()) {\n            if (node.isInKey(\"multi-plot\")) {\n              widget = new qxapp.component.widget.DashGrid(node);\n            }\n          }\n          if (widget === null) {\n            widget = this.__workbenchUI;\n          }\n        } else if (node.isInKey(\"file-picker\")) {\n          widget = new qxapp.file.FilePicker(node, this.getStudy().getUuid());\n        } else {\n          this.__nodeView.setNode(node);\n          this.__nodeView.buildLayout();\n          widget = this.__nodeView;\n        }\n      }\n      return widget;\n    },\n\n    __addNode: function() {\n      if (this.__mainPanel.getMainView() !== this.__workbenchUI) {\n        return;\n      }\n      this.__workbenchUI.openServiceCatalog();\n    },\n\n    __removeNode: function(nodeId) {\n      if (nodeId === this.__currentNodeId) {\n        return false;\n      }\n\n      const workbench = this.getStudy().getWorkbench();\n      const connectedEdges = workbench.getConnectedEdges(nodeId);\n      if (workbench.removeNode(nodeId)) {\n        // remove first the connected edges\n        for (let i=0; i<connectedEdges.length; i++) {\n          const edgeId = connectedEdges[i];\n          this.__workbenchUI.clearEdge(edgeId);\n        }\n        this.__workbenchUI.clearNode(nodeId);\n        return true;\n      }\n      return false;\n    },\n\n    __removeEdge: function(edgeId) {\n      const workbench = this.getStudy().getWorkbench();\n      if (workbench.removeEdge(edgeId, this.__currentNodeId)) {\n        this.__workbenchUI.clearEdge(edgeId);\n      }\n    },\n\n    __workbenchChanged: function() {\n      this.__nodesTree.populateTree();\n      this.__nodesTree.nodeSelected(this.__currentNodeId);\n    },\n\n    showInMainView: function(widget, nodeId) {\n      const node = this.getStudy().getWorkbench().getNode(nodeId);\n      if (node && node.hasDedicatedWidget()) {\n        let dedicatedWrapper = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n        const dedicatedWidget = node.getDedicatedWidget();\n        const btnLabel = dedicatedWidget ? this.tr(\"Setup view\") : this.tr(\"Grid view\");\n        const btnIcon = dedicatedWidget ? \"@FontAwesome5Solid/wrench/16\" : \"@FontAwesome5Solid/eye/16\";\n        let expertModeBtn = new qx.ui.form.Button().set({\n          label: btnLabel,\n          icon: btnIcon,\n          gap: 10,\n          alignX: \"right\",\n          height: 25,\n          maxWidth: 150\n        });\n        expertModeBtn.addListener(\"execute\", () => {\n          node.setDedicatedWidget(!dedicatedWidget);\n          this.nodeSelected(nodeId);\n        }, this);\n        dedicatedWrapper.add(expertModeBtn);\n        dedicatedWrapper.add(widget, {\n          flex: 1\n        });\n        this.__mainPanel.setMainView(dedicatedWrapper);\n      } else {\n        this.__mainPanel.setMainView(widget);\n      }\n\n      let nodesPath = this.getStudy().getWorkbench().getPathIds(nodeId);\n      this.fireDataEvent(\"changeMainViewCaption\", nodesPath);\n    },\n\n    getLogger: function() {\n      return this.__loggerView;\n    },\n\n    __getCurrentPipeline: function() {\n      const saveContainers = false;\n      const savePosition = false;\n      let currentPipeline = this.getStudy().getWorkbench().serializeWorkbench(saveContainers, savePosition);\n      for (const nodeId in currentPipeline) {\n        let currentNode = currentPipeline[nodeId];\n        if (currentNode.key.includes(\"/neuroman\")) {\n          // HACK: Only Neuroman should enter here\n          currentNode.key = \"simcore/services/dynamic/modeler/webserver\";\n          currentNode.version = \"2.8.0\";\n          const modelSelected = currentNode.inputs[\"inModel\"];\n          delete currentNode.inputs[\"inModel\"];\n          currentNode.inputs[\"model_name\"] = modelSelected;\n        }\n      }\n      return currentPipeline;\n    },\n\n    __updatePipelineAndRetrieve: function(node, portKey = null) {\n      this.updateStudyDocument(\n        false,\n        this.__retrieveInputs.bind(this, node, portKey)\n      );\n      this.getLogger().debug(\"root\", \"Updating pipeline\");\n    },\n\n    __retrieveInputs: function(node, portKey = null) {\n      this.getLogger().debug(\"root\", \"Retrieveing inputs\");\n      if (node) {\n        node.retrieveInputs(portKey);\n      }\n    },\n\n    __startPipeline: function() {\n      if (!qxapp.data.Permissions.getInstance().canDo(\"study.start\", true)) {\n        return false;\n      }\n\n      return this.updateStudyDocument(true, this.__doStartPipeline);\n    },\n\n    __doStartPipeline: function() {\n      this.getStudy().getWorkbench().clearProgressData();\n\n      const socket = qxapp.wrapper.WebSocket.getInstance();\n\n      // callback for incoming logs\n      const slotName = \"logger\";\n      socket.removeSlot(slotName);\n      socket.on(slotName, function(data) {\n        const d = JSON.parse(data);\n        const nodeId = d[\"Node\"];\n        const msgs = d[\"Messages\"];\n        this.getLogger().infos(nodeId, msgs);\n      }, this);\n      socket.emit(slotName);\n\n      // callback for incoming progress\n      const slotName2 = \"progress\";\n      socket.removeSlot(slotName2);\n      socket.on(slotName2, function(data) {\n        const d = JSON.parse(data);\n        const nodeId = d[\"Node\"];\n        const progress = 100 * Number.parseFloat(d[\"Progress\"]).toFixed(4);\n        const workbench = this.getStudy().getWorkbench();\n        const node = workbench.getNode(nodeId);\n        if (node) {\n          node.setProgress(progress);\n        }\n      }, this);\n\n      // post pipeline\n      this.__pipelineId = null;\n      const url = \"/computation/pipeline/\" + encodeURIComponent(this.getStudy().getUuid()) + \"/start\";\n      const req = new qxapp.io.request.ApiRequest(url, \"POST\");\n      req.addListener(\"success\", this.__onPipelinesubmitted, this);\n      req.addListener(\"error\", e => {\n        this.getLogger().error(\"root\", \"Error submitting pipeline\");\n      }, this);\n      req.addListener(\"fail\", e => {\n        this.getLogger().error(\"root\", \"Failed submitting pipeline\");\n      }, this);\n      req.send();\n\n      this.getLogger().info(\"root\", \"Starting pipeline\");\n      return true;\n    },\n\n    __stopPipeline: function() {\n      if (!qxapp.data.Permissions.getInstance().canDo(\"study.stop\", true)) {\n        return false;\n      }\n\n      let req = new qxapp.io.request.ApiRequest(\"/stop_pipeline\", \"POST\");\n      let data = {};\n      data[\"project_id\"] = this.getStudy().getUuid();\n      req.set({\n        requestData: qx.util.Serializer.toJson(data)\n      });\n      req.addListener(\"success\", this.__onPipelineStopped, this);\n      req.addListener(\"error\", e => {\n        this.getLogger().error(\"root\", \"Error stopping pipeline\");\n      }, this);\n      req.addListener(\"fail\", e => {\n        this.getLogger().error(\"root\", \"Failed stopping pipeline\");\n      }, this);\n      // req.send();\n\n      this.getLogger().info(\"root\", \"Stopping pipeline. Not yet implemented\");\n      return true;\n    },\n\n    __onPipelinesubmitted: function(e) {\n      const resp = e.getTarget().getResponse();\n      const pipelineId = resp.data[\"project_id\"];\n      this.getLogger().debug(\"root\", \"Pipeline ID \" + pipelineId);\n      const notGood = [null, undefined, -1];\n      if (notGood.includes(pipelineId)) {\n        this.__pipelineId = null;\n        this.getLogger().error(\"root\", \"Submition failed\");\n      } else {\n        this.__pipelineId = pipelineId;\n        this.getLogger().info(\"root\", \"Pipeline started\");\n      }\n    },\n\n    __onPipelineStopped: function(e) {\n      this.getStudy().getWorkbench().clearProgressData();\n    },\n\n    __startAutoSaveTimer: function() {\n      let diffPatcher = qxapp.wrapper.JsonDiffPatch.getInstance();\n      // Save every 5 seconds\n      const interval = 5000;\n      let timer = this.__autoSaveTimer = new qx.event.Timer(interval);\n      timer.addListener(\"interval\", () => {\n        const newObj = this.getStudy().serializeStudy();\n        const delta = diffPatcher.diff(this.__lastSavedPrj, newObj);\n        if (delta) {\n          let deltaKeys = Object.keys(delta);\n          // lastChangeDate should not be taken into account as data change\n          const index = deltaKeys.indexOf(\"lastChangeDate\");\n          if (index > -1) {\n            deltaKeys.splice(index, 1);\n          }\n          if (deltaKeys.length > 0) {\n            this.updateStudyDocument(false);\n          }\n        }\n      }, this);\n      timer.start();\n    },\n\n    __stopAutoSaveTimer: function() {\n      if (this.__autoSaveTimer && this.__autoSaveTimer.isEnabled()) {\n        this.__autoSaveTimer.stop();\n        this.__autoSaveTimer.setEnabled(false);\n      }\n    },\n\n    updateStudyDocument: function(run=false, cbSuccess, cbError) {\n      this.getStudy().setLastChangeDate(new Date());\n      const newObj = this.getStudy().serializeStudy();\n      const prjUuid = this.getStudy().getUuid();\n\n      let resource = this.__studyResources.project;\n      resource.addListenerOnce(\"putSuccess\", ev => {\n        this.fireDataEvent(\"studySaved\", true);\n        this.__lastSavedPrj = qxapp.wrapper.JsonDiffPatch.getInstance().clone(newObj);\n        if (cbSuccess) {\n          cbSuccess.call(this);\n        }\n      }, this);\n      resource.addListenerOnce(\"putError\", ev => {\n        this.getLogger().error(\"root\", \"Error updating pipeline\");\n      }, this);\n      resource.put({\n        \"project_id\": prjUuid,\n        run\n      }, newObj);\n    },\n\n    closeStudy: function() {\n      this.getStudy().closeStudy();\n    },\n\n    __attachEventHandlers: function() {\n      this.__blocker.addListener(\"tap\", this.__sidePanel.toggleCollapsed.bind(this.__sidePanel));\n\n      const maximizeIframeCb = msg => {\n        this.__blocker.setStyles({\n          display: msg.getData() ? \"none\" : \"block\"\n        });\n        this.__scrollContainer.setVisibility(msg.getData() ? \"excluded\" : \"visible\");\n      };\n\n      this.addListener(\"appear\", () => {\n        qx.event.message.Bus.getInstance().subscribe(\"maximizeIframe\", maximizeIframeCb, this);\n      }, this);\n\n      this.addListener(\"disappear\", () => {\n        qx.event.message.Bus.getInstance().unsubscribe(\"maximizeIframe\", maximizeIframeCb, this);\n      }, this);\n    }\n  }\n});\n"
  ]
}