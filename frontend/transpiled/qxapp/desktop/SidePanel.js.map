{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/desktop/SidePanel.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "construct",
    "setAppearance",
    "_setLayout",
    "layout",
    "VBox",
    "__attachEventHandlers",
    "properties",
    "collapsed",
    "init",
    "check",
    "apply",
    "members",
    "__savedWidth",
    "__savedMinWidth",
    "addOrReplaceAt",
    "child",
    "index",
    "options",
    "getChildren",
    "visibility",
    "getVisibility",
    "setVisibility",
    "removeAt",
    "addAt",
    "toggleCollapsed",
    "setCollapsed",
    "getCollapsed",
    "_applyCollapsed",
    "__setDecorators",
    "forEach",
    "splitpaneContainer",
    "__getSplitpaneContainer",
    "__getCssWidth",
    "getMinWidth",
    "set",
    "minWidth",
    "width",
    "splitpane",
    "__getParentSplitpane",
    "__endSize",
    "parent",
    "getLayoutParent",
    "Pane",
    "getWidth",
    "getContentElement",
    "getDomElement",
    "parseInt",
    "style",
    "decorator",
    "widget",
    "setDecorator",
    "resetDecorator",
    "addListenerOnce",
    "addEventListener",
    "e",
    "getData",
    "qxapp",
    "desktop",
    "SidePanel"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * Widget containing a Vertical Box with widgets.\n * Used for the side panel in the study editor.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   let sidePanel = new qxapp.desktop.SidePanel();\n *   sidePanel.addAt(widget1, 0);\n *   sidePanel.addAt(widget2, 1);\n *   sidePanel.addAt(widget3, 2);\n *   this.getRoot().add(sidePanel);\n * </pre>\n */\n\nqx.Class.define(\"qxapp.desktop.SidePanel\", {\n  extend: qx.ui.container.Composite,\n\n  construct: function() {\n    this.base(arguments);\n\n    this.setAppearance(\"sidepanel\");\n\n    this._setLayout(new qx.ui.layout.VBox());\n\n    this.__attachEventHandlers();\n  },\n\n  properties: {\n    collapsed: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyCollapsed\"\n    }\n  },\n\n  members: {\n    __savedWidth: null,\n    __savedMinWidth: null,\n    /**\n     * Add a widget at the specified index. If the index already has a child, then replace it.\n     *\n     * @param {qx.ui.core.LayoutItem} child Widget to add\n     * @param {Integer} index Index, at which the widget will be inserted\n     * @param {Map?null} options Optional layout data for widget.\n     */\n    addOrReplaceAt: function(child, index, options = null) {\n      if (this.getChildren()[index]) {\n        const visibility = this.getChildren()[index].getVisibility();\n        child.setVisibility(visibility);\n        this.removeAt(index);\n      }\n      this.addAt(child, index, options);\n    },\n\n    /**\n     * Toggle the visibility of the side panel with a nice transition.\n     */\n    toggleCollapsed: function() {\n      this.setCollapsed(!this.getCollapsed());\n    },\n\n    _applyCollapsed: function(collapsed) {\n      this.__setDecorators(\"sidepanel\");\n      this.getChildren().forEach(child => child.setVisibility(collapsed ? \"excluded\" : \"visible\"));\n      const splitpaneContainer = this.__getSplitpaneContainer();\n      if (collapsed) {\n        // Save widths\n        this.__savedWidth = this.__getCssWidth();\n        this.__savedMinWidth = splitpaneContainer.getMinWidth();\n        splitpaneContainer.set({\n          minWidth: 0,\n          width: 20\n        });\n      } else {\n        // Restore widths\n        splitpaneContainer.set({\n          minWidth: this.__savedMinWidth,\n          width: this.__savedWidth\n        });\n      }\n      // Workaround: have to update splitpane's prop\n      const splitpane = this.__getParentSplitpane();\n      if (splitpane && this.__savedWidth) {\n        splitpane.__endSize = this.__savedWidth; // eslint-disable-line no-underscore-dangle\n      }\n    },\n\n    __getParentSplitpane: function() {\n      let parent = this.getLayoutParent();\n      while (parent && parent instanceof qx.ui.splitpane.Pane === false) {\n        parent = parent.getLayoutParent();\n      }\n      return parent;\n    },\n\n    __getSplitpaneContainer: function() {\n      const splitpane = this.__getParentSplitpane();\n      if (splitpane == null) { // eslint-disable-line no-eq-null\n        return this;\n      }\n      let container = this;\n      while (container.getLayoutParent() !== splitpane) {\n        container = container.getLayoutParent();\n      }\n      return container;\n    },\n\n    __getCssWidth: function() {\n      if (this.__getSplitpaneContainer().getWidth()) {\n        return this.__getSplitpaneContainer().getWidth();\n      } else if (this.__getSplitpaneContainer().getContentElement()\n        .getDomElement()) {\n        return parseInt(this.__getSplitpaneContainer().getContentElement()\n          .getDomElement().style.width);\n      }\n      return 300;\n    },\n\n    __setDecorators: function(decorator = null) {\n      const splitpane = this.__getParentSplitpane() || this;\n      let widget = this;\n      do {\n        if (decorator) {\n          widget.setDecorator(decorator);\n        } else {\n          widget.resetDecorator();\n        }\n        widget = widget.getLayoutParent();\n      }\n      while (widget && widget !== splitpane);\n    },\n\n    __attachEventHandlers: function() {\n      this.addListenerOnce(\"appear\", () => {\n        this.__getSplitpaneContainer().getContentElement()\n          .getDomElement()\n          .addEventListener(\"transitionend\", () => {\n            if (this.getCollapsed()) {\n              this.addListenerOnce(\"resize\", e => {\n                if (this.getCollapsed() && this.__getCssWidth() !== this.__savedWidth) {\n                  this.__savedWidth = e.getData().width;\n                  this.setCollapsed(false);\n                } else {\n                  this.__savedWidth = e.getData().width;\n                }\n              }, this);\n            } else {\n              this.__setDecorators();\n            }\n          });\n      }, this);\n    }\n  }\n});\n"
  ]
}