{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/desktop/preferences/pages/ProfilePage.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxapp",
    "desktop",
    "preferences",
    "pages",
    "BasePage",
    "construct",
    "iconSrc",
    "title",
    "tr",
    "__userProfileData",
    "__userProfileModel",
    "add",
    "__createProfileUser",
    "members",
    "box",
    "_createSectionBox",
    "email",
    "ui",
    "form",
    "TextField",
    "set",
    "placeholder",
    "firstName",
    "lastName",
    "role",
    "permissions",
    "data",
    "Permissions",
    "getInstance",
    "canDo",
    "SelectBox",
    "roles",
    "getChildrenRoles",
    "getRole",
    "i",
    "length",
    "roleItem",
    "ListItem",
    "setSelection",
    "addListener",
    "e",
    "newRole",
    "getData",
    "getLabel",
    "setRole",
    "readOnly",
    "Form",
    "renderer",
    "Single",
    "img",
    "basic",
    "Image",
    "decorator",
    "decoration",
    "Decorator",
    "radius",
    "alignX",
    "raw",
    "model",
    "marshal",
    "Json",
    "createModel",
    "controller",
    "Object",
    "addTarget",
    "converter",
    "replace",
    "c",
    "toUpperCase",
    "utils",
    "Avatar",
    "getUrl",
    "getValue",
    "manager",
    "validation",
    "Manager",
    "util",
    "Validate",
    "forEach",
    "field",
    "regExp",
    "updateBtn",
    "Button",
    "allowGrowX",
    "__resetDataToModel",
    "validate",
    "emailReq",
    "io",
    "request",
    "ApiRequest",
    "setRequestData",
    "getEmail",
    "profileReq",
    "getFirstName",
    "getLastName",
    "req",
    "addListenerOnce",
    "res",
    "getTarget",
    "getResponse",
    "component",
    "message",
    "FlashMessenger",
    "log",
    "error",
    "msg",
    "logAs",
    "send",
    "__getValuesFromServer",
    "__setDataToModel",
    "ProfilePage"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Pedro Crespo (pcrespov)\n\n************************************************************************ */\n\n/**\n *  User profile in preferences dialog\n *\n *  - user name, surname, email, avatar\n *\n */\n\nqx.Class.define(\"qxapp.desktop.preferences.pages.ProfilePage\", {\n  extend:qxapp.desktop.preferences.pages.BasePage,\n\n  construct: function() {\n    const iconSrc = \"@FontAwesome5Solid/sliders-h/24\";\n    const title = this.tr(\"Profile\");\n    this.base(arguments, title, iconSrc);\n\n    this.__userProfileData = null;\n    this.__userProfileModel = null;\n\n    this.add(this.__createProfileUser());\n  },\n\n  members: {\n    __userProfileData: null,\n    __userProfileModel: null,\n\n    __createProfileUser: function() {\n      // layout\n      const box = this._createSectionBox(\"User\");\n\n      const email = new qx.ui.form.TextField().set({\n        placeholder: this.tr(\"Email\")\n      });\n\n      const firstName = new qx.ui.form.TextField().set({\n        placeholder: this.tr(\"First Name\")\n      });\n\n      const lastName = new qx.ui.form.TextField().set({\n        placeholder: this.tr(\"Last Name\")\n      });\n\n      let role = null;\n      const permissions = qxapp.data.Permissions.getInstance();\n      if (permissions.canDo(\"preferences.role.update\")) {\n        role = new qx.ui.form.SelectBox();\n        const roles = permissions.getChildrenRoles(permissions.getRole());\n        for (let i=0; i<roles.length; i++) {\n          const roleItem = new qx.ui.form.ListItem(roles[i]);\n          role.add(roleItem);\n          role.setSelection([roleItem]);\n        }\n        role.addListener(\"changeSelection\", function(e) {\n          const newRole = e.getData()[0].getLabel();\n          permissions.setRole(newRole);\n        }, this);\n      } else {\n        role = new qx.ui.form.TextField().set({\n          readOnly: true\n        });\n      }\n\n      const form = new qx.ui.form.Form();\n      form.add(email, \"\", null, \"email\");\n      form.add(firstName, \"\", null, \"firstName\");\n      form.add(lastName, \"\", null, \"lastName\");\n      form.add(role, \"\", null, \"role\");\n\n      box.add(new qx.ui.form.renderer.Single(form));\n\n      const img = new qx.ui.basic.Image().set({\n        decorator: new qx.ui.decoration.Decorator().set({\n          radius: 50\n        }),\n        alignX: \"center\"\n      });\n      box.add(img);\n\n      // binding to a model\n      let raw = {\n        \"firstName\": null,\n        \"lastName\": null,\n        \"email\": null,\n        \"role\": null\n      };\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        raw = {\n          \"firstName\": \"Bizzy\",\n          \"lastName\": \"Zastrow\",\n          \"email\": \"bizzy@itis.ethz.ch\",\n          \"role\": \"Tester\"\n        };\n      }\n      const model = this.__userProfileModel = qx.data.marshal.Json.createModel(raw);\n      const controller = new qx.data.controller.Object(model);\n\n      controller.addTarget(email, \"value\", \"email\", true);\n      controller.addTarget(firstName, \"value\", \"firstName\", true, null, {\n        converter: function(data) {\n          return data.replace(/^\\w/, c => c.toUpperCase());\n        }\n      });\n      controller.addTarget(lastName, \"value\", \"lastName\", true);\n      controller.addTarget(role, \"value\", \"role\", false);\n      controller.addTarget(img, \"source\", \"email\", false, {\n        converter: function(data) {\n          return qxapp.utils.Avatar.getUrl(email.getValue(), 150);\n        }\n      });\n\n      // validation\n      const manager = new qx.ui.form.validation.Manager();\n      manager.add(email, qx.util.Validate.email());\n      [firstName, lastName].forEach(field => {\n        manager.add(field, qx.util.Validate.regExp(/[^\\.\\d]+/), this.tr(\"Avoid dots or numbers in text\"));\n      });\n\n      const updateBtn = new qx.ui.form.Button(\"Update Profile\").set({\n        allowGrowX: false\n      });\n      box.add(updateBtn);\n\n      // update trigger\n      updateBtn.addListener(\"execute\", () => {\n        if (!qxapp.data.Permissions.getInstance().canDo(\"preferences.user.update\", true)) {\n          this.__resetDataToModel();\n          return;\n        }\n\n        if (manager.validate()) {\n          const emailReq = new qxapp.io.request.ApiRequest(\"/auth/change-email\", \"POST\");\n          emailReq.setRequestData({\n            \"email\": model.getEmail()\n          });\n\n          const profileReq = new qxapp.io.request.ApiRequest(\"/me\", \"PUT\");\n          profileReq.setRequestData({\n            \"first_name\": model.getFirstName(),\n            \"last_name\": model.getLastName()\n          });\n\n          [emailReq, profileReq].forEach(req => {\n            // requests\n            req.addListenerOnce(\"success\", e => {\n              const res = e.getTarget().getResponse();\n              if (res && res.data) {\n                qxapp.component.message.FlashMessenger.getInstance().log(res.data);\n              }\n            }, this);\n\n            req.addListenerOnce(\"fail\", e => {\n              // FIXME: should revert to old?? or GET? Store might resolve this??\n              this.__resetDataToModel();\n              const error = e.getTarget().getResponse().error;\n              const msg = error ? error[\"errors\"][0].message : this.tr(\"Failed to update profile\");\n              qxapp.component.message.FlashMessenger.getInstance().logAs(msg, \"ERROR\");\n            }, this);\n\n            req.send();\n          });\n        }\n      }, this);\n\n      this.__getValuesFromServer();\n\n      return box;\n    },\n\n    __getValuesFromServer: function() {\n      // get values from server\n      const request = new qxapp.io.request.ApiRequest(\"/me\", \"GET\");\n      request.addListenerOnce(\"success\", e => {\n        const data = e.getTarget().getResponse()[\"data\"];\n        this.__setDataToModel(data);\n      }, this);\n\n      request.addListenerOnce(\"fail\", e => {\n        const error = e.getTarget().getResponse().error;\n        const msg = error ? error[\"errors\"][0].message : this.tr(\"Failed to get profile\");\n        qxapp.component.message.FlashMessenger.getInstance().logAs(msg, \"ERROR\", \"user\");\n      });\n\n      request.send();\n    },\n\n    __setDataToModel: function(data) {\n      if (data) {\n        this.__userProfileData = data;\n        this.__userProfileModel.set({\n          \"firstName\": data[\"first_name\"] || \"\",\n          \"lastName\": data[\"last_name\"] || \"\",\n          \"email\": data[\"login\"],\n          \"role\": data[\"role\"] || \"\"\n        });\n      }\n    },\n\n    __resetDataToModel: function() {\n      this.__setDataToModel(this.__userProfileData);\n    }\n  }\n});\n"
  ]
}