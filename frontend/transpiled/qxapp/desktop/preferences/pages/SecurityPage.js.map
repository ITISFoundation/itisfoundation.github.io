{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/desktop/preferences/pages/SecurityPage.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxapp",
    "desktop",
    "preferences",
    "pages",
    "BasePage",
    "construct",
    "iconSrc",
    "title",
    "tr",
    "__tokenResources",
    "io",
    "rest",
    "ResourceFactory",
    "getInstance",
    "createTokenResources",
    "add",
    "__createPasswordSection",
    "__createTokensSection",
    "members",
    "__tokensList",
    "box",
    "_createSectionBox",
    "label",
    "_createHelpLabel",
    "linkBtn",
    "ui",
    "form",
    "LinkButton",
    "container",
    "Composite",
    "layout",
    "VBox",
    "__rebuildTokensList",
    "removeAll",
    "tokens",
    "addListenerOnce",
    "e",
    "tokensList",
    "getRequest",
    "getResponse",
    "data",
    "length",
    "emptyForm",
    "__createEmptyTokenForm",
    "renderer",
    "Single",
    "i",
    "token",
    "tokenForm",
    "__createValidTokenForm",
    "console",
    "error",
    "get",
    "Form",
    "newTokenService",
    "TextField",
    "set",
    "value",
    "readOnly",
    "newTokenKey",
    "placeholder",
    "newTokenSecret",
    "addTokenBtn",
    "Button",
    "setWidth",
    "addListener",
    "Permissions",
    "canDo",
    "ev",
    "newTokenInfo",
    "getValue",
    "post",
    "addButton",
    "service",
    "key",
    "secret",
    "tokenService",
    "tokenKey",
    "tokenSecret",
    "delTokenBtn",
    "eve",
    "log",
    "del",
    "currentPassword",
    "PasswordField",
    "required",
    "newPassword",
    "confirm",
    "manager",
    "validation",
    "Manager",
    "setValidator",
    "_itemForms",
    "auth",
    "core",
    "Utils",
    "checkSamePasswords",
    "resetBtn",
    "allowGrowX",
    "validate",
    "request",
    "ApiRequest",
    "setRequestData",
    "res",
    "getTarget",
    "component",
    "message",
    "FlashMessenger",
    "forEach",
    "item",
    "resetValue",
    "msg",
    "logAs",
    "send",
    "SecurityPage"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Pedro Crespo (pcrespov)\n\n************************************************************************ */\n\n/**\n *  Security page\n *\n *  - access token\n *  - reset password (logged in)\n *\n */\n\nqx.Class.define(\"qxapp.desktop.preferences.pages.SecurityPage\", {\n  extend:qxapp.desktop.preferences.pages.BasePage,\n\n  construct: function() {\n    const iconSrc = \"@FontAwesome5Solid/shield-alt/24\";\n    const title = this.tr(\"Security\");\n    this.base(arguments, title, iconSrc);\n\n    this.__tokenResources = qxapp.io.rest.ResourceFactory.getInstance().createTokenResources();\n\n    this.add(this.__createPasswordSection());\n    this.add(this.__createTokensSection());\n  },\n\n  members: {\n    __tokenResources: null,\n\n    __tokensList: null,\n\n    __createTokensSection: function() {\n      // layout\n      let box = this._createSectionBox(this.tr(\"Access Tokens\"));\n\n      let label = this._createHelpLabel(this.tr(\n        \"List of API tokens to access external services. Currently, \\\n         only DAT-Core API keys are supported.\"\n      ));\n      box.add(label);\n\n      let linkBtn = new qxapp.ui.form.LinkButton(this.tr(\"To DAT-Core\"), \"https://app.blackfynn.io\");\n      box.add(linkBtn);\n\n      this.__tokensList = new qx.ui.container.Composite(new qx.ui.layout.VBox(10));\n      this.__rebuildTokensList();\n      box.add(this.__tokensList);\n\n      return box;\n    },\n\n    __rebuildTokensList: function() {\n      this.__tokensList.removeAll();\n\n      let tokens = this.__tokenResources.tokens;\n      tokens.addListenerOnce(\"getSuccess\", e => {\n        let tokensList = e.getRequest().getResponse().data;\n        if (tokensList.length === 0) {\n          let emptyForm = this.__createEmptyTokenForm();\n          this.__tokensList.add(new qx.ui.form.renderer.Single(emptyForm));\n        } else {\n          for (let i=0; i<tokensList.length; i++) {\n            const token = tokensList[i];\n            let tokenForm = this.__createValidTokenForm(token[\"service\"], token[\"token_key\"], token[\"token_secret\"]);\n            this.__tokensList.add(new qx.ui.form.renderer.Single(tokenForm));\n          }\n        }\n      }, this);\n\n      tokens.addListenerOnce(\"getError\", e => {\n        console.error(e);\n      });\n      tokens.get();\n    },\n\n    __createEmptyTokenForm: function() {\n      let form = new qx.ui.form.Form();\n\n      // FIXME: for the moment this is fixed since it has to be a unique id\n      let newTokenService = new qx.ui.form.TextField();\n      newTokenService.set({\n        value: \"blackfynn-datcore\",\n        readOnly: true\n      });\n      form.add(newTokenService, this.tr(\"Service\"));\n\n      // TODO:\n      let newTokenKey = new qx.ui.form.TextField();\n      newTokenKey.set({\n        placeholder: this.tr(\"Introduce token key here\")\n      });\n      form.add(newTokenKey, this.tr(\"Key\"));\n\n      let newTokenSecret = new qx.ui.form.TextField();\n      newTokenSecret.set({\n        placeholder: this.tr(\"Introduce token secret here\")\n      });\n      form.add(newTokenSecret, this.tr(\"Secret\"));\n\n      let addTokenBtn = new qx.ui.form.Button(this.tr(\"Add\"));\n      addTokenBtn.setWidth(100);\n      addTokenBtn.addListener(\"execute\", e => {\n        if (!qxapp.data.Permissions.getInstance().canDo(\"preferences.token.create\", true)) {\n          return;\n        }\n\n        let tokens = this.__tokenResources.tokens;\n        tokens.addListenerOnce(\"postSuccess\", ev => {\n          this.__rebuildTokensList();\n        }, this);\n        tokens.addListenerOnce(\"getError\", ev => {\n          console.error(ev);\n        });\n        const newTokenInfo = {\n          \"service\": newTokenService.getValue(),\n          \"token_key\": newTokenKey.getValue(),\n          \"token_secret\": newTokenSecret.getValue()\n        };\n        tokens.post(null, newTokenInfo);\n      }, this);\n      form.addButton(addTokenBtn);\n\n      return form;\n    },\n\n    __createValidTokenForm: function(service, key, secret) {\n      let form = new qx.ui.form.Form();\n\n      let tokenService = new qx.ui.form.TextField().set({\n        value: service,\n        readOnly: true\n      });\n      form.add(tokenService, this.tr(\"Service API\"));\n\n      let tokenKey = new qx.ui.form.TextField();\n      tokenKey.set({\n        value: key,\n        readOnly: true\n      });\n      form.add(tokenKey, this.tr(\"Key\"));\n\n      if (secret) {\n        let tokenSecret = new qx.ui.form.TextField();\n        tokenSecret.set({\n          value: secret,\n          readOnly: true\n        });\n        form.add(tokenSecret, this.tr(\"Secret\"));\n      }\n\n      let delTokenBtn = new qx.ui.form.Button(this.tr(\"Delete\"));\n      delTokenBtn.setWidth(100);\n      delTokenBtn.addListener(\"execute\", e => {\n        if (!qxapp.data.Permissions.getInstance().canDo(\"preferences.token.delete\", true)) {\n          return;\n        }\n\n        let token = this.__tokenResources.token;\n        token.addListenerOnce(\"delSuccess\", eve => {\n          this.__rebuildTokensList();\n        }, this);\n        token.addListenerOnce(\"delError\", eve => {\n          console.log(eve);\n        });\n        token.del({\n          \"service\": service\n        });\n      }, this);\n      form.addButton(delTokenBtn);\n\n      return form;\n    },\n\n    __createPasswordSection: function() {\n      // layout\n      let box = this._createSectionBox(this.tr(\"Password\"));\n\n      let currentPassword = new qx.ui.form.PasswordField().set({\n        required: true,\n        placeholder: this.tr(\"Your current password\")\n      });\n      box.add(currentPassword);\n\n      let newPassword = new qx.ui.form.PasswordField().set({\n        required: true,\n        placeholder: this.tr(\"Your new password\")\n      });\n      box.add(newPassword);\n\n      let confirm = new qx.ui.form.PasswordField().set({\n        required: true,\n        placeholder: this.tr(\"Retype your new password\")\n      });\n      box.add(confirm);\n\n      let manager = new qx.ui.form.validation.Manager();\n      manager.setValidator(function(_itemForms) {\n        return qxapp.auth.core.Utils.checkSamePasswords(newPassword, confirm);\n      });\n\n      let resetBtn = new qx.ui.form.Button(\"Reset Password\").set({\n        allowGrowX: false\n      });\n      box.add(resetBtn);\n\n      resetBtn.addListener(\"execute\", () => {\n        if (manager.validate()) {\n          let request = new qxapp.io.request.ApiRequest(\"/auth/change-password\", \"POST\");\n          request.setRequestData({\n            \"current\": currentPassword.getValue(),\n            \"new\": newPassword.getValue(),\n            \"confirm\": confirm.getValue()\n          });\n\n          request.addListenerOnce(\"success\", function(e) {\n            const res = e.getTarget().getResponse();\n            qxapp.component.message.FlashMessenger.getInstance().log(res.data);\n\n            [currentPassword, newPassword, confirm].forEach(item => {\n              item.resetValue();\n            });\n          }, this);\n\n          request.addListenerOnce(\"fail\", e => {\n            const error = e.getTarget().getResponse().error;\n            const msg = error ? error[\"errors\"][0].message : this.tr(\"Failed to reset password\");\n            qxapp.component.message.FlashMessenger.getInstance().logAs(msg, \"ERROR\");\n\n            [currentPassword, newPassword, confirm].forEach(item => {\n              item.resetValue();\n            });\n          }, this);\n\n          request.send();\n        }\n      });\n\n      return box;\n    }\n  }\n});\n"
  ]
}