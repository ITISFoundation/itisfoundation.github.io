{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/desktop/preferences/pages/ExperimentalPage.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxapp",
    "desktop",
    "preferences",
    "pages",
    "BasePage",
    "construct",
    "iconSrc",
    "title",
    "tr",
    "add",
    "__createThemesSelector",
    "members",
    "box",
    "_createSectionBox",
    "label",
    "_createHelpLabel",
    "linkBtn",
    "ui",
    "form",
    "LinkButton",
    "select",
    "SelectBox",
    "themeMgr",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "currentTheme",
    "getTheme",
    "themes",
    "Theme",
    "getAll",
    "key",
    "type",
    "item",
    "ListItem",
    "name",
    "setUserData",
    "setSelection",
    "addListener",
    "evt",
    "selected",
    "getData",
    "getUserData",
    "getByName",
    "setTheme",
    "ExperimentalPage"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Pedro Crespo (pcrespov)\n\n************************************************************************ */\n\n/**\n * Experimental Misc in preferences dialog\n *\n *\n */\n\nqx.Class.define(\"qxapp.desktop.preferences.pages.ExperimentalPage\", {\n  extend:qxapp.desktop.preferences.pages.BasePage,\n\n  construct: function() {\n    const iconSrc = \"@FontAwesome5Solid/flask/24\";\n    const title = this.tr(\"Experimental\");\n    this.base(arguments, title, iconSrc);\n\n    this.add(this.__createThemesSelector());\n  },\n\n  members: {\n\n    __createThemesSelector: function() {\n      // layout\n      let box = this._createSectionBox(\"UI Theme\");\n\n      let label = this._createHelpLabel(this.tr(\n        \"This is a list of experimental themes for the UI. By default the \\\n         osparc-theme is selected\"\n      ));\n      box.add(label);\n\n      let linkBtn = new qxapp.ui.form.LinkButton(this.tr(\"To qx-osparc-theme\"), \"https://github.com/ITISFoundation/qx-osparc-theme\");\n      box.add(linkBtn);\n\n      let select = new qx.ui.form.SelectBox(\"Theme\");\n      box.add(select);\n\n      // fill w/ themes\n      let themeMgr = qx.theme.manager.Meta.getInstance();\n      let currentTheme = themeMgr.getTheme();\n\n      let themes = qx.Theme.getAll();\n      for (let key in themes) {\n        let theme = themes[key];\n        if (theme.type === \"meta\") {\n          let item = new qx.ui.form.ListItem(theme.name);\n          item.setUserData(\"theme\", theme.name);\n          select.add(item);\n          if (theme.name == currentTheme.name) {\n            select.setSelection([item]);\n          }\n        }\n      }\n\n      select.addListener(\"changeSelection\", evt => {\n        let selected = evt.getData()[0].getUserData(\"theme\");\n        let theme = qx.Theme.getByName(selected);\n        if (theme) {\n          themeMgr.setTheme(theme);\n        }\n      });\n      return box;\n    }\n\n  }\n});\n"
  ]
}