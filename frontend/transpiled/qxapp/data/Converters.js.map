{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/data/Converters.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "__mergeFileTreeChildren",
    "one",
    "two",
    "newDir",
    "i",
    "length",
    "path",
    "children",
    "push",
    "fromDSMToVirtualTreeModel",
    "files",
    "uuidToName",
    "qxapp",
    "utils",
    "UuidToName",
    "getInstance",
    "file",
    "fileInTree",
    "createDirEntry",
    "splitted",
    "split",
    "prjId",
    "nodeId",
    "fileId",
    "prjLabel",
    "convertToName",
    "nodeLabel",
    "fileName",
    "createFileEntry",
    "parent",
    "j",
    "newItem",
    "fileInfo",
    "label",
    "location",
    "undefined",
    "lastModified",
    "size",
    "Math",
    "floor",
    "random",
    "toString",
    "__mergeAPITreeChildren",
    "key",
    "fromAPITreeToVirtualTreeModel",
    "treeItems",
    "showLeavesAsDirs",
    "portKey",
    "treeItem",
    "open",
    "branch",
    "leaf",
    "fromAPIListToVirtualListModel",
    "listItems",
    "list",
    "listItem",
    "item",
    "thumbnail",
    "fromTypeToIcon",
    "indexOf",
    "data",
    "Converters"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n *   Collection of static methods for converting data coming from the webserver into suitable\n * data for the frontend.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   let dataStore = qxapp.store.Data.getInstance();\n *   dataStore.addListenerOnce(\"nodeFiles\", e => {\n *     const files = e.getData();\n *     const newChildren = qxapp.data.Converters.fromDSMToVirtualTreeModel(files);\n *     this.__addTreeData(newChildren);\n *   }, this);\n *   dataStore.getNodeFiles(nodeId);\n * </pre>\n */\n\nqx.Class.define(\"qxapp.data.Converters\", {\n  type: \"static\",\n\n  statics: {\n    __mergeFileTreeChildren: function(one, two) {\n      let newDir = true;\n      for (let i=0; i<one.length; i++) {\n        if (one[i].path === two.path) {\n          newDir = false;\n          if (\"children\" in two) {\n            this.__mergeFileTreeChildren(one[i].children, two.children[0]);\n          }\n        }\n      }\n      if (one.length === 0 || \"fileId\" in two || newDir) {\n        one.push(two);\n      }\n    },\n\n    fromDSMToVirtualTreeModel: function(files) {\n      let uuidToName = qxapp.utils.UuidToName.getInstance();\n      let children = [];\n      for (let i=0; i<files.length; i++) {\n        const file = files[i];\n        let fileInTree = this.createDirEntry(\n          file[\"location\"],\n          file[\"location_id\"],\n          \"\"\n        );\n        if (file[\"location_id\"] === 0 || file[\"location_id\"] === \"0\") {\n          // simcore files\n          let splitted = file[\"file_uuid\"].split(\"/\");\n          if (splitted.length === 3) {\n            const prjId = splitted[0];\n            const nodeId = splitted[1];\n            const fileId = splitted[2];\n            let prjLabel = file[\"project_name\"] === \"\" ? uuidToName.convertToName(prjId) : file[\"project_name\"];\n            let nodeLabel = file[\"node_name\"] === \"\" ? uuidToName.convertToName(nodeId) : file[\"node_name\"];\n            let fileName = file[\"file_name\"] === \"\" ? fileId : file[\"file_name\"];\n            // node file\n            fileInTree.children.push(\n              this.createDirEntry(\n                prjLabel,\n                file[\"location_id\"],\n                prjId,\n                [this.createDirEntry(\n                  nodeLabel,\n                  file[\"location_id\"],\n                  prjId +\"/\"+ nodeId,\n                  [this.createFileEntry(\n                    fileName,\n                    file[\"location_id\"],\n                    file[\"file_id\"],\n                    file[\"last_modified\"],\n                    file[\"file_size\"])\n                  ]\n                )]\n              )\n            );\n            this.__mergeFileTreeChildren(children, fileInTree);\n          }\n        } else if (file[\"location_id\"] === 1 || file[\"location_id\"] === \"1\") {\n          // datcore files\n          let parent = fileInTree;\n          let splitted = file[\"file_uuid\"].split(\"/\");\n          for (let j=0; j<splitted.length-1; j++) {\n            const newItem = this.createDirEntry(\n              splitted[j],\n              file[\"location_id\"],\n              parent.path === \"\" ? splitted[j] : parent.path +\"/\"+ splitted[j]\n            );\n            parent.children.push(newItem);\n            parent = newItem;\n          }\n          let fileInfo = this.createFileEntry(\n            splitted[splitted.length-1],\n            file[\"location_id\"],\n            file[\"file_id\"],\n            file[\"last_modified\"],\n            file[\"file_size\"]);\n          parent.children.push(fileInfo);\n          this.__mergeFileTreeChildren(children, fileInTree);\n        }\n      }\n\n      return children;\n    },\n\n    createDirEntry: function(label, location, path, children = []) {\n      if (label === null || label === undefined || label === \"\") {\n        label = \"Unknown label\";\n      }\n      return {\n        label,\n        location,\n        path,\n        children\n      };\n    },\n\n    createFileEntry: function(label, location, fileId, lastModified, size) {\n      if (label === undefined) {\n        label = \"Unknown label\";\n      }\n      if (location === undefined) {\n        location = \"Unknown location\";\n      }\n      if (fileId === undefined) {\n        fileId = \"Unknown fileId\";\n      }\n      if (lastModified === undefined) {\n        lastModified = (Math.floor(Math.random()*1000000)+1).toString();\n      }\n      if (size === undefined) {\n        size = 0;\n      }\n      return {\n        label,\n        location,\n        fileId,\n        lastModified,\n        size\n      };\n    },\n\n    __mergeAPITreeChildren: function(one, two) {\n      let newDir = true;\n      for (let i=0; i<one.length; i++) {\n        if (one[i].key === two.key) {\n          newDir = false;\n          if (\"children\" in two) {\n            this.__mergeAPITreeChildren(one[i].children, two.children[0]);\n          }\n        }\n      }\n      // if (one.length === 0 || \"fileId\" in two || newDir) {\n      if (one.length === 0 || newDir) {\n        one.push(two);\n      }\n    },\n\n    fromAPITreeToVirtualTreeModel: function(treeItems, showLeavesAsDirs, portKey) {\n      let children = [];\n      for (let i=0; i<treeItems.length; i++) {\n        const treeItem = treeItems[i];\n        let splitted = treeItem.label.split(\"/\");\n        let newItem = {\n          label: splitted[0],\n          open: false,\n          portKey\n        };\n        if (splitted.length === 1) {\n          // leaf already\n          newItem.key = treeItem.key;\n          if (showLeavesAsDirs) {\n            newItem.children = [];\n          }\n        } else {\n          // branch\n          newItem.key = splitted[0];\n          newItem.children = [];\n          let parent = newItem;\n          for (let j=1; j<splitted.length-1; j++) {\n            let branch = {\n              label: splitted[j],\n              key: parent.key +\"/\"+ splitted[j],\n              open: false,\n              children: []\n            };\n            parent.children.push(branch);\n            parent = branch;\n          }\n          let leaf = {\n            label: splitted[splitted.length-1],\n            open: false,\n            key: parent.key +\"/\"+ splitted[splitted.length-1]\n          };\n          if (showLeavesAsDirs) {\n            leaf.children = [];\n          }\n          parent.children.push(leaf);\n        }\n        this.__mergeAPITreeChildren(children, newItem);\n      }\n      return children;\n    },\n\n    fromAPIListToVirtualListModel: function(listItems) {\n      let list = [];\n      for (let i=0; i<listItems.length; i++) {\n        const listItem = listItems[i];\n        let item = {\n          key: listItem[\"key\"],\n          label: listItem[\"label\"]\n        };\n        if (listItem.thumbnail) {\n          item[\"thumbnail\"] = listItem[\"thumbnail\"];\n        }\n        list.push(item);\n      }\n      return list;\n    },\n\n    fromTypeToIcon: function(type) {\n      // Introduce further mappings here\n      switch (type) {\n        case \"integer\":\n          return \"@MaterialIcons/arrow_right_alt/15\";\n        case \"string\":\n          return \"@MaterialIcons/format_quote/15\";\n      }\n      if (type.indexOf(\"data:\") === 0) {\n        return \"@MaterialIcons/insert_drive_file/15\";\n      }\n      return \"@MaterialIcons/arrow_right_alt/15\";\n    }\n  }\n});\n"
  ]
}