{
  "className": "qxapp.data.Converters",
  "packageName": "qxapp.data",
  "name": "Converters",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 37,
        "column": 0
      },
      "end": {
        "line": 254,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqxapp - the simcore frontend\n\nhttps:\n\nCopyright:\n2018 IT'IS Foundation, https:\n\nLicense:\nMIT: https:\n\nAuthors:\nOdei Maiz (odeimaiz)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Collection of static methods for converting data coming from the webserver into suitable\ndata for the frontend.\n\n*Example*\n\nHere is a little example of how to use the widget.\n\n<pre class='javascript'>\n  let dataStore = qxapp.store.Data.getInstance();\n  dataStore.addListenerOnce(\"nodeFiles\", e => {\n    const files = e.getData();\n    const newChildren = qxapp.data.Converters.fromDSMToVirtualTreeModel(files);\n    this.__addTreeData(newChildren);\n  }, this);\n  dataStore.getNodeFiles(nodeId);\n</pre>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": true,
  "isSingleton": false,
  "statics": {
    "__mergeFileTreeChildren": {
      "location": {
        "start": {
          "line": 41,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "fromDSMToVirtualTreeModel": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "createDirEntry": {
      "location": {
        "start": {
          "line": 125,
          "column": 4
        },
        "end": {
          "line": 135,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "createFileEntry": {
      "location": {
        "start": {
          "line": 137,
          "column": 4
        },
        "end": {
          "line": 160,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "__mergeAPITreeChildren": {
      "location": {
        "start": {
          "line": 162,
          "column": 4
        },
        "end": {
          "line": 176,
          "column": 5
        }
      },
      "type": "function",
      "access": "private"
    },
    "fromAPITreeToVirtualTreeModel": {
      "location": {
        "start": {
          "line": 178,
          "column": 4
        },
        "end": {
          "line": 222,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "fromAPIListToVirtualListModel": {
      "location": {
        "start": {
          "line": 224,
          "column": 4
        },
        "end": {
          "line": 238,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "fromTypeToIcon": {
      "location": {
        "start": {
          "line": 240,
          "column": 4
        },
        "end": {
          "line": 252,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}