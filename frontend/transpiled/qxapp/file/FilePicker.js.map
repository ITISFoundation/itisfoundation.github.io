{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/file/FilePicker.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "node",
    "studyId",
    "set",
    "filePickerLayout",
    "layout",
    "VBox",
    "_setLayout",
    "reloadButton",
    "_createChildControlImpl",
    "addListener",
    "__filesTree",
    "resetCache",
    "__initResources",
    "filesTree",
    "__selectionChanged",
    "__itemSelected",
    "__filesAdded",
    "toolbar",
    "ToolBar",
    "mainButtons",
    "__mainButtons",
    "Part",
    "addSpacer",
    "add",
    "_add",
    "addBtn",
    "e",
    "fileMetadata",
    "getData",
    "__setOutputFile",
    "selectBtn",
    "__selectBtn",
    "setEnabled",
    "properties",
    "check",
    "init",
    "events",
    "members",
    "id",
    "control",
    "form",
    "Button",
    "label",
    "tr",
    "icon",
    "allowGrowX",
    "qxapp",
    "file",
    "FilesTree",
    "flex",
    "FilesAdd",
    "getNode",
    "getStudyId",
    "locationId",
    "populateTree",
    "data",
    "getSelectedFile",
    "selectedItem",
    "getLocation",
    "getFileId",
    "getLabel",
    "setProgress",
    "repopulateOutputPortData",
    "fireEvent",
    "__getOutputFile",
    "outputs",
    "getOutputs",
    "store",
    "path",
    "__checkSelectedFileIsListed",
    "outFile",
    "value",
    "setSelectedFile",
    "FilePicker"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * Built-in service used for selecting a single file from storage and make it available in the workflow\n *\n *   It consists of a VBox containing a FilesTree, Add button and Select button:\n * - FilesTree will be populated with data provided by storage service (simcore.S3 and datcore)\n * - Add button will open a dialogue where the selected file will be upload to S3\n * - Select button puts the file in the output of the FilePicker node so that connected nodes can access it.\n * When the selection is made \"finished\" event will be fired\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   let filePicker = new qxapp.file.FilePicker(node, studyId);\n *   this.getRoot().add(filePicker);\n * </pre>\n */\n\nqx.Class.define(\"qxapp.file.FilePicker\", {\n  extend: qx.ui.core.Widget,\n\n  /**\n    * @param node {qxapp.data.model.Node} Node owning the widget\n    * @param studyId {String} StudyId of the study that node belongs to\n  */\n  construct: function(node, studyId) {\n    this.base(arguments);\n\n    this.set({\n      node,\n      studyId\n    });\n\n    const filePickerLayout = new qx.ui.layout.VBox();\n    this._setLayout(filePickerLayout);\n\n    const reloadButton = this._createChildControlImpl(\"reloadButton\");\n    reloadButton.addListener(\"execute\", function() {\n      this.__filesTree.resetCache();\n      this.__initResources();\n    }, this);\n\n    const filesTree = this.__filesTree = this._createChildControlImpl(\"filesTree\");\n    filesTree.addListener(\"selectionChanged\", this.__selectionChanged, this);\n    filesTree.addListener(\"itemSelected\", this.__itemSelected, this);\n    filesTree.addListener(\"filesAddedToTree\", this.__filesAdded, this);\n\n    const toolbar = new qx.ui.toolbar.ToolBar();\n    const mainButtons = this.__mainButtons = new qx.ui.toolbar.Part();\n    toolbar.addSpacer();\n    toolbar.add(mainButtons);\n\n    this._add(toolbar);\n\n    const addBtn = this._createChildControlImpl(\"addButton\");\n    addBtn.addListener(\"fileAdded\", e => {\n      const fileMetadata = e.getData();\n      if (\"location\" in fileMetadata && \"path\" in fileMetadata) {\n        this.__setOutputFile(fileMetadata[\"location\"], fileMetadata[\"path\"], fileMetadata[\"name\"]);\n      }\n      this.__initResources(fileMetadata[\"location\"]);\n    }, this);\n\n    const selectBtn = this.__selectBtn = this._createChildControlImpl(\"selectButton\");\n    selectBtn.setEnabled(false);\n    selectBtn.addListener(\"execute\", function() {\n      this.__itemSelected();\n    }, this);\n\n    this.__initResources();\n  },\n\n  properties: {\n    node: {\n      check: \"qxapp.data.model.Node\"\n    },\n\n    studyId: {\n      check: \"String\",\n      init: \"\"\n    }\n  },\n\n  events: {\n    \"finished\": \"qx.event.type.Event\"\n  },\n\n  members: {\n    __filesTree: null,\n    __selectBtn: null,\n    __mainButtons: null,\n\n    _createChildControlImpl: function(id) {\n      let control;\n      switch (id) {\n        case \"reloadButton\":\n          control = new qx.ui.form.Button().set({\n            label: this.tr(\"Reload\"),\n            icon: \"@FontAwesome5Solid/sync-alt/16\",\n            allowGrowX: false\n          });\n          this._add(control);\n          break;\n        case \"filesTree\":\n          control = new qxapp.file.FilesTree();\n          this._add(control, {\n            flex: 1\n          });\n          break;\n        case \"addButton\":\n          control = new qxapp.file.FilesAdd().set({\n            node: this.getNode(),\n            studyId: this.getStudyId()\n          });\n          this.__mainButtons.add(control);\n          break;\n        case \"selectButton\":\n          control = new qx.ui.toolbar.Button(this.tr(\"Select\"));\n          this.__mainButtons.add(control);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    __initResources: function(locationId = null) {\n      this.__filesTree.populateTree(null, locationId);\n    },\n\n    __selectionChanged: function() {\n      const data = this.__filesTree.getSelectedFile();\n      this.__selectBtn.setEnabled(data ? data[\"isFile\"] : false);\n    },\n\n    __itemSelected: function() {\n      const data = this.__filesTree.getSelectedFile();\n      if (data && data[\"isFile\"]) {\n        const selectedItem = data[\"selectedItem\"];\n        this.__setOutputFile(selectedItem.getLocation(), selectedItem.getFileId(), selectedItem.getLabel());\n        this.getNode().setProgress(100);\n        this.getNode().repopulateOutputPortData();\n        this.fireEvent(\"finished\");\n      }\n    },\n\n    __getOutputFile: function() {\n      const outputs = this.getNode().getOutputs();\n      return outputs[\"outFile\"];\n    },\n\n    __setOutputFile: function(store, path, label) {\n      if (store && path) {\n        const outputs = this.__getOutputFile();\n        outputs[\"value\"] = {\n          store,\n          path,\n          label\n        };\n      }\n    },\n\n    __filesAdded: function() {\n      this.__checkSelectedFileIsListed();\n    },\n\n    __checkSelectedFileIsListed: function() {\n      const outFile = this.__getOutputFile();\n      if (outFile && \"value\" in outFile && \"path\" in outFile.value) {\n        this.__filesTree.setSelectedFile(outFile.value.path);\n        this.__filesTree.fireEvent(\"selectionChanged\");\n      }\n    }\n  }\n});\n"
  ]
}