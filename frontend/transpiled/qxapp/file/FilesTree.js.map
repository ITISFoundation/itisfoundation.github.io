{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/file/FilesTree.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "VirtualTree",
    "construct",
    "set",
    "openMode",
    "decorator",
    "resetChecks",
    "addListener",
    "__selectionChanged",
    "keyEvent",
    "getKeyIdentifier",
    "__itemSelected",
    "properties",
    "dragMechnism",
    "check",
    "init",
    "dropMechnism",
    "events",
    "statics",
    "isDir",
    "item",
    "lang",
    "String",
    "firstUp",
    "getPath",
    "isFile",
    "addLoadingChild",
    "parent",
    "loadingModel",
    "qxapp",
    "file",
    "FileTreeItem",
    "label",
    "location",
    "path",
    "icon",
    "getChildren",
    "append",
    "removeLoadingChild",
    "i",
    "length",
    "toArray",
    "getLabel",
    "splice",
    "members",
    "__locations",
    "__datasets",
    "Set",
    "resetCache",
    "filesStore",
    "store",
    "Data",
    "getInstance",
    "populateTree",
    "nodeId",
    "locationId",
    "__populateNodeFiles",
    "__populateMyLocation",
    "__populateMyData",
    "getDelegate",
    "configureItem",
    "e",
    "__addDragAndDropMechanisms",
    "treeName",
    "__resetTree",
    "rootModel",
    "getModel",
    "FilesTree",
    "addListenerOnce",
    "files",
    "getData",
    "newChildren",
    "data",
    "Converters",
    "fromDSMToVirtualTreeModel",
    "__filesToRoot",
    "getNodeFiles",
    "removeAll",
    "locations",
    "size",
    "__locationsToRoot",
    "getLocations",
    "locationModel",
    "__getLocationModel",
    "ev",
    "datasets",
    "has",
    "__datasetsToLocation",
    "getDatasetsByLocation",
    "resetModel",
    "rootData",
    "children",
    "root",
    "marshal",
    "Json",
    "createModel",
    "setModel",
    "setDelegate",
    "createItem",
    "fileTreeItem",
    "datasetId",
    "dataset",
    "__filesToDataset",
    "getFilesByLocationAndDataset",
    "bindItem",
    "c",
    "id",
    "bindDefaultProperties",
    "bindProperty",
    "locationModels",
    "getLocation",
    "__getDatasetModel",
    "datasetModels",
    "datasetModel",
    "locationData",
    "createDirEntry",
    "name",
    "add",
    "datasetData",
    "display_name",
    "dataset_id",
    "isDataset",
    "loaded",
    "cachedData",
    "getFilesByLocationAndDatasetCached",
    "filesModel",
    "fireEvent",
    "currentModel",
    "newModelToAdd",
    "__fileToTree",
    "__addRecursively",
    "one",
    "two",
    "newDir",
    "oneArray",
    "getSelectedFile",
    "selectedItem",
    "__getSelectedItem",
    "addFileEntry",
    "fileMetadata",
    "console",
    "log",
    "__getLeafList",
    "leaves",
    "push",
    "__findUuidInLeaves",
    "uuid",
    "list",
    "j",
    "getFileId",
    "setSelectedFile",
    "fileId",
    "openNodeAndParents",
    "selected",
    "Array",
    "setSelection",
    "selection",
    "getSelection",
    "getDragMechnism",
    "__createDragMechanism",
    "getDropMechnism",
    "__createDropMechanism",
    "treeItem",
    "setDraggable",
    "getOriginalTarget",
    "addAction",
    "addType",
    "preventDefault",
    "setDroppable",
    "compatible",
    "supportsType",
    "from",
    "getRelatedTarget",
    "to",
    "getCurrentTarget",
    "dataStore",
    "requestSent",
    "copyFile",
    "fireDataEvent"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2019 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * VirtualTree that is able to build its content.\n *\n *   Elements in the tree also accept Drag and/or Drop mechanisms which are implemented here.\n * \"osparc-filePath\" type is used for the Drag&Drop.\n *\n *   If a file is dropped into a folder, this class will start the copying proccess fireing\n * \"fileCopied\" event if successful\n *\n * Also provides two static methods for checking whether en entry in the tree is File/Directory\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   let filesTree = new qxapp.file.FilesTree();\n *   this.getRoot().add(filesTree);\n * </pre>\n */\n\nqx.Class.define(\"qxapp.file.FilesTree\", {\n  extend: qx.ui.tree.VirtualTree,\n\n  construct: function() {\n    this.base(arguments, null, \"label\", \"children\");\n\n    this.set({\n      openMode: \"none\",\n      decorator: \"no-border\"\n    });\n\n    this.resetChecks();\n\n    this.addListener(\"tap\", this.__selectionChanged, this);\n\n    // Listen to \"Enter\" key\n    this.addListener(\"keypress\", function(keyEvent) {\n      if (keyEvent.getKeyIdentifier() === \"Enter\") {\n        this.__itemSelected();\n      }\n    }, this);\n  },\n\n  properties: {\n    dragMechnism: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    dropMechnism: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  events: {\n    \"selectionChanged\": \"qx.event.type.Event\",\n    \"itemSelected\": \"qx.event.type.Event\",\n    \"fileCopied\": \"qx.event.type.Data\",\n    \"filesAddedToTree\": \"qx.event.type.Event\"\n  },\n\n  statics: {\n    isDir: function(item) {\n      let isDir = false;\n      if (item[\"get\"+qx.lang.String.firstUp(\"path\")]) {\n        if (item.getPath() !== null) {\n          isDir = true;\n        }\n      }\n      return isDir;\n    },\n\n    isFile: function(item) {\n      let isFile = false;\n      if (item[\"set\"+qx.lang.String.firstUp(\"fileId\")]) {\n        isFile = true;\n      }\n      return isFile;\n    },\n\n    addLoadingChild: function(parent) {\n      const loadingModel = new qxapp.file.FileTreeItem().set({\n        label: \"Loading...\",\n        location: null,\n        path: null,\n        icon: \"@FontAwesome5Solid/circle-notch/12\"\n      });\n      parent.getChildren().append(loadingModel);\n    },\n\n    removeLoadingChild: function(parent) {\n      for (let i = parent.getChildren().length - 1; i >= 0; i--) {\n        if (parent.getChildren().toArray()[i].getLabel() === \"Loading...\") {\n          parent.getChildren().toArray()\n            .splice(i, 1);\n        }\n      }\n    }\n  },\n\n  members: {\n    __locations: null,\n    __datasets: null,\n\n    resetChecks: function() {\n      this.__locations = new Set();\n      this.__datasets = new Set();\n    },\n\n    resetCache: function() {\n      this.resetChecks();\n\n      const filesStore = qxapp.store.Data.getInstance();\n      filesStore.resetCache();\n    },\n\n    populateTree: function(nodeId = null, locationId = null) {\n      if (nodeId) {\n        this.__populateNodeFiles(nodeId);\n      } else if (locationId) {\n        this.__populateMyLocation(locationId);\n      } else {\n        this.__populateMyData();\n      }\n\n      this.getDelegate().configureItem = item => {\n        item.addListener(\"dbltap\", e => {\n          this.__itemSelected();\n        }, this);\n        this.__addDragAndDropMechanisms(item);\n      };\n    },\n\n    __populateNodeFiles: function(nodeId) {\n      const treeName = \"Node files\";\n      this.__resetTree(treeName);\n      const rootModel = this.getModel();\n      qxapp.file.FilesTree.addLoadingChild(rootModel);\n\n      const filesStore = qxapp.store.Data.getInstance();\n      filesStore.addListenerOnce(\"nodeFiles\", e => {\n        const files = e.getData();\n        const newChildren = qxapp.data.Converters.fromDSMToVirtualTreeModel(files);\n        this.__filesToRoot(newChildren);\n      }, this);\n      filesStore.getNodeFiles(nodeId);\n    },\n\n    __populateMyData: function() {\n      this.resetChecks();\n\n      const treeName = \"My Data\";\n      this.__resetTree(treeName);\n      const rootModel = this.getModel();\n      rootModel.getChildren().removeAll();\n      qxapp.file.FilesTree.addLoadingChild(rootModel);\n\n      const filesStore = qxapp.store.Data.getInstance();\n      filesStore.addListenerOnce(\"myLocations\", e => {\n        const locations = e.getData();\n        if (this.__locations.size === 0) {\n          this.resetChecks();\n\n          this.__locationsToRoot(locations);\n\n          for (let i=0; i<locations.length; i++) {\n            const locationId = locations[i][\"id\"];\n            this.__populateMyLocation(locationId);\n          }\n        }\n      }, this);\n      filesStore.getLocations();\n    },\n\n    __populateMyLocation: function(locationId = null) {\n      if (locationId !== null) {\n        const locationModel = this.__getLocationModel(locationId);\n        if (locationModel) {\n          locationModel.getChildren().removeAll();\n          qxapp.file.FilesTree.addLoadingChild(locationModel);\n        }\n      }\n\n      const filesStore = qxapp.store.Data.getInstance();\n      filesStore.addListener(\"myDatasets\", ev => {\n        const {\n          location,\n          datasets\n        } = ev.getData();\n        if (location === locationId && !this.__locations.has(locationId)) {\n          this.__datasetsToLocation(location, datasets);\n        }\n      }, this);\n      filesStore.getDatasetsByLocation(locationId);\n    },\n\n    __resetTree: function(treeName) {\n      // FIXME: It is not reseting the model\n      this.resetModel();\n      const rootData = {\n        label: treeName,\n        location: null,\n        path: null,\n        children: []\n      };\n      const root = qx.data.marshal.Json.createModel(rootData, true);\n\n      this.setModel(root);\n      this.setDelegate({\n        createItem: () => {\n          const fileTreeItem = new qxapp.file.FileTreeItem();\n          fileTreeItem.addListener(\"requestFiles\", e => {\n            const {\n              locationId,\n              datasetId\n            } = e.getData();\n\n            if (this.__datasets.has(datasetId)) {\n              return;\n            }\n\n            const filesStore = qxapp.store.Data.getInstance();\n            filesStore.addListener(\"myDocuments\", ev => {\n              const {\n                location,\n                dataset,\n                files\n              } = ev.getData();\n              this.__filesToDataset(location, dataset, files);\n            }, this);\n            filesStore.getFilesByLocationAndDataset(locationId, datasetId);\n          }, this);\n          return fileTreeItem;\n        },\n        bindItem: (c, item, id) => {\n          c.bindDefaultProperties(item, id);\n          c.bindProperty(\"fileId\", \"fileId\", null, item, id);\n          c.bindProperty(\"location\", \"location\", null, item, id);\n          c.bindProperty(\"isDataset\", \"isDataset\", null, item, id);\n          c.bindProperty(\"loaded\", \"loaded\", null, item, id);\n          c.bindProperty(\"path\", \"path\", null, item, id);\n          c.bindProperty(\"lastModified\", \"lastModified\", null, item, id);\n          c.bindProperty(\"size\", \"size\", null, item, id);\n          c.bindProperty(\"icon\", \"icon\", null, item, id);\n        }\n      });\n    },\n\n    __getLocationModel: function(locationId) {\n      const rootModel = this.getModel();\n      const locationModels = rootModel.getChildren();\n      for (let i=0; i<locationModels.length; i++) {\n        const locationModel = locationModels.toArray()[i];\n        if (locationModel.getLocation() === locationId || String(locationModel.getLocation()) === locationId) {\n          return locationModel;\n        }\n      }\n      return null;\n    },\n\n    __getDatasetModel: function(locationId, datasetId) {\n      const locationModel = this.__getLocationModel(locationId);\n      const datasetModels = locationModel.getChildren();\n      for (let i=0; i<datasetModels.length; i++) {\n        const datasetModel = datasetModels.toArray()[i];\n        if (datasetModel.getPath() === datasetId || String(datasetModel.getPath()) === datasetId) {\n          return datasetModel;\n        }\n      }\n      return null;\n    },\n\n    __locationsToRoot: function(locations) {\n      const rootModel = this.getModel();\n      rootModel.getChildren().removeAll();\n      for (let i=0; i<locations.length; i++) {\n        const location = locations[i];\n        const locationData = qxapp.data.Converters.createDirEntry(\n          location.name,\n          location.id,\n          \"\"\n        );\n        const locationModel = qx.data.marshal.Json.createModel(locationData, true);\n        rootModel.getChildren().append(locationModel);\n      }\n    },\n\n    __datasetsToLocation: function(locationId, datasets) {\n      const filesStore = qxapp.store.Data.getInstance();\n\n      const locationModel = this.__getLocationModel(locationId);\n      if (!locationModel) {\n        return;\n      }\n      this.__locations.add(locationId);\n      locationModel.getChildren().removeAll();\n      for (let i=0; i<datasets.length; i++) {\n        const dataset = datasets[i];\n        const datasetData = qxapp.data.Converters.createDirEntry(\n          dataset.display_name,\n          locationId,\n          dataset.dataset_id,\n        );\n        datasetData.isDataset = true;\n        datasetData.loaded = false;\n        const datasetModel = qx.data.marshal.Json.createModel(datasetData, true);\n        qxapp.file.FilesTree.addLoadingChild(datasetModel);\n        locationModel.getChildren().append(datasetModel);\n\n        // add cached files\n        const datasetId = dataset.dataset_id;\n        const cachedData = filesStore.getFilesByLocationAndDatasetCached(locationId, datasetId);\n        if (cachedData) {\n          this.__filesToDataset(cachedData.location, cachedData.dataset, cachedData.files);\n        }\n      }\n    },\n\n    __filesToDataset: function(locationId, datasetId, files) {\n      if (this.__datasets.has(datasetId)) {\n        return;\n      }\n\n      const datasetModel = this.__getDatasetModel(locationId, datasetId);\n      if (datasetModel) {\n        datasetModel.getChildren().removeAll();\n        if (files.length>0) {\n          const locationData = qxapp.data.Converters.fromDSMToVirtualTreeModel(files);\n          const datasetData = locationData[0].children;\n          for (let i=0; i<datasetData[0].children.length; i++) {\n            const filesModel = qx.data.marshal.Json.createModel(datasetData[0].children[i], true);\n            datasetModel.getChildren().append(filesModel);\n          }\n        }\n\n        this.__datasets.add(datasetId);\n        this.fireEvent(\"filesAddedToTree\");\n      }\n    },\n\n    __filesToRoot: function(data) {\n      const currentModel = this.getModel();\n      qxapp.file.FilesTree.removeLoadingChild(currentModel);\n\n      const newModelToAdd = qx.data.marshal.Json.createModel(data, true);\n      currentModel.getChildren().append(newModelToAdd);\n      this.setModel(currentModel);\n      this.fireEvent(\"filesAddedToTree\");\n    },\n\n    __fileToTree: function(data) {\n      if (\"location\" in data) {\n        const locationModel = this.__getLocationModel(data[\"location\"]);\n        if (locationModel && \"children\" in data && data[\"children\"].length>0) {\n          this.__addRecursively(locationModel.getChildren(), data[\"children\"][0]);\n        }\n      }\n    },\n\n    __addRecursively: function(one, two) {\n      let newDir = true;\n      const oneArray = one.toArray();\n      for (let i=0; i<oneArray.length; i++) {\n        if (\"getPath\" in oneArray[i] && oneArray[i].getPath() === two.path) {\n          newDir = false;\n          if (\"children\" in two) {\n            this.__addRecursively(oneArray[i].getChildren(), two.children[0]);\n          }\n        }\n      }\n      if (oneArray.length === 0 || \"fileId\" in two || newDir) {\n        one.append(qx.data.marshal.Json.createModel(two, true));\n      }\n    },\n\n    getSelectedFile: function() {\n      let selectedItem = this.__getSelectedItem();\n      if (selectedItem) {\n        const isFile = qxapp.file.FilesTree.isFile(selectedItem);\n        const data = {\n          selectedItem: selectedItem,\n          isFile: isFile\n        };\n        return data;\n      }\n      return null;\n    },\n\n    addFileEntry: function(fileMetadata) {\n      console.log(\"file copied\", fileMetadata);\n    },\n\n    __getLeafList: function(item, leaves) {\n      if (item.getChildren == null) { // eslint-disable-line no-eq-null\n        leaves.push(item);\n      } else {\n        for (let i=0; i<item.getChildren().length; i++) {\n          this.__getLeafList(item.getChildren().toArray()[i], leaves);\n        }\n      }\n    },\n\n    __findUuidInLeaves: function(uuid) {\n      const parent = this.getModel();\n      const list = [];\n      this.__getLeafList(parent, list);\n      for (let j = 0; j < list.length; j++) {\n        if (uuid === list[j].getFileId()) {\n          return list[j];\n        }\n      }\n      return null;\n    },\n\n    setSelectedFile: function(fileId) {\n      const item = this.__findUuidInLeaves(fileId);\n      if (item) {\n        this.openNodeAndParents(item);\n\n        const selected = new qx.data.Array([item]);\n        this.setSelection(selected);\n      }\n    },\n\n    __getSelectedItem: function() {\n      let selection = this.getSelection().toArray();\n      if (selection.length > 0) {\n        return selection[0];\n      }\n      return null;\n    },\n\n    __selectionChanged: function() {\n      let selectedItem = this.__getSelectedItem();\n      if (selectedItem) {\n        this.fireEvent(\"selectionChanged\");\n      }\n    },\n\n    __itemSelected: function() {\n      let selectedItem = this.__getSelectedItem();\n      if (selectedItem) {\n        this.fireEvent(\"itemSelected\");\n      }\n    },\n\n    __addDragAndDropMechanisms: function(item) {\n      if (this.getDragMechnism()) {\n        this.__createDragMechanism(item);\n      }\n\n      if (this.getDropMechnism()) {\n        this.__createDropMechanism(item);\n      }\n    },\n\n    __createDragMechanism: function(treeItem) {\n      treeItem.setDraggable(true);\n      treeItem.addListener(\"dragstart\", e => {\n        if (qxapp.file.FilesTree.isFile(e.getOriginalTarget())) {\n          // Register supported actions\n          e.addAction(\"copy\");\n          // Register supported types\n          e.addType(\"osparc-filePath\");\n        } else {\n          e.preventDefault();\n        }\n      }, this);\n    },\n\n    __createDropMechanism: function(treeItem) {\n      treeItem.setDroppable(true);\n      treeItem.addListener(\"dragover\", e => {\n        let compatible = false;\n        if (qxapp.file.FilesTree.isDir(e.getOriginalTarget())) {\n          if (e.supportsType(\"osparc-filePath\")) {\n            compatible = true;\n          }\n        }\n        if (!compatible) {\n          e.preventDefault();\n        }\n      }, this);\n\n      treeItem.addListener(\"drop\", e => {\n        if (e.supportsType(\"osparc-filePath\")) {\n          const from = e.getRelatedTarget();\n          const to = e.getCurrentTarget();\n          const dataStore = qxapp.store.Data.getInstance();\n          console.log(\"Copy\", from.getFileId(), \"to\", to.getPath());\n          const requestSent = dataStore.copyFile(from.getLocation(), from.getFileId(), to.getLocation(), to.getPath());\n          if (requestSent) {\n            dataStore.addListenerOnce(\"fileCopied\", ev => {\n              if (ev) {\n                this.fireDataEvent(\"fileCopied\", ev.getData());\n              }\n            }, this);\n          }\n        }\n      }, this);\n    }\n  }\n});\n"
  ]
}