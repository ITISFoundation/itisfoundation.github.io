{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/ui/basic/Label.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Label",
    "construct",
    "size",
    "bold",
    "set",
    "font",
    "qxapp",
    "getFont",
    "statics",
    "bom",
    "Font",
    "fromConfig",
    "theme",
    "fonts"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;AAIAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,sBAAhB,EAAwC;AACtCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,KADkB;;AAGtC;;;;AAIAC,IAAAA,SAAS,EAAE,mBAASC,IAAT,EAAeC,IAAf,EAAqB;AAC9B;AAEA,WAAKC,GAAL,CAAS;AACPC,QAAAA,IAAI,EAAEC,KAAK,CAACR,EAAN,CAASC,KAAT,CAAeC,KAAf,CAAqBO,OAArB,CAA6BL,IAA7B,EAAmCC,IAAnC;AADC,OAAT;AAGD,KAbqC;AAetCK,IAAAA,OAAO,EAAE;AACPD,MAAAA,OAAO,EAAE,mBAA8B;AAAA,YAArBL,IAAqB,uEAAhB,EAAgB;AAAA,YAAZC,IAAY,uEAAP,KAAO;;AACrC,YAAIA,IAAJ,EAAU;AACR,iBAAOZ,EAAE,CAACkB,GAAH,CAAOC,IAAP,CAAYC,UAAZ,CAAuBL,KAAK,CAACM,KAAN,CAAYF,IAAZ,CAAiBG,KAAjB,CAAuB,WAASX,IAAhC,CAAvB,CAAP;AACD;;AACD,eAAOX,EAAE,CAACkB,GAAH,CAAOC,IAAP,CAAYC,UAAZ,CAAuBL,KAAK,CAACM,KAAN,CAAYF,IAAZ,CAAiBG,KAAjB,CAAuB,UAAQX,IAA/B,CAAvB,CAAP;AACD;AANM;AAf6B,GAAxC;AArBAI,EAAAA,KAAK,CAACR,EAAN,CAASC,KAAT,CAAeC,KAAf,CAAqBN,aAArB,GAAqCA,aAArC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2019 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * Label with qxapp.theme.Font.fonts font set\n */\n\nqx.Class.define(\"qxapp.ui.basic.Label\", {\n  extend: qx.ui.basic.Label,\n\n  /**\n   * @param size {Number} Size of the Label\n   * @param bold {Boolean} True if bold\n   */\n  construct: function(size, bold) {\n    this.base(arguments);\n\n    this.set({\n      font: qxapp.ui.basic.Label.getFont(size, bold)\n    });\n  },\n\n  statics: {\n    getFont: function(size=14, bold=false) {\n      if (bold) {\n        return qx.bom.Font.fromConfig(qxapp.theme.Font.fonts[\"title-\"+size]);\n      }\n      return qx.bom.Font.fromConfig(qxapp.theme.Font.fonts[\"text-\"+size]);\n    }\n  }\n});\n"
  ]
}