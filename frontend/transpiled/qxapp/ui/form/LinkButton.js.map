{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/ui/form/LinkButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "Button",
    "construct",
    "label",
    "url",
    "height",
    "set",
    "iconPosition",
    "allowGrowX",
    "setIcon",
    "addListener",
    "window",
    "open",
    "qxapp",
    "LinkButton"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;AAaAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,0BAAhB,EAA4C;AAC1CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,MADuB;;AAG1C;;;;;AAKAC,IAAAA,SAAS,EAAE,mBAASC,KAAT,EAAgBC,GAAhB,EAAkC;AAAA,UAAbC,MAAa,uEAAJ,EAAI;AAC3C,+CAAqBF,KAArB;AAEA,WAAKG,GAAL,CAAS;AACPC,QAAAA,YAAY,EAAE,OADP;AAEPC,QAAAA,UAAU,EAAE;AAFL,OAAT;;AAKA,UAAIJ,GAAJ,EAAS;AACP,aAAKK,OAAL,CAAa,0CAA0CJ,MAAvD;AACA,aAAKK,WAAL,CAAiB,SAAjB,EAA4B,YAAM;AAChCC,UAAAA,MAAM,CAACC,IAAP,CAAYR,GAAZ;AACD,SAFD,EAEG,IAFH;AAGD;AACF;AAtByC,GAA5C;AA9BAS,EAAAA,KAAK,CAACd,EAAN,CAASC,IAAT,CAAcc,UAAd,CAAyBnB,aAAzB,GAAyCA,aAAzC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2019 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * A Button with low optical impact presenting as a simple weblink\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   const link = new qxapp.ui.basic.LinkLabel(this.tr(\"oSparc\"),\"https://osparc.io\");\n *   this.getRoot().add(link);\n * </pre>\n */\n\nqx.Class.define(\"qxapp.ui.form.LinkButton\", {\n  extend: qx.ui.form.Button,\n\n  /**\n    * @param label {String} Label to use\n    * @param url {String} Url to point to\n    * @param height {Integer?12} Height of the link icon\n  */\n  construct: function(label, url, height = 12) {\n    this.base(arguments, label);\n\n    this.set({\n      iconPosition: \"right\",\n      allowGrowX: false\n    });\n\n    if (url) {\n      this.setIcon(\"@FontAwesome5Solid/external-link-alt/\" + height);\n      this.addListener(\"execute\", () => {\n        window.open(url);\n      }, this);\n    }\n  }\n});\n"
  ]
}