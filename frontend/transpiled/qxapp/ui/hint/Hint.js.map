{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/ui/hint/Hint.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "element",
    "text",
    "_setLayout",
    "layout",
    "VBox",
    "set",
    "backgroundColor",
    "__hintContainer",
    "container",
    "Composite",
    "Basic",
    "appearance",
    "__caret",
    "height",
    "getContentElement",
    "addClass",
    "_add",
    "add",
    "basic",
    "Label",
    "rich",
    "maxWidth",
    "flex",
    "positionHint",
    "members",
    "addListener",
    "bom",
    "Location",
    "get",
    "getDomElement",
    "top",
    "left",
    "Dimension",
    "getSize",
    "width",
    "selfBounds",
    "getBounds",
    "setLayoutProperties",
    "Math",
    "floor",
    "root",
    "Init",
    "getApplication",
    "getRoot",
    "qxapp",
    "hint",
    "Hint"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/*\n * oSPARC - The SIMCORE frontend - https://osparc.io\n * Copyright: 2019 IT'IS Foundation - https://itis.swiss\n * License: MIT - https://opensource.org/licenses/MIT\n * Authors: Ignacio Pascual (ignapas)\n */\n\nqx.Class.define(\"qxapp.ui.hint.Hint\", {\n  extend: qx.ui.core.Widget,\n\n  construct: function(element, text) {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.VBox());\n    this.set({\n      backgroundColor: \"transparent\"\n    });\n\n    this.__hintContainer = new qx.ui.container.Composite(new qx.ui.layout.Basic());\n    this.__hintContainer.set({\n      appearance: \"hint\"\n    });\n\n    this.__caret = new qx.ui.container.Composite().set({\n      height: 5,\n      backgroundColor: \"transparent\"\n    });\n    this.__caret.getContentElement().addClass(\"hint\");\n    this._add(this.__caret);\n    this.__hintContainer.add(new qx.ui.basic.Label(text).set({\n      rich: true,\n      maxWidth: 250\n    }));\n    this._add(this.__hintContainer, {\n      flex: 1\n    });\n\n    this.positionHint(element);\n  },\n\n  members: {\n    positionHint: function(element) {\n      this.addListener(\"appear\", () => {\n        const {\n          top,\n          left\n        } = qx.bom.element.Location.get(element.getContentElement().getDomElement());\n        const {\n          width,\n          height\n        } = qx.bom.element.Dimension.getSize(element.getContentElement().getDomElement());\n        const selfBounds = this.getBounds();\n        this.setLayoutProperties({\n          top: top + height,\n          left: Math.floor(left + (width - selfBounds.width) / 2)\n        });\n      }, this);\n\n      const root = qx.core.Init.getApplication().getRoot();\n      root.add(this, {\n        top: -10000\n      });\n    }\n  }\n});\n"
  ]
}