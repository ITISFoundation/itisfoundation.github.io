{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/service/ServiceJumbo.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxapp",
    "ui",
    "form",
    "Jumbo",
    "include",
    "component",
    "filter",
    "MFilterable",
    "implement",
    "IFilterable",
    "construct",
    "serviceModel",
    "icon",
    "getName",
    "getDescription",
    "getContact",
    "setServiceModel",
    "properties",
    "members",
    "_filter",
    "exclude",
    "_unfilter",
    "show",
    "_shouldApplyFilter",
    "data",
    "text",
    "label",
    "getServiceModel",
    "trim",
    "toLowerCase",
    "indexOf",
    "tags",
    "length",
    "category",
    "getCategory",
    "type",
    "getType",
    "includes",
    "_shouldReactToFilter",
    "service",
    "ServiceJumbo"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;AAIAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,sCAAhB,EAAwD;AACtDC,IAAAA,MAAM,EAAEC,KAAK,CAACC,EAAN,CAASC,IAAT,CAAcC,KADgC;AAEtDC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAuBC,WAFsB;AAGtDC,IAAAA,SAAS,EAAER,KAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAuBG,WAHoB;;AAKtD;;;AAGAC,IAAAA,SAAS,EAAE,mBAASC,YAAT,EAAuBC,IAAvB,EAA6B;AACtC,iDAAqBD,YAAY,CAACE,OAAb,EAArB,EAA6CF,YAAY,CAACG,cAAb,EAA7C,EAA4EF,IAA5E,EAAkFD,YAAY,CAACI,UAAb,EAAlF;;AACA,UAAIJ,YAAY,IAAI,IAApB,EAA0B;AAAE;AAC1B,aAAKK,eAAL,CAAqBL,YAArB;AACD;AACF,KAbqD;AAetDM,IAAAA,UAAU,EAAE;AACVN,MAAAA,YAAY,EAAE;AADJ,KAf0C;AAmBtDO,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,mBAAW;AAClB,aAAKC,OAAL;AACD,OAHM;AAKPC,MAAAA,SAAS,EAAE,qBAAW;AACpB,aAAKC,IAAL;AACD,OAPM;AASPC,MAAAA,kBAAkB,EAAE,4BAASC,IAAT,EAAe;AACjC,YAAIA,IAAI,CAACC,IAAT,EAAe;AACb,cAAMC,KAAK,GAAG,KAAKC,eAAL,GAAuBd,OAAvB,GACXe,IADW,GAEXC,WAFW,EAAd;;AAGA,cAAIH,KAAK,CAACI,OAAN,CAAcN,IAAI,CAACC,IAAnB,MAA6B,CAAC,CAAlC,EAAqC;AACnC,mBAAO,IAAP;AACD;AACF;;AACD,YAAID,IAAI,CAACO,IAAL,IAAaP,IAAI,CAACO,IAAL,CAAUC,MAA3B,EAAmC;AACjC,cAAMC,QAAQ,GAAG,KAAKN,eAAL,GAAuBO,WAAvB,MAAwC,EAAzD;AACA,cAAMC,IAAI,GAAG,KAAKR,eAAL,GAAuBS,OAAvB,MAAoC,EAAjD;;AACA,cAAI,CAACZ,IAAI,CAACO,IAAL,CAAUM,QAAV,CAAmBJ,QAAQ,CAACL,IAAT,GAAgBC,WAAhB,EAAnB,CAAD,IAAsD,CAACL,IAAI,CAACO,IAAL,CAAUM,QAAV,CAAmBF,IAAI,CAACP,IAAL,GAAYC,WAAZ,EAAnB,CAA3D,EAA0G;AACxG,mBAAO,IAAP;AACD;AACF;;AACD,eAAO,KAAP;AACD,OA1BM;AA4BPS,MAAAA,oBAAoB,EAAE,8BAASd,IAAT,EAAe;AACnC,YAAIA,IAAI,CAACC,IAAL,IAAaD,IAAI,CAACC,IAAL,CAAUO,MAAV,GAAmB,CAApC,EAAuC;AACrC,iBAAO,IAAP;AACD;;AACD,YAAIR,IAAI,CAACO,IAAL,IAAaP,IAAI,CAACO,IAAL,CAAUC,MAA3B,EAAmC;AACjC,iBAAO,IAAP;AACD;;AACD,eAAO,KAAP;AACD;AApCM;AAnB6C,GAAxD;AArBAhC,EAAAA,KAAK,CAACK,SAAN,CAAgBkC,OAAhB,CAAwBC,YAAxB,CAAqC5C,aAArC,GAAqDA,aAArD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2019 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Ignacio Pascual (ignapas)\n\n************************************************************************ */\n\n/**\n * Big button representing a service. It shows it name, description and contact information. It also adds\n * filtering capabilities.\n */\nqx.Class.define(\"qxapp.component.service.ServiceJumbo\", {\n  extend: qxapp.ui.form.Jumbo,\n  include: qxapp.component.filter.MFilterable,\n  implement: qxapp.component.filter.IFilterable,\n\n  /**\n   * Constructor\n   */\n  construct: function(serviceModel, icon) {\n    this.base(arguments, serviceModel.getName(), serviceModel.getDescription(), icon, serviceModel.getContact());\n    if (serviceModel != null) { // eslint-disable-line no-eq-null\n      this.setServiceModel(serviceModel);\n    }\n  },\n\n  properties: {\n    serviceModel: {}\n  },\n\n  members: {\n    _filter: function() {\n      this.exclude();\n    },\n\n    _unfilter: function() {\n      this.show();\n    },\n\n    _shouldApplyFilter: function(data) {\n      if (data.text) {\n        const label = this.getServiceModel().getName()\n          .trim()\n          .toLowerCase();\n        if (label.indexOf(data.text) === -1) {\n          return true;\n        }\n      }\n      if (data.tags && data.tags.length) {\n        const category = this.getServiceModel().getCategory() || \"\";\n        const type = this.getServiceModel().getType() || \"\";\n        if (!data.tags.includes(category.trim().toLowerCase()) && !data.tags.includes(type.trim().toLowerCase())) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    _shouldReactToFilter: function(data) {\n      if (data.text && data.text.length > 1) {\n        return true;\n      }\n      if (data.tags && data.tags.length) {\n        return true;\n      }\n      return false;\n    }\n  }\n});\n"
  ]
}