{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/workbench/ServiceCatalog.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "window",
    "Window",
    "construct",
    "set",
    "showMinimize",
    "minWidth",
    "minHeight",
    "modal",
    "caption",
    "tr",
    "appearance",
    "contentPadding",
    "catalogLayout",
    "layout",
    "VBox",
    "setLayout",
    "filterLayout",
    "__createFilterLayout",
    "add",
    "list",
    "__createListLayout",
    "flex",
    "btnLayout",
    "__createButtonsLayout",
    "__createEvents",
    "__populateList",
    "__attachEventHandlers",
    "events",
    "statics",
    "LATEST",
    "members",
    "__allServicesList",
    "__allServicesObj",
    "__textfield",
    "__showAll",
    "__contextNodeId",
    "__contextPort",
    "__versionsBox",
    "__infoBtn",
    "__serviceBrowser",
    "__addBtn",
    "toolbar",
    "ToolBar",
    "filterPart",
    "Part",
    "spacing",
    "filters",
    "qxapp",
    "desktop",
    "ServiceFilters",
    "getTextFilter",
    "getChildControl",
    "showAllCheckbox",
    "form",
    "CheckBox",
    "value",
    "visibility",
    "data",
    "Permissions",
    "getInstance",
    "canDo",
    "addListener",
    "e",
    "__updateList",
    "addSpacer",
    "controlsPart",
    "reloadBtn",
    "Button",
    "services",
    "component",
    "service",
    "ServiceList",
    "width",
    "scrolledServices",
    "container",
    "Scroll",
    "height",
    "getData",
    "getServiceModel",
    "selectedService",
    "__changedSelection",
    "getKey",
    "infoPart",
    "versionLabel",
    "basic",
    "Atom",
    "selectBox",
    "SelectBox",
    "enabled",
    "infoBtn",
    "__showServiceInfo",
    "buttonsPart",
    "addBtn",
    "__onAddService",
    "setAllowGrowX",
    "cancelBtn",
    "__onCancel",
    "setContext",
    "nodeId",
    "port",
    "reload",
    "store",
    "Store",
    "getServices",
    "__addNewData",
    "newData",
    "utils",
    "Services",
    "convertObjectToArray",
    "filteredServices",
    "i",
    "length",
    "getValue",
    "key",
    "includes",
    "push",
    "groupedServices",
    "convertArrayToObject",
    "groupedServicesList",
    "serviceKey",
    "getLatest",
    "newModel",
    "marshal",
    "Json",
    "createModel",
    "Array",
    "setModel",
    "removeAll",
    "versions",
    "getVersions",
    "latest",
    "ListItem",
    "setSelection",
    "setEnabled",
    "model",
    "isSelectionEmpty",
    "__getSelectedService",
    "serviceModel",
    "eData",
    "contextNodeId",
    "contextPort",
    "fireDataEvent",
    "close",
    "selected",
    "getSelected",
    "serviceVersion",
    "getSelection",
    "getLabel",
    "toString",
    "getChildrenContainer",
    "getSelectables",
    "getFromArray",
    "win",
    "metadata",
    "ServiceInfoWindow",
    "center",
    "open",
    "filter",
    "UIFilterController",
    "resetGroup",
    "focus",
    "getKeyIdentifier",
    "selectFirstVisible",
    "workbench",
    "ServiceCatalog"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,0CAAhB,EAA4D;AAC1DC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,MAAN,CAAaC,MADqC;AAG1DC,IAAAA,SAAS,EAAE,qBAAW;AACpB;AAEA,WAAKC,GAAL,CAAS;AACPC,QAAAA,YAAY,EAAE,KADP;AAEPC,QAAAA,QAAQ,EAAE,GAFH;AAGPC,QAAAA,SAAS,EAAE,GAHJ;AAIPC,QAAAA,KAAK,EAAE,IAJA;AAKPC,QAAAA,OAAO,EAAE,KAAKC,EAAL,CAAQ,iBAAR,CALF;AAMPC,QAAAA,UAAU,EAAE,gBANL;AAOPC,QAAAA,cAAc,EAAE;AAPT,OAAT;AAUA,UAAIC,aAAa,GAAG,IAAIpB,EAAE,CAACO,EAAH,CAAMc,MAAN,CAAaC,IAAjB,EAApB;AACA,WAAKC,SAAL,CAAeH,aAAf;;AAEA,UAAII,YAAY,GAAG,KAAKC,oBAAL,EAAnB;;AACA,WAAKC,GAAL,CAASF,YAAT;;AAEA,UAAIG,IAAI,GAAG,KAAKC,kBAAL,EAAX;;AACA,WAAKF,GAAL,CAASC,IAAT,EAAe;AACbE,QAAAA,IAAI,EAAE;AADO,OAAf;;AAIA,UAAIC,SAAS,GAAG,KAAKC,qBAAL,EAAhB;;AACA,WAAKL,GAAL,CAASI,SAAT;;AAEA,WAAKE,cAAL;;AAEA,WAAKC,cAAL;;AAEA,WAAKC,qBAAL;AACD,KAnCyD;AAqC1DC,IAAAA,MAAM,EAAE;AACN,oBAAc;AADR,KArCkD;AAyC1DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KAzCiD;AA6C1DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,iBAAiB,EAAE,IADZ;AAEPC,MAAAA,gBAAgB,EAAE,IAFX;AAGPC,MAAAA,WAAW,EAAE,IAHN;AAIPC,MAAAA,SAAS,EAAE,IAJJ;AAKPC,MAAAA,eAAe,EAAE,IALV;AAMPC,MAAAA,aAAa,EAAE,IANR;AAOPC,MAAAA,aAAa,EAAE,IAPR;AAQPC,MAAAA,SAAS,EAAE,IARJ;AASPC,MAAAA,gBAAgB,EAAE,IATX;AAUPC,MAAAA,QAAQ,EAAE,IAVH;AAYPvB,MAAAA,oBAAoB,EAAE,gCAAW;AAAA;;AAC/B,YAAMwB,OAAO,GAAG,IAAIjD,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAcC,OAAlB,EAAhB;AAEA,YAAMC,UAAU,GAAG,IAAInD,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAcG,IAAlB,GAAyBzC,GAAzB,CAA6B;AAC9C0C,UAAAA,OAAO,EAAE;AADqC,SAA7B,CAAnB;AAGA,YAAMC,OAAO,GAAG,IAAIC,KAAK,CAACC,OAAN,CAAcC,cAAlB,CAAiC,gBAAjC,CAAhB;AACA,aAAKhB,WAAL,GAAmBa,OAAO,CAACI,aAAR,GAAwBC,eAAxB,CAAwC,WAAxC,EAAqD,IAArD,CAAnB;AACAR,QAAAA,UAAU,CAACzB,GAAX,CAAe4B,OAAf;AACA,YAAMM,eAAe,GAAG,KAAKlB,SAAL,GAAiB,IAAI1C,EAAE,CAACO,EAAH,CAAMsD,IAAN,CAAWC,QAAf,CAAwB,KAAK7C,EAAL,CAAQ,UAAR,CAAxB,CAAzC;AACA2C,QAAAA,eAAe,CAACjD,GAAhB,CAAoB;AAClBoD,UAAAA,KAAK,EAAE,KADW;AAElB;AACAC,UAAAA,UAAU,EAAET,KAAK,CAACU,IAAN,CAAWC,WAAX,CAAuBC,WAAvB,GAAqCC,KAArC,CAA2C,MAA3C,IAAqD,SAArD,GAAiE;AAH3D,SAApB;AAKAR,QAAAA,eAAe,CAACS,WAAhB,CAA4B,aAA5B,EAA2C,UAAAC,CAAC,EAAI;AAC9C,UAAA,KAAI,CAACC,YAAL;AACD,SAFD,EAEG,IAFH;AAGApB,QAAAA,UAAU,CAACzB,GAAX,CAAekC,eAAf;AACAX,QAAAA,OAAO,CAACvB,GAAR,CAAYyB,UAAZ;AAEAF,QAAAA,OAAO,CAACuB,SAAR;AAEA,YAAMC,YAAY,GAAG,IAAIzE,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAcG,IAAlB,EAArB,CAvB+B,CAwB/B;;AACA,YAAMsB,SAAS,GAAG,IAAI1E,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAc0B,MAAlB,CAAyB,KAAK1D,EAAL,CAAQ,QAAR,CAAzB,EAA4C,gCAA5C,CAAlB;AACAyD,QAAAA,SAAS,CAACL,WAAV,CAAsB,SAAtB,EAAiC;AAAA,iBAAM,KAAI,CAACpC,cAAL,CAAoB,IAApB,CAAN;AAAA,SAAjC,EAAkE,IAAlE;AACAwC,QAAAA,YAAY,CAAC/C,GAAb,CAAiBgD,SAAjB;AACAzB,QAAAA,OAAO,CAACvB,GAAR,CAAY+C,YAAZ;AACA,eAAOxB,OAAP;AACD,OA1CM;AA4CPrB,MAAAA,kBAAkB,EAAE,8BAAW;AAAA;;AAC7B;AACA,aAAKW,iBAAL,GAAyB,EAAzB;AACA,aAAKC,gBAAL,GAAwB,EAAxB;AAEA,YAAMoC,QAAQ,GAAG,KAAK7B,gBAAL,GAAwB,IAAIQ,KAAK,CAACsB,SAAN,CAAgBC,OAAhB,CAAwBC,WAA5B,CAAwC,gBAAxC,EAA0DpE,GAA1D,CAA8D;AACrGqE,UAAAA,KAAK,EAAE;AAD8F,SAA9D,CAAzC;AAGA,YAAMC,gBAAgB,GAAG,IAAIjF,EAAE,CAACO,EAAH,CAAM2E,SAAN,CAAgBC,MAApB,GAA6BxE,GAA7B,CAAiC;AACxDyE,UAAAA,MAAM,EAAE;AADgD,SAAjC,CAAzB;AAGAH,QAAAA,gBAAgB,CAACvD,GAAjB,CAAqBkD,QAArB;;AAEA,aAAK7B,gBAAL,CAAsBsB,WAAtB,CAAkC,aAAlC,EAAiD,UAAAC,CAAC,EAAI;AACpD,cAAIA,CAAC,CAACe,OAAF,MAAef,CAAC,CAACe,OAAF,GAAYC,eAAZ,EAAnB,EAAkD;AAChD,gBAAMC,eAAe,GAAGjB,CAAC,CAACe,OAAF,GAAYC,eAAZ,EAAxB;;AACA,YAAA,MAAI,CAACE,kBAAL,CAAwBD,eAAe,CAACE,MAAhB,EAAxB;AACD,WAHD,MAGO;AACL,YAAA,MAAI,CAACD,kBAAL,CAAwB,IAAxB;AACD;AACF,SAPD,EAOG,IAPH;;AASA,eAAOP,gBAAP;AACD,OAnEM;AAqEPlD,MAAAA,qBAAqB,EAAE,iCAAW;AAAA;;AAChC,YAAMkB,OAAO,GAAG,IAAIjD,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAcC,OAAlB,EAAhB;AAEA,YAAMwC,QAAQ,GAAG,IAAI1F,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAcG,IAAlB,EAAjB;AACA,YAAMuC,YAAY,GAAG,IAAI3F,EAAE,CAACO,EAAH,CAAMqF,KAAN,CAAYC,IAAhB,CAAqB,KAAK5E,EAAL,CAAQ,SAAR,CAArB,CAArB;AACAyE,QAAAA,QAAQ,CAAChE,GAAT,CAAaiE,YAAb;AACA,YAAMG,SAAS,GAAG,KAAKjD,aAAL,GAAqB,IAAIU,KAAK,CAAChD,EAAN,CAAS0C,OAAT,CAAiB8C,SAArB,GAAiCpF,GAAjC,CAAqC;AAC1EqF,UAAAA,OAAO,EAAE;AADiE,SAArC,CAAvC;AAGAN,QAAAA,QAAQ,CAAChE,GAAT,CAAaoE,SAAb;AACA,YAAMG,OAAO,GAAG,KAAKnD,SAAL,GAAiB,IAAI9C,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAc0B,MAAlB,CAAyB,IAAzB,EAA+B,mCAA/B,EAAoEhE,GAApE,CAAwE;AACvGqF,UAAAA,OAAO,EAAE;AAD8F,SAAxE,CAAjC;AAGAC,QAAAA,OAAO,CAAC5B,WAAR,CAAoB,SAApB,EAA+B,YAAW;AACxC,eAAK6B,iBAAL;AACD,SAFD,EAEG,IAFH;AAGAR,QAAAA,QAAQ,CAAChE,GAAT,CAAauE,OAAb;AACAhD,QAAAA,OAAO,CAACvB,GAAR,CAAYgE,QAAZ;AAEAzC,QAAAA,OAAO,CAACuB,SAAR;AAEA,YAAM2B,WAAW,GAAG,IAAInG,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAcG,IAAlB,EAApB;AACA,YAAMgD,MAAM,GAAG,KAAKpD,QAAL,GAAgB,IAAIhD,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAc0B,MAAlB,CAAyB,KAAzB,EAAgChE,GAAhC,CAAoC;AACjEqF,UAAAA,OAAO,EAAE;AADwD,SAApC,CAA/B;AAGAI,QAAAA,MAAM,CAAC/B,WAAP,CAAmB,SAAnB,EAA8B;AAAA,iBAAM,MAAI,CAACgC,cAAL,EAAN;AAAA,SAA9B,EAA2D,IAA3D;AACAD,QAAAA,MAAM,CAACE,aAAP,CAAqB,KAArB;AACAH,QAAAA,WAAW,CAACzE,GAAZ,CAAgB0E,MAAhB;AACA,YAAMG,SAAS,GAAG,IAAIvG,EAAE,CAACO,EAAH,CAAM0C,OAAN,CAAc0B,MAAlB,CAAyB,QAAzB,CAAlB;AACA4B,QAAAA,SAAS,CAAClC,WAAV,CAAsB,SAAtB,EAAiC,KAAKmC,UAAtC,EAAkD,IAAlD;AACAD,QAAAA,SAAS,CAACD,aAAV,CAAwB,KAAxB;AACAH,QAAAA,WAAW,CAACzE,GAAZ,CAAgB6E,SAAhB;AACAtD,QAAAA,OAAO,CAACvB,GAAR,CAAYyE,WAAZ;AAEA,eAAOlD,OAAP;AACD,OAxGM;AA0GPjB,MAAAA,cAAc,EAAE,0BAAW;AAAA;;AACzB,aAAKe,gBAAL,CAAsBsB,WAAtB,CAAkC,YAAlC,EAAgD,UAAAC,CAAC,EAAI;AACnD,UAAA,MAAI,CAAC+B,cAAL,CAAoB/B,CAAC,CAACe,OAAF,EAApB;AACD,SAFD,EAEG,IAFH;AAGD,OA9GM;AAgHPoB,MAAAA,UAAU,EAAE,oBAASC,MAAT,EAAiBC,IAAjB,EAAuB;AACjC,aAAKhE,eAAL,GAAuB+D,MAAvB;AACA,aAAK9D,aAAL,GAAqB+D,IAArB;;AACA,aAAKpC,YAAL;AACD,OApHM;AAsHPtC,MAAAA,cAAc,EAAE,0BAAyB;AAAA;;AAAA,YAAhB2E,MAAgB,uEAAP,KAAO;AACvC,aAAKrE,iBAAL,GAAyB,EAAzB;AACA,YAAIsE,KAAK,GAAGtD,KAAK,CAACsD,KAAN,CAAYC,KAAZ,CAAkB3C,WAAlB,EAAZ;AACA,YAAIS,QAAQ,GAAGiC,KAAK,CAACE,WAAN,CAAkBH,MAAlB,CAAf;;AACA,YAAIhC,QAAQ,KAAK,IAAjB,EAAuB;AACrBiC,UAAAA,KAAK,CAACxC,WAAN,CAAkB,oBAAlB,EAAwC,UAAAC,CAAC,EAAI;AAC3C,gBAAML,IAAI,GAAGK,CAAC,CAACe,OAAF,EAAb;;AACA,YAAA,MAAI,CAAC2B,YAAL,CAAkB/C,IAAI,CAAC,UAAD,CAAtB;AACD,WAHD,EAGG,IAHH;AAID,SALD,MAKO;AACL,eAAK+C,YAAL,CAAkBpC,QAAlB;AACD;AACF,OAlIM;AAoIPoC,MAAAA,YAAY,EAAE,sBAASC,OAAT,EAAkB;AAC9B,aAAK1E,iBAAL,GAAyBgB,KAAK,CAAC2D,KAAN,CAAYC,QAAZ,CAAqBC,oBAArB,CAA0CH,OAA1C,CAAzB;;AACA,aAAK1C,YAAL,CAAkB,KAAKhC,iBAAvB;AACD,OAvIM;AAyIPgC,MAAAA,YAAY,EAAE,wBAAW;AACvB,YAAI8C,gBAAgB,GAAG,EAAvB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK/E,iBAAL,CAAuBgF,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACtD,cAAMxC,OAAO,GAAG,KAAKvC,iBAAL,CAAuB+E,CAAvB,CAAhB;;AACA,cAAI,KAAK5E,SAAL,CAAe8E,QAAf,MAA6B,CAAC1C,OAAO,CAAC2C,GAAR,CAAYC,QAAZ,CAAqB,SAArB,CAAlC,EAAmE;AACjEL,YAAAA,gBAAgB,CAACM,IAAjB,CAAsB7C,OAAtB;AACD;AACF;;AAED,YAAI8C,eAAe,GAAG,KAAKpF,gBAAL,GAAwBe,KAAK,CAAC2D,KAAN,CAAYC,QAAZ,CAAqBU,oBAArB,CAA0CR,gBAA1C,CAA9C;AAEA,YAAIS,mBAAmB,GAAG,EAA1B;;AACA,aAAK,IAAMC,UAAX,IAAyBH,eAAzB,EAA0C;AACxC,cAAI9C,QAAO,GAAGvB,KAAK,CAAC2D,KAAN,CAAYC,QAAZ,CAAqBa,SAArB,CAA+BJ,eAA/B,EAAgDG,UAAhD,CAAd;;AACA,cAAIE,SAAQ,GAAGjI,EAAE,CAACiE,IAAH,CAAQiE,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiCtD,QAAjC,CAAf;;AACAgD,UAAAA,mBAAmB,CAACH,IAApB,CAAyBM,SAAzB;AACD;;AAGD,YAAIA,QAAQ,GAAG,IAAIjI,EAAE,CAACiE,IAAH,CAAQoE,KAAZ,CAAkBP,mBAAlB,CAAf;;AAEA,aAAK/E,gBAAL,CAAsBuF,QAAtB,CAA+BL,QAA/B;AACD,OA/JM;AAiKPzC,MAAAA,kBAAkB,EAAE,4BAASuC,UAAT,EAAqB;AACvC,YAAI,KAAKlF,aAAT,EAAwB;AACtB,cAAIiD,SAAS,GAAG,KAAKjD,aAArB;AACAiD,UAAAA,SAAS,CAACyC,SAAV;;AACA,cAAIR,UAAU,IAAI,KAAKvF,gBAAvB,EAAyC;AACvC,gBAAIgG,QAAQ,GAAGjF,KAAK,CAAC2D,KAAN,CAAYC,QAAZ,CAAqBsB,WAArB,CAAiC,KAAKjG,gBAAtC,EAAwDuF,UAAxD,CAAf;AACA,gBAAMW,MAAM,GAAG,IAAI1I,EAAE,CAACO,EAAH,CAAMsD,IAAN,CAAW8E,QAAf,CAAwB,yCAAqBtG,MAA7C,CAAf;AACAyD,YAAAA,SAAS,CAACpE,GAAV,CAAcgH,MAAd;;AACA,iBAAK,IAAIpB,CAAC,GAAGkB,QAAQ,CAACjB,MAAtB,EAA8BD,CAAC,EAA/B,GAAoC;AAClCxB,cAAAA,SAAS,CAACpE,GAAV,CAAc,IAAI1B,EAAE,CAACO,EAAH,CAAMsD,IAAN,CAAW8E,QAAf,CAAwBH,QAAQ,CAAClB,CAAD,CAAhC,CAAd;AACD;;AACDxB,YAAAA,SAAS,CAAC8C,YAAV,CAAuB,CAACF,MAAD,CAAvB;AACD;AACF;;AACD,YAAI,KAAK1F,QAAT,EAAmB;AACjB,eAAKA,QAAL,CAAc6F,UAAd,CAAyBd,UAAU,KAAK,IAAxC;AACD;;AACD,YAAI,KAAKjF,SAAT,EAAoB;AAClB,eAAKA,SAAL,CAAe+F,UAAf,CAA0Bd,UAAU,KAAK,IAAzC;AACD;;AACD,YAAI,KAAKlF,aAAT,EAAwB;AACtB,eAAKA,aAAL,CAAmBgG,UAAnB,CAA8Bd,UAAU,KAAK,IAA7C;AACD;AACF,OAxLM;AA0LP1B,MAAAA,cAAc,EAAE,wBAASyC,KAAT,EAAgB;AAC9B,YAAIA,KAAK,IAAI,IAAT,IAAiB,KAAK/F,gBAAL,CAAsBgG,gBAAtB,EAArB,EAA+D;AAAE;AAC/D;AACD;;AAED,YAAMjE,OAAO,GAAGgE,KAAK,IAAI,KAAKE,oBAAL,EAAzB;;AACA,YAAIlE,OAAJ,EAAa;AACX,cAAMmE,YAAY,GAAGjJ,EAAE,CAACiE,IAAH,CAAQiE,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiCtD,OAAjC,CAArB;AACA,cAAMoE,KAAK,GAAG;AACZpE,YAAAA,OAAO,EAAEmE,YADG;AAEZE,YAAAA,aAAa,EAAE,KAAKxG,eAFR;AAGZyG,YAAAA,WAAW,EAAE,KAAKxG;AAHN,WAAd;AAKA,eAAKyG,aAAL,CAAmB,YAAnB,EAAiCH,KAAjC;AACD;;AACD,aAAKI,KAAL;AACD,OA1MM;AA4MPN,MAAAA,oBAAoB,EAAE,gCAAW;AAC/B,YAAMO,QAAQ,GAAG,KAAKxG,gBAAL,CAAsByG,WAAtB,EAAjB;;AACA,YAAMzB,UAAU,GAAGwB,QAAQ,CAAC9D,MAAT,EAAnB;;AACA,YAAIgE,cAAc,GAAG,KAAK5G,aAAL,CAAmB6G,YAAnB,GAAkC,CAAlC,EAAqCC,QAArC,GAAgDC,QAAhD,EAArB;;AACA,YAAIH,cAAc,IAAI,yCAAqBpH,MAArB,CAA4BuH,QAA5B,EAAtB,EAA8D;AAC5DH,UAAAA,cAAc,GAAG,KAAK5G,aAAL,CAAmBgH,oBAAnB,GAA0CC,cAA1C,GAA2D,CAA3D,EAA8DH,QAA9D,EAAjB;AACD;;AACD,eAAOpG,KAAK,CAAC2D,KAAN,CAAYC,QAAZ,CAAqB4C,YAArB,CAAkC,KAAKxH,iBAAvC,EAA0DwF,UAA1D,EAAsE0B,cAAtE,CAAP;AACD,OApNM;AAsNPvD,MAAAA,iBAAiB,EAAE,6BAAW;AAC5B,YAAM8D,GAAG,GAAG,IAAIzG,KAAK,CAACsB,SAAN,CAAgBoF,QAAhB,CAAyBC,iBAA7B,CAA+C,KAAKlB,oBAAL,EAA/C,CAAZ;AACAgB,QAAAA,GAAG,CAACG,MAAJ;AACAH,QAAAA,GAAG,CAACI,IAAJ;AACD,OA1NM;AA4NP5D,MAAAA,UAAU,EAAE,sBAAW;AACrB,aAAK8C,KAAL;AACD,OA9NM;AAgOPpH,MAAAA,qBAAqB,EAAE,iCAAW;AAAA;;AAChC,aAAKmC,WAAL,CAAiB,QAAjB,EAA2B,YAAM;AAC/Bd,UAAAA,KAAK,CAACsB,SAAN,CAAgBwF,MAAhB,CAAuBC,kBAAvB,CAA0CnG,WAA1C,GAAwDoG,UAAxD,CAAmE,gBAAnE;;AACA,UAAA,MAAI,CAAC9H,WAAL,CAAiB+H,KAAjB;AACD,SAHD,EAGG,IAHH;;AAIA,aAAK/H,WAAL,CAAiB4B,WAAjB,CAA6B,UAA7B,EAAyC,UAAAC,CAAC,EAAI;AAC5C,cAAIA,CAAC,CAACmG,gBAAF,OAAyB,OAA7B,EAAsC;AACpC,YAAA,MAAI,CAAC1H,gBAAL,CAAsB2H,kBAAtB;;AACA,gBAAMnB,QAAQ,GAAG,MAAI,CAACxG,gBAAL,CAAsByG,WAAtB,EAAjB;;AACA,gBAAID,QAAQ,KAAK,IAAjB,EAAuB;AACrB,cAAA,MAAI,CAAClD,cAAL,CAAoBkD,QAApB;AACD;AACF;AACF,SARD,EAQG,IARH;AASD;AA9OM;AA7CiD,GAA5D;AAnCAhG,EAAAA,KAAK,CAACsB,SAAN,CAAgB8F,SAAhB,CAA0BC,cAA1B,CAAyCzK,aAAzC,GAAyDA,aAAzD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n *   Window that shows a list of filter as you type services. For the selected service, below the list\n * a dropdown menu is populated with al the available versions of the selection (by default latest\n * is selected).\n *\n *   When the user really selects the service an \"addService\" data event is fired.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   let srvCat = new qxapp.component.workbench.ServiceCatalog();\n *   srvCat.center();\n *   srvCat.open();\n * </pre>\n */\n\nqx.Class.define(\"qxapp.component.workbench.ServiceCatalog\", {\n  extend: qx.ui.window.Window,\n\n  construct: function() {\n    this.base();\n\n    this.set({\n      showMinimize: false,\n      minWidth: 400,\n      minHeight: 400,\n      modal: true,\n      caption: this.tr(\"Service catalog\"),\n      appearance: \"service-window\",\n      contentPadding: 0\n    });\n\n    let catalogLayout = new qx.ui.layout.VBox();\n    this.setLayout(catalogLayout);\n\n    let filterLayout = this.__createFilterLayout();\n    this.add(filterLayout);\n\n    let list = this.__createListLayout();\n    this.add(list, {\n      flex: 1\n    });\n\n    let btnLayout = this.__createButtonsLayout();\n    this.add(btnLayout);\n\n    this.__createEvents();\n\n    this.__populateList();\n\n    this.__attachEventHandlers();\n  },\n\n  events: {\n    \"addService\": \"qx.event.type.Data\"\n  },\n\n  statics: {\n    LATEST: \"latest\"\n  },\n\n  members: {\n    __allServicesList: null,\n    __allServicesObj: null,\n    __textfield: null,\n    __showAll: null,\n    __contextNodeId: null,\n    __contextPort: null,\n    __versionsBox: null,\n    __infoBtn: null,\n    __serviceBrowser: null,\n    __addBtn: null,\n\n    __createFilterLayout: function() {\n      const toolbar = new qx.ui.toolbar.ToolBar();\n\n      const filterPart = new qx.ui.toolbar.Part().set({\n        spacing: 10\n      });\n      const filters = new qxapp.desktop.ServiceFilters(\"serviceCatalog\");\n      this.__textfield = filters.getTextFilter().getChildControl(\"textfield\", true);\n      filterPart.add(filters);\n      const showAllCheckbox = this.__showAll = new qx.ui.form.CheckBox(this.tr(\"Show all\"));\n      showAllCheckbox.set({\n        value: false,\n        // FIXME: Backend should do the filtering\n        visibility: qxapp.data.Permissions.getInstance().canDo(\"test\") ? \"visible\" : \"excluded\"\n      });\n      showAllCheckbox.addListener(\"changeValue\", e => {\n        this.__updateList();\n      }, this);\n      filterPart.add(showAllCheckbox);\n      toolbar.add(filterPart);\n\n      toolbar.addSpacer();\n\n      const controlsPart = new qx.ui.toolbar.Part();\n      // buttons for reloading services (is this necessary?)\n      const reloadBtn = new qx.ui.toolbar.Button(this.tr(\"Reload\"), \"@FontAwesome5Solid/sync-alt/16\");\n      reloadBtn.addListener(\"execute\", () => this.__populateList(true), this);\n      controlsPart.add(reloadBtn);\n      toolbar.add(controlsPart);\n      return toolbar;\n    },\n\n    __createListLayout: function() {\n      // Services list\n      this.__allServicesList = [];\n      this.__allServicesObj = {};\n\n      const services = this.__serviceBrowser = new qxapp.component.service.ServiceList(\"serviceCatalog\").set({\n        width: 568\n      });\n      const scrolledServices = new qx.ui.container.Scroll().set({\n        height: 260\n      });\n      scrolledServices.add(services);\n\n      this.__serviceBrowser.addListener(\"changeValue\", e => {\n        if (e.getData() && e.getData().getServiceModel()) {\n          const selectedService = e.getData().getServiceModel();\n          this.__changedSelection(selectedService.getKey());\n        } else {\n          this.__changedSelection(null);\n        }\n      }, this);\n\n      return scrolledServices;\n    },\n\n    __createButtonsLayout: function() {\n      const toolbar = new qx.ui.toolbar.ToolBar();\n\n      const infoPart = new qx.ui.toolbar.Part();\n      const versionLabel = new qx.ui.basic.Atom(this.tr(\"Version\"));\n      infoPart.add(versionLabel);\n      const selectBox = this.__versionsBox = new qxapp.ui.toolbar.SelectBox().set({\n        enabled: false\n      });\n      infoPart.add(selectBox);\n      const infoBtn = this.__infoBtn = new qx.ui.toolbar.Button(null, \"@FontAwesome5Solid/info-circle/16\").set({\n        enabled: false\n      });\n      infoBtn.addListener(\"execute\", function() {\n        this.__showServiceInfo();\n      }, this);\n      infoPart.add(infoBtn);\n      toolbar.add(infoPart);\n\n      toolbar.addSpacer();\n\n      const buttonsPart = new qx.ui.toolbar.Part();\n      const addBtn = this.__addBtn = new qx.ui.toolbar.Button(\"Add\").set({\n        enabled: false\n      });\n      addBtn.addListener(\"execute\", () => this.__onAddService(), this);\n      addBtn.setAllowGrowX(false);\n      buttonsPart.add(addBtn);\n      const cancelBtn = new qx.ui.toolbar.Button(\"Cancel\");\n      cancelBtn.addListener(\"execute\", this.__onCancel, this);\n      cancelBtn.setAllowGrowX(false);\n      buttonsPart.add(cancelBtn);\n      toolbar.add(buttonsPart);\n\n      return toolbar;\n    },\n\n    __createEvents: function() {\n      this.__serviceBrowser.addListener(\"serviceadd\", e => {\n        this.__onAddService(e.getData());\n      }, this);\n    },\n\n    setContext: function(nodeId, port) {\n      this.__contextNodeId = nodeId;\n      this.__contextPort = port;\n      this.__updateList();\n    },\n\n    __populateList: function(reload = false) {\n      this.__allServicesList = [];\n      let store = qxapp.store.Store.getInstance();\n      let services = store.getServices(reload);\n      if (services === null) {\n        store.addListener(\"servicesRegistered\", e => {\n          const data = e.getData();\n          this.__addNewData(data[\"services\"]);\n        }, this);\n      } else {\n        this.__addNewData(services);\n      }\n    },\n\n    __addNewData: function(newData) {\n      this.__allServicesList = qxapp.utils.Services.convertObjectToArray(newData);\n      this.__updateList(this.__allServicesList);\n    },\n\n    __updateList: function() {\n      let filteredServices = [];\n      for (let i = 0; i < this.__allServicesList.length; i++) {\n        const service = this.__allServicesList[i];\n        if (this.__showAll.getValue() || !service.key.includes(\"demodec\")) {\n          filteredServices.push(service);\n        }\n      }\n\n      let groupedServices = this.__allServicesObj = qxapp.utils.Services.convertArrayToObject(filteredServices);\n\n      let groupedServicesList = [];\n      for (const serviceKey in groupedServices) {\n        let service = qxapp.utils.Services.getLatest(groupedServices, serviceKey);\n        let newModel = qx.data.marshal.Json.createModel(service);\n        groupedServicesList.push(newModel);\n      }\n\n\n      let newModel = new qx.data.Array(groupedServicesList);\n\n      this.__serviceBrowser.setModel(newModel);\n    },\n\n    __changedSelection: function(serviceKey) {\n      if (this.__versionsBox) {\n        let selectBox = this.__versionsBox;\n        selectBox.removeAll();\n        if (serviceKey in this.__allServicesObj) {\n          let versions = qxapp.utils.Services.getVersions(this.__allServicesObj, serviceKey);\n          const latest = new qx.ui.form.ListItem(this.self(arguments).LATEST);\n          selectBox.add(latest);\n          for (let i = versions.length; i--;) {\n            selectBox.add(new qx.ui.form.ListItem(versions[i]));\n          }\n          selectBox.setSelection([latest]);\n        }\n      }\n      if (this.__addBtn) {\n        this.__addBtn.setEnabled(serviceKey !== null);\n      }\n      if (this.__infoBtn) {\n        this.__infoBtn.setEnabled(serviceKey !== null);\n      }\n      if (this.__versionsBox) {\n        this.__versionsBox.setEnabled(serviceKey !== null);\n      }\n    },\n\n    __onAddService: function(model) {\n      if (model == null && this.__serviceBrowser.isSelectionEmpty()) { // eslint-disable-line no-eq-null\n        return;\n      }\n\n      const service = model || this.__getSelectedService();\n      if (service) {\n        const serviceModel = qx.data.marshal.Json.createModel(service);\n        const eData = {\n          service: serviceModel,\n          contextNodeId: this.__contextNodeId,\n          contextPort: this.__contextPort\n        };\n        this.fireDataEvent(\"addService\", eData);\n      }\n      this.close();\n    },\n\n    __getSelectedService: function() {\n      const selected = this.__serviceBrowser.getSelected();\n      const serviceKey = selected.getKey();\n      let serviceVersion = this.__versionsBox.getSelection()[0].getLabel().toString();\n      if (serviceVersion == this.self(arguments).LATEST.toString()) {\n        serviceVersion = this.__versionsBox.getChildrenContainer().getSelectables()[1].getLabel();\n      }\n      return qxapp.utils.Services.getFromArray(this.__allServicesList, serviceKey, serviceVersion);\n    },\n\n    __showServiceInfo: function() {\n      const win = new qxapp.component.metadata.ServiceInfoWindow(this.__getSelectedService());\n      win.center();\n      win.open();\n    },\n\n    __onCancel: function() {\n      this.close();\n    },\n\n    __attachEventHandlers: function() {\n      this.addListener(\"appear\", () => {\n        qxapp.component.filter.UIFilterController.getInstance().resetGroup(\"serviceCatalog\");\n        this.__textfield.focus();\n      }, this);\n      this.__textfield.addListener(\"keypress\", e => {\n        if (e.getKeyIdentifier() === \"Enter\") {\n          this.__serviceBrowser.selectFirstVisible();\n          const selected = this.__serviceBrowser.getSelected();\n          if (selected !== null) {\n            this.__onAddService(selected);\n          }\n        }\n      }, this);\n    }\n  }\n});\n"
  ]
}