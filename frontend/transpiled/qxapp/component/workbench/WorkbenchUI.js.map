{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/workbench/WorkbenchUI.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "BUTTON_SIZE",
    "BUTTON_SPACING",
    "NODE_INPUTS_WIDTH",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "workbench",
    "__nodesUI",
    "__edgesUI",
    "hBox",
    "layout",
    "HBox",
    "_setLayout",
    "inputNodesLayout",
    "__inputNodesLayout",
    "container",
    "Composite",
    "VBox",
    "set",
    "width",
    "maxWidth",
    "allowGrowX",
    "navBarLabelFont",
    "bom",
    "Font",
    "fromConfig",
    "qxapp",
    "theme",
    "fonts",
    "inputLabel",
    "basic",
    "Label",
    "tr",
    "font",
    "alignX",
    "add",
    "_add",
    "__desktopCanvas",
    "Canvas",
    "flex",
    "nodesExposedLayout",
    "__outputNodesLayout",
    "outputLabel",
    "__desktop",
    "window",
    "Desktop",
    "Manager",
    "left",
    "top",
    "right",
    "bottom",
    "__startHint",
    "textColor",
    "visibility",
    "__svgWidget",
    "component",
    "SvgWidget",
    "addListenerOnce",
    "removeAll",
    "setWorkbench",
    "__nodeSelected",
    "buttonContainer",
    "unlinkButton",
    "__unlinkButton",
    "__getUnlinkButton",
    "setVisibility",
    "__addEventListeners",
    "events",
    "properties",
    "check",
    "nullable",
    "apply",
    "members",
    "__tempEdgeNodeId",
    "__tempEdgeRepr",
    "__pointerPosX",
    "__pointerPosY",
    "__selectedItemId",
    "__currentModel",
    "icon",
    "unlinkBtn",
    "form",
    "Button",
    "height",
    "addListener",
    "__isSelectedItemAnEdge",
    "__removeEdge",
    "__getEdgeUI",
    "openServiceCatalog",
    "srvCat",
    "__createServiceCatalog",
    "open",
    "pos",
    "ServiceCatalog",
    "moveTo",
    "x",
    "y",
    "bounds",
    "getLayoutParent",
    "getBounds",
    "workbenchUICenter",
    "parseInt",
    "ev",
    "__addServiceFromCatalog",
    "e",
    "data",
    "getData",
    "service",
    "nodeAId",
    "contextNodeId",
    "portA",
    "contextPort",
    "parent",
    "isContainer",
    "node",
    "getWorkbench",
    "createNode",
    "getKey",
    "getVersion",
    "nodeUI",
    "__createNodeUI",
    "getNodeId",
    "__addNodeToWorkbench",
    "nodeBId",
    "portB",
    "__findCompatiblePort",
    "isInput",
    "__createEdgeBetweenNodes",
    "nodeUuid",
    "position",
    "undefined",
    "farthestRight",
    "i",
    "length",
    "boundPos",
    "rightPos",
    "getNode",
    "setPosition",
    "addWindowToDesktop",
    "push",
    "__updateEdges",
    "__updatePosition",
    "__selectedItemChanged",
    "stopPropagation",
    "queue",
    "Layout",
    "flush",
    "__updateHint",
    "nodeId",
    "NodeUI",
    "populateNodeLayout",
    "__createDragDropMechanism",
    "__createEdgeUI",
    "node1Id",
    "node2Id",
    "edgeId",
    "edge",
    "createEdge",
    "__edgeRepresetationExists",
    "nodeUI1",
    "getNodeUI",
    "nodeUI2",
    "port1",
    "getOutputPort",
    "port2",
    "getInputPort",
    "setIsOutputNode",
    "addInputNode",
    "pointList",
    "__getEdgePoints",
    "x1",
    "y1",
    "x2",
    "y2",
    "edgeRepresentation",
    "drawCurve",
    "edgeUI",
    "EdgeUI",
    "getRepresentation",
    "addEventListener",
    "fireDataEvent",
    "getEdgeId",
    "getEdge",
    "evType",
    "event",
    "dragNodeId",
    "dragIsInput",
    "addAction",
    "addType",
    "dragData",
    "addData",
    "__tempEdgeIsInput",
    "Element",
    "__startTempEdge",
    "dropNodeId",
    "dropIsInput",
    "compatible",
    "supportsType",
    "dragNode",
    "dropNode",
    "dragPortTarget",
    "dropPortTarget",
    "__areNodesCompatible",
    "preventDefault",
    "__removeTempEdge",
    "removeListener",
    "posX",
    "posY",
    "setContext",
    "__createNodeInputUI",
    "inputNode",
    "nodeInput",
    "widget",
    "NodeInput",
    "__createNodeInputUIs",
    "model",
    "__clearNodeInputUIs",
    "inputNodes",
    "getInputNodes",
    "getChildren",
    "removeAt",
    "__createNodeOutputUI",
    "currentModel",
    "nodeOutput",
    "NodeOutput",
    "__createNodeOutputUIs",
    "__clearNodeOutputUIs",
    "__removeSelectedNode",
    "getActiveWindow",
    "__removeNode",
    "topLevelPort1",
    "topLevelPort2",
    "store",
    "Store",
    "getInstance",
    "areNodesCompatible",
    "nodeB",
    "from",
    "to",
    "__createEdgeBetweenNodesAndInputNodes",
    "inputNodeId",
    "cBounds",
    "getCurrentBounds",
    "edgesInvolved",
    "getConnectedEdges",
    "forEach",
    "node1",
    "getInputNodeId",
    "node2",
    "getOutputNodeId",
    "updateCurve",
    "pointerEvent",
    "port",
    "navBarHeight",
    "inputNodesLayoutWidth",
    "isVisible",
    "getWidth",
    "getViewportLeft",
    "getViewportTop",
    "portPos",
    "getEdgePoint",
    "removeCurve",
    "p1",
    "p2",
    "clearNode",
    "__clearNode",
    "__removeAllNodes",
    "clearEdge",
    "__clearEdge",
    "__removeAllEdges",
    "includes",
    "remove",
    "index",
    "indexOf",
    "splice",
    "__clearAllNodes",
    "__clearAllEdges",
    "clearAll",
    "loadModel",
    "Visibility",
    "nodes",
    "getInnerNodes",
    "getNodes",
    "getPosition",
    "console",
    "log",
    "innerNodes",
    "innerNodeId",
    "innerNode",
    "getIsOutputNode",
    "newID",
    "oldId",
    "unselectedEdge",
    "unselectedColor",
    "Color",
    "colors",
    "updateColor",
    "selectedEdge",
    "selectedColor",
    "Boolean",
    "filter",
    "UIFilterController",
    "resetGroup",
    "setContainerVisibility",
    "message",
    "Bus",
    "dispatchByName",
    "isEmptyWorkspace",
    "Object",
    "keys",
    "hintBounds",
    "getSizeHint",
    "setLayoutProperties",
    "Math",
    "round",
    "WorkbenchUI"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;AAcA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAMC,iBAAiB,GAAG,GAA1B;AAEAN,EAAAA,EAAE,CAACO,KAAH,CAASC,MAAT,CAAgB,uCAAhB,EAAyD;AACvDC,IAAAA,MAAM,EAAET,EAAE,CAACU,EAAH,CAAMC,IAAN,CAAWC,MADoC;;AAGvD;;;AAGAC,IAAAA,SAAS,EAAE,mBAASC,SAAT,EAAoB;AAAA;;AAC7B;AAEA,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKC,SAAL,GAAiB,EAAjB;AAEA,UAAIC,IAAI,GAAG,IAAIjB,EAAE,CAACU,EAAH,CAAMQ,MAAN,CAAaC,IAAjB,EAAX;;AACA,WAAKC,UAAL,CAAgBH,IAAhB;;AAEA,UAAII,gBAAgB,GAAG,KAAKC,kBAAL,GAA0B,IAAItB,EAAE,CAACU,EAAH,CAAMa,SAAN,CAAgBC,SAApB,CAA8B,IAAIxB,EAAE,CAACU,EAAH,CAAMQ,MAAN,CAAaO,IAAjB,CAAsB,CAAtB,CAA9B,CAAjD;AACAJ,MAAAA,gBAAgB,CAACK,GAAjB,CAAqB;AACnBC,QAAAA,KAAK,EAAErB,iBADY;AAEnBsB,QAAAA,QAAQ,EAAEtB,iBAFS;AAGnBuB,QAAAA,UAAU,EAAE;AAHO,OAArB;AAKA,UAAMC,eAAe,GAAG9B,EAAE,CAAC+B,GAAH,CAAOC,IAAP,CAAYC,UAAZ,CAAuBC,KAAK,CAACC,KAAN,CAAYH,IAAZ,CAAiBI,KAAjB,CAAuB,eAAvB,CAAvB,CAAxB;AACA,UAAIC,UAAU,GAAG,IAAIrC,EAAE,CAACU,EAAH,CAAM4B,KAAN,CAAYC,KAAhB,CAAsB,KAAKC,EAAL,CAAQ,QAAR,CAAtB,EAAyCd,GAAzC,CAA6C;AAC5De,QAAAA,IAAI,EAAEX,eADsD;AAE5DY,QAAAA,MAAM,EAAE;AAFoD,OAA7C,CAAjB;AAIArB,MAAAA,gBAAgB,CAACsB,GAAjB,CAAqBN,UAArB;;AACA,WAAKO,IAAL,CAAUvB,gBAAV;;AAEA,WAAKwB,eAAL,GAAuB,IAAI7C,EAAE,CAACU,EAAH,CAAMa,SAAN,CAAgBC,SAApB,CAA8B,IAAIxB,EAAE,CAACU,EAAH,CAAMQ,MAAN,CAAa4B,MAAjB,EAA9B,CAAvB;;AACA,WAAKF,IAAL,CAAU,KAAKC,eAAf,EAAgC;AAC9BE,QAAAA,IAAI,EAAE;AADwB,OAAhC;;AAIA,UAAIC,kBAAkB,GAAG,KAAKC,mBAAL,GAA2B,IAAIjD,EAAE,CAACU,EAAH,CAAMa,SAAN,CAAgBC,SAApB,CAA8B,IAAIxB,EAAE,CAACU,EAAH,CAAMQ,MAAN,CAAaO,IAAjB,CAAsB,CAAtB,CAA9B,CAApD;AACAuB,MAAAA,kBAAkB,CAACtB,GAAnB,CAAuB;AACrBC,QAAAA,KAAK,EAAErB,iBADc;AAErBsB,QAAAA,QAAQ,EAAEtB,iBAFW;AAGrBuB,QAAAA,UAAU,EAAE;AAHS,OAAvB;AAKA,UAAIqB,WAAW,GAAG,IAAIlD,EAAE,CAACU,EAAH,CAAM4B,KAAN,CAAYC,KAAhB,CAAsB,KAAKC,EAAL,CAAQ,SAAR,CAAtB,EAA0Cd,GAA1C,CAA8C;AAC9De,QAAAA,IAAI,EAAEX,eADwD;AAE9DY,QAAAA,MAAM,EAAE;AAFsD,OAA9C,CAAlB;AAIAM,MAAAA,kBAAkB,CAACL,GAAnB,CAAuBO,WAAvB;;AACA,WAAKN,IAAL,CAAUI,kBAAV;;AAEA,WAAKG,SAAL,GAAiB,IAAInD,EAAE,CAACU,EAAH,CAAM0C,MAAN,CAAaC,OAAjB,CAAyB,IAAIrD,EAAE,CAACU,EAAH,CAAM0C,MAAN,CAAaE,OAAjB,EAAzB,CAAjB;;AACA,WAAKT,eAAL,CAAqBF,GAArB,CAAyB,KAAKQ,SAA9B,EAAyC;AACvCI,QAAAA,IAAI,EAAE,CADiC;AAEvCC,QAAAA,GAAG,EAAE,CAFkC;AAGvCC,QAAAA,KAAK,EAAE,CAHgC;AAIvCC,QAAAA,MAAM,EAAE;AAJ+B,OAAzC;;AAOA,WAAKC,WAAL,GAAmB,IAAI3D,EAAE,CAACU,EAAH,CAAM4B,KAAN,CAAYC,KAAhB,CAAsB,KAAKC,EAAL,CAAQ,oCAAR,CAAtB,EAAqEd,GAArE,CAAyE;AAC1Fe,QAAAA,IAAI,EAAE,sBADoF;AAE1FmB,QAAAA,SAAS,EAAE,sBAF+E;AAG1FC,QAAAA,UAAU,EAAE;AAH8E,OAAzE,CAAnB;;AAKA,WAAKhB,eAAL,CAAqBF,GAArB,CAAyB,KAAKgB,WAA9B;;AAEA,WAAKG,WAAL,GAAmB,IAAI5B,KAAK,CAAC6B,SAAN,CAAgBjD,SAAhB,CAA0BkD,SAA9B,CAAwC,gBAAxC,CAAnB,CAxD6B,CAyD7B;AACA;AACA;;AACA,WAAKF,WAAL,CAAiBG,eAAjB,CAAiC,gBAAjC,EAAmD,YAAM;AACvD;AACA,QAAA,KAAI,CAACC,SAAL;;AACA,QAAA,KAAI,CAACC,YAAL,CAAkBrD,SAAlB;;AACA,QAAA,KAAI,CAACsD,cAAL,CAAoB,MAApB;AACD,OALD;;AAOA,WAAKjB,SAAL,CAAeR,GAAf,CAAmB,KAAKmB,WAAxB,EAAqC;AACnCP,QAAAA,IAAI,EAAE,CAD6B;AAEnCC,QAAAA,GAAG,EAAE,CAF8B;AAGnCC,QAAAA,KAAK,EAAE,CAH4B;AAInCC,QAAAA,MAAM,EAAE;AAJ2B,OAArC;;AAOA,UAAIW,eAAe,GAAG,IAAIrE,EAAE,CAACU,EAAH,CAAMa,SAAN,CAAgBC,SAApB,CAA8B,IAAIxB,EAAE,CAACU,EAAH,CAAMQ,MAAN,CAAaC,IAAjB,CAAsBd,cAAtB,CAA9B,CAAtB;;AACA,WAAKwC,eAAL,CAAqBF,GAArB,CAAyB0B,eAAzB,EAA0C;AACxCX,QAAAA,MAAM,EAAE,EADgC;AAExCD,QAAAA,KAAK,EAAE;AAFiC,OAA1C;;AAIA,UAAIa,YAAY,GAAG,KAAKC,cAAL,GAAsB,KAAKC,iBAAL,EAAzC;;AACAF,MAAAA,YAAY,CAACG,aAAb,CAA2B,UAA3B;AACAJ,MAAAA,eAAe,CAAC1B,GAAhB,CAAoB2B,YAApB;;AAEA,WAAKI,mBAAL;AACD,KA1FsD;AA4FvDC,IAAAA,MAAM,EAAE;AACN,2BAAqB,oBADf;AAEN,oBAAc,oBAFR;AAGN,oBAAc,oBAHR;AAIN,4BAAsB;AAJhB,KA5F+C;AAmGvDC,IAAAA,UAAU,EAAE;AACV9D,MAAAA,SAAS,EAAE;AACT+D,QAAAA,KAAK,EAAE,4BADE;AAETC,QAAAA,QAAQ,EAAE,KAFD;AAGTC,QAAAA,KAAK,EAAE;AAHE;AADD,KAnG2C;AA2GvDC,IAAAA,OAAO,EAAE;AACPT,MAAAA,cAAc,EAAE,IADT;AAEPxD,MAAAA,SAAS,EAAE,IAFJ;AAGPC,MAAAA,SAAS,EAAE,IAHJ;AAIPM,MAAAA,kBAAkB,EAAE,IAJb;AAKP2B,MAAAA,mBAAmB,EAAE,IALd;AAMPE,MAAAA,SAAS,EAAE,IANJ;AAOPW,MAAAA,WAAW,EAAE,IAPN;AAQPmB,MAAAA,gBAAgB,EAAE,IARX;AASPC,MAAAA,cAAc,EAAE,IATT;AAUPC,MAAAA,aAAa,EAAE,IAVR;AAWPC,MAAAA,aAAa,EAAE,IAXR;AAYPC,MAAAA,gBAAgB,EAAE,IAZX;AAaPC,MAAAA,cAAc,EAAE,IAbT;AAePd,MAAAA,iBAAiB,EAAE,6BAAW;AAC5B,YAAMe,IAAI,GAAG,8BAAb;AACA,YAAIC,SAAS,GAAG,IAAIxF,EAAE,CAACU,EAAH,CAAM+E,IAAN,CAAWC,MAAf,CAAsB,IAAtB,EAA4BH,IAA5B,CAAhB;AACAC,QAAAA,SAAS,CAAC9D,GAAV,CAAc;AACZC,UAAAA,KAAK,EAAEvB,WADK;AAEZuF,UAAAA,MAAM,EAAEvF;AAFI,SAAd;AAIAoF,QAAAA,SAAS,CAACI,WAAV,CAAsB,SAAtB,EAAiC,YAAW;AAC1C,cAAI,KAAKP,gBAAL,IAAyB,KAAKQ,sBAAL,EAA7B,EAA4D;AAC1D,iBAAKC,YAAL,CAAkB,KAAKC,WAAL,CAAiB,KAAKV,gBAAtB,CAAlB;;AACA,iBAAKA,gBAAL,GAAwB,IAAxB;AACD;AACF,SALD,EAKG,IALH;AAMA,eAAOG,SAAP;AACD,OA7BM;AA+BPQ,MAAAA,kBAAkB,EAAE,8BAAW;AAC7B,YAAIC,MAAM,GAAG,KAAKC,sBAAL,EAAb;;AACAD,QAAAA,MAAM,CAACE,IAAP;AACD,OAlCM;AAoCPD,MAAAA,sBAAsB,EAAE,gCAASE,GAAT,EAAc;AAAA;;AACpC,YAAIH,MAAM,GAAG,IAAI/D,KAAK,CAAC6B,SAAN,CAAgBjD,SAAhB,CAA0BuF,cAA9B,EAAb;;AACA,YAAID,GAAJ,EAAS;AACPH,UAAAA,MAAM,CAACK,MAAP,CAAcF,GAAG,CAACG,CAAlB,EAAqBH,GAAG,CAACI,CAAzB;AACD,SAFD,MAEO;AACL;AACA,cAAMC,MAAM,GAAG,KAAKC,eAAL,GAAuBC,SAAvB,EAAf;AACA,cAAMC,iBAAiB,GAAG;AACxBL,YAAAA,CAAC,EAAEE,MAAM,CAAClD,IAAP,GAAcsD,QAAQ,CAAC,CAACJ,MAAM,CAAClD,IAAP,GAAckD,MAAM,CAAC9E,KAAtB,IAA+B,CAAhC,CADD;AAExB6E,YAAAA,CAAC,EAAEC,MAAM,CAACjD,GAAP,GAAaqD,QAAQ,CAAC,CAACJ,MAAM,CAACjD,GAAP,GAAaiD,MAAM,CAACd,MAArB,IAA+B,CAAhC;AAFA,WAA1B;AAIAM,UAAAA,MAAM,CAACK,MAAP,CAAcM,iBAAiB,CAACL,CAAlB,GAAsB,GAApC,EAAyCK,iBAAiB,CAACJ,CAAlB,GAAsB,GAA/D;AACD;;AACDP,QAAAA,MAAM,CAACL,WAAP,CAAmB,YAAnB,EAAiC,UAAAkB,EAAE,EAAI;AACrC,UAAA,MAAI,CAACC,uBAAL,CAA6BD,EAA7B,EAAiCV,GAAjC;AACD,SAFD,EAEG,IAFH;AAGA,eAAOH,MAAP;AACD,OArDM;AAuDPc,MAAAA,uBAAuB,EAAE,iCAASC,CAAT,EAAYZ,GAAZ,EAAiB;AACxC,YAAMa,IAAI,GAAGD,CAAC,CAACE,OAAF,EAAb;AACA,YAAMC,OAAO,GAAGF,IAAI,CAACE,OAArB;AACA,YAAIC,OAAO,GAAGH,IAAI,CAACI,aAAnB;AACA,YAAIC,KAAK,GAAGL,IAAI,CAACM,WAAjB;AAEA,YAAIC,MAAM,GAAG,IAAb;;AACA,YAAI,KAAKlC,cAAL,CAAoBmC,WAApB,EAAJ,EAAuC;AACrCD,UAAAA,MAAM,GAAG,KAAKlC,cAAd;AACD;;AACD,YAAMoC,IAAI,GAAG,KAAKC,YAAL,GAAoBC,UAApB,CAA+BT,OAAO,CAACU,MAAR,EAA/B,EAAiDV,OAAO,CAACW,UAAR,EAAjD,EAAuE,IAAvE,EAA6EN,MAA7E,EAAqF,IAArF,CAAb;;AACA,YAAI,CAACE,IAAL,EAAW;AACT;AACD;;AAED,YAAMK,MAAM,GAAG,KAAKC,cAAL,CAAoBN,IAAI,CAACO,SAAL,EAApB,CAAf;;AACA,aAAKC,oBAAL,CAA0BH,MAA1B,EAAkC3B,GAAlC;;AAEA,YAAIgB,OAAO,KAAK,IAAZ,IAAoBE,KAAK,KAAK,IAAlC,EAAwC;AACtC,cAAIa,OAAO,GAAGJ,MAAM,CAACE,SAAP,EAAd;;AACA,cAAIG,KAAK,GAAG,KAAKC,oBAAL,CAA0BN,MAA1B,EAAkCT,KAAlC,CAAZ,CAFsC,CAGtC;;;AACA,cAAIA,KAAK,CAACgB,OAAV,EAAmB;AAAA,uBACkB,CAACH,OAAD,EAAUC,KAAV,EAAiBhB,OAAjB,EAA0BE,KAA1B,CADlB;AAChBF,YAAAA,OADgB;AACPE,YAAAA,KADO;AACAa,YAAAA,OADA;AACSC,YAAAA,KADT;AAElB;;AACD,eAAKG,wBAAL,CAA8B;AAC5BC,YAAAA,QAAQ,EAAEpB;AADkB,WAA9B,EAEG;AACDoB,YAAAA,QAAQ,EAAEL;AADT,WAFH;AAKD;AACF,OAtFM;AAwFPD,MAAAA,oBAAoB,EAAE,8BAASH,MAAT,EAAiBU,QAAjB,EAA2B;AAAA;;AAC/C,YAAIA,QAAQ,KAAKC,SAAb,IAA0BD,QAAQ,KAAK,IAA3C,EAAiD;AAC/CA,UAAAA,QAAQ,GAAG,EAAX;AACA,cAAIE,aAAa,GAAG,CAApB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7H,SAAL,CAAe8H,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,gBAAIE,QAAQ,GAAG,KAAK/H,SAAL,CAAe6H,CAAf,EAAkBjC,SAAlB,EAAf;;AACA,gBAAIoC,QAAQ,GAAGD,QAAQ,CAACvF,IAAT,GAAgBuF,QAAQ,CAACnH,KAAxC;;AACA,gBAAIgH,aAAa,GAAGI,QAApB,EAA8B;AAC5BJ,cAAAA,aAAa,GAAGI,QAAhB;AACD;AACF;;AACDN,UAAAA,QAAQ,CAAClC,CAAT,GAAa,KAAKoC,aAAlB;AACAF,UAAAA,QAAQ,CAACjC,CAAT,GAAa,GAAb;AACD;;AACDuB,QAAAA,MAAM,CAACiB,OAAP,GAAiBC,WAAjB,CAA6BR,QAAQ,CAAClC,CAAtC,EAAyCkC,QAAQ,CAACjC,CAAlD;AACAuB,QAAAA,MAAM,CAACzB,MAAP,CAAcmC,QAAQ,CAAClC,CAAvB,EAA0BkC,QAAQ,CAACjC,CAAnC;AACA,aAAK0C,kBAAL,CAAwBnB,MAAxB;;AACA,aAAKhH,SAAL,CAAeoI,IAAf,CAAoBpB,MAApB;;AAEAA,QAAAA,MAAM,CAACnC,WAAP,CAAmB,YAAnB,EAAiC,YAAW;AAC1C,eAAKwD,aAAL,CAAmBrB,MAAnB;;AACA,eAAKsB,gBAAL,CAAsBtB,MAAtB;AACD,SAHD,EAGG,IAHH;AAKAA,QAAAA,MAAM,CAACnC,WAAP,CAAmB,QAAnB,EAA6B,YAAW;AACtC,eAAKwD,aAAL,CAAmBrB,MAAnB;AACD,SAFD,EAEG,IAFH;AAIAA,QAAAA,MAAM,CAACnC,WAAP,CAAmB,KAAnB,EAA0B,UAAAoB,CAAC,EAAI;AAC7B,UAAA,MAAI,CAACsC,qBAAL,CAA2BvB,MAAM,CAACE,SAAP,EAA3B;;AACAjB,UAAAA,CAAC,CAACuC,eAAF;AACD,SAHD,EAGG,IAHH;AAKAxB,QAAAA,MAAM,CAACnC,WAAP,CAAmB,QAAnB,EAA6B,UAAAoB,CAAC,EAAI;AAChC,UAAA,MAAI,CAAC5C,cAAL,CAAoB2D,MAAM,CAACE,SAAP,EAApB;;AACAjB,UAAAA,CAAC,CAACuC,eAAF;AACD,SAHD,EAGG,IAHH;AAKAvJ,QAAAA,EAAE,CAACU,EAAH,CAAMC,IAAN,CAAW6I,KAAX,CAAiBC,MAAjB,CAAwBC,KAAxB;;AAEA,aAAKC,YAAL;AACD,OAjIM;AAmIP3B,MAAAA,cAAc,EAAE,wBAAS4B,MAAT,EAAiB;AAC/B,YAAIlC,IAAI,GAAG,KAAKC,YAAL,GAAoBqB,OAApB,CAA4BY,MAA5B,CAAX;AAEA,YAAI7B,MAAM,GAAG,IAAI7F,KAAK,CAAC6B,SAAN,CAAgBjD,SAAhB,CAA0B+I,MAA9B,CAAqCnC,IAArC,CAAb;AACAK,QAAAA,MAAM,CAAC+B,kBAAP;;AACA,aAAKC,yBAAL,CAA+BhC,MAA/B;;AAEA,eAAOA,MAAP;AACD,OA3IM;AA6IPiC,MAAAA,cAAc,EAAE,wBAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAAA;;AACjD,YAAMC,IAAI,GAAG,KAAKzC,YAAL,GAAoB0C,UAApB,CAA+BF,MAA/B,EAAuCF,OAAvC,EAAgDC,OAAhD,CAAb;;AACA,YAAI,CAACE,IAAL,EAAW;AACT,iBAAO,IAAP;AACD;;AACD,YAAI,KAAKE,yBAAL,CAA+BF,IAA/B,CAAJ,EAA0C;AACxC,iBAAO,IAAP;AACD,SAPgD,CASjD;;;AACA,YAAMG,OAAO,GAAG,KAAKC,SAAL,CAAeP,OAAf,CAAhB;AACA,YAAMQ,OAAO,GAAG,KAAKD,SAAL,CAAeN,OAAf,CAAhB;AACA,YAAMQ,KAAK,GAAGH,OAAO,CAACI,aAAR,EAAd;AACA,YAAMC,KAAK,GAAGH,OAAO,CAACI,YAAR,EAAd;;AACA,YAAIH,KAAK,IAAIE,KAAb,EAAoB;AAClB,cAAI,KAAKtF,cAAL,CAAoBmC,WAApB,MAAqCgD,OAAO,CAACxC,SAAR,OAAwB,KAAK3C,cAAL,CAAoB2C,SAApB,EAAjE,EAAkG;AAChGsC,YAAAA,OAAO,CAACvB,OAAR,GAAkB8B,eAAlB,CAAkC,IAAlC;AACD,WAFD,MAEO;AACLL,YAAAA,OAAO,CAACzB,OAAR,GAAkB+B,YAAlB,CAA+Bd,OAA/B;AACD;;AACD,cAAMe,SAAS,GAAG,KAAKC,eAAL,CAAqBV,OAArB,EAA8BG,KAA9B,EAAqCD,OAArC,EAA8CG,KAA9C,CAAlB;;AACA,cAAMM,EAAE,GAAGF,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf,GAAiC,CAA5C;AACA,cAAMG,EAAE,GAAGH,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf,GAAiC,CAA5C;AACA,cAAMI,EAAE,GAAGJ,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf,GAAiC,CAA5C;AACA,cAAMK,EAAE,GAAGL,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAf,GAAiC,CAA5C;;AACA,cAAMM,kBAAkB,GAAG,KAAKxH,WAAL,CAAiByH,SAAjB,CAA2BL,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,CAA3B;;AAEA,cAAMG,MAAM,GAAG,IAAItJ,KAAK,CAAC6B,SAAN,CAAgBjD,SAAhB,CAA0B2K,MAA9B,CAAqCrB,IAArC,EAA2CkB,kBAA3C,CAAf;;AACA,eAAKtK,SAAL,CAAemI,IAAf,CAAoBqC,MAApB;;AAEAA,UAAAA,MAAM,CAACE,iBAAP,GAA2BhE,IAA3B,CAAgCiE,gBAAhC,CAAiD,OAAjD,EAA0D,UAAA3E,CAAC,EAAI;AAC7D;AACAwE,YAAAA,MAAM,CAACI,aAAP,CAAqB,cAArB,EAAqCJ,MAAM,CAACK,SAAP,EAArC;AACA7E,YAAAA,CAAC,CAACuC,eAAF;AACD,WAJD,EAIG,IAJH;AAMAiC,UAAAA,MAAM,CAAC5F,WAAP,CAAmB,cAAnB,EAAmC,UAAAoB,CAAC,EAAI;AACtC,YAAA,MAAI,CAACsC,qBAAL,CAA2BkC,MAAM,CAACK,SAAP,EAA3B;AACD,WAFD,EAEG,IAFH;AAIA,iBAAOL,MAAP;AACD;;AACD,eAAO,IAAP;AACD,OAxLM;AA0LPlB,MAAAA,yBAAyB,EAAE,mCAASF,IAAT,EAAe;AACxC,aAAK,IAAIxB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAK5H,SAAL,CAAe6H,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAM4C,MAAM,GAAG,KAAKxK,SAAL,CAAe4H,CAAf,CAAf;;AACA,cAAI4C,MAAM,CAACM,OAAP,GAAiBD,SAAjB,OAAiCzB,IAAI,CAACyB,SAAL,EAArC,EAAuD;AACrD,mBAAO,IAAP;AACD;AACF;;AACD,eAAO,KAAP;AACD,OAlMM;AAoMP9B,MAAAA,yBAAyB,EAAE,mCAAShC,MAAT,EAAiB;AAAA;;AAC1C,YAAMgE,MAAM,GAAG,aAAf;AACAhE,QAAAA,MAAM,CAACnC,WAAP,CAAmB,eAAnB,EAAoC,UAAAoB,CAAC,EAAI;AACvC,cAAIC,IAAI,GAAGD,CAAC,CAACE,OAAF,EAAX;AACA,cAAI8E,KAAK,GAAG/E,IAAI,CAAC+E,KAAjB;AACA,cAAIC,UAAU,GAAGhF,IAAI,CAAC2C,MAAtB;AACA,cAAIsC,WAAW,GAAGjF,IAAI,CAACqB,OAAvB,CAJuC,CAMvC;;AACA0D,UAAAA,KAAK,CAACG,SAAN,CAAgB,MAAhB,EAPuC,CASvC;;AACAH,UAAAA,KAAK,CAACI,OAAN,CAAc,kBAAd;AACA,cAAIC,QAAQ,GAAG;AACbJ,YAAAA,UAAU,EAAEA,UADC;AAEbC,YAAAA,WAAW,EAAEA;AAFA,WAAf;AAIAF,UAAAA,KAAK,CAACM,OAAN,CAAc,kBAAd,EAAkCD,QAAlC;AAEA,UAAA,MAAI,CAACpH,gBAAL,GAAwBoH,QAAQ,CAACJ,UAAjC;AACA,UAAA,MAAI,CAACM,iBAAL,GAAyBF,QAAQ,CAACH,WAAlC;AACAlM,UAAAA,EAAE,CAAC+B,GAAH,CAAOyK,OAAP,CAAe5G,WAAf,CACE,MAAI,CAACzC,SADP,EAEE4I,MAFF,EAGE,MAAI,CAACU,eAHP,EAIE,MAJF;AAMD,SAzBD,EAyBG,IAzBH;AA2BA1E,QAAAA,MAAM,CAACnC,WAAP,CAAmB,cAAnB,EAAmC,UAAAoB,CAAC,EAAI;AACtC,cAAIC,IAAI,GAAGD,CAAC,CAACE,OAAF,EAAX;AACA,cAAI8E,KAAK,GAAG/E,IAAI,CAAC+E,KAAjB;AACA,cAAIU,UAAU,GAAGzF,IAAI,CAAC2C,MAAtB;AACA,cAAI+C,WAAW,GAAG1F,IAAI,CAACqB,OAAvB;AAEA,cAAIsE,UAAU,GAAG,KAAjB;;AACA,cAAIZ,KAAK,CAACa,YAAN,CAAmB,kBAAnB,CAAJ,EAA4C;AAC1C,gBAAMZ,UAAU,GAAGD,KAAK,CAAC9E,OAAN,CAAc,kBAAd,EAAkC+E,UAArD;AACA,gBAAMC,WAAW,GAAGF,KAAK,CAAC9E,OAAN,CAAc,kBAAd,EAAkCgF,WAAtD;;AACA,gBAAMY,QAAQ,GAAG,MAAI,CAACtC,SAAL,CAAeyB,UAAf,CAAjB;;AACA,gBAAMc,QAAQ,GAAG,MAAI,CAACvC,SAAL,CAAekC,UAAf,CAAjB;;AACA,gBAAMM,cAAc,GAAGd,WAAW,GAAGY,QAAQ,CAACjC,YAAT,EAAH,GAA6BiC,QAAQ,CAACnC,aAAT,EAA/D;AACA,gBAAMsC,cAAc,GAAGN,WAAW,GAAGI,QAAQ,CAAClC,YAAT,EAAH,GAA6BkC,QAAQ,CAACpC,aAAT,EAA/D;AACAiC,YAAAA,UAAU,GAAG,MAAI,CAACM,oBAAL,CAA0BF,cAA1B,EAA0CC,cAA1C,CAAb;AACD;;AAED,cAAI,CAACL,UAAL,EAAiB;AACfZ,YAAAA,KAAK,CAACmB,cAAN;AACD;AACF,SApBD,EAoBG,IApBH;AAsBApF,QAAAA,MAAM,CAACnC,WAAP,CAAmB,UAAnB,EAA+B,UAAAoB,CAAC,EAAI;AAClC,cAAIC,IAAI,GAAGD,CAAC,CAACE,OAAF,EAAX;AACA,cAAI8E,KAAK,GAAG/E,IAAI,CAAC+E,KAAjB;AACA,cAAIU,UAAU,GAAGzF,IAAI,CAAC2C,MAAtB;AACA,cAAI+C,WAAW,GAAG1F,IAAI,CAACqB,OAAvB;;AAEA,cAAI0D,KAAK,CAACa,YAAN,CAAmB,kBAAnB,CAAJ,EAA4C;AAC1C,gBAAIZ,UAAU,GAAGD,KAAK,CAAC9E,OAAN,CAAc,kBAAd,EAAkC+E,UAAnD;AACA,gBAAIC,WAAW,GAAGF,KAAK,CAAC9E,OAAN,CAAc,kBAAd,EAAkCgF,WAApD;AAEA,gBAAI9E,OAAO,GAAGuF,WAAW,GAAGV,UAAH,GAAgBS,UAAzC;AACA,gBAAIvE,OAAO,GAAG+D,WAAW,GAAGD,UAAH,GAAgBS,UAAzC;;AAEA,YAAA,MAAI,CAACnE,wBAAL,CAA8B;AAC5BC,cAAAA,QAAQ,EAAEpB;AADkB,aAA9B,EAEG;AACDoB,cAAAA,QAAQ,EAAEL;AADT,aAFH;;AAKA,YAAA,MAAI,CAACiF,gBAAL;;AACApN,YAAAA,EAAE,CAAC+B,GAAH,CAAOyK,OAAP,CAAea,cAAf,CACE,MAAI,CAAClK,SADP,EAEE4I,MAFF,EAGE,MAAI,CAACU,eAHP,EAIE,MAJF;AAMD;AACF,SA1BD,EA0BG,IA1BH;AA4BA1E,QAAAA,MAAM,CAACnC,WAAP,CAAmB,aAAnB,EAAkC,UAAAoB,CAAC,EAAI;AACrC,cAAIC,IAAI,GAAGD,CAAC,CAACE,OAAF,EAAX;AACA,cAAI+E,UAAU,GAAGhF,IAAI,CAAC2C,MAAtB;AAEA,cAAI0D,IAAI,GAAG,MAAI,CAACnI,aAAhB;AACA,cAAIoI,IAAI,GAAG,MAAI,CAACnI,aAAhB;;AACA,cAAI,MAAI,CAACH,gBAAL,KAA0BgH,UAA9B,EAA0C;AACxC,gBAAM7F,GAAG,GAAG;AACVG,cAAAA,CAAC,EAAE+G,IADO;AAEV9G,cAAAA,CAAC,EAAE+G;AAFO,aAAZ;;AAIA,gBAAItH,MAAM,GAAG,MAAI,CAACC,sBAAL,CAA4BE,GAA5B,CAAb;;AACA,gBAAI,MAAI,CAACmG,iBAAL,KAA2B,IAA/B,EAAqC;AACnCtG,cAAAA,MAAM,CAACuH,UAAP,CAAkBvB,UAAlB,EAA8B,MAAI,CAACzB,SAAL,CAAeyB,UAAf,EAA2BpB,YAA3B,EAA9B;AACD,aAFD,MAEO;AACL5E,cAAAA,MAAM,CAACuH,UAAP,CAAkBvB,UAAlB,EAA8B,MAAI,CAACzB,SAAL,CAAeyB,UAAf,EAA2BtB,aAA3B,EAA9B;AACD;;AACD1E,YAAAA,MAAM,CAACL,WAAP,CAAmB,OAAnB,EAA4B,UAASkB,EAAT,EAAa;AACvC,mBAAKsG,gBAAL;AACD,aAFD,EAEG,MAFH;AAGAnH,YAAAA,MAAM,CAACE,IAAP;AACD;;AACDnG,UAAAA,EAAE,CAAC+B,GAAH,CAAOyK,OAAP,CAAea,cAAf,CACE,MAAI,CAAClK,SADP,EAEE4I,MAFF,EAGE,MAAI,CAACU,eAHP,EAIE,MAJF;AAMD,SA5BD,EA4BG,IA5BH;AA6BD,OAhTM;AAkTPgB,MAAAA,mBAAmB,EAAE,6BAASC,SAAT,EAAoB;AACvC,YAAIC,SAAS,GAAG,IAAIzL,KAAK,CAAC6B,SAAN,CAAgB6J,MAAhB,CAAuBC,SAA3B,CAAqCH,SAArC,CAAhB;AACAC,QAAAA,SAAS,CAAC7D,kBAAV;;AACA,aAAKC,yBAAL,CAA+B4D,SAA/B;;AACA,aAAKrM,kBAAL,CAAwBqB,GAAxB,CAA4BgL,SAA5B,EAAuC;AACrC5K,UAAAA,IAAI,EAAE;AAD+B,SAAvC;;AAGA,eAAO4K,SAAP;AACD,OA1TM;AA4TPG,MAAAA,oBAAoB,EAAE,8BAASC,KAAT,EAAgB;AACpC,aAAKC,mBAAL;;AACA,YAAMC,UAAU,GAAGF,KAAK,CAACG,aAAN,EAAnB;;AACA,aAAK,IAAItF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqF,UAAU,CAACpF,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAI8E,SAAS,GAAG,KAAK/F,YAAL,GAAoBqB,OAApB,CAA4BiF,UAAU,CAACrF,CAAD,CAAtC,CAAhB;;AACA,cAAIvG,UAAU,GAAG,KAAKoL,mBAAL,CAAyBC,SAAzB,CAAjB;;AACA,eAAK3M,SAAL,CAAeoI,IAAf,CAAoB9G,UAApB;AACD;AACF,OApUM;AAsUP2L,MAAAA,mBAAmB,EAAE,+BAAW;AAC9B;AACA,eAAO,KAAK1M,kBAAL,CAAwB6M,WAAxB,GAAsCtF,MAAtC,GAA+C,CAAtD,EAAyD;AACvD,eAAKvH,kBAAL,CAAwB8M,QAAxB,CAAiC,KAAK9M,kBAAL,CAAwB6M,WAAxB,GAAsCtF,MAAtC,GAA+C,CAAhF;AACD;AACF,OA3UM;AA6UPwF,MAAAA,oBAAoB,EAAE,8BAASC,YAAT,EAAuB;AAC3C,YAAIC,UAAU,GAAG,IAAIrM,KAAK,CAAC6B,SAAN,CAAgB6J,MAAhB,CAAuBY,UAA3B,CAAsCF,YAAtC,CAAjB;AACAC,QAAAA,UAAU,CAACzE,kBAAX;;AACA,aAAKC,yBAAL,CAA+BwE,UAA/B;;AACA,aAAKtL,mBAAL,CAAyBN,GAAzB,CAA6B4L,UAA7B,EAAyC;AACvCxL,UAAAA,IAAI,EAAE;AADiC,SAAzC;;AAGA,eAAOwL,UAAP;AACD,OArVM;AAuVPE,MAAAA,qBAAqB,EAAE,+BAASV,KAAT,EAAgB;AACrC,aAAKW,oBAAL;;AACA,YAAIxL,WAAW,GAAG,KAAKmL,oBAAL,CAA0BN,KAA1B,CAAlB;;AACA,aAAKhN,SAAL,CAAeoI,IAAf,CAAoBjG,WAApB;AACD,OA3VM;AA6VPwL,MAAAA,oBAAoB,EAAE,gCAAW;AAC/B;AACA,eAAO,KAAKzL,mBAAL,CAAyBkL,WAAzB,GAAuCtF,MAAvC,GAAgD,CAAvD,EAA0D;AACxD,eAAK5F,mBAAL,CAAyBmL,QAAzB,CAAkC,KAAKnL,mBAAL,CAAyBkL,WAAzB,GAAuCtF,MAAvC,GAAgD,CAAlF;AACD;AACF,OAlWM;AAoWP8F,MAAAA,oBAAoB,EAAE,gCAAW;AAC/B,aAAK,IAAI/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7H,SAAL,CAAe8H,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,cAAI,KAAKzF,SAAL,CAAeyL,eAAf,OAAqC,KAAK7N,SAAL,CAAe6H,CAAf,CAAzC,EAA4D;AAC1D,iBAAKiG,YAAL,CAAkB,KAAK9N,SAAL,CAAe6H,CAAf,CAAlB;;AACA;AACD;AACF;AACF,OA3WM;AA6WPsE,MAAAA,oBAAoB,EAAE,8BAAS4B,aAAT,EAAwBC,aAAxB,EAAuC;AAC3D,eAAO7M,KAAK,CAAC8M,KAAN,CAAYC,KAAZ,CAAkBC,WAAlB,GAAgCC,kBAAhC,CAAmDL,aAAnD,EAAkEC,aAAlE,CAAP;AACD,OA/WM;AAiXP1G,MAAAA,oBAAoB,EAAE,8BAAS+G,KAAT,EAAgB9H,KAAhB,EAAuB;AAC3C,YAAIA,KAAK,CAACgB,OAAN,IAAiB8G,KAAK,CAACzE,aAAN,EAArB,EAA4C;AAC1C,iBAAOyE,KAAK,CAACzE,aAAN,EAAP;AACD,SAFD,MAEO,IAAIyE,KAAK,CAACvE,YAAN,EAAJ,EAA0B;AAC/B,iBAAOuE,KAAK,CAACvE,YAAN,EAAP;AACD;;AACD,eAAO,IAAP;AACD,OAxXM;AA0XPtC,MAAAA,wBAAwB,EAAE,kCAAS8G,IAAT,EAAeC,EAAf,EAAmBnF,MAAnB,EAA2B;AACnD,YAAMF,OAAO,GAAGoF,IAAI,CAAC7G,QAArB;AACA,YAAM0B,OAAO,GAAGoF,EAAE,CAAC9G,QAAnB;;AACA,aAAKwB,cAAL,CAAoBC,OAApB,EAA6BC,OAA7B,EAAsCC,MAAtC;AACD,OA9XM;AAgYPoF,MAAAA,qCAAqC,EAAE,+CAASF,IAAT,EAAeC,EAAf,EAAmBnF,MAAnB,EAA2B;AAChE,YAAM8D,UAAU,GAAG,KAAK3M,kBAAL,CAAwB6M,WAAxB,EAAnB,CADgE,CAEhE;;;AACA,aAAK,IAAIvF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqF,UAAU,CAACpF,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAM4G,WAAW,GAAGvB,UAAU,CAACrF,CAAD,CAAV,CAAcX,SAAd,EAApB;;AACA,cAAIuH,WAAW,KAAKH,IAAI,CAAC7G,QAAzB,EAAmC;AACjC,gBAAIyB,OAAO,GAAGoF,IAAI,CAAC7G,QAAnB;AACA,gBAAI0B,OAAO,GAAGoF,EAAE,CAAC9G,QAAjB;;AACA,iBAAKwB,cAAL,CAAoBC,OAApB,EAA6BC,OAA7B,EAAsCC,MAAtC;AACD;AACF;AACF,OA3YM;AA6YPd,MAAAA,gBAAgB,EAAE,0BAAStB,MAAT,EAAiB;AACjC,YAAM0H,OAAO,GAAG1H,MAAM,CAAC2H,gBAAP,EAAhB;AACA,YAAMhI,IAAI,GAAG,KAAKC,YAAL,GAAoBqB,OAApB,CAA4BjB,MAAM,CAACE,SAAP,EAA5B,CAAb;AACAP,QAAAA,IAAI,CAACuB,WAAL,CAAiBwG,OAAO,CAAClM,IAAzB,EAA+BkM,OAAO,CAACjM,GAAvC;AACD,OAjZM;AAmZP4F,MAAAA,aAAa,EAAE,uBAASrB,MAAT,EAAiB;AAAA;;AAC9B,YAAI4H,aAAa,GAAG,KAAKhI,YAAL,GAAoBiI,iBAApB,CAAsC7H,MAAM,CAACE,SAAP,EAAtC,CAApB;AAEA0H,QAAAA,aAAa,CAACE,OAAd,CAAsB,UAAA1F,MAAM,EAAI;AAC9B,cAAIqB,MAAM,GAAG,MAAI,CAACzF,WAAL,CAAiBoE,MAAjB,CAAb;;AACA,cAAIqB,MAAJ,EAAY;AACV,gBAAIsE,KAAK,GAAG,MAAI,CAACtF,SAAL,CAAegB,MAAM,CAACM,OAAP,GAAiBiE,cAAjB,EAAf,CAAZ;;AACA,gBAAIrF,KAAK,GAAGoF,KAAK,CAACnF,aAAN,EAAZ;;AACA,gBAAIqF,KAAK,GAAG,MAAI,CAACxF,SAAL,CAAegB,MAAM,CAACM,OAAP,GAAiBmE,eAAjB,EAAf,CAAZ;;AACA,gBAAIrF,KAAK,GAAGoF,KAAK,CAACnF,YAAN,EAAZ;;AACA,gBAAMG,SAAS,GAAG,MAAI,CAACC,eAAL,CAAqB6E,KAArB,EAA4BpF,KAA5B,EAAmCsF,KAAnC,EAA0CpF,KAA1C,CAAlB;;AACA,gBAAMM,EAAE,GAAGF,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAX;AACA,gBAAMG,EAAE,GAAGH,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAX;AACA,gBAAMI,EAAE,GAAGJ,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAX;AACA,gBAAMK,EAAE,GAAGL,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAX;;AACA,YAAA,MAAI,CAAClH,WAAL,CAAiBoM,WAAjB,CAA6B1E,MAAM,CAACE,iBAAP,EAA7B,EAAyDR,EAAzD,EAA6DC,EAA7D,EAAiEC,EAAjE,EAAqEC,EAArE;AACD;AACF,SAdD;AAeD,OAraM;AAuaPoB,MAAAA,eAAe,EAAE,yBAAS0D,YAAT,EAAuB;AACtC,YAAI,KAAKlL,gBAAL,KAA0B,IAA9B,EAAoC;AAClC;AACD;;AACD,YAAI8C,MAAM,GAAG,KAAKyC,SAAL,CAAe,KAAKvF,gBAApB,CAAb;;AACA,YAAI8C,MAAM,KAAK,IAAf,EAAqB;AACnB;AACD;;AACD,YAAIqI,IAAJ;;AACA,YAAI,KAAK7D,iBAAT,EAA4B;AAC1B6D,UAAAA,IAAI,GAAGrI,MAAM,CAAC8C,YAAP,EAAP;AACD,SAFD,MAEO;AACLuF,UAAAA,IAAI,GAAGrI,MAAM,CAAC4C,aAAP,EAAP;AACD;;AACD,YAAIyF,IAAI,KAAK,IAAb,EAAmB;AACjB;AACD;;AAED,YAAMC,YAAY,GAAG,EAArB;AACA,YAAMC,qBAAqB,GAAG,KAAKhP,kBAAL,CAAwBiP,SAAxB,KAAsC,KAAKjP,kBAAL,CAAwBkP,QAAxB,EAAtC,GAA2E,CAAzG;AACA,aAAKrL,aAAL,GAAqBgL,YAAY,CAACM,eAAb,KAAiC,KAAK9J,SAAL,GAAiBpD,IAAlD,GAAyD+M,qBAA9E;AACA,aAAKlL,aAAL,GAAqB+K,YAAY,CAACO,cAAb,KAAgCL,YAArD;AAEA,YAAIM,OAAO,GAAG5I,MAAM,CAAC6I,YAAP,CAAoBR,IAApB,CAAd;;AACA,YAAIO,OAAO,CAAC,CAAD,CAAP,KAAe,IAAnB,EAAyB;AACvBA,UAAAA,OAAO,CAAC,CAAD,CAAP,GAAa9J,QAAQ,CAAC,KAAKhE,eAAL,CAAqB8D,SAArB,GAAiChF,KAAjC,GAAyC,CAA1C,CAArB;AACD;;AAED,YAAIuJ,EAAJ;AACA,YAAIC,EAAJ;AACA,YAAIC,EAAJ;AACA,YAAIC,EAAJ;;AACA,YAAI+E,IAAI,CAAC9H,OAAT,EAAkB;AAChB4C,UAAAA,EAAE,GAAG,KAAK/F,aAAV;AACAgG,UAAAA,EAAE,GAAG,KAAK/F,aAAV;AACAgG,UAAAA,EAAE,GAAGuF,OAAO,CAAC,CAAD,CAAZ;AACAtF,UAAAA,EAAE,GAAGsF,OAAO,CAAC,CAAD,CAAZ;AACD,SALD,MAKO;AACLzF,UAAAA,EAAE,GAAGyF,OAAO,CAAC,CAAD,CAAZ;AACAxF,UAAAA,EAAE,GAAGwF,OAAO,CAAC,CAAD,CAAZ;AACAvF,UAAAA,EAAE,GAAG,KAAKjG,aAAV;AACAkG,UAAAA,EAAE,GAAG,KAAKjG,aAAV;AACD;;AAED,YAAI,KAAKF,cAAL,KAAwB,IAA5B,EAAkC;AAChC,eAAKA,cAAL,GAAsB,KAAKpB,WAAL,CAAiByH,SAAjB,CAA2BL,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,CAAtB;AACD,SAFD,MAEO;AACL,eAAKvH,WAAL,CAAiBoM,WAAjB,CAA6B,KAAKhL,cAAlC,EAAkDgG,EAAlD,EAAsDC,EAAtD,EAA0DC,EAA1D,EAA8DC,EAA9D;AACD;AACF,OAxdM;AA0dP+B,MAAAA,gBAAgB,EAAE,4BAAW;AAC3B,YAAI,KAAKlI,cAAL,KAAwB,IAA5B,EAAkC;AAChC,eAAKpB,WAAL,CAAiB+M,WAAjB,CAA6B,KAAK3L,cAAlC;AACD;;AACD,aAAKA,cAAL,GAAsB,IAAtB;AACA,aAAKD,gBAAL,GAAwB,IAAxB;AACA,aAAKE,aAAL,GAAqB,IAArB;AACA,aAAKC,aAAL,GAAqB,IAArB;AACD,OAleM;AAoeP6F,MAAAA,eAAe,EAAE,yBAAS6E,KAAT,EAAgBpF,KAAhB,EAAuBsF,KAAvB,EAA8BpF,KAA9B,EAAqC;AACpD;AACA,YAAIF,KAAK,CAACpC,OAAV,EAAmB;AAAA,sBACc,CAAC0H,KAAD,EAAQpF,KAAR,EAAekF,KAAf,EAAsBpF,KAAtB,CADd;AAChBoF,UAAAA,KADgB;AACTpF,UAAAA,KADS;AACFsF,UAAAA,KADE;AACKpF,UAAAA,KADL;AAElB;;AACD,YAAIkG,EAAE,GAAGhB,KAAK,CAACc,YAAN,CAAmBlG,KAAnB,CAAT;AACA,YAAIqG,EAAE,GAAGf,KAAK,CAACY,YAAN,CAAmBhG,KAAnB,CAAT;;AACA,YAAImG,EAAE,CAAC,CAAD,CAAF,KAAU,IAAd,EAAoB;AAClBA,UAAAA,EAAE,CAAC,CAAD,CAAF,GAAQlK,QAAQ,CAAC,KAAKhE,eAAL,CAAqB8D,SAArB,GAAiChF,KAAjC,GAAyC,CAA1C,CAAhB;AACD;;AACD,eAAO,CAACmP,EAAD,EAAKC,EAAL,CAAP;AACD,OA/eM;AAifPvG,MAAAA,SAAS,EAAE,mBAASZ,MAAT,EAAiB;AAC1B,aAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7H,SAAL,CAAe8H,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,cAAI,KAAK7H,SAAL,CAAe6H,CAAf,EAAkBX,SAAlB,OAAkC2B,MAAtC,EAA8C;AAC5C,mBAAO,KAAK7I,SAAL,CAAe6H,CAAf,CAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD,OAxfM;AA0fP7C,MAAAA,WAAW,EAAE,qBAASoE,MAAT,EAAiB;AAC5B,aAAK,IAAIvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK5H,SAAL,CAAe6H,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,cAAI,KAAK5H,SAAL,CAAe4H,CAAf,EAAkBiD,SAAlB,OAAkC1B,MAAtC,EAA8C;AAC5C,mBAAO,KAAKnJ,SAAL,CAAe4H,CAAf,CAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD,OAjgBM;AAmgBPiG,MAAAA,YAAY,EAAE,sBAASnH,IAAT,EAAe;AAC3B,aAAKkE,aAAL,CAAmB,YAAnB,EAAiClE,IAAI,CAACO,SAAL,EAAjC;AACD,OArgBM;AAugBP+I,MAAAA,SAvgBO,qBAugBGpH,MAvgBH,EAugBW;AAChB,aAAKqH,WAAL,CAAiBrH,MAAjB;AACD,OAzgBM;AA2gBPsH,MAAAA,gBAAgB,EAAE,4BAAW;AAC3B,eAAO,KAAKnQ,SAAL,CAAe8H,MAAf,GAAwB,CAA/B,EAAkC;AAChC,eAAKgG,YAAL,CAAkB,KAAK9N,SAAL,CAAe,KAAKA,SAAL,CAAe8H,MAAf,GAAwB,CAAvC,CAAlB;AACD;AACF,OA/gBM;AAihBPsI,MAAAA,SAAS,EAAE,mBAAShH,MAAT,EAAiB;AAC1B,aAAKiH,WAAL,CAAiB,KAAKrL,WAAL,CAAiBoE,MAAjB,CAAjB;AACD,OAnhBM;AAqhBPrE,MAAAA,YAAY,EAAE,sBAASsE,IAAT,EAAe;AAC3B,aAAKwB,aAAL,CAAmB,YAAnB,EAAiCxB,IAAI,CAACyB,SAAL,EAAjC;AACD,OAvhBM;AAyhBPwF,MAAAA,gBAAgB,EAAE,4BAAW;AAC3B,eAAO,KAAKrQ,SAAL,CAAe6H,MAAf,GAAwB,CAA/B,EAAkC;AAChC,eAAK/C,YAAL,CAAkB,KAAK9E,SAAL,CAAe,KAAKA,SAAL,CAAe6H,MAAf,GAAwB,CAAvC,CAAlB;AACD;AACF,OA7hBM;AA+hBP3E,MAAAA,SAAS,EAAE,qBAAW;AACpB,aAAKgN,gBAAL;;AACA,aAAKG,gBAAL;AACD,OAliBM;AAoiBPJ,MAAAA,WAAW,EAAE,qBAASrH,MAAT,EAAiB;AAC5B,YAAI7B,MAAM,GAAG,KAAKyC,SAAL,CAAeZ,MAAf,CAAb;;AACA,YAAI,KAAKzG,SAAL,CAAegL,WAAf,GAA6BmD,QAA7B,CAAsCvJ,MAAtC,CAAJ,EAAmD;AACjD,eAAK5E,SAAL,CAAeoO,MAAf,CAAsBxJ,MAAtB;AACD;;AACD,YAAIyJ,KAAK,GAAG,KAAKzQ,SAAL,CAAe0Q,OAAf,CAAuB1J,MAAvB,CAAZ;;AACA,YAAIyJ,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,eAAKzQ,SAAL,CAAe2Q,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACD;;AACD,aAAK7H,YAAL;AACD,OA9iBM;AAgjBPgI,MAAAA,eAAe,EAAE,2BAAW;AAC1B,eAAO,KAAK5Q,SAAL,CAAe8H,MAAf,GAAwB,CAA/B,EAAkC;AAChC,eAAKoI,WAAL,CAAiB,KAAKlQ,SAAL,CAAe,KAAKA,SAAL,CAAe8H,MAAf,GAAwB,CAAvC,EAA0CZ,SAA1C,EAAjB;AACD;AACF,OApjBM;AAsjBPmJ,MAAAA,WAAW,EAAE,qBAAShH,IAAT,EAAe;AAC1B,aAAKtG,WAAL,CAAiB+M,WAAjB,CAA6BzG,IAAI,CAACsB,iBAAL,EAA7B;;AACA,YAAI8F,KAAK,GAAG,KAAKxQ,SAAL,CAAeyQ,OAAf,CAAuBrH,IAAvB,CAAZ;;AACA,YAAIoH,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,eAAKxQ,SAAL,CAAe0Q,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACD;AACF,OA5jBM;AA8jBPI,MAAAA,eAAe,EAAE,2BAAW;AAC1B,eAAO,KAAK5Q,SAAL,CAAe6H,MAAf,GAAwB,CAA/B,EAAkC;AAChC,eAAKuI,WAAL,CAAiB,KAAKpQ,SAAL,CAAe,KAAKA,SAAL,CAAe6H,MAAf,GAAwB,CAAvC,CAAjB;AACD;AACF,OAlkBM;AAokBPgJ,MAAAA,QAAQ,EAAE,oBAAW;AACnB,aAAKF,eAAL;;AACA,aAAKC,eAAL;AACD,OAvkBM;AAykBPE,MAAAA,SAAS,EAAE,mBAAS/D,KAAT,EAAgB;AACzB,aAAK8D,QAAL;AACA,aAAKvM,cAAL,GAAsByI,KAAtB;;AACA,YAAIA,KAAJ,EAAW;AACT,cAAMtG,WAAW,GAAGsG,KAAK,CAACtG,WAAN,EAApB;;AACA,cAAIA,WAAJ,EAAiB;AACf,iBAAKnG,kBAAL,CAAwBmD,aAAxB,CAAsC,SAAtC;;AACA,iBAAKqJ,oBAAL,CAA0BC,KAA1B;;AACA,iBAAK9K,mBAAL,CAAyBwB,aAAzB,CAAuC,SAAvC;;AACA,iBAAKgK,qBAAL,CAA2BV,KAA3B;AACD,WALD,MAKO;AACL,iBAAKzM,kBAAL,CAAwBmD,aAAxB,CAAsC,UAAtC;;AACA,iBAAKxB,mBAAL,CAAyBwB,aAAzB,CAAuC,UAAvC;AACD;;AACDzE,UAAAA,EAAE,CAACU,EAAH,CAAMC,IAAN,CAAW6I,KAAX,CAAiBuI,UAAjB,CAA4BrI,KAA5B;AAEA,cAAIsI,KAAK,GAAGvK,WAAW,GAAGsG,KAAK,CAACkE,aAAN,EAAH,GAA2BlE,KAAK,CAACmE,QAAN,EAAlD;;AACA,eAAK,IAAM1J,QAAX,IAAuBwJ,KAAvB,EAA8B;AAC5B,gBAAMtK,IAAI,GAAGsK,KAAK,CAACxJ,QAAD,CAAlB;;AACA,gBAAIT,MAAM,GAAG,KAAKC,cAAL,CAAoBQ,QAApB,CAAb;;AACA,iBAAKN,oBAAL,CAA0BH,MAA1B,EAAkCL,IAAI,CAACyK,WAAL,EAAlC;AACD;;AAED,eAAK,IAAM3J,SAAX,IAAuBwJ,KAAvB,EAA8B;AAC5B,gBAAMtK,KAAI,GAAGsK,KAAK,CAACxJ,SAAD,CAAlB;;AACA,gBAAMyF,UAAU,GAAGvG,KAAI,CAACwG,aAAL,EAAnB;;AACA,iBAAK,IAAItF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqF,UAAU,CAACpF,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,kBAAI8E,SAAS,GAAGO,UAAU,CAACrF,CAAD,CAA1B;;AACA,kBAAI8E,SAAS,IAAIsE,KAAjB,EAAwB;AACtB,qBAAKzJ,wBAAL,CAA8B;AAC5BC,kBAAAA,QAAQ,EAAEkF;AADkB,iBAA9B,EAEG;AACDlF,kBAAAA,QAAQ,EAAEA;AADT,iBAFH;AAKD,eAND,MAMO;AACL,oBAAI,CAACf,WAAL,EAAkB;AAChB2K,kBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AACD,qBAAK9C,qCAAL,CAA2C;AACzC/G,kBAAAA,QAAQ,EAAEkF;AAD+B,iBAA3C,EAEG;AACDlF,kBAAAA,QAAQ,EAAEA;AADT,iBAFH;AAKD;AACF;AACF;;AAED,cAAM8J,UAAU,GAAG7K,WAAW,GAAGsG,KAAK,CAACkE,aAAN,EAAH,GAA2B,EAAzD;;AACA,eAAK,IAAMM,WAAX,IAA0BD,UAA1B,EAAsC;AACpC,gBAAME,SAAS,GAAGF,UAAU,CAACC,WAAD,CAA5B;;AACA,gBAAIC,SAAS,CAACC,eAAV,EAAJ,EAAiC;AAC/B,mBAAKlK,wBAAL,CAA8B;AAC5BC,gBAAAA,QAAQ,EAAEgK,SAAS,CAACvK,SAAV;AADkB,eAA9B,EAEG;AACDO,gBAAAA,QAAQ,EAAEuF,KAAK,CAAC9F,SAAN;AADT,eAFH;AAKD;AACF;AACF;AACF,OApoBM;AAsoBPiB,MAAAA,kBAAkB,EAAE,4BAASxB,IAAT,EAAe;AACjC,aAAKvE,SAAL,CAAeR,GAAf,CAAmB+E,IAAnB;;AACAA,QAAAA,IAAI,CAACvB,IAAL;AACD,OAzoBM;AA2oBPmD,MAAAA,qBAAqB,EAAE,+BAASoJ,KAAT,EAAgB;AACrC,YAAMC,KAAK,GAAG,KAAKtN,gBAAnB;;AACA,YAAIsN,KAAJ,EAAW;AACT,cAAI,KAAK9M,sBAAL,EAAJ,EAAmC;AACjC,gBAAM+M,cAAc,GAAG,KAAK7M,WAAL,CAAiB4M,KAAjB,CAAvB;;AACA,gBAAME,eAAe,GAAG3Q,KAAK,CAACC,KAAN,CAAY2Q,KAAZ,CAAkBC,MAAlB,CAAyB,4BAAzB,CAAxB;;AACA,iBAAKjP,WAAL,CAAiBkP,WAAjB,CAA6BJ,cAAc,CAAClH,iBAAf,EAA7B,EAAiEmH,eAAjE;AACD;AACF;;AAED,aAAKxN,gBAAL,GAAwBqN,KAAxB;;AACA,YAAI,KAAK7M,sBAAL,EAAJ,EAAmC;AACjC,cAAMoN,YAAY,GAAG,KAAKlN,WAAL,CAAiB2M,KAAjB,CAArB;;AACA,cAAMQ,aAAa,GAAGhR,KAAK,CAACC,KAAN,CAAY2Q,KAAZ,CAAkBC,MAAlB,CAAyB,yBAAzB,CAAtB;;AACA,eAAKjP,WAAL,CAAiBkP,WAAjB,CAA6BC,YAAY,CAACvH,iBAAb,EAA7B,EAA+DwH,aAA/D;AACD,SAJD,MAIO,IAAIR,KAAJ,EAAW;AAChB,eAAK9G,aAAL,CAAmB,oBAAnB,EAAyC8G,KAAzC;AACD;;AAED,aAAKnO,cAAL,CAAoBE,aAApB,CAAkC,KAAKoB,sBAAL,KAAgC,SAAhC,GAA4C,UAA9E;AACD,OA/pBM;AAiqBPzB,MAAAA,cAAc,EAAE,wBAASwF,MAAT,EAAiB;AAC/B,aAAKgC,aAAL,CAAmB,mBAAnB,EAAwChC,MAAxC;AACD,OAnqBM;AAqqBP/D,MAAAA,sBAAsB,EAAE,kCAAW;AACjC,eAAOsN,OAAO,CAAC,KAAKpN,WAAL,CAAiB,KAAKV,gBAAtB,CAAD,CAAd;AACD,OAvqBM;AAyqBPX,MAAAA,mBAAmB,EAAE,+BAAW;AAAA;;AAC9B,aAAKkB,WAAL,CAAiB,QAAjB,EAA2B,YAAM;AAC/B;AACA1D,UAAAA,KAAK,CAAC6B,SAAN,CAAgBqP,MAAhB,CAAuBC,kBAAvB,CAA0CnE,WAA1C,GAAwDoE,UAAxD,CAAmE,WAAnE;AACApR,UAAAA,KAAK,CAAC6B,SAAN,CAAgBqP,MAAhB,CAAuBC,kBAAvB,CAA0CnE,WAA1C,GAAwDqE,sBAAxD,CAA+E,WAA/E,EAA4F,SAA5F;AAEAvT,UAAAA,EAAE,CAACgM,KAAH,CAASwH,OAAT,CAAiBC,GAAjB,CAAqBvE,WAArB,GAAmCwE,cAAnC,CAAkD,gBAAlD,EAAoE,KAApE;AACD,SAND;AAOA,aAAK9N,WAAL,CAAiB,WAAjB,EAA8B,YAAM;AAClC;AACA1D,UAAAA,KAAK,CAAC6B,SAAN,CAAgBqP,MAAhB,CAAuBC,kBAAvB,CAA0CnE,WAA1C,GAAwDoE,UAAxD,CAAmE,WAAnE;AACApR,UAAAA,KAAK,CAAC6B,SAAN,CAAgBqP,MAAhB,CAAuBC,kBAAvB,CAA0CnE,WAA1C,GAAwDqE,sBAAxD,CAA+E,WAA/E,EAA4F,UAA5F;AACD,SAJD;;AAMA,aAAKpQ,SAAL,CAAeyC,WAAf,CAA2B,KAA3B,EAAkC,UAAAoB,CAAC,EAAI;AACrC,UAAA,MAAI,CAACsC,qBAAL,CAA2B,IAA3B;AACD,SAFD,EAEG,IAFH;;AAIA,aAAK1D,WAAL,CAAiB,QAAjB,EAA2B,UAAAoB,CAAC,EAAI;AAC9B,cAAMT,CAAC,GAAGS,CAAC,CAACyJ,eAAF,KAAsB,MAAI,CAAC9J,SAAL,GAAiBpD,IAAjD;;AACA,cAAMiD,CAAC,GAAGQ,CAAC,CAAC0J,cAAF,EAAV;AACA,cAAMtK,GAAG,GAAG;AACVG,YAAAA,CAAC,EAAEA,CADO;AAEVC,YAAAA,CAAC,EAAEA;AAFO,WAAZ;;AAIA,cAAMP,MAAM,GAAG,MAAI,CAACC,sBAAL,CAA4BE,GAA5B,CAAf;;AACAH,UAAAA,MAAM,CAACE,IAAP;AACD,SATD,EASG,IATH;;AAWA,aAAKtD,eAAL,CAAqB+C,WAArB,CAAiC,QAAjC,EAA2C;AAAA,iBAAM,MAAI,CAAC+D,YAAL,EAAN;AAAA,SAA3C,EAAsE,IAAtE;AACD,OAvsBM;AAysBPA,MAAAA,YAAY,EAAE,wBAAW;AACvB,YAAMgK,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKlM,YAAL,GAAoBuK,QAApB,EAAZ,EAA4CrJ,MAA5C,KAAuD,CAAhF;;AACA,aAAKlF,WAAL,CAAiBc,aAAjB,CAA+BkP,gBAAgB,GAAG,SAAH,GAAe,UAA9D;;AACA,YAAIA,gBAAJ,EAAsB;AACpB,cAAMG,UAAU,GAAG,KAAKnQ,WAAL,CAAiBgD,SAAjB,MAAgC,KAAKhD,WAAL,CAAiBoQ,WAAjB,EAAnD;;AADoB,sCAKhB,KAAKlR,eAAL,CAAqB8D,SAArB,EALgB;AAAA,cAGlBhB,MAHkB,yBAGlBA,MAHkB;AAAA,cAIlBhE,KAJkB,yBAIlBA,KAJkB;;AAMpB,eAAKgC,WAAL,CAAiBqQ,mBAAjB,CAAqC;AACnCxQ,YAAAA,GAAG,EAAEyQ,IAAI,CAACC,KAAL,CAAW,CAACvO,MAAM,GAAGmO,UAAU,CAACnO,MAArB,IAA+B,CAA1C,CAD8B;AAEnCpC,YAAAA,IAAI,EAAE0Q,IAAI,CAACC,KAAL,CAAW,CAACvS,KAAK,GAAGmS,UAAU,CAACnS,KAApB,IAA6B,CAAxC;AAF6B,WAArC;AAID;AACF;AAvtBM;AA3G8C,GAAzD;AAnCAO,EAAAA,KAAK,CAAC6B,SAAN,CAAgBjD,SAAhB,CAA0BqT,WAA1B,CAAsChU,aAAtC,GAAsDA,aAAtD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n *   Widget containing the layout where NodeUIs and EdgeUIs, and when the model loaded\n * is a container-node, also NodeInput and NodeOutput are rendered.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   let workbenchUI = new qxapp.component.workbench.WorkbenchUI(workbench);\n *   this.getRoot().add(workbenchUI);\n * </pre>\n */\n\nconst BUTTON_SIZE = 50;\nconst BUTTON_SPACING = 10;\nconst NODE_INPUTS_WIDTH = 200;\n\nqx.Class.define(\"qxapp.component.workbench.WorkbenchUI\", {\n  extend: qx.ui.core.Widget,\n\n  /**\n    * @param workbench {qxapp.data.model.Workbench} Workbench owning the widget\n  */\n  construct: function(workbench) {\n    this.base(arguments);\n\n    this.__nodesUI = [];\n    this.__edgesUI = [];\n\n    let hBox = new qx.ui.layout.HBox();\n    this._setLayout(hBox);\n\n    let inputNodesLayout = this.__inputNodesLayout = new qx.ui.container.Composite(new qx.ui.layout.VBox(5));\n    inputNodesLayout.set({\n      width: NODE_INPUTS_WIDTH,\n      maxWidth: NODE_INPUTS_WIDTH,\n      allowGrowX: false\n    });\n    const navBarLabelFont = qx.bom.Font.fromConfig(qxapp.theme.Font.fonts[\"nav-bar-label\"]);\n    let inputLabel = new qx.ui.basic.Label(this.tr(\"Inputs\")).set({\n      font: navBarLabelFont,\n      alignX: \"center\"\n    });\n    inputNodesLayout.add(inputLabel);\n    this._add(inputNodesLayout);\n\n    this.__desktopCanvas = new qx.ui.container.Composite(new qx.ui.layout.Canvas());\n    this._add(this.__desktopCanvas, {\n      flex: 1\n    });\n\n    let nodesExposedLayout = this.__outputNodesLayout = new qx.ui.container.Composite(new qx.ui.layout.VBox(5));\n    nodesExposedLayout.set({\n      width: NODE_INPUTS_WIDTH,\n      maxWidth: NODE_INPUTS_WIDTH,\n      allowGrowX: false\n    });\n    let outputLabel = new qx.ui.basic.Label(this.tr(\"Outputs\")).set({\n      font: navBarLabelFont,\n      alignX: \"center\"\n    });\n    nodesExposedLayout.add(outputLabel);\n    this._add(nodesExposedLayout);\n\n    this.__desktop = new qx.ui.window.Desktop(new qx.ui.window.Manager());\n    this.__desktopCanvas.add(this.__desktop, {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    });\n\n    this.__startHint = new qx.ui.basic.Label(this.tr(\"Double click on this area to start\")).set({\n      font: \"workbench-start-hint\",\n      textColor: \"workbench-start-hint\",\n      visibility: \"excluded\"\n    });\n    this.__desktopCanvas.add(this.__startHint);\n\n    this.__svgWidget = new qxapp.component.workbench.SvgWidget(\"SvgWidgetLayer\");\n    // this gets fired once the widget has appeared and the library has been loaded\n    // due to the qx rendering, this will always happen after setup, so we are\n    // sure to catch this event\n    this.__svgWidget.addListenerOnce(\"SvgWidgetReady\", () => {\n      // Will be called only the first time Svg lib is loaded\n      this.removeAll();\n      this.setWorkbench(workbench);\n      this.__nodeSelected(\"root\");\n    });\n\n    this.__desktop.add(this.__svgWidget, {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    });\n\n    let buttonContainer = new qx.ui.container.Composite(new qx.ui.layout.HBox(BUTTON_SPACING));\n    this.__desktopCanvas.add(buttonContainer, {\n      bottom: 10,\n      right: 10\n    });\n    let unlinkButton = this.__unlinkButton = this.__getUnlinkButton();\n    unlinkButton.setVisibility(\"excluded\");\n    buttonContainer.add(unlinkButton);\n\n    this.__addEventListeners();\n  },\n\n  events: {\n    \"nodeDoubleClicked\": \"qx.event.type.Data\",\n    \"removeNode\": \"qx.event.type.Data\",\n    \"removeEdge\": \"qx.event.type.Data\",\n    \"changeSelectedNode\": \"qx.event.type.Data\"\n  },\n\n  properties: {\n    workbench: {\n      check: \"qxapp.data.model.Workbench\",\n      nullable: false,\n      apply: \"loadModel\"\n    }\n  },\n\n  members: {\n    __unlinkButton: null,\n    __nodesUI: null,\n    __edgesUI: null,\n    __inputNodesLayout: null,\n    __outputNodesLayout: null,\n    __desktop: null,\n    __svgWidget: null,\n    __tempEdgeNodeId: null,\n    __tempEdgeRepr: null,\n    __pointerPosX: null,\n    __pointerPosY: null,\n    __selectedItemId: null,\n    __currentModel: null,\n\n    __getUnlinkButton: function() {\n      const icon = \"@FontAwesome5Solid/unlink/16\";\n      let unlinkBtn = new qx.ui.form.Button(null, icon);\n      unlinkBtn.set({\n        width: BUTTON_SIZE,\n        height: BUTTON_SIZE\n      });\n      unlinkBtn.addListener(\"execute\", function() {\n        if (this.__selectedItemId && this.__isSelectedItemAnEdge()) {\n          this.__removeEdge(this.__getEdgeUI(this.__selectedItemId));\n          this.__selectedItemId = null;\n        }\n      }, this);\n      return unlinkBtn;\n    },\n\n    openServiceCatalog: function() {\n      let srvCat = this.__createServiceCatalog();\n      srvCat.open();\n    },\n\n    __createServiceCatalog: function(pos) {\n      let srvCat = new qxapp.component.workbench.ServiceCatalog();\n      if (pos) {\n        srvCat.moveTo(pos.x, pos.y);\n      } else {\n        // srvCat.center();\n        const bounds = this.getLayoutParent().getBounds();\n        const workbenchUICenter = {\n          x: bounds.left + parseInt((bounds.left + bounds.width) / 2),\n          y: bounds.top + parseInt((bounds.top + bounds.height) / 2)\n        };\n        srvCat.moveTo(workbenchUICenter.x - 200, workbenchUICenter.y - 200);\n      }\n      srvCat.addListener(\"addService\", ev => {\n        this.__addServiceFromCatalog(ev, pos);\n      }, this);\n      return srvCat;\n    },\n\n    __addServiceFromCatalog: function(e, pos) {\n      const data = e.getData();\n      const service = data.service;\n      let nodeAId = data.contextNodeId;\n      let portA = data.contextPort;\n\n      let parent = null;\n      if (this.__currentModel.isContainer()) {\n        parent = this.__currentModel;\n      }\n      const node = this.getWorkbench().createNode(service.getKey(), service.getVersion(), null, parent, true);\n      if (!node) {\n        return;\n      }\n\n      const nodeUI = this.__createNodeUI(node.getNodeId());\n      this.__addNodeToWorkbench(nodeUI, pos);\n\n      if (nodeAId !== null && portA !== null) {\n        let nodeBId = nodeUI.getNodeId();\n        let portB = this.__findCompatiblePort(nodeUI, portA);\n        // swap node-ports to have node1 as input and node2 as output\n        if (portA.isInput) {\n          [nodeAId, portA, nodeBId, portB] = [nodeBId, portB, nodeAId, portA];\n        }\n        this.__createEdgeBetweenNodes({\n          nodeUuid: nodeAId\n        }, {\n          nodeUuid: nodeBId\n        });\n      }\n    },\n\n    __addNodeToWorkbench: function(nodeUI, position) {\n      if (position === undefined || position === null) {\n        position = {};\n        let farthestRight = 0;\n        for (let i = 0; i < this.__nodesUI.length; i++) {\n          let boundPos = this.__nodesUI[i].getBounds();\n          let rightPos = boundPos.left + boundPos.width;\n          if (farthestRight < rightPos) {\n            farthestRight = rightPos;\n          }\n        }\n        position.x = 50 + farthestRight;\n        position.y = 200;\n      }\n      nodeUI.getNode().setPosition(position.x, position.y);\n      nodeUI.moveTo(position.x, position.y);\n      this.addWindowToDesktop(nodeUI);\n      this.__nodesUI.push(nodeUI);\n\n      nodeUI.addListener(\"nodeMoving\", function() {\n        this.__updateEdges(nodeUI);\n        this.__updatePosition(nodeUI);\n      }, this);\n\n      nodeUI.addListener(\"appear\", function() {\n        this.__updateEdges(nodeUI);\n      }, this);\n\n      nodeUI.addListener(\"tap\", e => {\n        this.__selectedItemChanged(nodeUI.getNodeId());\n        e.stopPropagation();\n      }, this);\n\n      nodeUI.addListener(\"dbltap\", e => {\n        this.__nodeSelected(nodeUI.getNodeId());\n        e.stopPropagation();\n      }, this);\n\n      qx.ui.core.queue.Layout.flush();\n\n      this.__updateHint();\n    },\n\n    __createNodeUI: function(nodeId) {\n      let node = this.getWorkbench().getNode(nodeId);\n\n      let nodeUI = new qxapp.component.workbench.NodeUI(node);\n      nodeUI.populateNodeLayout();\n      this.__createDragDropMechanism(nodeUI);\n\n      return nodeUI;\n    },\n\n    __createEdgeUI: function(node1Id, node2Id, edgeId) {\n      const edge = this.getWorkbench().createEdge(edgeId, node1Id, node2Id);\n      if (!edge) {\n        return null;\n      }\n      if (this.__edgeRepresetationExists(edge)) {\n        return null;\n      }\n\n      // build representation\n      const nodeUI1 = this.getNodeUI(node1Id);\n      const nodeUI2 = this.getNodeUI(node2Id);\n      const port1 = nodeUI1.getOutputPort();\n      const port2 = nodeUI2.getInputPort();\n      if (port1 && port2) {\n        if (this.__currentModel.isContainer() && nodeUI2.getNodeId() === this.__currentModel.getNodeId()) {\n          nodeUI1.getNode().setIsOutputNode(true);\n        } else {\n          nodeUI2.getNode().addInputNode(node1Id);\n        }\n        const pointList = this.__getEdgePoints(nodeUI1, port1, nodeUI2, port2);\n        const x1 = pointList[0] ? pointList[0][0] : 0;\n        const y1 = pointList[0] ? pointList[0][1] : 0;\n        const x2 = pointList[1] ? pointList[1][0] : 0;\n        const y2 = pointList[1] ? pointList[1][1] : 0;\n        const edgeRepresentation = this.__svgWidget.drawCurve(x1, y1, x2, y2);\n\n        const edgeUI = new qxapp.component.workbench.EdgeUI(edge, edgeRepresentation);\n        this.__edgesUI.push(edgeUI);\n\n        edgeUI.getRepresentation().node.addEventListener(\"click\", e => {\n          // this is needed to get out of the context of svg\n          edgeUI.fireDataEvent(\"edgeSelected\", edgeUI.getEdgeId());\n          e.stopPropagation();\n        }, this);\n\n        edgeUI.addListener(\"edgeSelected\", e => {\n          this.__selectedItemChanged(edgeUI.getEdgeId());\n        }, this);\n\n        return edgeUI;\n      }\n      return null;\n    },\n\n    __edgeRepresetationExists: function(edge) {\n      for (let i=0; i<this.__edgesUI.length; i++) {\n        const edgeUI = this.__edgesUI[i];\n        if (edgeUI.getEdge().getEdgeId() === edge.getEdgeId()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    __createDragDropMechanism: function(nodeUI) {\n      const evType = \"pointermove\";\n      nodeUI.addListener(\"edgeDragStart\", e => {\n        let data = e.getData();\n        let event = data.event;\n        let dragNodeId = data.nodeId;\n        let dragIsInput = data.isInput;\n\n        // Register supported actions\n        event.addAction(\"move\");\n\n        // Register supported types\n        event.addType(\"osparc-node-link\");\n        let dragData = {\n          dragNodeId: dragNodeId,\n          dragIsInput: dragIsInput\n        };\n        event.addData(\"osparc-node-link\", dragData);\n\n        this.__tempEdgeNodeId = dragData.dragNodeId;\n        this.__tempEdgeIsInput = dragData.dragIsInput;\n        qx.bom.Element.addListener(\n          this.__desktop,\n          evType,\n          this.__startTempEdge,\n          this\n        );\n      }, this);\n\n      nodeUI.addListener(\"edgeDragOver\", e => {\n        let data = e.getData();\n        let event = data.event;\n        let dropNodeId = data.nodeId;\n        let dropIsInput = data.isInput;\n\n        let compatible = false;\n        if (event.supportsType(\"osparc-node-link\")) {\n          const dragNodeId = event.getData(\"osparc-node-link\").dragNodeId;\n          const dragIsInput = event.getData(\"osparc-node-link\").dragIsInput;\n          const dragNode = this.getNodeUI(dragNodeId);\n          const dropNode = this.getNodeUI(dropNodeId);\n          const dragPortTarget = dragIsInput ? dragNode.getInputPort() : dragNode.getOutputPort();\n          const dropPortTarget = dropIsInput ? dropNode.getInputPort() : dropNode.getOutputPort();\n          compatible = this.__areNodesCompatible(dragPortTarget, dropPortTarget);\n        }\n\n        if (!compatible) {\n          event.preventDefault();\n        }\n      }, this);\n\n      nodeUI.addListener(\"edgeDrop\", e => {\n        let data = e.getData();\n        let event = data.event;\n        let dropNodeId = data.nodeId;\n        let dropIsInput = data.isInput;\n\n        if (event.supportsType(\"osparc-node-link\")) {\n          let dragNodeId = event.getData(\"osparc-node-link\").dragNodeId;\n          let dragIsInput = event.getData(\"osparc-node-link\").dragIsInput;\n\n          let nodeAId = dropIsInput ? dragNodeId : dropNodeId;\n          let nodeBId = dragIsInput ? dragNodeId : dropNodeId;\n\n          this.__createEdgeBetweenNodes({\n            nodeUuid: nodeAId\n          }, {\n            nodeUuid: nodeBId\n          });\n          this.__removeTempEdge();\n          qx.bom.Element.removeListener(\n            this.__desktop,\n            evType,\n            this.__startTempEdge,\n            this\n          );\n        }\n      }, this);\n\n      nodeUI.addListener(\"edgeDragEnd\", e => {\n        let data = e.getData();\n        let dragNodeId = data.nodeId;\n\n        let posX = this.__pointerPosX;\n        let posY = this.__pointerPosY;\n        if (this.__tempEdgeNodeId === dragNodeId) {\n          const pos = {\n            x: posX,\n            y: posY\n          };\n          let srvCat = this.__createServiceCatalog(pos);\n          if (this.__tempEdgeIsInput === true) {\n            srvCat.setContext(dragNodeId, this.getNodeUI(dragNodeId).getInputPort());\n          } else {\n            srvCat.setContext(dragNodeId, this.getNodeUI(dragNodeId).getOutputPort());\n          }\n          srvCat.addListener(\"close\", function(ev) {\n            this.__removeTempEdge();\n          }, this);\n          srvCat.open();\n        }\n        qx.bom.Element.removeListener(\n          this.__desktop,\n          evType,\n          this.__startTempEdge,\n          this\n        );\n      }, this);\n    },\n\n    __createNodeInputUI: function(inputNode) {\n      let nodeInput = new qxapp.component.widget.NodeInput(inputNode);\n      nodeInput.populateNodeLayout();\n      this.__createDragDropMechanism(nodeInput);\n      this.__inputNodesLayout.add(nodeInput, {\n        flex: 1\n      });\n      return nodeInput;\n    },\n\n    __createNodeInputUIs: function(model) {\n      this.__clearNodeInputUIs();\n      const inputNodes = model.getInputNodes();\n      for (let i = 0; i < inputNodes.length; i++) {\n        let inputNode = this.getWorkbench().getNode(inputNodes[i]);\n        let inputLabel = this.__createNodeInputUI(inputNode);\n        this.__nodesUI.push(inputLabel);\n      }\n    },\n\n    __clearNodeInputUIs: function() {\n      // remove all but the title\n      while (this.__inputNodesLayout.getChildren().length > 1) {\n        this.__inputNodesLayout.removeAt(this.__inputNodesLayout.getChildren().length - 1);\n      }\n    },\n\n    __createNodeOutputUI: function(currentModel) {\n      let nodeOutput = new qxapp.component.widget.NodeOutput(currentModel);\n      nodeOutput.populateNodeLayout();\n      this.__createDragDropMechanism(nodeOutput);\n      this.__outputNodesLayout.add(nodeOutput, {\n        flex: 1\n      });\n      return nodeOutput;\n    },\n\n    __createNodeOutputUIs: function(model) {\n      this.__clearNodeOutputUIs();\n      let outputLabel = this.__createNodeOutputUI(model);\n      this.__nodesUI.push(outputLabel);\n    },\n\n    __clearNodeOutputUIs: function() {\n      // remove all but the title\n      while (this.__outputNodesLayout.getChildren().length > 1) {\n        this.__outputNodesLayout.removeAt(this.__outputNodesLayout.getChildren().length - 1);\n      }\n    },\n\n    __removeSelectedNode: function() {\n      for (let i = 0; i < this.__nodesUI.length; i++) {\n        if (this.__desktop.getActiveWindow() === this.__nodesUI[i]) {\n          this.__removeNode(this.__nodesUI[i]);\n          return;\n        }\n      }\n    },\n\n    __areNodesCompatible: function(topLevelPort1, topLevelPort2) {\n      return qxapp.store.Store.getInstance().areNodesCompatible(topLevelPort1, topLevelPort2);\n    },\n\n    __findCompatiblePort: function(nodeB, portA) {\n      if (portA.isInput && nodeB.getOutputPort()) {\n        return nodeB.getOutputPort();\n      } else if (nodeB.getInputPort()) {\n        return nodeB.getInputPort();\n      }\n      return null;\n    },\n\n    __createEdgeBetweenNodes: function(from, to, edgeId) {\n      const node1Id = from.nodeUuid;\n      const node2Id = to.nodeUuid;\n      this.__createEdgeUI(node1Id, node2Id, edgeId);\n    },\n\n    __createEdgeBetweenNodesAndInputNodes: function(from, to, edgeId) {\n      const inputNodes = this.__inputNodesLayout.getChildren();\n      // Children[0] is the title\n      for (let i = 1; i < inputNodes.length; i++) {\n        const inputNodeId = inputNodes[i].getNodeId();\n        if (inputNodeId === from.nodeUuid) {\n          let node1Id = from.nodeUuid;\n          let node2Id = to.nodeUuid;\n          this.__createEdgeUI(node1Id, node2Id, edgeId);\n        }\n      }\n    },\n\n    __updatePosition: function(nodeUI) {\n      const cBounds = nodeUI.getCurrentBounds();\n      const node = this.getWorkbench().getNode(nodeUI.getNodeId());\n      node.setPosition(cBounds.left, cBounds.top);\n    },\n\n    __updateEdges: function(nodeUI) {\n      let edgesInvolved = this.getWorkbench().getConnectedEdges(nodeUI.getNodeId());\n\n      edgesInvolved.forEach(edgeId => {\n        let edgeUI = this.__getEdgeUI(edgeId);\n        if (edgeUI) {\n          let node1 = this.getNodeUI(edgeUI.getEdge().getInputNodeId());\n          let port1 = node1.getOutputPort();\n          let node2 = this.getNodeUI(edgeUI.getEdge().getOutputNodeId());\n          let port2 = node2.getInputPort();\n          const pointList = this.__getEdgePoints(node1, port1, node2, port2);\n          const x1 = pointList[0][0];\n          const y1 = pointList[0][1];\n          const x2 = pointList[1][0];\n          const y2 = pointList[1][1];\n          this.__svgWidget.updateCurve(edgeUI.getRepresentation(), x1, y1, x2, y2);\n        }\n      });\n    },\n\n    __startTempEdge: function(pointerEvent) {\n      if (this.__tempEdgeNodeId === null) {\n        return;\n      }\n      let nodeUI = this.getNodeUI(this.__tempEdgeNodeId);\n      if (nodeUI === null) {\n        return;\n      }\n      let port;\n      if (this.__tempEdgeIsInput) {\n        port = nodeUI.getInputPort();\n      } else {\n        port = nodeUI.getOutputPort();\n      }\n      if (port === null) {\n        return;\n      }\n\n      const navBarHeight = 50;\n      const inputNodesLayoutWidth = this.__inputNodesLayout.isVisible() ? this.__inputNodesLayout.getWidth() : 0;\n      this.__pointerPosX = pointerEvent.getViewportLeft() - this.getBounds().left - inputNodesLayoutWidth;\n      this.__pointerPosY = pointerEvent.getViewportTop() - navBarHeight;\n\n      let portPos = nodeUI.getEdgePoint(port);\n      if (portPos[0] === null) {\n        portPos[0] = parseInt(this.__desktopCanvas.getBounds().width - 6);\n      }\n\n      let x1;\n      let y1;\n      let x2;\n      let y2;\n      if (port.isInput) {\n        x1 = this.__pointerPosX;\n        y1 = this.__pointerPosY;\n        x2 = portPos[0];\n        y2 = portPos[1];\n      } else {\n        x1 = portPos[0];\n        y1 = portPos[1];\n        x2 = this.__pointerPosX;\n        y2 = this.__pointerPosY;\n      }\n\n      if (this.__tempEdgeRepr === null) {\n        this.__tempEdgeRepr = this.__svgWidget.drawCurve(x1, y1, x2, y2);\n      } else {\n        this.__svgWidget.updateCurve(this.__tempEdgeRepr, x1, y1, x2, y2);\n      }\n    },\n\n    __removeTempEdge: function() {\n      if (this.__tempEdgeRepr !== null) {\n        this.__svgWidget.removeCurve(this.__tempEdgeRepr);\n      }\n      this.__tempEdgeRepr = null;\n      this.__tempEdgeNodeId = null;\n      this.__pointerPosX = null;\n      this.__pointerPosY = null;\n    },\n\n    __getEdgePoints: function(node1, port1, node2, port2) {\n      // swap node-ports to have node1 as input and node2 as output\n      if (port1.isInput) {\n        [node1, port1, node2, port2] = [node2, port2, node1, port1];\n      }\n      let p1 = node1.getEdgePoint(port1);\n      let p2 = node2.getEdgePoint(port2);\n      if (p2[0] === null) {\n        p2[0] = parseInt(this.__desktopCanvas.getBounds().width - 6);\n      }\n      return [p1, p2];\n    },\n\n    getNodeUI: function(nodeId) {\n      for (let i = 0; i < this.__nodesUI.length; i++) {\n        if (this.__nodesUI[i].getNodeId() === nodeId) {\n          return this.__nodesUI[i];\n        }\n      }\n      return null;\n    },\n\n    __getEdgeUI: function(edgeId) {\n      for (let i = 0; i < this.__edgesUI.length; i++) {\n        if (this.__edgesUI[i].getEdgeId() === edgeId) {\n          return this.__edgesUI[i];\n        }\n      }\n      return null;\n    },\n\n    __removeNode: function(node) {\n      this.fireDataEvent(\"removeNode\", node.getNodeId());\n    },\n\n    clearNode(nodeId) {\n      this.__clearNode(nodeId);\n    },\n\n    __removeAllNodes: function() {\n      while (this.__nodesUI.length > 0) {\n        this.__removeNode(this.__nodesUI[this.__nodesUI.length - 1]);\n      }\n    },\n\n    clearEdge: function(edgeId) {\n      this.__clearEdge(this.__getEdgeUI(edgeId));\n    },\n\n    __removeEdge: function(edge) {\n      this.fireDataEvent(\"removeEdge\", edge.getEdgeId());\n    },\n\n    __removeAllEdges: function() {\n      while (this.__edgesUI.length > 0) {\n        this.__removeEdge(this.__edgesUI[this.__edgesUI.length - 1]);\n      }\n    },\n\n    removeAll: function() {\n      this.__removeAllNodes();\n      this.__removeAllEdges();\n    },\n\n    __clearNode: function(nodeId) {\n      let nodeUI = this.getNodeUI(nodeId);\n      if (this.__desktop.getChildren().includes(nodeUI)) {\n        this.__desktop.remove(nodeUI);\n      }\n      let index = this.__nodesUI.indexOf(nodeUI);\n      if (index > -1) {\n        this.__nodesUI.splice(index, 1);\n      }\n      this.__updateHint();\n    },\n\n    __clearAllNodes: function() {\n      while (this.__nodesUI.length > 0) {\n        this.__clearNode(this.__nodesUI[this.__nodesUI.length - 1].getNodeId());\n      }\n    },\n\n    __clearEdge: function(edge) {\n      this.__svgWidget.removeCurve(edge.getRepresentation());\n      let index = this.__edgesUI.indexOf(edge);\n      if (index > -1) {\n        this.__edgesUI.splice(index, 1);\n      }\n    },\n\n    __clearAllEdges: function() {\n      while (this.__edgesUI.length > 0) {\n        this.__clearEdge(this.__edgesUI[this.__edgesUI.length - 1]);\n      }\n    },\n\n    clearAll: function() {\n      this.__clearAllNodes();\n      this.__clearAllEdges();\n    },\n\n    loadModel: function(model) {\n      this.clearAll();\n      this.__currentModel = model;\n      if (model) {\n        const isContainer = model.isContainer();\n        if (isContainer) {\n          this.__inputNodesLayout.setVisibility(\"visible\");\n          this.__createNodeInputUIs(model);\n          this.__outputNodesLayout.setVisibility(\"visible\");\n          this.__createNodeOutputUIs(model);\n        } else {\n          this.__inputNodesLayout.setVisibility(\"excluded\");\n          this.__outputNodesLayout.setVisibility(\"excluded\");\n        }\n        qx.ui.core.queue.Visibility.flush();\n\n        let nodes = isContainer ? model.getInnerNodes() : model.getNodes();\n        for (const nodeUuid in nodes) {\n          const node = nodes[nodeUuid];\n          let nodeUI = this.__createNodeUI(nodeUuid);\n          this.__addNodeToWorkbench(nodeUI, node.getPosition());\n        }\n\n        for (const nodeUuid in nodes) {\n          const node = nodes[nodeUuid];\n          const inputNodes = node.getInputNodes();\n          for (let i = 0; i < inputNodes.length; i++) {\n            let inputNode = inputNodes[i];\n            if (inputNode in nodes) {\n              this.__createEdgeBetweenNodes({\n                nodeUuid: inputNode\n              }, {\n                nodeUuid: nodeUuid\n              });\n            } else {\n              if (!isContainer) {\n                console.log(\"Shouldn't be the case\");\n              }\n              this.__createEdgeBetweenNodesAndInputNodes({\n                nodeUuid: inputNode\n              }, {\n                nodeUuid: nodeUuid\n              });\n            }\n          }\n        }\n\n        const innerNodes = isContainer ? model.getInnerNodes() : {};\n        for (const innerNodeId in innerNodes) {\n          const innerNode = innerNodes[innerNodeId];\n          if (innerNode.getIsOutputNode()) {\n            this.__createEdgeBetweenNodes({\n              nodeUuid: innerNode.getNodeId()\n            }, {\n              nodeUuid: model.getNodeId()\n            });\n          }\n        }\n      }\n    },\n\n    addWindowToDesktop: function(node) {\n      this.__desktop.add(node);\n      node.open();\n    },\n\n    __selectedItemChanged: function(newID) {\n      const oldId = this.__selectedItemId;\n      if (oldId) {\n        if (this.__isSelectedItemAnEdge()) {\n          const unselectedEdge = this.__getEdgeUI(oldId);\n          const unselectedColor = qxapp.theme.Color.colors[\"workbench-edge-comp-active\"];\n          this.__svgWidget.updateColor(unselectedEdge.getRepresentation(), unselectedColor);\n        }\n      }\n\n      this.__selectedItemId = newID;\n      if (this.__isSelectedItemAnEdge()) {\n        const selectedEdge = this.__getEdgeUI(newID);\n        const selectedColor = qxapp.theme.Color.colors[\"workbench-edge-selected\"];\n        this.__svgWidget.updateColor(selectedEdge.getRepresentation(), selectedColor);\n      } else if (newID) {\n        this.fireDataEvent(\"changeSelectedNode\", newID);\n      }\n\n      this.__unlinkButton.setVisibility(this.__isSelectedItemAnEdge() ? \"visible\" : \"excluded\");\n    },\n\n    __nodeSelected: function(nodeId) {\n      this.fireDataEvent(\"nodeDoubleClicked\", nodeId);\n    },\n\n    __isSelectedItemAnEdge: function() {\n      return Boolean(this.__getEdgeUI(this.__selectedItemId));\n    },\n\n    __addEventListeners: function() {\n      this.addListener(\"appear\", () => {\n        // Reset filters and sidebars\n        qxapp.component.filter.UIFilterController.getInstance().resetGroup(\"workbench\");\n        qxapp.component.filter.UIFilterController.getInstance().setContainerVisibility(\"workbench\", \"visible\");\n\n        qx.event.message.Bus.getInstance().dispatchByName(\"maximizeIframe\", false);\n      });\n      this.addListener(\"disappear\", () => {\n        // Reset filters\n        qxapp.component.filter.UIFilterController.getInstance().resetGroup(\"workbench\");\n        qxapp.component.filter.UIFilterController.getInstance().setContainerVisibility(\"workbench\", \"excluded\");\n      });\n\n      this.__desktop.addListener(\"tap\", e => {\n        this.__selectedItemChanged(null);\n      }, this);\n\n      this.addListener(\"dbltap\", e => {\n        const x = e.getViewportLeft() - this.getBounds().left;\n        const y = e.getViewportTop();\n        const pos = {\n          x: x,\n          y: y\n        };\n        const srvCat = this.__createServiceCatalog(pos);\n        srvCat.open();\n      }, this);\n\n      this.__desktopCanvas.addListener(\"resize\", () => this.__updateHint(), this);\n    },\n\n    __updateHint: function() {\n      const isEmptyWorkspace = Object.keys(this.getWorkbench().getNodes()).length === 0;\n      this.__startHint.setVisibility(isEmptyWorkspace ? \"visible\" : \"excluded\");\n      if (isEmptyWorkspace) {\n        const hintBounds = this.__startHint.getBounds() || this.__startHint.getSizeHint();\n        const {\n          height,\n          width\n        } = this.__desktopCanvas.getBounds();\n        this.__startHint.setLayoutProperties({\n          top: Math.round((height - hintBounds.height) / 2),\n          left: Math.round((width - hintBounds.width) / 2)\n        });\n      }\n    }\n  }\n});\n"
  ]
}