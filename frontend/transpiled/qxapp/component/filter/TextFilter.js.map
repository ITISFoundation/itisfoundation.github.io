{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/filter/TextFilter.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxapp",
    "component",
    "filter",
    "UIFilter",
    "construct",
    "filterId",
    "groupId",
    "_setLayout",
    "ui",
    "layout",
    "Canvas",
    "set",
    "allowStretchX",
    "allowStretchY",
    "__textField",
    "getChildControl",
    "__attachEventHandlers",
    "properties",
    "appearance",
    "refine",
    "init",
    "members",
    "reset",
    "resetValue",
    "fireDataEvent",
    "_createChildControlImpl",
    "id",
    "control",
    "form",
    "TextField",
    "paddingRight",
    "placeholder",
    "tr",
    "_add",
    "IconButton",
    "focus",
    "right",
    "bottom",
    "addListener",
    "evt",
    "_filterChange",
    "getData",
    "trim",
    "toLowerCase",
    "TextFilter"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;AAGAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mCAAhB,EAAqD;AACnDC,IAAAA,MAAM,EAAEC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,QADoB;;AAGnD;;;;;AAKAC,IAAAA,SAAS,EAAE,mBAASC,QAAT,EAAmBC,OAAnB,EAA4B;AACrC,6DAAqBD,QAArB,EAA+BC,OAA/B;;AACA,WAAKC,UAAL,CAAgB,IAAId,EAAE,CAACe,EAAH,CAAMC,MAAN,CAAaC,MAAjB,EAAhB;;AAEA,WAAKC,GAAL,CAAS;AACPC,QAAAA,aAAa,EAAE,KADR;AAEPC,QAAAA,aAAa,EAAE;AAFR,OAAT;AAKA,WAAKC,WAAL,GAAmB,KAAKC,eAAL,CAAqB,WAArB,CAAnB;AAEA,WAAKA,eAAL,CAAqB,aAArB;;AAEA,WAAKC,qBAAL;AACD,KAtBkD;AAwBnDC,IAAAA,UAAU,EAAE;AACVC,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE,IADE;AAEVC,QAAAA,IAAI,EAAE;AAFI;AADF,KAxBuC;AA+BnDC,IAAAA,OAAO,EAAE;AACPP,MAAAA,WAAW,EAAE,IADN;;AAGP;;;AAGAQ,MAAAA,KAAK,EAAE,iBAAW;AAChB,aAAKR,WAAL,CAAiBS,UAAjB;;AACA,aAAKT,WAAL,CAAiBU,aAAjB,CAA+B,OAA/B,EAAwC,EAAxC;AACD,OATM;AAWPC,MAAAA,uBAAuB,EAAE,iCAASC,EAAT,EAAa;AAAA;;AACpC,YAAIC,OAAJ;;AACA,gBAAQD,EAAR;AACE,eAAK,WAAL;AACEC,YAAAA,OAAO,GAAG,IAAIlC,EAAE,CAACe,EAAH,CAAMoB,IAAN,CAAWC,SAAf,GAA2BlB,GAA3B,CAA+B;AACvCmB,cAAAA,YAAY,EAAE,EADyB;AAEvCC,cAAAA,WAAW,EAAE,KAAKC,EAAL,CAAQ,QAAR;AAF0B,aAA/B,CAAV;;AAIA,iBAAKC,IAAL,CAAUN,OAAV;;AACA;;AACF,eAAK,aAAL;AACEA,YAAAA,OAAO,GAAG,IAAI3B,KAAK,CAACC,SAAN,CAAgB2B,IAAhB,CAAqBM,UAAzB,CAAoC,yBAApC,EAA+D,YAAM;AAC7E,cAAA,KAAI,CAACZ,KAAL;;AACA,cAAA,KAAI,CAACR,WAAL,CAAiBqB,KAAjB;AACD,aAHS,CAAV;;AAIA,iBAAKF,IAAL,CAAUN,OAAV,EAAmB;AACjBS,cAAAA,KAAK,EAAE,CADU;AAEjBC,cAAAA,MAAM,EAAE;AAFS,aAAnB;;AAIA;AAjBJ;;AAmBA,eAAOV,OAAO,wFAAyBD,EAAzB,CAAd;AACD,OAjCM;AAmCPV,MAAAA,qBAAqB,EAAE,iCAAW;AAAA;;AAChC,aAAKF,WAAL,CAAiBwB,WAAjB,CAA6B,OAA7B,EAAsC,UAAAC,GAAG,EAAI;AAC3C,UAAA,MAAI,CAACC,aAAL,CAAmBD,GAAG,CAACE,OAAJ,GAAcC,IAAd,GAChBC,WADgB,EAAnB;AAED,SAHD;AAID;AAxCM;AA/B0C,GAArD;AApBA3C,EAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB0C,UAAvB,CAAkChD,aAAlC,GAAkDA,aAAlD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2019 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Ignacio Pascual (ignapas)\n\n************************************************************************ */\n\n/**\n * TextField to make a simple text filter.\n */\nqx.Class.define(\"qxapp.component.filter.TextFilter\", {\n  extend: qxapp.component.filter.UIFilter,\n\n  /**\n   * Constructor for the TextFilter takes UIFilters mandatory params plus an optional translation id for its label.\n   *\n   * @extends qxapp.component.filter.UIFilter\n   */\n  construct: function(filterId, groupId) {\n    this.base(arguments, filterId, groupId);\n    this._setLayout(new qx.ui.layout.Canvas());\n\n    this.set({\n      allowStretchX: false,\n      allowStretchY: false\n    });\n\n    this.__textField = this.getChildControl(\"textfield\");\n\n    this.getChildControl(\"clearbutton\");\n\n    this.__attachEventHandlers();\n  },\n\n  properties: {\n    appearance: {\n      refine: true,\n      init: \"textfilter\"\n    }\n  },\n\n  members: {\n    __textField: null,\n\n    /**\n     * Function that resets the field and dispatches the update.\n     */\n    reset: function() {\n      this.__textField.resetValue();\n      this.__textField.fireDataEvent(\"input\", \"\");\n    },\n\n    _createChildControlImpl: function(id) {\n      let control;\n      switch (id) {\n        case \"textfield\":\n          control = new qx.ui.form.TextField().set({\n            paddingRight: 15,\n            placeholder: this.tr(\"Filter\")\n          });\n          this._add(control);\n          break;\n        case \"clearbutton\":\n          control = new qxapp.component.form.IconButton(\"@MaterialIcons/close/12\", () => {\n            this.reset();\n            this.__textField.focus();\n          });\n          this._add(control, {\n            right: 0,\n            bottom: 6\n          });\n          break;\n      }\n      return control || this.base(arguments, id);\n    },\n\n    __attachEventHandlers: function() {\n      this.__textField.addListener(\"input\", evt => {\n        this._filterChange(evt.getData().trim()\n          .toLowerCase());\n      });\n    }\n  }\n});\n"
  ]
}