{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/widget/PersistentIframe.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "embed",
    "AbstractIframe",
    "construct",
    "source",
    "el",
    "properties",
    "showMaximize",
    "check",
    "init",
    "apply",
    "events",
    "members",
    "__iframe",
    "__syncScheduled",
    "__actionButton",
    "_createContentElement",
    "iframe",
    "Iframe",
    "getSource",
    "addListener",
    "e",
    "fireEvent",
    "fireDataEvent",
    "getData",
    "standin",
    "html",
    "Element",
    "appRoot",
    "getApplicationRoot",
    "add",
    "top",
    "actionButton",
    "form",
    "Button",
    "osparc",
    "theme",
    "osparcdark",
    "Image",
    "URLS",
    "set",
    "zIndex",
    "backgroundColor",
    "decorator",
    "maximizeIFrame",
    "hasState",
    "event",
    "message",
    "Bus",
    "getInstance",
    "dispatchByName",
    "__syncIframePos",
    "setLayoutProperties",
    "visibility",
    "maximize",
    "addState",
    "setIcon",
    "removeState",
    "window",
    "setTimeout",
    "iframeParentPos",
    "bom",
    "element",
    "Location",
    "get",
    "getOffsetParent",
    "getContentElement",
    "getDomElement",
    "divPos",
    "divSize",
    "Dimension",
    "getSize",
    "left",
    "width",
    "height",
    "right",
    "_applyShowMaximize",
    "newValue",
    "oldValue",
    "_maximizeBtn",
    "show",
    "_applySource",
    "setSource",
    "_getIframeElement",
    "block",
    "release",
    "destruct",
    "exclude",
    "dispose",
    "undefined",
    "qxapp",
    "component",
    "widget",
    "PersistentIframe"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n   Copyright: 2018 ITIS Foundation\n   License:   MIT\n   Authors:   Tobi Oetiker <tobi@oetiker.ch>\n   Utf8Check: äöü\n************************************************************************ */\n\n/**\n * When moving an iframe node in the dom, it reloads its content. This is\n * rather unfortunate when the content is another web application.\n * This Iframe widget solves the problem by attaching the iframe to a\n * permanent location and just moving it into position as the actual\n * widget manifests in different locations. There are limits as to where\n * the widget can be displayed as the widget hierarchy may prevent correct\n * visualisation. By default the iframe is attached to the root node of\n * the document, but an alternate attachment can be specified as required.\n *\n */\n\nqx.Class.define(\"qxapp.component.widget.PersistentIframe\", {\n  extend: qx.ui.embed.AbstractIframe,\n  /**\n   *\n   * @param source {String} URL for the iframe content\n   * @param poolEl {Element?} Dom node for attaching the iframe\n   */\n  construct: function(source, el) {\n    this.base(arguments, source);\n  },\n  properties :\n  {\n    /**\n     * Show a Maximize Button\n     */\n    showMaximize: {\n      check: \"boolean\",\n      init: false,\n      apply: \"_applyShowMaximize\"\n    }\n  },\n  events: {\n    /** Fired if the iframe is restored from a minimized or maximized state */\n    \"restore\" : \"qx.event.type.Event\",\n    /** Fired if the iframe is maximized */\n    \"maximize\" : \"qx.event.type.Event\"\n  },\n  members: {\n    __iframe: null,\n    __syncScheduled: null,\n    __actionButton: null,\n    // override\n    _createContentElement : function() {\n      let iframe = this.__iframe = new qx.ui.embed.Iframe(this.getSource());\n      iframe.addListener(\"load\", e => {\n        this.fireEvent(\"load\");\n      });\n      iframe.addListener(\"navigate\", e => {\n        this.fireDataEvent(\"navigate\", e.getData());\n      });\n\n      let standin = new qx.html.Element(\"div\");\n      let appRoot = this.getApplicationRoot();\n      appRoot.add(iframe, {\n        top:-10000\n      });\n      let actionButton = this.__actionButton = new qx.ui.form.Button(null, osparc.theme.osparcdark.Image.URLS[\"window-maximize\"]+\"/20\").set({\n        zIndex: 20,\n        backgroundColor: \"transparent\",\n        decorator: null\n      });\n      appRoot.add(actionButton, {\n        top:-10000\n      });\n      actionButton.addListener(\"execute\", e => {\n        this.maximizeIFrame(!this.hasState(\"maximized\"));\n        qx.event.message.Bus.getInstance().dispatchByName(\"maximizeIframe\", this.hasState(\"maximized\"));\n      }, this);\n      appRoot.add(actionButton);\n      standin.addListener(\"appear\", e => {\n        this.__syncIframePos();\n      });\n      standin.addListener(\"disappear\", e => {\n        iframe.setLayoutProperties({\n          top: -10000\n        });\n        actionButton.setLayoutProperties({\n          top: -10000\n        });\n      });\n      this.addListener(\"move\", e => {\n        // got to let the new layout render first or we don't see it\n        this.__syncIframePos();\n      });\n      this.addListener(\"resize\", e => {\n        // got to let the new layout render first or we don't see it\n        this.__syncIframePos();\n      });\n      this.addListener(\"changeVisibility\", e => {\n        var visibility = e.getData()[0];\n        if (visibility == \"none\") {\n          iframe.set({\n            zIndex: -10000\n          });\n        } else {\n          this.__syncIframePos();\n        }\n      });\n      return standin;\n    },\n\n    maximizeIFrame: function(maximize) {\n      const actionButton = this.__actionButton;\n      if (maximize) {\n        this.fireEvent(\"maximize\");\n        this.addState(\"maximized\");\n        actionButton.setIcon(osparc.theme.osparcdark.Image.URLS[\"window-restore\"]+\"/20\");\n      } else {\n        this.fireEvent(\"restore\");\n        this.removeState(\"maximized\");\n        actionButton.setIcon(osparc.theme.osparcdark.Image.URLS[\"window-maximize\"]+\"/20\");\n      }\n    },\n\n    __syncIframePos: function() {\n      if (this.__syncScheduled) {\n        return;\n      }\n      this.__syncScheduled = true;\n      window.setTimeout(() => {\n        this.__syncScheduled = false;\n        let iframeParentPos = qx.bom.element.Location.get(qx.bom.element.Location.getOffsetParent(this.__iframe.getContentElement().getDomElement()), \"scroll\");\n        let divPos = qx.bom.element.Location.get(this.getContentElement().getDomElement(), \"scroll\");\n        let divSize = qx.bom.element.Dimension.getSize(this.getContentElement().getDomElement());\n        this.__iframe.setLayoutProperties({\n          top: divPos.top - iframeParentPos.top,\n          left: (divPos.left - iframeParentPos.left)\n        });\n        this.__iframe.set({\n          width: (divSize.width),\n          height: (divSize.height)\n        });\n        this.__actionButton.setLayoutProperties({\n          top: (divPos.top - iframeParentPos.top),\n          right: (iframeParentPos.right - iframeParentPos.left - divPos.right)\n        });\n      }, 0);\n    },\n    _applyShowMaximize: function(newValue, oldValue) {\n      this._maximizeBtn.show();\n    },\n    _applySource: function(newValue) {\n      this.__iframe.setSource(newValue);\n    },\n    // override\n    _getIframeElement: function() {\n      return this.__iframe._getIframeElement(); // eslint-disable-line no-underscore-dangle\n    },\n    /**\n     * Cover the iframe with a transparent blocker div element. This prevents\n     * pointer or key events to be handled by the iframe. To release the blocker\n     * use {@link #release}.\n     *\n     */\n    block : function() {\n      this.__iframe.block();\n    },\n\n    /**\n     * Release the blocker set by {@link #block}.\n     *\n     */\n    release : function() {\n      this.__iframe.release();\n    }\n  },\n  destruct: function() {\n    this.__iframe.exclude();\n    this.__iframe.dispose();\n    this.__iframe = undefined;\n  }\n});\n"
  ]
}