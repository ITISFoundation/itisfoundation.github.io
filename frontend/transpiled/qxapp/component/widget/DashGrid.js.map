{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/widget/DashGrid.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "containerNode",
    "_setLayout",
    "layout",
    "Canvas",
    "setContainerNode",
    "__cellEditors",
    "__outputs",
    "stack",
    "__stack",
    "container",
    "Stack",
    "gridView",
    "__gridView",
    "Composite",
    "VBox",
    "add",
    "controls",
    "HBox",
    "Spacer",
    "flex",
    "addBtn",
    "form",
    "Button",
    "tr",
    "set",
    "height",
    "width",
    "addListener",
    "e",
    "addClonedNode",
    "dashboradLayout",
    "gridster",
    "__gridterWr",
    "qxapp",
    "wrapper",
    "Gridster",
    "ready",
    "getData",
    "values",
    "Object",
    "getInnerNodes",
    "value",
    "addNode",
    "uuid",
    "prototype",
    "hasOwnProperty",
    "call",
    "cellEditor",
    "setSelection",
    "top",
    "right",
    "bottom",
    "left",
    "_add",
    "events",
    "properties",
    "check",
    "nullable",
    "members",
    "node",
    "parentNode",
    "getContainerNode",
    "workbench",
    "getWorkbench",
    "success",
    "addWidget",
    "removeNode",
    "getNodeId",
    "innerNodes",
    "length",
    "cloneNode",
    "cellHandler",
    "component",
    "widget",
    "cell",
    "Handler",
    "Editor",
    "retrieveOutput",
    "getUuid",
    "cellOutput",
    "Output",
    "htmlElement",
    "rebuildWidget",
    "plot",
    "getElementsByTagName",
    "style",
    "WebkitTouchCallout",
    "WebkitUserSelect",
    "userSelect",
    "DashGrid"
  ],
  "mappings": "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",
  "sourcesContent": [
    "qx.Class.define(\"qxapp.component.widget.DashGrid\", {\n  extend: qx.ui.core.Widget,\n\n  construct: function(containerNode) {\n    this.base(arguments);\n\n    this._setLayout(new qx.ui.layout.Canvas());\n\n    this.setContainerNode(containerNode);\n\n    this.__cellEditors = {};\n    this.__outputs = {};\n    let stack = this.__stack = new qx.ui.container.Stack();\n    let gridView = this.__gridView = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n    stack.add(gridView);\n\n    let controls = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n    controls.add(new qx.ui.core.Spacer(), {\n      flex: 1\n    });\n    let addBtn = new qx.ui.form.Button(this.tr(\"Add plot\")).set({\n      height: 25,\n      width: 300\n    });\n    addBtn.addListener(\"execute\", e => {\n      this.addClonedNode();\n    }, this);\n    controls.add(addBtn);\n    controls.add(new qx.ui.core.Spacer(), {\n      flex: 1\n    });\n    gridView.add(controls);\n\n\n    let dashboradLayout = new qx.ui.container.Composite(new qx.ui.layout.Canvas());\n    let gridster = this.__gridterWr = new qxapp.wrapper.Gridster();\n    gridster.addListener((\"gridsterLibReady\"), e => {\n      let ready = e.getData();\n      if (ready) {\n        const values = Object.values(containerNode.getInnerNodes());\n        for (const value of values) {\n          this.addNode(value);\n        }\n      }\n    }, this);\n    gridster.addListener(\"widgetSelected\", e => {\n      const uuid = e.getData();\n      if (Object.prototype.hasOwnProperty.call(this.__cellEditors, uuid)) {\n        let cellEditor = this.__cellEditors[uuid];\n        this.__stack.add(cellEditor);\n        this.__stack.setSelection([cellEditor]);\n      }\n    }, this);\n    dashboradLayout.add(gridster, {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    });\n    gridView.add(dashboradLayout, {\n      flex: 1\n    });\n\n    this._add(stack, {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    });\n  },\n\n  events: {\n    \"widgetSelected\": \"qx.event.type.Data\"\n  },\n\n  properties: {\n    containerNode: {\n      check: \"qxapp.data.model.Node\",\n      nullable: true\n    }\n  },\n\n  members: {\n    __stack: null,\n    __gridView: null,\n    __cellEditors: null,\n    __gridterWr: null,\n\n    addNode: function(node) {\n      let parentNode = this.getContainerNode();\n      if (parentNode) {\n        let workbench = parentNode.getWorkbench();\n        workbench.addNode(node, parentNode);\n        const success = this.addWidget(node);\n        if (!success) {\n          workbench.removeNode(node.getNodeId());\n        }\n      }\n    },\n\n    addClonedNode: function() {\n      let parentNode = this.getContainerNode();\n      if (parentNode) {\n        let workbench = parentNode.getWorkbench();\n        const innerNodes = Object.values(parentNode.getInnerNodes());\n        if (innerNodes.length > 0) {\n          const node = workbench.cloneNode(innerNodes[0]);\n          const success = this.addWidget(node);\n          if (!success) {\n            workbench.removeNode(node.getNodeId());\n          }\n        }\n      }\n    },\n\n    addWidget: function(node) {\n      let cellHandler = new qxapp.component.widget.cell.Handler(node);\n\n      let cellEditor = new qxapp.component.widget.cell.Editor(cellHandler);\n      cellEditor.addListener(\"backToGrid\", () => {\n        cellHandler.retrieveOutput();\n        this.__stack.setSelection([this.__gridView]);\n      }, this);\n      this.__cellEditors[cellHandler.getUuid()] = cellEditor;\n\n      let cellOutput = new qxapp.component.widget.cell.Output(cellHandler);\n\n      let htmlElement = this.__gridterWr.addWidget(cellOutput);\n      if (htmlElement) {\n        // this.__outputs[cellHandler.getUuid()] = htmlElement;\n        node.addListener(\"changeLabel\", e => {\n          this.__gridterWr.rebuildWidget(cellOutput, htmlElement);\n        }, this);\n        cellHandler.addListener(\"outputUpdated\", () => {\n          this.__gridterWr.rebuildWidget(cellOutput, htmlElement);\n          const parentNode = this.getContainerNode();\n          const plot = htmlElement.getElementsByTagName(\"svg\")[0];\n          if (parentNode && plot) {\n            plot.style.WebkitTouchCallout = \"none\";\n            plot.style.WebkitUserSelect = \"none\";\n            plot.style.userSelect = \"none\";\n          }\n        }, this);\n        cellHandler.retrieveOutput();\n        return true;\n      }\n      return false;\n    }\n  }\n});\n"
  ]
}