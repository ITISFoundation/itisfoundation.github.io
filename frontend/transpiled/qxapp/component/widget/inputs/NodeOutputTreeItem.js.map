{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/widget/inputs/NodeOutputTreeItem.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "VirtualTreeItem",
    "construct",
    "properties",
    "isDir",
    "check",
    "nullable",
    "init",
    "isRoot",
    "nodeKey",
    "portKey",
    "key",
    "value",
    "apply",
    "transform",
    "members",
    "__valueLabel",
    "_addWidgets",
    "addSpacer",
    "addOpenButton",
    "addIcon",
    "addLabel",
    "addWidget",
    "core",
    "Spacer",
    "flex",
    "basic",
    "Label",
    "_applyValue",
    "setValue",
    "_transformValue",
    "getLabel",
    "getPath",
    "fileName",
    "split",
    "length",
    "qxapp",
    "component",
    "widget",
    "inputs",
    "NodeOutputTreeItem"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;AA0BAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,kDAAhB,EAAoE;AAClEC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,eAD+C;AAGlEC,IAAAA,SAAS,EAAE,qBAAW;AACpB;AACD,KALiE;AAOlEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,SADF;AAELC,QAAAA,QAAQ,EAAE,KAFL;AAGLC,QAAAA,IAAI,EAAE;AAHD,OADG;AAOVC,MAAAA,MAAM,EAAE;AACNH,QAAAA,KAAK,EAAE,SADD;AAENC,QAAAA,QAAQ,EAAE,KAFJ;AAGNC,QAAAA,IAAI,EAAE;AAHA,OAPE;AAaVE,MAAAA,OAAO,EAAE;AACPJ,QAAAA,KAAK,EAAE,QADA;AAEPC,QAAAA,QAAQ,EAAE;AAFH,OAbC;AAkBVI,MAAAA,OAAO,EAAE;AACPL,QAAAA,KAAK,EAAE,QADA;AAEPC,QAAAA,QAAQ,EAAE;AAFH,OAlBC;AAuBVK,MAAAA,GAAG,EAAE;AACHN,QAAAA,KAAK,EAAE,QADJ;AAEHC,QAAAA,QAAQ,EAAE;AAFP,OAvBK;AA4BVM,MAAAA,KAAK,EAAE;AACLN,QAAAA,QAAQ,EAAE,IADL;AAELO,QAAAA,KAAK,EAAE,aAFF;AAGLC,QAAAA,SAAS,EAAE;AAHN;AA5BG,KAPsD;AA0ClEC,IAAAA,OAAO,EAAG;AACRC,MAAAA,YAAY,EAAE,IADN;AAERC,MAAAA,WAAW,EAAG,uBAAW;AACvB;AACA,aAAKC,SAAL;AACA,aAAKC,aAAL,GAHuB,CAKvB;;AACA,aAAKC,OAAL,GANuB,CAQvB;;AACA,aAAKC,QAAL,GATuB,CAWvB;;AACA,aAAKC,SAAL,CAAe,IAAI9B,EAAE,CAACO,EAAH,CAAMwB,IAAN,CAAWC,MAAf,EAAf,EAAwC;AACtCC,UAAAA,IAAI,EAAE;AADgC,SAAxC,EAZuB,CAgBvB;;AACA,aAAKT,YAAL,GAAoB,IAAIxB,EAAE,CAACO,EAAH,CAAM2B,KAAN,CAAYC,KAAhB,EAApB;AACA,aAAKL,SAAL,CAAe,KAAKN,YAApB;AACD,OArBO;AAuBRY,MAAAA,WAAW,EAAE,qBAAShB,KAAT,EAAgB;AAC3B,aAAKI,YAAL,CAAkBa,QAAlB,CAA2BjB,KAA3B;AACD,OAzBO;AA0BRkB,MAAAA,eAAe,EAAE,yBAASlB,KAAT,EAAgB;AAC/B,YAAIA,KAAK,CAACmB,QAAV,EAAoB;AAClB,iBAAOnB,KAAK,CAACmB,QAAN,EAAP;AACD;;AACD,YAAInB,KAAK,CAACoB,OAAV,EAAmB;AACjB,cAAMC,QAAQ,GAAGrB,KAAK,CAACoB,OAAN,GAAgBE,KAAhB,CAAsB,GAAtB,CAAjB;;AACA,cAAID,QAAQ,CAACE,MAAb,EAAqB;AACnB,mBAAOF,QAAQ,CAACA,QAAQ,CAACE,MAAT,GAAgB,CAAjB,CAAf;AACD;AACF;;AACD,eAAOvB,KAAP;AACD;AArCO;AA1CwD,GAApE;AA3CAwB,EAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,MAAvB,CAA8BC,kBAA9B,CAAiD7C,aAAjD,GAAiEA,aAAjE",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * VirtualTreeItem used mainly by NodeOutputTreeItem\n *\n *   It consists of an entry icon and label and contains more information like: isDir,\n * isRoot, nodeKey, portKey, key.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   tree.setDelegate({\n *     createItem: () => new qxapp.component.widget.inputs.NodeOutputTreeItem(),\n *     bindItem: (c, item, id) => {\n *      c.bindDefaultProperties(item, id);\n *     },\n *     configureItem: item => {\n *       item.set({\n *       isDir: !portKey.includes(\"modeler\") && !portKey.includes(\"sensorSettingAPI\") && !portKey.includes(\"neuronsSetting\"),\n *       nodeKey: node.getKey(),\n *       portKey: portKey\n *     });\n *   });\n * </pre>\n */\n\nqx.Class.define(\"qxapp.component.widget.inputs.NodeOutputTreeItem\", {\n  extend: qx.ui.tree.VirtualTreeItem,\n\n  construct: function() {\n    this.base(arguments);\n  },\n\n  properties: {\n    isDir: {\n      check: \"Boolean\",\n      nullable: false,\n      init: true\n    },\n\n    isRoot: {\n      check: \"Boolean\",\n      nullable: false,\n      init: false\n    },\n\n    nodeKey: {\n      check: \"String\",\n      nullable: false\n    },\n\n    portKey: {\n      check: \"String\",\n      nullable: true\n    },\n\n    key: {\n      check: \"String\",\n      nullable: false\n    },\n\n    value: {\n      nullable: true,\n      apply: \"_applyValue\",\n      transform: \"_transformValue\"\n    }\n  },\n\n  members : {\n    __valueLabel: null,\n    _addWidgets : function() {\n      // Here's our indentation and tree-lines\n      this.addSpacer();\n      this.addOpenButton();\n\n      // The standard tree icon follows\n      this.addIcon();\n\n      // The label\n      this.addLabel();\n\n      // All else should be right justified\n      this.addWidget(new qx.ui.core.Spacer(), {\n        flex: 1\n      });\n\n      // Add the port value\n      this.__valueLabel = new qx.ui.basic.Label();\n      this.addWidget(this.__valueLabel);\n    },\n\n    _applyValue: function(value) {\n      this.__valueLabel.setValue(value);\n    },\n    _transformValue: function(value) {\n      if (value.getLabel) {\n        return value.getLabel();\n      }\n      if (value.getPath) {\n        const fileName = value.getPath().split(\"/\");\n        if (fileName.length) {\n          return fileName[fileName.length-1];\n        }\n      }\n      return value;\n    }\n  }\n});\n"
  ]
}