{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/widget/inputs/NodeOutputTree.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "VirtualTree",
    "construct",
    "node",
    "ports",
    "model",
    "__generateModel",
    "set",
    "decorator",
    "hideRoot",
    "contentPadding",
    "padding",
    "minHeight",
    "self",
    "setDelegate",
    "createItem",
    "qxapp",
    "component",
    "widget",
    "inputs",
    "NodeOutputTreeItem",
    "bindItem",
    "c",
    "item",
    "id",
    "bindDefaultProperties",
    "bindProperty",
    "configureItem",
    "setDraggable",
    "__attachEventHandlers",
    "properties",
    "check",
    "nullable",
    "members",
    "addListener",
    "e",
    "addAction",
    "addType",
    "nodeId",
    "getNode",
    "getNodeId",
    "portId",
    "getPortKey",
    "setNodeKey",
    "getKey",
    "msgCb",
    "decoratorName",
    "msg",
    "getSelection",
    "remove",
    "getModel",
    "compareFn",
    "getData",
    "setDecorator",
    "resetDecorator",
    "event",
    "message",
    "Bus",
    "getInstance",
    "subscribe",
    "unsubscribe",
    "data",
    "label",
    "open",
    "children",
    "portKey",
    "portData",
    "nodeKey",
    "isDir",
    "includes",
    "type",
    "itemList",
    "store",
    "Store",
    "getItemList",
    "showLeavesAsDirs",
    "Converters",
    "fromAPITreeToVirtualTreeModel",
    "icon",
    "fromTypeToIcon",
    "value",
    "tr",
    "push",
    "marshal",
    "Json",
    "createModel",
    "getOutputWidget",
    "NodeOutputTree"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n *   Widget used for displaying an output port data of an input node. It contains a VirtualTree\n * populated with NodeOutputTreeItems. It implements Drag mechanism.\n *\n * It is meant to fit \"node-output-tree-api\" input/output port type\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   let nodeOutputTree = new qxapp.component.widget.inputs.NodeOutputTree(node, port, portKey);\n *   widget = nodeOutputTree.getOutputWidget();\n *   this.getRoot().add(widget);\n * </pre>\n */\n\nqx.Class.define(\"qxapp.component.widget.inputs.NodeOutputTree\", {\n  extend: qx.ui.tree.VirtualTree,\n\n  /**\n    * @param node {qxapp.data.model.Node} Node owning the widget\n    * @param port {Object} Port owning the widget\n    * @param portKey {String} Port Key\n  */\n  construct: function(node, ports) {\n    const model = this.__generateModel(node, ports);\n\n    this.base(arguments, model, \"label\", \"children\", \"open\");\n\n    this.set({\n      node,\n      ports,\n      decorator: \"service-tree\",\n      hideRoot: true,\n      contentPadding: 0,\n      padding: 0,\n      minHeight: 0\n    });\n\n    const self = this;\n    this.setDelegate({\n      createItem: () => new qxapp.component.widget.inputs.NodeOutputTreeItem(),\n      bindItem: (c, item, id) => {\n        c.bindDefaultProperties(item, id);\n        c.bindProperty(\"value\", \"value\", null, item, id);\n        c.bindProperty(\"nodeKey\", \"nodeKey\", null, item, id);\n        c.bindProperty(\"portKey\", \"portKey\", null, item, id);\n        c.bindProperty(\"isDir\", \"isDir\", null, item, id);\n        c.bindProperty(\"icon\", \"icon\", null, item, id);\n        c.bindProperty(\"open\", \"open\", null, item, id);\n      },\n      configureItem: item => {\n        item.setDraggable(true);\n        self.__attachEventHandlers(item); // eslint-disable-line no-underscore-dangle\n      }\n    });\n  },\n\n  properties: {\n    node: {\n      check: \"qxapp.data.model.Node\",\n      nullable: false\n    },\n    ports: {\n      nullable: false\n    }\n  },\n\n  members: {\n    __attachEventHandlers: function(item) {\n      item.addListener(\"dragstart\", e => {\n        // Register supported actions\n        e.addAction(\"copy\");\n        // Register supported types\n        e.addType(\"osparc-port-link\");\n        e.addType(\"osparc-mapping\");\n        item.nodeId = this.getNode().getNodeId();\n        item.portId = item.getPortKey();\n        item.setNodeKey(this.getNode().getKey());\n      }, this);\n\n      const msgCb = decoratorName => msg => {\n        this.getSelection().remove(item.getModel());\n        const compareFn = msg.getData();\n        if (item.getPortKey() && decoratorName && compareFn(this.getNode().getNodeId(), item.getPortKey())) {\n          item.setDecorator(decoratorName);\n        } else {\n          item.resetDecorator();\n        }\n      };\n      item.addListener(\"appear\", () => {\n        qx.event.message.Bus.getInstance().subscribe(\"inputFocus\", msgCb(\"outputPortHighlighted\"), this);\n        qx.event.message.Bus.getInstance().subscribe(\"inputFocusout\", msgCb(), this);\n      });\n      item.addListener(\"disappear\", () => {\n        qx.event.message.Bus.getInstance().unsubscribe(\"inputFocus\", msgCb(\"outputPortHighlighted\"), this);\n        qx.event.message.Bus.getInstance().unsubscribe(\"inputFocusout\", msgCb(), this);\n      });\n    },\n\n    __generateModel: function(node, ports) {\n      let data = {\n        label: \"root\",\n        open: true,\n        children: []\n      };\n\n      for (let portKey in ports) {\n        let portData = {\n          label: ports[portKey].label,\n          portKey: portKey,\n          nodeKey: node.getKey(),\n          isDir: !(portKey.includes(\"modeler\") || portKey.includes(\"sensorSettingAPI\") || portKey.includes(\"neuronsSetting\")),\n          open: false\n        };\n        if (ports[portKey].type === \"node-output-tree-api-v0.0.1\") {\n          const itemList = qxapp.store.Store.getInstance().getItemList(node.getKey(), portKey);\n          const showLeavesAsDirs = !(portKey.includes(\"modeler\") || portKey.includes(\"sensorSettingAPI\") || portKey.includes(\"neuronsSetting\"));\n          const children = qxapp.data.Converters.fromAPITreeToVirtualTreeModel(itemList, showLeavesAsDirs, portKey);\n          portData.children = children;\n          portData.open = true;\n        } else {\n          portData.icon = qxapp.data.Converters.fromTypeToIcon(ports[portKey].type);\n          portData.value = ports[portKey].value == null ? this.tr(\"no value\") : ports[portKey].value; // eslint-disable-line no-eq-null\n        }\n        data.children.push(portData);\n      }\n\n      return qx.data.marshal.Json.createModel(data, true);\n    },\n\n    getOutputWidget: function() {\n      return this;\n    }\n  }\n});\n"
  ]
}