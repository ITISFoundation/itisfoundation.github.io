{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/widget/cell/Handler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "node",
    "setNode",
    "properties",
    "check",
    "nullable",
    "events",
    "members",
    "__editor",
    "__output",
    "getTitle",
    "getNode",
    "getLabel",
    "getUuid",
    "getNodeId",
    "getEditor",
    "getIFrame",
    "getOutput",
    "retrieveOutput",
    "outUrl",
    "getServiceUrl",
    "replace",
    "outReq",
    "io",
    "request",
    "Xhr",
    "addListener",
    "e",
    "data",
    "getTarget",
    "getResponse",
    "width",
    "height",
    "backgroundColor",
    "plusColor",
    "plusUrl",
    "fireEvent",
    "set",
    "url",
    "method",
    "send",
    "qxapp",
    "component",
    "widget",
    "cell",
    "Handler"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;AAAAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qCAAhB,EAAuD;AACrDC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADqC;AAGrDC,IAAAA,SAAS,EAAE,mBAASC,IAAT,EAAe;AACxB;AAEA,WAAKC,OAAL,CAAaD,IAAb;AACD,KAPoD;AASrDE,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,EAAE;AACJG,QAAAA,KAAK,EAAE,uBADH;AAEJC,QAAAA,QAAQ,EAAE;AAFN;AADI,KATyC;AAgBrDC,IAAAA,MAAM,EAAE;AACN,uBAAiB;AADX,KAhB6C;AAoBrDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,IADH;AAEPC,MAAAA,QAAQ,EAAE,IAFH;AAIPC,MAAAA,QAAQ,EAAE,oBAAW;AACnB,eAAO,KAAKC,OAAL,GAAeC,QAAf,EAAP;AACD,OANM;AAQPC,MAAAA,OAAO,EAAE,mBAAW;AAClB,eAAO,KAAKF,OAAL,GAAeG,SAAf,EAAP;AACD,OAVM;AAYPC,MAAAA,SAAS,EAAE,qBAAW;AACpB,eAAO,KAAKJ,OAAL,GAAeK,SAAf,EAAP;AACD,OAdM;AAgBPC,MAAAA,SAAS,EAAE,qBAAW;AACpB,eAAO,KAAKR,QAAZ;AACD,OAlBM;AAoBPS,MAAAA,cAAc,EAAE,0BAAW;AAAA;;AACzB,YAAIC,MAAM,GAAG,KAAKR,OAAL,GAAeS,aAAf,KAAiC,SAA9C;AACAD,QAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,UAAf,EAA2B,SAA3B,CAAT;AACA,YAAIC,MAAM,GAAG,IAAI/B,EAAE,CAACgC,EAAH,CAAMC,OAAN,CAAcC,GAAlB,EAAb;AACAH,QAAAA,MAAM,CAACI,WAAP,CAAmB,SAAnB,EAA8B,UAAAC,CAAC,EAAI;AACjC,cAAIC,IAAI,GAAGD,CAAC,CAACE,SAAF,GAAcC,WAAd,EAAX;;AACA,cAAIF,IAAI,KAAK,EAAb,EAAiB;AACf,gBAAMG,KAAK,GAAG,GAAd;AACA,gBAAMC,MAAM,GAAG,GAAf;AACA,gBAAMC,eAAe,GAAG,aAAxB;AACA,gBAAMC,SAAS,GAAG,QAAlB;AACA,gBAAMC,OAAO,GAAG,gCAA8BJ,KAA9B,GAAoC,GAApC,GAAwCC,MAAxC,GAA+C,GAA/C,GAAmDC,eAAnD,GAAmE,GAAnE,GAAuEC,SAAvE,GAAiF,iBAAjG;AACA,YAAA,KAAI,CAACzB,QAAL,GAAgB,eAAa0B,OAAb,GAAqB,6BAArC;AACD,WAPD,MAOO;AACL,YAAA,KAAI,CAAC1B,QAAL,GAAgBmB,IAAhB;AACD;;AACD,UAAA,KAAI,CAACQ,SAAL,CAAe,eAAf;AACD,SAbD,EAaG,IAbH;AAcAd,QAAAA,MAAM,CAACe,GAAP,CAAW;AACTC,UAAAA,GAAG,EAAEnB,MADI;AAEToB,UAAAA,MAAM,EAAE;AAFC,SAAX;AAIAjB,QAAAA,MAAM,CAACkB,IAAP;AACD;AA3CM;AApB4C,GAAvD;AAAAC,EAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,IAAvB,CAA4BC,OAA5B,CAAoCnD,aAApC,GAAoDA,aAApD",
  "sourcesContent": [
    "qx.Class.define(\"qxapp.component.widget.cell.Handler\", {\n  extend: qx.core.Object,\n\n  construct: function(node) {\n    this.base(arguments);\n\n    this.setNode(node);\n  },\n\n  properties: {\n    node: {\n      check: \"qxapp.data.model.Node\",\n      nullable: true\n    }\n  },\n\n  events: {\n    \"outputUpdated\": \"qx.event.type.Event\"\n  },\n\n  members: {\n    __editor: null,\n    __output: null,\n\n    getTitle: function() {\n      return this.getNode().getLabel();\n    },\n\n    getUuid: function() {\n      return this.getNode().getNodeId();\n    },\n\n    getEditor: function() {\n      return this.getNode().getIFrame();\n    },\n\n    getOutput: function() {\n      return this.__output;\n    },\n\n    retrieveOutput: function() {\n      let outUrl = this.getNode().getServiceUrl() + \"/output\";\n      outUrl = outUrl.replace(\"//output\", \"/output\");\n      let outReq = new qx.io.request.Xhr();\n      outReq.addListener(\"success\", e => {\n        let data = e.getTarget().getResponse();\n        if (data === \"\") {\n          const width = 100;\n          const height = 100;\n          const backgroundColor = \"transparent\";\n          const plusColor = \"757575\";\n          const plusUrl = \"https://imgplaceholder.com/\"+width+\"x\"+height+\"/\"+backgroundColor+\"/\"+plusColor+\"/ion-plus-round\";\n          this.__output = \"<img src='\"+plusUrl+\"' alt='Add new plot'></img>\";\n        } else {\n          this.__output = data;\n        }\n        this.fireEvent(\"outputUpdated\");\n      }, this);\n      outReq.set({\n        url: outUrl,\n        method: \"GET\"\n      });\n      outReq.send();\n    }\n  }\n});\n"
  ]
}