{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/component/widget/NodesTree.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "studyName",
    "workbench",
    "set",
    "_setLayout",
    "layout",
    "VBox",
    "__toolBar",
    "_createChildControlImpl",
    "__tree",
    "populateTree",
    "__attachEventHandlers",
    "events",
    "properties",
    "check",
    "nullable",
    "members",
    "id",
    "control",
    "__buildToolbar",
    "_add",
    "__buildTree",
    "flex",
    "iconSize",
    "toolbar",
    "ToolBar",
    "newButton",
    "Button",
    "command",
    "Command",
    "addListener",
    "e",
    "__addNode",
    "qxapp",
    "utils",
    "Utils",
    "setIdToWidget",
    "add",
    "deleteButton",
    "__deleteNode",
    "renameButton",
    "__openItemRenamer",
    "__getOneSelectedRow",
    "selection",
    "getSelection",
    "toArray",
    "length",
    "tree",
    "VirtualTree",
    "decorator",
    "openMode",
    "contentPadding",
    "padding",
    "currentSelection",
    "fireDataEvent",
    "getNodeId",
    "topLevelNodes",
    "getWorkbench",
    "getNodes",
    "data",
    "label",
    "getStudyName",
    "children",
    "__convertModel",
    "nodeId",
    "isContainer",
    "newModel",
    "marshal",
    "Json",
    "createModel",
    "oldModel",
    "getModel",
    "JSON",
    "stringify",
    "setModel",
    "setDelegate",
    "createItem",
    "component",
    "widget",
    "NodeTreeItem",
    "bindItem",
    "c",
    "item",
    "bindDefaultProperties",
    "bindProperty",
    "nodes",
    "node",
    "nodeInTree",
    "getLabel",
    "getInnerNodes",
    "push",
    "__getNodeInTree",
    "model",
    "getIsContainer",
    "getChildren",
    "i",
    "__getSelection",
    "treeSelection",
    "selectedItem",
    "selectedNodeId",
    "fireEvent",
    "treeItemRenamer",
    "TreeItemRenamer",
    "getData",
    "newLabel",
    "getNode",
    "renameNode",
    "bounds",
    "getLayoutParent",
    "getContentLocation",
    "moveTo",
    "left",
    "top",
    "open",
    "nodeSelected",
    "openNodeAndParents",
    "dataModel",
    "setSelection",
    "Array",
    "keyEvent",
    "getKeyIdentifier",
    "NodesTree"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * Widget that shows workbench hierarchy in tree view.\n *\n * It contains:\n * - Toolbar for adding, removing or renaming nodes\n * - VirtualTree populated with NodeTreeItems\n *\n *   Helps the user navigating through nodes and gives a hierarchical view of containers. Also allows\n * some operations.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   let nodesTree = new qxapp.component.widget.NodesTree(study.getName(), study.getWorkbench());\n *   this.getRoot().add(nodesTree);\n * </pre>\n */\n\nqx.Class.define(\"qxapp.component.widget.NodesTree\", {\n  extend: qx.ui.core.Widget,\n\n  /**\n    * @param studyName {String} Study Name for displaying as root of the tree\n    * @param workbench {qxapp.data.model.Workbench} Workbench owning the widget\n  */\n  construct: function(studyName, workbench) {\n    this.base(arguments);\n\n    this.set({\n      studyName,\n      workbench\n    });\n\n    this._setLayout(new qx.ui.layout.VBox());\n\n    this.__toolBar = this._createChildControlImpl(\"toolbar\");\n    this.__tree = this._createChildControlImpl(\"tree\");\n    this.populateTree();\n\n    this.__attachEventHandlers();\n  },\n\n  events: {\n    \"nodeDoubleClicked\": \"qx.event.type.Data\",\n    \"addNode\": \"qx.event.type.Event\",\n    \"removeNode\": \"qx.event.type.Data\",\n    \"changeSelectedNode\": \"qx.event.type.Data\"\n  },\n\n  properties: {\n    workbench: {\n      check: \"qxapp.data.model.Workbench\",\n      nullable: false\n    },\n\n    studyName: {\n      check: \"String\"\n    }\n  },\n\n  members: {\n    __toolBar: null,\n    __tree: null,\n\n    _createChildControlImpl: function(id) {\n      let control;\n      switch (id) {\n        case \"toolbar\":\n          control = this.__buildToolbar();\n          this._add(control);\n          break;\n        case \"tree\":\n          control = this.__buildTree();\n          this._add(control, {\n            flex: 1\n          });\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    __buildToolbar: function() {\n      const iconSize = 14;\n      const toolbar = this.__toolBar = new qx.ui.toolbar.ToolBar();\n\n      const newButton = new qx.ui.toolbar.Button(\"New\", \"@FontAwesome5Solid/plus/\"+iconSize, new qx.ui.command.Command(\"Ctrl+N\"));\n      newButton.addListener(\"execute\", e => {\n        this.__addNode();\n      }, this);\n      qxapp.utils.Utils.setIdToWidget(newButton, \"newServiceBtn\");\n      toolbar.add(newButton);\n\n      const deleteButton = new qx.ui.toolbar.Button(\"Delete\", \"@FontAwesome5Solid/trash/\"+iconSize);\n      deleteButton.addListener(\"execute\", e => {\n        this.__deleteNode();\n      }, this);\n      qxapp.utils.Utils.setIdToWidget(deleteButton, \"deleteServiceBtn\");\n      toolbar.add(deleteButton);\n\n      const renameButton = new qx.ui.toolbar.Button(\"Rename\", \"@FontAwesome5Solid/i-cursor/\"+iconSize);\n      renameButton.addListener(\"execute\", e => {\n        this.__openItemRenamer();\n      }, this);\n      qxapp.utils.Utils.setIdToWidget(renameButton, \"renameServiceBtn\");\n      toolbar.add(renameButton);\n\n      return toolbar;\n    },\n\n    __getOneSelectedRow: function() {\n      const selection = this.__tree.getSelection();\n      if (selection && selection.toArray().length > 0) {\n        return selection.toArray()[0];\n      }\n      return null;\n    },\n\n    __buildTree: function() {\n      let tree = new qx.ui.tree.VirtualTree(null, \"label\", \"children\").set({\n        decorator: \"service-tree\",\n        openMode: \"none\",\n        contentPadding: 0,\n        padding: 0\n      });\n      tree.addListener(\"dbltap\", e => {\n        const currentSelection = this.__getOneSelectedRow();\n        if (currentSelection) {\n          this.fireDataEvent(\"nodeDoubleClicked\", currentSelection.getNodeId());\n        }\n      }, this);\n      tree.addListener(\"tap\", e => {\n        const currentSelection = this.__getOneSelectedRow();\n        if (currentSelection) {\n          this.fireDataEvent(\"changeSelectedNode\", currentSelection.getNodeId());\n        }\n      }, this);\n      return tree;\n    },\n\n    populateTree: function() {\n      const topLevelNodes = this.getWorkbench().getNodes();\n      let data = {\n        label: this.getStudyName(),\n        children: this.__convertModel(topLevelNodes),\n        nodeId: \"root\",\n        isContainer: true\n      };\n      let newModel = qx.data.marshal.Json.createModel(data, true);\n      let oldModel = this.__tree.getModel();\n      if (JSON.stringify(newModel) !== JSON.stringify(oldModel)) {\n        this.__tree.setModel(newModel);\n        this.__tree.setDelegate({\n          createItem: () => new qxapp.component.widget.NodeTreeItem(),\n          bindItem: (c, item, id) => {\n            c.bindDefaultProperties(item, id);\n            c.bindProperty(\"label\", \"label\", null, item, id);\n            c.bindProperty(\"nodeId\", \"nodeId\", null, item, id);\n          }\n        });\n      }\n    },\n\n    __convertModel: function(nodes) {\n      let children = [];\n      for (let nodeId in nodes) {\n        const node = nodes[nodeId];\n        let nodeInTree = {\n          label: \"\",\n          nodeId: node.getNodeId()\n        };\n        nodeInTree.label = node.getLabel();\n        nodeInTree.isContainer = node.isContainer();\n        if (node.isContainer()) {\n          nodeInTree.children = this.__convertModel(node.getInnerNodes());\n        }\n        children.push(nodeInTree);\n      }\n      return children;\n    },\n\n    __getNodeInTree: function(model, nodeId) {\n      if (model.getNodeId() === nodeId) {\n        return model;\n      } else if (model.getIsContainer() && model.getChildren() !== null) {\n        let node = null;\n        let children = model.getChildren().toArray();\n        for (let i = 0; node === null && i < children.length; i++) {\n          node = this.__getNodeInTree(children[i], nodeId);\n        }\n        return node;\n      }\n      return null;\n    },\n\n    __getSelection: function() {\n      let treeSelection = this.__tree.getSelection();\n      if (treeSelection.length < 1) {\n        return null;\n      }\n\n      let selectedItem = treeSelection.toArray()[0];\n      const selectedNodeId = selectedItem.getNodeId();\n      if (selectedNodeId === \"root\") {\n        return null;\n      }\n\n      return selectedItem;\n    },\n\n    __addNode: function() {\n      this.fireEvent(\"addNode\");\n    },\n\n    __deleteNode: function() {\n      let selectedItem = this.__getSelection();\n      if (selectedItem === null) {\n        return;\n      }\n      this.fireDataEvent(\"removeNode\", selectedItem.getNodeId());\n    },\n\n    __openItemRenamer: function() {\n      const selectedItem = this.__getSelection();\n      if (selectedItem === null) {\n        return;\n      }\n\n      const treeItemRenamer = new qxapp.component.widget.TreeItemRenamer(selectedItem);\n      treeItemRenamer.addListener(\"labelChanged\", e => {\n        const data = e.getData();\n        const newLabel = data.newLabel;\n        const nodeId = selectedItem.getNodeId();\n        const node = this.getWorkbench().getNode(nodeId);\n        if (node) {\n          node.renameNode(newLabel);\n        }\n      }, this);\n      const bounds = this.getLayoutParent().getContentLocation();\n      treeItemRenamer.moveTo(bounds.left + 100, bounds.top + 150);\n      treeItemRenamer.open();\n    },\n\n    nodeSelected: function(nodeId, openNodeAndParents = false) {\n      const dataModel = this.__tree.getModel();\n      const nodeInTree = this.__getNodeInTree(dataModel, nodeId);\n      if (nodeInTree) {\n        if (openNodeAndParents) {\n          this.__tree.openNodeAndParents(nodeInTree);\n        }\n        this.__tree.setSelection(new qx.data.Array([nodeInTree]));\n      }\n    },\n\n    __attachEventHandlers: function() {\n      this.addListener(\"keypress\", function(keyEvent) {\n        if (keyEvent.getKeyIdentifier() === \"Delete\") {\n          this.__deleteNode();\n        }\n      }, this);\n      this.addListener(\"keypress\", function(keyEvent) {\n        if (keyEvent.getKeyIdentifier() === \"F2\") {\n          this.__openItemRenamer();\n        }\n      }, this);\n    }\n  }\n});\n"
  ]
}