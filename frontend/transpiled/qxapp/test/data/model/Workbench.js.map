{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/test/data/model/Workbench.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "MMock",
    "members",
    "setUp",
    "console",
    "debug",
    "qxapp",
    "data",
    "Permissions",
    "getInstance",
    "setRole",
    "studyData",
    "name",
    "description",
    "study",
    "model",
    "Study",
    "wbData",
    "__workbench",
    "Workbench",
    "tearDown",
    "getSandbox",
    "restore",
    "createDummyNode",
    "key",
    "version",
    "uuid",
    "parent",
    "populateNodeData",
    "createNode",
    "testDuplicatedNodeConnections",
    "edgeId",
    "node1",
    "node2",
    "edge1",
    "createEdge",
    "getNodeId",
    "edge2",
    "assertIdentical",
    "getEdgeId",
    "testUniqueName",
    "assertNotIdentical",
    "getLabel",
    "test"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;AAIAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,iCAAhB,EACE;AACEC,IAAAA,MAAM,EAAEN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADtB;AAEEC,IAAAA,OAAO,EAAE,CAACV,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYG,aAAb,EAA4BX,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYI,KAAxC,CAFX;AAIEC,IAAAA,OAAO,EACP;AACEC,MAAAA,KAAK,EAAE,iBAAW;AAChBC,QAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd;AACA,aAAKA,KAAL,CAAW,gBAAX,EAFgB,CAIhB;;AACAC,QAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,CAAuBC,WAAvB,GAAqCC,OAArC,CAA6C,MAA7C;AAEA,YAAMC,SAAS,GAAG;AAChBC,UAAAA,IAAI,EAAE,YADU;AAEhBC,UAAAA,WAAW,EAAE;AAFG,SAAlB;AAIA,YAAMC,KAAK,GAAG,IAAIR,KAAK,CAACC,IAAN,CAAWQ,KAAX,CAAiBC,KAArB,CAA2BL,SAA3B,CAAd;AACA,YAAMM,MAAM,GAAG,EAAf;AACA,aAAKC,WAAL,GAAmB,IAAIZ,KAAK,CAACC,IAAN,CAAWQ,KAAX,CAAiBI,SAArB,CAA+BL,KAA/B,EAAsCG,MAAtC,CAAnB;AACD,OAfH;AAiBEG,MAAAA,QAAQ,EAAE,oBAAW;AACnBhB,QAAAA,OAAO,CAACC,KAAR,CAAc,eAAd;AACA,aAAKA,KAAL,CAAW,eAAX;AACA,aAAKgB,UAAL,GAAkBC,OAAlB;AACD,OArBH;AAuBEC,MAAAA,eAvBF,6BAuBoB;AAChB,YAAMC,GAAG,GAAG,IAAZ;AACA,YAAMC,OAAO,GAAG,IAAhB;AACA,YAAMC,IAAI,GAAG,IAAb;AACA,YAAMC,MAAM,GAAG,IAAf;AACA,YAAMC,gBAAgB,GAAG,IAAzB;AACA,eAAO,KAAKV,WAAL,CAAiBW,UAAjB,CAA4BL,GAA5B,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,MAAhD,EAAwDC,gBAAxD,CAAP;AACD,OA9BH;;AAgCE;;;;;AAMAE,MAAAA,6BAA6B,EAAE,yCAAW;AACxC,YAAMC,MAAM,GAAG,IAAf;AACA,YAAMC,KAAK,GAAG,KAAKT,eAAL,EAAd;AACA,YAAMU,KAAK,GAAG,KAAKV,eAAL,EAAd;;AACA,YAAMW,KAAK,GAAG,KAAKhB,WAAL,CAAiBiB,UAAjB,CAA4BJ,MAA5B,EAAoCC,KAAK,CAACI,SAAN,EAApC,EAAuDH,KAAK,CAACG,SAAN,EAAvD,CAAd;;AACA,YAAMC,KAAK,GAAG,KAAKnB,WAAL,CAAiBiB,UAAjB,CAA4BJ,MAA5B,EAAoCC,KAAK,CAACI,SAAN,EAApC,EAAuDH,KAAK,CAACG,SAAN,EAAvD,CAAd;;AACA,aAAKE,eAAL,CAAqBJ,KAAK,CAACK,SAAN,EAArB,EAAwCF,KAAK,CAACE,SAAN,EAAxC,EAA2D,6BAA3D;AACD,OA7CH;AA+CEC,MAAAA,cAAc,EAAE,0BAAW;AACzB,YAAMR,KAAK,GAAG,KAAKT,eAAL,EAAd;AACA,YAAMU,KAAK,GAAG,KAAKV,eAAL,EAAd;AACA,aAAKkB,kBAAL,CAAwBT,KAAK,CAACU,QAAN,EAAxB,EAA0CT,KAAK,CAACS,QAAN,EAA1C,EAA4D,0BAA5D;AACD;AAnDH;AALF,GADF;AArBApC,EAAAA,KAAK,CAACqC,IAAN,CAAWpC,IAAX,CAAgBQ,KAAhB,CAAsBI,SAAtB,CAAgC3B,aAAhC,GAAgDA,aAAhD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2019 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * Test Workbench class\n *\n */\nqx.Class.define(\"qxapp.test.data.model.Workbench\",\n  {\n    extend: qx.dev.unit.TestCase,\n    include: [qx.dev.unit.MRequirements, qx.dev.unit.MMock],\n\n    members:\n    {\n      setUp: function() {\n        console.debug(\"Setting up .. \");\n        this.debug(\"Setting up ...\");\n\n        // ToDo OM: Tobi is this correct?\n        qxapp.data.Permissions.getInstance().setRole(\"user\");\n\n        const studyData = {\n          name: \"Test Study\",\n          description: \"\"\n        };\n        const study = new qxapp.data.model.Study(studyData);\n        const wbData = {};\n        this.__workbench = new qxapp.data.model.Workbench(study, wbData);\n      },\n\n      tearDown: function() {\n        console.debug(\"Tear down .. \");\n        this.debug(\"Tear down ...\");\n        this.getSandbox().restore();\n      },\n\n      createDummyNode() {\n        const key = null;\n        const version = null;\n        const uuid = null;\n        const parent = null;\n        const populateNodeData = true;\n        return this.__workbench.createNode(key, version, uuid, parent, populateNodeData);\n      },\n\n      /*\n      ---------------------- -----------------------------------------------------\n        TESTS\n      ---------------------------------------------------------------------------\n      */\n\n      testDuplicatedNodeConnections: function() {\n        const edgeId = null;\n        const node1 = this.createDummyNode();\n        const node2 = this.createDummyNode();\n        const edge1 = this.__workbench.createEdge(edgeId, node1.getNodeId(), node2.getNodeId());\n        const edge2 = this.__workbench.createEdge(edgeId, node1.getNodeId(), node2.getNodeId());\n        this.assertIdentical(edge1.getEdgeId(), edge2.getEdgeId(), \"Both edges must be the same\");\n      },\n\n      testUniqueName: function() {\n        const node1 = this.createDummyNode();\n        const node2 = this.createDummyNode();\n        this.assertNotIdentical(node1.getLabel(), node2.getLabel(), \"Labels must be different\");\n      }\n    }\n  });\n"
  ]
}