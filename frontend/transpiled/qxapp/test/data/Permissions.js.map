{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/test/data/Permissions.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "MMock",
    "members",
    "__workbench",
    "setUp",
    "console",
    "debug",
    "tearDown",
    "getSandbox",
    "restore",
    "createEmptyWorkbench",
    "studyData",
    "name",
    "description",
    "study",
    "qxapp",
    "data",
    "model",
    "Study",
    "wbData",
    "Workbench",
    "createDummyNode",
    "key",
    "version",
    "uuid",
    "parent",
    "populateNodeData",
    "createNode",
    "testStudyNodeCreate",
    "Permissions",
    "getInstance",
    "setRole",
    "anonNode",
    "assertNull",
    "userNode",
    "assertNotNull",
    "testStudyNodeDelete",
    "dummyNode",
    "removed",
    "removeNode",
    "getNodeId",
    "assertFalse",
    "assertTrue",
    "testStudyNodeRename",
    "node",
    "newLabel",
    "renameNode",
    "assertNotIdentical",
    "getLabel",
    "assertIdentical",
    "testStudyEdgeCreate",
    "node1",
    "node2",
    "anonEdge",
    "createEdge",
    "userEdge",
    "testStudyEdgeDelete",
    "edge",
    "removeEdge",
    "getEdgeId",
    "testStudyNodeDataPush",
    "loc0",
    "file0",
    "loc1",
    "file1",
    "dataStore",
    "store",
    "Data",
    "req0sent",
    "copyFile",
    "req1sent",
    "testStudyNodeDataDelete",
    "deleteFile",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2019 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Odei Maiz (odeimaiz)\n\n************************************************************************ */\n\n/**\n * Test Permissions\n *\n */\nqx.Class.define(\"qxapp.test.data.Permissions\", {\n  extend: qx.dev.unit.TestCase,\n  include: [qx.dev.unit.MRequirements, qx.dev.unit.MMock],\n\n  members: {\n    __workbench: null,\n\n    setUp: function() {\n      console.debug(\"Setting up .. \");\n      this.debug(\"Setting up ...\");\n    },\n\n    tearDown: function() {\n      console.debug(\"Tear down .. \");\n      this.debug(\"Tear down ...\");\n      this.getSandbox().restore();\n    },\n\n    createEmptyWorkbench: function() {\n      const studyData = {\n        name: \"Test Study\",\n        description: \"\"\n      };\n      const study = new qxapp.data.model.Study(studyData);\n      const wbData = {};\n      this.__workbench = new qxapp.data.model.Workbench(study, wbData);\n    },\n\n    createDummyNode: function() {\n      const key = null;\n      const version = null;\n      const uuid = null;\n      const parent = null;\n      const populateNodeData = true;\n      return this.__workbench.createNode(key, version, uuid, parent, populateNodeData);\n    },\n\n    /*\n    ---------------------- -----------------------------------------------------\n      TESTS\n    ---------------------------------------------------------------------------\n    */\n\n    // test study.node.create\n    testStudyNodeCreate: function() {\n      this.createEmptyWorkbench();\n\n      qxapp.data.Permissions.getInstance().setRole(\"guest\");\n      const anonNode = this.createDummyNode();\n      this.assertNull(anonNode, \"guest is not allowed to create nodes\");\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      const userNode = this.createDummyNode();\n      this.assertNotNull(userNode, \"user is allowed to create nodes\");\n    },\n\n    // test study.node.delete\n    testStudyNodeDelete: function() {\n      this.createEmptyWorkbench();\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      const dummyNode = this.createDummyNode();\n      this.assertNotNull(dummyNode, \"user is allowed to create nodes\");\n\n      qxapp.data.Permissions.getInstance().setRole(\"guest\");\n      let removed = this.__workbench.removeNode(dummyNode.getNodeId());\n      this.assertFalse(removed, \"guest is not allowed to delete nodes\");\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      removed = this.__workbench.removeNode(dummyNode.getNodeId());\n      this.assertTrue(removed, \"user is allowed to delete nodes\");\n    },\n\n    // test study.node.rename\n    testStudyNodeRename: function() {\n      this.createEmptyWorkbench();\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      const node = this.createDummyNode();\n      const newLabel = \"my new label\";\n\n      qxapp.data.Permissions.getInstance().setRole(\"guest\");\n      node.renameNode(newLabel);\n      this.assertNotIdentical(node.getLabel(), newLabel, \"guest is not allowed to rename nodes\");\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      node.renameNode(newLabel);\n      this.assertIdentical(node.getLabel(), newLabel, \"guest is not allowed to rename nodes\");\n    },\n\n    // test study.edge.create\n    testStudyEdgeCreate: function() {\n      this.createEmptyWorkbench();\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      const node1 = this.createDummyNode();\n      const node2 = this.createDummyNode();\n\n      qxapp.data.Permissions.getInstance().setRole(\"guest\");\n      const anonEdge = this.__workbench.createEdge(null, node1.getNodeId(), node2.getNodeId());\n      this.assertNull(anonEdge, \"guest is not allowed to create edges\");\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      const userEdge = this.__workbench.createEdge(null, node1.getNodeId(), node2.getNodeId());\n      this.assertNotNull(userEdge, \"user is allowed to create edges\");\n    },\n\n    // test study.edge.delete\n    testStudyEdgeDelete: function() {\n      this.createEmptyWorkbench();\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      const node1 = this.createDummyNode();\n      const node2 = this.createDummyNode();\n      const edge = this.__workbench.createEdge(null, node1.getNodeId(), node2.getNodeId());\n\n      qxapp.data.Permissions.getInstance().setRole(\"guest\");\n      let removed = this.__workbench.removeEdge(edge.getEdgeId());\n      this.assertFalse(removed, \"guest is not allowed to delete edges\");\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      removed = this.__workbench.removeEdge(edge.getEdgeId());\n      this.assertTrue(removed, \"user is allowed to delete edges\");\n    },\n\n    // test study.node.data.push\n    testStudyNodeDataPush: function() {\n      const loc0 = \"loc0\";\n      const file0 = \"file0\";\n      const loc1 = \"loc1\";\n      const file1 = \"file1\";\n      const dataStore = qxapp.store.Data.getInstance();\n\n      qxapp.data.Permissions.getInstance().setRole(\"guest\");\n      const req0sent = dataStore.copyFile(loc0, file0, loc1, file1);\n      this.assertFalse(req0sent, \"guest is not allowed to push files\");\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      const req1sent = dataStore.copyFile(loc0, file0, loc1, file1);\n      this.assertTrue(req1sent, \"user is allowed to push files\");\n    },\n\n    // test study.node.data.delete\n    testStudyNodeDataDelete: function() {\n      const loc0 = \"loc0\";\n      const file0 = \"file0\";\n      const dataStore = qxapp.store.Data.getInstance();\n\n      qxapp.data.Permissions.getInstance().setRole(\"guest\");\n      const req0sent = dataStore.deleteFile(loc0, file0);\n      this.assertFalse(req0sent, \"guest is not allowed to delete files\");\n\n      qxapp.data.Permissions.getInstance().setRole(\"user\");\n      const req1sent = dataStore.deleteFile(loc0, file0);\n      this.assertTrue(req1sent, \"user is allowed to delete files\");\n    }\n  }\n});\n"
  ]
}