{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/auth/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "events",
    "members",
    "isLoggedIn",
    "auth",
    "qxapp",
    "Data",
    "getInstance",
    "getAuth",
    "io",
    "request",
    "authentication",
    "Token",
    "validateToken",
    "successCb",
    "errorCb",
    "ctx",
    "isLogout",
    "call",
    "ApiRequest",
    "addListener",
    "e",
    "getTarget",
    "getResponse",
    "error",
    "__loginUser",
    "data",
    "login",
    "send",
    "email",
    "password",
    "successCbk",
    "failCbk",
    "context",
    "set",
    "requestData",
    "__bindDefaultFailCallback",
    "logout",
    "__logoutUser",
    "fireEvent",
    "register",
    "userData",
    "console",
    "debug",
    "__bindDefaultSuccessCallback",
    "resetPasswordRequest",
    "resetPassword",
    "newPassword",
    "confirmation",
    "code",
    "encodeURIComponent",
    "setRequestData",
    "confirm",
    "evalPasswordStrength",
    "callback",
    "evt",
    "payload",
    "strength",
    "rating",
    "improvements",
    "setEmail",
    "setToken",
    "resetEmail",
    "resetToken",
    "msg",
    "i",
    "errors",
    "length",
    "message",
    "Manager"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Pedro Crespo (pcrespov)\n\n************************************************************************ */\n\n/** Authentication Manager\n *\n *  - Entrypoint to perform authentication requests with backend\n *  - Keeps state of current application\n *  - Keeps authentication header for future requests to the backend\n*/\n\nqx.Class.define(\"qxapp.auth.Manager\", {\n  extend: qx.core.Object,\n  type: \"singleton\",\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    \"logout\": \"qx.event.type.Event\"\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n\n    isLoggedIn: function() {\n      // TODO: how to store this localy?? See http://www.qooxdoo.org/devel/pages/data_binding/stores.html#offline-store\n      // TODO: check if expired??\n      // TODO: request server if token is still valid (e.g. expired, etc)\n      const auth = qxapp.auth.Data.getInstance().getAuth();\n      return auth !== null && auth instanceof qxapp.io.request.authentication.Token;\n    },\n\n    /**\n     * Function that checks if there is a token and validates it aginst the server. It executes a callback depending on the result.\n     *\n     * @param {Function} successCb Callback function to be called if the token validation succeeds.\n     * @param {Function} errorCb Callback function to be called if the token validation fails or some other error occurs.\n     * @param {Object} ctx Context that will be used inside the callback functions (this).\n     */\n    validateToken: function(successCb, errorCb, ctx) {\n      if (qxapp.auth.Data.getInstance().isLogout()) {\n        errorCb.call(ctx);\n      } else {\n        const request = new qxapp.io.request.ApiRequest(\"/me\", \"GET\");\n        request.addListener(\"success\", e => {\n          if (e.getTarget().getResponse().error) {\n            errorCb.call(ctx);\n          } else {\n            this.__loginUser(e.getTarget().getResponse().data.login);\n            successCb.call(ctx, e.getTarget().getResponse().data);\n          }\n        });\n        request.addListener(\"statusError\", e => {\n          errorCb.call(ctx);\n        });\n        request.send();\n      }\n    },\n\n    login: function(email, password, successCbk, failCbk, context) {\n      // TODO: consider qx.promise instead of having two callbacks an d a context might be nicer to work with\n\n      let request = new qxapp.io.request.ApiRequest(\"/auth/login\", \"POST\");\n      request.set({\n        requestData: {\n          email,\n          password\n        }\n      });\n\n      request.addListener(\"success\", e => {\n        const {\n          data\n        } = e.getTarget().getResponse();\n\n        // TODO: validate data against specs???\n        // TODO: activate tokens!?\n        this.__loginUser(email);\n        successCbk.call(context, data);\n      }, this);\n\n      this.__bindDefaultFailCallback(request, failCbk, context);\n\n      request.send();\n    },\n\n    logout: function() {\n      const request = new qxapp.io.request.ApiRequest(\"/auth/logout\", \"GET\");\n      request.send();\n      this.__logoutUser();\n      this.fireEvent(\"logout\");\n    },\n\n    register: function(userData, successCbk, failCbk, context) {\n      console.debug(\"Registering user ...\");\n      // api/specs/webserver/v0/openapi-auth.yaml\n      let request = new qxapp.io.request.ApiRequest(\"/auth/register\", \"POST\");\n      request.set({\n        requestData: userData\n      });\n\n      this.__bindDefaultSuccessCallback(request, successCbk, context);\n      this.__bindDefaultFailCallback(request, failCbk, context);\n\n      request.send();\n    },\n\n    resetPasswordRequest: function(email, successCbk, failCbk, context) {\n      console.debug(\"Requesting reset password ...\");\n      // api/specs/webserver/v0/openapi-auth.yaml\n      let request = new qxapp.io.request.ApiRequest(\"/auth/reset-password\", \"POST\");\n      request.set({\n        requestData: {\n          \"email\": email\n        }\n      });\n\n      this.__bindDefaultSuccessCallback(request, successCbk, context);\n      this.__bindDefaultFailCallback(request, failCbk, context);\n\n      request.send();\n    },\n\n    resetPassword: function(newPassword, confirmation, code, successCbk, failCbk, context) {\n      console.debug(\"Reseting password ...\");\n      // api/specs/webserver/v0/openapi-auth.yaml\n      let request = new qxapp.io.request.ApiRequest(\"/auth/reset-password/\" + encodeURIComponent(code), \"POST\");\n      request.setRequestData({\n        password: newPassword,\n        confirm: confirmation\n      });\n\n      this.__bindDefaultSuccessCallback(request, successCbk, context);\n      this.__bindDefaultFailCallback(request, failCbk, context);\n\n      request.send();\n    },\n\n    evalPasswordStrength: function(password, callback, context=null) {\n      let request = new qxapp.io.request.ApiRequest(\"/auth/check-password/\" + encodeURIComponent(password), \"GET\");\n      request.addListener(\"success\", evt => {\n        let payload = evt.getTarget().getResponse();\n        callback.call(context, payload.strength, payload.rating, payload.improvements);\n      }, this);\n\n      request.send();\n    },\n\n    __loginUser: function(email) {\n      qxapp.auth.Data.getInstance().setEmail(email);\n      qxapp.auth.Data.getInstance().setToken(email);\n    },\n\n    __logoutUser: function() {\n      qxapp.auth.Data.getInstance().resetEmail();\n      qxapp.auth.Data.getInstance().resetToken();\n    },\n\n    __bindDefaultSuccessCallback: function(request, successCbk, context) {\n      request.addListener(\"success\", e => {\n        const {\n          data\n        } = e.getTarget().getResponse();\n\n        // TODO: validate data against specs???\n        // FIXME: Data is an object\n        successCbk.call(context, data);\n      }, this);\n    },\n\n    __bindDefaultFailCallback: function(request, failCbk, context) {\n      request.addListener(\"fail\", e => {\n        const {\n          error\n        } = e.getTarget().getResponse();\n\n        let msg = \"\";\n        if (error) {\n          for (var i=0; i<error.errors.length; i++) {\n            msg = msg + error.errors[i].message + \" \";\n          }\n        }\n        // FIXME: Data is an object\n        failCbk.call(context, msg);\n      }, this);\n    }\n  }\n});\n"
  ]
}