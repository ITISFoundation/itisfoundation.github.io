{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/auth/ui/ResetPassRequestView.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxapp",
    "auth",
    "core",
    "BaseAuthPage",
    "members",
    "_buildPage",
    "manager",
    "ui",
    "form",
    "validation",
    "Manager",
    "_addTitleHeader",
    "tr",
    "email",
    "TextField",
    "setRequired",
    "setPlaceholder",
    "add",
    "util",
    "Validate",
    "grp",
    "container",
    "Composite",
    "layout",
    "HBox",
    "submitBtn",
    "Button",
    "flex",
    "cancelBtn",
    "addListener",
    "e",
    "valid",
    "validate",
    "__submit",
    "fireDataEvent",
    "console",
    "debug",
    "getInstance",
    "successFun",
    "log",
    "message",
    "component",
    "FlashMessenger",
    "failFun",
    "msg",
    "logAs",
    "resetPasswordRequest",
    "getValue",
    "ResetPassRequestView"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Pedro Crespo (pcrespov)\n\n************************************************************************ */\n\n/** Page to request password reset for a non-logged-in user\n *\n */\n\nqx.Class.define(\"qxapp.auth.ui.ResetPassRequestView\", {\n  extend: qxapp.auth.core.BaseAuthPage,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n\n    // overrides base\n    _buildPage: function() {\n      let manager = new qx.ui.form.validation.Manager();\n\n      this._addTitleHeader(this.tr(\"Reset Password\"));\n\n      // email\n      let email = new qx.ui.form.TextField();\n      email.setRequired(true);\n      email.setPlaceholder(this.tr(\"Introduce your registration email\"));\n      this.add(email);\n\n      manager.add(email, qx.util.Validate.email());\n\n      // submit and cancel buttons\n      let grp = new qx.ui.container.Composite(new qx.ui.layout.HBox(10));\n\n      let submitBtn = new qx.ui.form.Button(this.tr(\"Submit\"));\n      grp.add(submitBtn, {\n        flex:1\n      });\n\n      let cancelBtn = new qx.ui.form.Button(this.tr(\"Cancel\"));\n      grp.add(cancelBtn, {\n        flex:1\n      });\n\n      // interaction\n      submitBtn.addListener(\"execute\", e => {\n        const valid = manager.validate();\n        if (valid) {\n          this.__submit(email);\n        }\n      }, this);\n\n      cancelBtn.addListener(\"execute\", e => this.fireDataEvent(\"done\", null), this);\n\n      this.add(grp);\n    },\n\n    __submit: function(email) {\n      console.debug(\"sends email to reset password to \", email);\n\n      let manager = qxapp.auth.Manager.getInstance();\n\n      let successFun = function(log) {\n        this.fireDataEvent(\"done\", log.message);\n        qxapp.component.message.FlashMessenger.getInstance().log(log);\n      };\n\n      let failFun = function(msg) {\n        msg = msg || this.tr(\"Could not request password reset\");\n        qxapp.component.message.FlashMessenger.getInstance().logAs(msg, \"ERROR\");\n      };\n\n      manager.resetPasswordRequest(email.getValue(), successFun, failFun, this);\n    }\n\n  }\n});\n"
  ]
}