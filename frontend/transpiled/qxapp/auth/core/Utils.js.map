{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/auth/core/Utils.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "checkSamePasswords",
    "passwordField1",
    "passwordField2",
    "isValid",
    "getValue",
    "forEach",
    "pass",
    "set",
    "invalidMessage",
    "locale",
    "Manager",
    "tr",
    "valid",
    "findParameterInFragment",
    "parameterName",
    "result",
    "params",
    "window",
    "location",
    "hash",
    "substr",
    "split",
    "item",
    "tmp",
    "decodeURIComponent",
    "removeParameterInFragment",
    "url",
    "href",
    "value",
    "qxapp",
    "auth",
    "core",
    "Utils",
    "removeMe",
    "replace",
    "slice",
    "history",
    "replaceState",
    "document",
    "title"
  ],
  "mappings": ";;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EAAyC;AACvCC,IAAAA,IAAI,EAAE,QADiC;AAGvCC,IAAAA,OAAO,EACP;AACEC,MAAAA,kBAAkB,EAAE,4BAASC,cAAT,EAAyBC,cAAzB,EAAyC;AAC3D,YAAMC,OAAO,GAAGF,cAAc,CAACG,QAAf,MAA6BF,cAAc,CAACE,QAAf,EAA7C;;AACA,YAAI,CAACD,OAAL,EAAc;AACZ,WAACF,cAAD,EAAiBC,cAAjB,EAAiCG,OAAjC,CAAyC,UAAAC,IAAI,EAAI;AAC/CA,YAAAA,IAAI,CAACC,GAAL,CAAS;AACPC,cAAAA,cAAc,EAAEhB,EAAE,CAACiB,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,wBAArB,CADT;AAEPC,cAAAA,KAAK,EAAE;AAFA,aAAT;AAID,WALD;AAMD;;AACD,eAAOT,OAAP;AACD,OAZH;;AAcE;;;;;AAKAU,MAAAA,uBAAuB,EAAE,iCAASC,aAAT,EAAwB;AAC/C,YAAIC,MAAM,GAAG,IAAb;AACA,YAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,MAArB,CAA4B,CAA5B,EAA+BC,KAA/B,CAAqC,GAArC,CAAf;AACAL,QAAAA,MAAM,CAACX,OAAP,CAAe,UAASiB,IAAT,EAAe;AAC5B,cAAMC,GAAG,GAAGD,IAAI,CAACD,KAAL,CAAW,GAAX,CAAZ;;AACA,cAAIE,GAAG,CAAC,CAAD,CAAH,KAAWT,aAAf,EAA8B;AAC5BC,YAAAA,MAAM,GAAGS,kBAAkB,CAACD,GAAG,CAAC,CAAD,CAAJ,CAA3B;AACD;AACF,SALD;AAMA,eAAOR,MAAP;AACD,OA7BH;AA+BEU,MAAAA,yBAAyB,EAAE,mCAASX,aAAT,EAAwB;AACjD,YAAIY,GAAG,GAAGT,MAAM,CAACC,QAAP,CAAgBS,IAA1B;AACA,YAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBnB,uBAAtB,CAA8CC,aAA9C,CAAd;;AACA,YAAIc,KAAJ,EAAW;AACT,cAAMK,QAAQ,GAAGnB,aAAa,GAAG,GAAhB,GAAsBc,KAAvC,CADS,CAET;;AACAF,UAAAA,GAAG,GAAGA,GAAG,CAACQ,OAAJ,CAAY,MAAMD,QAAlB,EAA4B,EAA5B,CAAN;AACAP,UAAAA,GAAG,GAAGA,GAAG,CAACQ,OAAJ,CAAYD,QAAZ,EAAsB,EAAtB,CAAN;;AACA,cAAIP,GAAG,CAACS,KAAJ,CAAU,CAAC,CAAX,MAAkB,GAAtB,EAA2B;AACzB;AACAT,YAAAA,GAAG,GAAGA,GAAG,CAACQ,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAN;AACD;;AACDjB,UAAAA,MAAM,CAACmB,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgCC,QAAQ,CAACC,KAAzC,EAAgDb,GAAhD;AACD;AACF;AA7CH;AAJuC,GAAzC;AAnBAG,EAAAA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBrC,aAAtB,GAAsCA,aAAtC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Pedro Crespo (pcrespov)\n\n************************************************************************ */\n\n/* global document */\n\nqx.Class.define(\"qxapp.auth.core.Utils\", {\n  type: \"static\",\n\n  statics:\n  {\n    checkSamePasswords: function(passwordField1, passwordField2) {\n      const isValid = passwordField1.getValue() == passwordField2.getValue();\n      if (!isValid) {\n        [passwordField1, passwordField2].forEach(pass => {\n          pass.set({\n            invalidMessage: qx.locale.Manager.tr(\"Passwords do not match\"),\n            valid: false\n          });\n        });\n      }\n      return isValid;\n    },\n\n    /** Finds parameters in the fragment\n     *\n     * Expected fragment format as https://osparc.io#page=reset-password;code=123546\n     * where fragment is #page=reset-password;code=123546\n     */\n    findParameterInFragment: function(parameterName) {\n      let result = null;\n      const params = window.location.hash.substr(1).split(\";\");\n      params.forEach(function(item) {\n        const tmp = item.split(\"=\");\n        if (tmp[0] === parameterName) {\n          result = decodeURIComponent(tmp[1]);\n        }\n      });\n      return result;\n    },\n\n    removeParameterInFragment: function(parameterName) {\n      let url = window.location.href;\n      const value = qxapp.auth.core.Utils.findParameterInFragment(parameterName);\n      if (value) {\n        const removeMe = parameterName + \"=\" + value;\n        // In case the parameterhas an ampersand in front\n        url = url.replace(\";\" + removeMe, \"\");\n        url = url.replace(removeMe, \"\");\n        if (url.slice(-1) === \"#\") {\n          // clean remaining character if all parameters were removed\n          url = url.replace(\"#\", \"\");\n        }\n        window.history.replaceState(\"\", document.title, url);\n      }\n    }\n  }\n});\n"
  ]
}