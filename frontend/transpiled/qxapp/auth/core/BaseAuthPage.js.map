{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/osparc-simcore/services/web/client/source/class/qxapp/auth/core/BaseAuthPage.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "type",
    "construct",
    "set",
    "layout",
    "VBox",
    "width",
    "height",
    "addListenerOnce",
    "e",
    "el",
    "getContentElement",
    "form",
    "_formElement",
    "html",
    "Element",
    "name",
    "autocomplete",
    "insertBefore",
    "insertInto",
    "_buildPage",
    "events",
    "members",
    "resetValues",
    "getChildren",
    "forEach",
    "item",
    "implementsInterface",
    "IForm",
    "IField",
    "resetValue",
    "_addTitleHeader",
    "txt",
    "lbl",
    "basic",
    "Label",
    "font",
    "alignX",
    "add",
    "flex",
    "qxapp",
    "auth",
    "core",
    "BaseAuthPage"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;;;AAMAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,8BAAhB,EAAgD;AAC9CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBC,SADsB;AAE9CC,IAAAA,IAAI,EAAE,UAFwC;;AAI9C;;;;;AAMAC,IAAAA,SAAS,EAAE,qBAAW;AAAA;;AACpB,uDADoB,CAGpB;;AACA,WAAKC,GAAL,CAAS;AACPC,QAAAA,MAAM,EAAE,IAAIb,EAAE,CAACO,EAAH,CAAMM,MAAN,CAAaC,IAAjB,CAAsB,EAAtB,CADD;AAEPC,QAAAA,KAAK,EAAE,GAFA;AAGPC,QAAAA,MAAM,EAAE;AAHD,OAAT,EAJoB,CASpB;AACA;;AACA,WAAKC,eAAL,CAAqB,QAArB,EAA+B,UAAAC,CAAC,EAAI;AAClC,YAAMC,EAAE,GAAG,KAAI,CAACC,iBAAL,EAAX;;AACA,YAAMC,IAAI,GAAG,KAAI,CAACC,YAAL,GAAoB,IAAItB,EAAE,CAACuB,IAAH,CAAQC,OAAZ,CAAoB,MAApB,EAA4B,IAA5B,EAAkC;AACjEC,UAAAA,IAAI,EAAE,eAD2D;AAEjEC,UAAAA,YAAY,EAAE;AAFmD,SAAlC,CAAjC;AAIAL,QAAAA,IAAI,CAACM,YAAL,CAAkBR,EAAlB;AACAA,QAAAA,EAAE,CAACS,UAAH,CAAcP,IAAd;AACD,OARD;;AASA,WAAKQ,UAAL;AACD,KA/B6C;;AAiC9C;;;;;AAMAC,IAAAA,MAAM,EAAC;AACL,cAAQ;AADH,KAvCuC;;AA2C9C;;;;;AAMAC,IAAAA,OAAO,EAAE;AACP;;;;AAIAT,MAAAA,YAAY,EAAE,IALP;;AAMP;;;;;;AAMAO,MAAAA,UAAU,EAAE,IAZL;;AAcP;;;;AAIAG,MAAAA,WAAW,EAAE,uBAAW;AACtB,aAAKC,WAAL,GAAmBC,OAAnB,CAA2B,UAAAC,IAAI,EAAI;AACjC;AACA,cAAInC,EAAE,CAACI,KAAH,CAASgC,mBAAT,CAA6BD,IAA7B,EAAmCnC,EAAE,CAACO,EAAH,CAAMc,IAAN,CAAWgB,KAA9C,KAAwDrC,EAAE,CAACI,KAAH,CAASgC,mBAAT,CAA6BD,IAA7B,EAAmCnC,EAAE,CAACO,EAAH,CAAMc,IAAN,CAAWiB,MAA9C,CAA5D,EAAmH;AACjHH,YAAAA,IAAI,CAACI,UAAL;AACD;AACF,SALD;AAMD,OAzBM;;AA2BP;;;AAGAC,MAAAA,eAAe,EAAE,yBAASC,GAAT,EAAc;AAC7B,YAAIC,GAAG,GAAG,IAAI1C,EAAE,CAACO,EAAH,CAAMoC,KAAN,CAAYC,KAAhB,CAAsBH,GAAtB,EAA2B7B,GAA3B,CAA+B;AACvCiC,UAAAA,IAAI,EAAE,UADiC;AAEvCC,UAAAA,MAAM,EAAE;AAF+B,SAA/B,CAAV;AAIA,aAAKC,GAAL,CAASL,GAAT,EAAc;AACZM,UAAAA,IAAI,EAAC;AADO,SAAd;AAGD;AAtCM;AAjDqC,GAAhD;AAvBAC,EAAAA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,YAAhB,CAA6BjD,aAA7B,GAA6CA,aAA7C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qxapp - the simcore frontend\n\n   https://osparc.io\n\n   Copyright:\n     2018 IT'IS Foundation, https://itis.swiss\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Pedro Crespo (pcrespov)\n\n************************************************************************ */\n\n/**\n * This is a basic Auth-Page with common functionality\n *\n *  - Fixed-size widget with header (title/logo), body and footer (buttons)\n *  - Positioned at the upper center of the root document's window\n */\nqx.Class.define(\"qxapp.auth.core.BaseAuthPage\", {\n  extend: qx.ui.container.Composite,\n  type: \"abstract\",\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct: function() {\n    this.base(arguments);\n\n    // TODO: remove fix dimensions for the outer container?\n    this.set({\n      layout: new qx.ui.layout.VBox(20),\n      width: 300,\n      height: 250\n    });\n    // at least chrome hates it when a password input field exists\n    // outside a form, so lets accomodate him\n    this.addListenerOnce(\"appear\", e => {\n      const el = this.getContentElement();\n      const form = this._formElement = new qx.html.Element(\"form\", null, {\n        name: \"baseLoginForm\",\n        autocomplete: \"on\"\n      });\n      form.insertBefore(el);\n      el.insertInto(form);\n    });\n    this._buildPage();\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events:{\n    \"done\": \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**\n     * when all is said and done we should remove the form so that the password manager\n     * knows to save the content of the form. so we save it here.\n     */\n    _formElement: null,\n    /**\n     * This method gets called upon construction and\n     * must be overriden in a subclass\n     *\n     * @signature function()\n     */\n    _buildPage: null,\n\n    /**\n     * This method needs to be implemented in subclass\n     * and should reset all field values\n    */\n    resetValues: function() {\n      this.getChildren().forEach(item => {\n        // FIXME: should check issubclass of AbstractField\n        if (qx.Class.implementsInterface(item, qx.ui.form.IForm) && qx.Class.implementsInterface(item, qx.ui.form.IField)) {\n          item.resetValue();\n        }\n      });\n    },\n\n    /**\n     * Creates and adds an underlined title at the header\n     */\n    _addTitleHeader: function(txt) {\n      let lbl = new qx.ui.basic.Label(txt).set({\n        font: \"headline\",\n        alignX: \"center\"\n      });\n      this.add(lbl, {\n        flex:1\n      });\n    }\n  }\n});\n"
  ]
}